language: rs
name: HumanEval_30_get_positive
results:
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp7ntjs2e.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n    --> /tmp/tmpp7ntjs2e.rs:7:34\n\
    \     |\n7    |     l.iter().filter(|&x| x >= 0).collect()\n     |           \
    \                       ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 101
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = Vec::new();\n    for x in l {\n\
    \        if x >= 0 {\n            res.push(x);\n        }\n    }\n    res\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 3, 3, 9, 0, 123, 1]`,\n right: `[5, 3, 2, 3, 3, 9, 123, 1]`', /tmp/tmpca4cn2q4.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut positive\
    \ = l.iter().filter(|&x| x > 0).collect::<Vec<_>>();\n    positive.sort_unstable();\n\
    \    positive.dedup();\n    positive.cloned().push(0);\n    positive.iter().cloned().for_each(|&x|\
    \ {\n        result.push(x);\n    });\n    result\n}\n\nfn main() {\n    let candidate\
    \ = get_positive;\n    assert_eq!(candidate(vec![-1, -2, 4, 5, 6]), vec![4, 5,\
    \ 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]),\
    \ vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1, -2]), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpivd8ymed.rs:8:49\n  |\n8 |\
    \     let mut positive = l.iter().filter(|&x| x > 0).collect::<Vec<_>>();\n  |\
    \                                                 ^\n  |                     \
    \                            |\n  |                                          \
    \       expected `&isize`, found integer\n  |                                \
    \                 help: consider borrowing here: `&0`\n\nerror[E0599]: the method\
    \ `cloned` exists for struct `Vec<&isize>`, but its trait bounds were not satisfied\n\
    \   --> /tmp/tmpivd8ymed.rs:11:14\n    |\n11  |       positive.cloned().push(0);\n\
    \    |                ^^^^^^ method cannot be called on `Vec<&isize>` due to unsatisfied\
    \ trait bounds\n    |\n    = note: the following trait bounds were not satisfied:\n\
    \            `Vec<&isize>: Iterator`\n            which is required by `&mut Vec<&isize>:\
    \ Iterator`\n            `[&isize]: Iterator`\n            which is required by\
    \ `&mut [&isize]: Iterator`\n\nerror: aborting due to 2 previous errors\n\nSome\
    \ errors have detailed explanations: E0308, E0599.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp7ntjs2e.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n    --> /tmp/tmpp7ntjs2e.rs:7:34\n\
    \     |\n7    |     l.iter().filter(|&x| x >= 0).collect()\n     |           \
    \                       ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x >= 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwsv0oip3.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|x| x >= 0).collect()\n  |                             \
    \ ^ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmpwsv0oip3.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|x| x >= 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp7ntjs2e.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n    --> /tmp/tmpp7ntjs2e.rs:7:34\n\
    \     |\n7    |     l.iter().filter(|&x| x >= 0).collect()\n     |           \
    \                       ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 101
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    for x in l {\n\
    \        if x >= 0 {\n            result.push(x);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 3, 3, 9, 0, 123, 1]`,\n right: `[5, 3, 2, 3, 3, 9, 123, 1]`', /tmp/tmpb37_3xjs.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 101
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut positive = Vec::new();\n    for x in\
    \ l {\n        if x >= 0 {\n            positive.push(x);\n        }\n    }\n\
    \    positive\n}\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 3, 3, 9, 0, 123, 1]`,\n right: `[5, 3, 2, 3, 3, 9, 123, 1]`', /tmp/tmplphlogkk.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp7ntjs2e.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n    --> /tmp/tmpp7ntjs2e.rs:7:34\n\
    \     |\n7    |     l.iter().filter(|&x| x >= 0).collect()\n     |           \
    \                       ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 0
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = vec![];\n    for i in l {\n \
    \       if i > 0 {\n            res.push(i);\n        }\n    }\n    res\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 0
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = vec![];\n    for i in l {\n \
    \       if i > 0 {\n            res.push(i);\n        }\n    }\n    res\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp7ntjs2e.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n    --> /tmp/tmpp7ntjs2e.rs:7:34\n\
    \     |\n7    |     l.iter().filter(|&x| x >= 0).collect()\n     |           \
    \                       ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 0
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut positive = vec![];\n    for x in l\
    \ {\n        if x > 0 {\n            positive.push(x);\n        }\n    }\n   \
    \ positive\n}\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp7ntjs2e.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n    --> /tmp/tmpp7ntjs2e.rs:7:34\n\
    \     |\n7    |     l.iter().filter(|&x| x >= 0).collect()\n     |           \
    \                       ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 0
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = Vec::new();\n    let mut i =\
    \ 0;\n    while i < l.len() {\n        if l[i] > 0 {\n            res.push(l[i]);\n\
    \        }\n        i += 1;\n    }\n    res\n}\n\nfn main() {\n    let candidate\
    \ = get_positive;\n    assert_eq!(candidate(vec![-1, -2, 4, 5, 6]), vec![4, 5,\
    \ 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]),\
    \ vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1, -2]), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 0
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = Vec::new();\n    for elt in\
    \ l {\n        if elt > 0 {\n            result.push(elt);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 0
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    for i in l {\n\
    \        if i > 0 {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp7ntjs2e.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n    --> /tmp/tmpp7ntjs2e.rs:7:34\n\
    \     |\n7    |     l.iter().filter(|&x| x >= 0).collect()\n     |           \
    \                       ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 0
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut positive = Vec::new();\n    for x in\
    \ l {\n        if x > 0 {\n            positive.push(x);\n        }\n    }\n \
    \   positive\n}\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x >= 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwsv0oip3.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|x| x >= 0).collect()\n  |                             \
    \ ^ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmpwsv0oip3.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|x| x >= 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 0
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut result = vec![];\n    for el in l {\n\
    \        if el > 0 {\n            result.push(el);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 0
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut positive = vec![];\n    for x in l\
    \ {\n        if x > 0 {\n            positive.push(x);\n        }\n    }\n   \
    \ positive\n}\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp7ntjs2e.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n    --> /tmp/tmpp7ntjs2e.rs:7:34\n\
    \     |\n7    |     l.iter().filter(|&x| x >= 0).collect()\n     |           \
    \                       ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 0
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    let mut res = vec![];\n    for el in l {\n\
    \        if el > 0 {\n            res.push(el);\n        }\n    }\n    res\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028126
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x >= 0).collect()\n}\n\
    \nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpp7ntjs2e.rs:7:31\n  |\n7 |\
    \     l.iter().filter(|&x| x >= 0).collect()\n  |                            \
    \   ^\n  |                               |\n  |                              \
    \ expected `&isize`, found integer\n  |                               help: consider\
    \ borrowing here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be\
    \ built from an iterator over elements of type `&isize`\n    --> /tmp/tmpp7ntjs2e.rs:7:34\n\
    \     |\n7    |     l.iter().filter(|&x| x >= 0).collect()\n     |           \
    \                       ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp737c53_p.rs:7:29\n  |\n7 |\
    \     l.iter().filter(|x| x > 0).collect()\n  |                             ^\
    \ expected `&&isize`, found integer\n\nerror[E0277]: a value of type `Vec<isize>`\
    \ cannot be built from an iterator over elements of type `&isize`\n    --> /tmp/tmp737c53_p.rs:7:32\n\
    \     |\n7    |     l.iter().filter(|x| x > 0).collect()\n     |             \
    \                   ^^^^^^^ value of type `Vec<isize>` cannot be built from `std::iter::Iterator<Item=&isize>`\n\
    \     |\n     = help: the trait `FromIterator<&isize>` is not implemented for\
    \ `Vec<isize>`\n     = help: the trait `FromIterator<T>` is implemented for `Vec<T>`\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125
- exit_code: 1
  program: "/// Return only positive numbers in the list.\n/// >>> get_positive(vec![-1,\
    \ 2, -4, 5, 6])\n/// vec![2, 5, 6]\n/// >>> get_positive(vec![5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])\n/// vec![5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l:\
    \ Vec<isize>) -> Vec<isize> {\n    l.iter().filter(|&x| x > 0).collect()\n}\n\n\
    fn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
    \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
    \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsvtiavjk.rs:7:30\n  |\n7 |\
    \     l.iter().filter(|&x| x > 0).collect()\n  |                             \
    \ ^\n  |                              |\n  |                              expected\
    \ `&isize`, found integer\n  |                              help: consider borrowing\
    \ here: `&0`\n\nerror[E0277]: a value of type `Vec<isize>` cannot be built from\
    \ an iterator over elements of type `&isize`\n    --> /tmp/tmpsvtiavjk.rs:7:33\n\
    \     |\n7    |     l.iter().filter(|&x| x > 0).collect()\n     |            \
    \                     ^^^^^^^ value of type `Vec<isize>` cannot be built from\
    \ `std::iter::Iterator<Item=&isize>`\n     |\n     = help: the trait `FromIterator<&isize>`\
    \ is not implemented for `Vec<isize>`\n     = help: the trait `FromIterator<T>`\
    \ is implemented for `Vec<T>`\nnote: required by a bound in `collect`\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660028125

name: HumanEval_6_parse_nested_parens
language: rs
prompt: "/// Input to this function is a string represented multiple groups for nested\
  \ parentheses separated by spaces.\n/// For each of the group, output the deepest\
  \ level of nesting of parentheses.\n/// E.g. (()()) has maximum two levels of nesting\
  \ while ((())) has three.\n/// >>> parse_nested_parens(String::from(\"(()()) ((()))\
  \ () ((())()())\"))\n/// vec![2, 3, 1, 3]\nfn parse_nested_parens(paren_string:\
  \ String) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = parse_nested_parens;\n    assert_eq!(candidate(String::from(\"\
  (()()) ((())) () ((())()())\")), vec![2, 3, 1, 3]);\n    assert_eq!(candidate(String::from(\"\
  () (()) ((())) (((())))\")), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(String::from(\"\
  (()(())((())))\")), vec![4]);\n}\n"
completions: ["    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char_length = 0;\n    let mut paren_level_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_chars = vec![];\n    let mut paren_level_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length = 0;\n    let mut paren_level_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_chars = vec![];\n    let\
    \ mut paren_level_char_length_char_length_char_index = 0;\n    let mut paren_level_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_index = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_chars = vec![];\n    let\
    \ mut paren_level_char_length_char_length_char_length_char_index = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_char_length = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_char_index = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_char_length_chars = vec![];\n\
    \    let mut paren_level_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_chars\
    \ = vec![];\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_chars\
    \ = vec![];\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_",
  "    let mut paren_level = 0;\n    let mut paren_stack = Vec::new();\n    let mut\
    \ paren_stack_top = paren_stack.len();\n    let mut paren_stack_bottom = paren_stack.len();\n\
    \    let mut paren_stack_curr = paren_stack.len();\n    let mut paren_stack_top\
    \ = paren_stack.len();\n    let mut paren_stack_bottom = paren_stack.len();\n\
    \    let mut paren_stack_curr = paren_stack.len();\n    let mut paren_stack_top\
    \ = paren_stack.len();\n    let mut paren_stack_bottom = paren_stack.len();\n\
    \    let mut paren_stack_curr = paren_stack.len();\n    let mut paren_stack_top\
    \ = paren_stack.len();\n    let mut paren_stack_bottom = paren_stack.len();\n\
    \    let mut paren_stack_curr = paren_stack.len();\n    let mut paren_stack_top\
    \ = paren_stack.len();\n    let mut paren_stack_bottom = paren_stack.len();\n\
    \    let mut paren_stack_curr = paren_stack.len();\n    let mut paren_stack_top\
    \ = paren_stack.len();\n    let mut paren_stack_bottom = paren_stack.len();\n\
    \    let mut paren_stack_curr = paren_stack.len();\n    let mut paren_stack_top\
    \ = paren_stack.len();\n    let mut paren_stack_bottom = paren_stack.len();\n\
    \    let mut paren_stack_curr = paren_stack.len();\n    let mut paren_stack_top\
    \ = paren_stack.len();\n    let mut paren_stack_bottom = paren_stack.len();\n\
    \    let mut paren_stack_curr = paren_stack.len();\n    let mut paren_stack_top\
    \ = paren_stack.len();\n    let mut paren_stack_bottom = paren_stack.len();\n\
    \    let mut paren_stack_curr = paren_stack.len();\n    let mut paren_stack_top\
    \ = paren_stack.len();\n    let mut paren_stack_bottom = paren_stack.len();\n\
    \    let mut paren_stack_curr = paren_stack.len();\n    let mut paren_stack_top\
    \ = paren_stack.len();\n    let mut paren_stack_bottom = paren_stack.len();\n\
    \    let mut paren_stack_curr = paren_stack.len();\n    let mut paren_stack_top\
    \ = paren_stack.len();\n    let mut paren_stack_bottom = paren_stack.len();\n\
    \    let mut paren_stack_curr = paren_stack.len();\n", "    let mut paren_stack\
    \ = vec![];\n    let mut paren_depth = 0;\n    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_chars = vec![];\n    let mut paren_level_char_count = 0;\n    let\
    \ mut paren_level_char_index = 0;\n    let mut paren_level_chars = paren_string.chars();\n\
    \    let mut paren_level_char_count = paren_level_chars.len();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_count\
    \ = paren_level_chars.len();\n    let mut paren_level_char_index = 0;\n    let\
    \ mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_count\
    \ = paren_level_chars.len();\n    let mut paren_level_char_index = 0;\n    let\
    \ mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_count\
    \ = paren_level_chars.len();\n    let mut paren_level_char_index = 0;\n    let\
    \ mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_count\
    \ = paren_level_chars.len();\n    let mut paren_level_char_index = 0;\n    let\
    \ mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_count\
    \ = paren_level_chars.len();\n    let mut paren_level_char_index = 0;\n    let\
    \ mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_count\
    \ = paren_level_chars.len();\n    let mut paren_level_char_index = 0;\n    let\
    \ mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_count\
    \ = paren_level_chars.len();\n    let mut paren_level_char_index = 0;\n    let\
    \ mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_count\
    \ = paren_level_chars.len();\n    let mut paren_level_char_index = 0;\n    let\
    \ mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_count\
    \ = paren_level_chars.len();\n    let mut paren_level_char_index = 0;\n    let\
    \ mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_count\
    \ = paren", "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = vec![];\n    let mut paren_level_counts\
    \ = vec![];\n    let mut paren_level_counts_len = vec![];\n    let mut paren_level_counts_len_max\
    \ = vec![];\n    let mut paren_level_counts_len_max_len = vec![];\n    let mut\
    \ paren_level_counts_len_max_len = vec![];\n    let mut paren_level_counts_len_max_len\
    \ = vec![];\n    let mut paren_level_counts_len_max_len = vec![];\n    let mut\
    \ paren_level_counts_len_max_len = vec![];\n    let mut paren_level_counts_len_max_len\
    \ = vec![];\n    let mut paren_level_counts_len_max_len = vec![];\n    let mut\
    \ paren_level_counts_len_max_len = vec![];\n    let mut paren_level_counts_len_max_len\
    \ = vec![];\n    let mut paren_level_counts_len_max_len = vec![];\n    let mut\
    \ paren_level_counts_len_max_len = vec![];\n    let mut paren_level_counts_len_max_len\
    \ = vec![];\n    let mut paren_level_counts_len_max_len = vec![];\n    let mut\
    \ paren_level_counts_len_max_len = vec![];\n    let mut paren_level_counts_len_max_len\
    \ = vec![];\n    let mut paren_level_counts_len_max_len = vec![];\n    let mut\
    \ paren_level_counts_len_max_len = vec![];\n    let mut paren_level_counts_len_max_len\
    \ = vec![];\n    let mut paren_level_counts_len_max_len = vec![];\n    let mut\
    \ paren_level_counts_len_max_len = vec![];\n    let mut paren_level_counts_len_max_len\
    \ = vec![];\n    let mut paren_level_counts_len_max_len = vec![];\n    let mut\
    \ paren_level_counts_len_max_len = vec![];\n    let mut paren_level_counts_len_max_len\
    \ = vec![];\n    let mut paren_level_counts_len_max_len = vec![];\n    let mut\
    \ paren_level_counts_len_max_len = vec![];\n    let mut paren_level_counts_len_max_len\
    \ = vec![];\n    let mut paren_level_counts_len_max_len = vec![];\n    let mut\
    \ paren_level_counts_len_max_len = vec![];\n    let ", "    let mut level = 0;\n\
    \    let mut paren_level = 0;\n    let mut paren_level_stack = Vec::new();\n \
    \   let mut paren_level_stack_len = paren_level_stack.len();\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n    let\
    \ mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_",
  "    let mut level = 0;\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level", "    let mut paren_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level: isize = 0;\n    let mut paren_levels:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_len: usize = 0;\n    let mut\
    \ paren_levels_lens: Vec<usize> = vec![];\n    let mut paren_levels_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens: Vec<usize> = vec![];\n    let\
    \ mut paren_levels_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: usize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<usize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_", "    let mut\
    \ level = 0;\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_levels_len.iter().cloned().collect();\n    let mut paren_levels_len =\
    \ paren_level", "    let mut paren_levels = vec![];\n    let mut paren_level =\
    \ 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_chars = vec![];\n\
    \    let mut paren_level_chars_index = 0;\n    let mut paren_level_chars_index2\
    \ = 0;\n    let mut paren_level_chars_index3 = 0;\n    let mut paren_level_chars_index4\
    \ = 0;\n    let mut paren_level_chars_index5 = 0;\n    let mut paren_level_chars_index6\
    \ = 0;\n    let mut paren_level_chars_index7 = 0;\n    let mut paren_level_chars_index8\
    \ = 0;\n    let mut paren_level_chars_index9 = 0;\n    let mut paren_level_chars_index10\
    \ = 0;\n    let mut paren_level_chars_index11 = 0;\n    let mut paren_level_chars_index12\
    \ = 0;\n    let mut paren_level_chars_index13 = 0;\n    let mut paren_level_chars_index14\
    \ = 0;\n    let mut paren_level_chars_index15 = 0;\n    let mut paren_level_chars_index16\
    \ = 0;\n    let mut paren_level_chars_index17 = 0;\n    let mut paren_level_chars_index18\
    \ = 0;\n    let mut paren_level_chars_index19 = 0;\n    let mut paren_level_chars_index20\
    \ = 0;\n    let mut paren_level_chars_index21 = 0;\n    let mut paren_level_chars_index22\
    \ = 0;\n    let mut paren_level_chars_index23 = 0;\n    let mut paren_level_chars_index24\
    \ = 0;\n    let mut paren_level_chars_index25 = 0;\n    let mut paren_level_chars_index26\
    \ = 0;\n    let mut paren_level_chars_index27 = 0;\n    let mut paren_level_chars_index28\
    \ = 0;\n    let mut paren_level_chars_index29 = 0;\n    let mut paren_level_chars_index30\
    \ = 0;\n    let mut paren_level_chars_index31 = 0;\n    let mut paren_level_chars_index32\
    \ = 0;\n    let mut paren_level_chars_index33 = 0;\n    let mut paren_level_chars_index34\
    \ = 0;\n    let mut paren_level_chars_index35 = 0;\n    let mut paren_level_chars_index36\
    \ = 0;\n    let mut paren_level_chars_index37 = 0;\n    let mut paren_level_chars_index38\
    \ = 0;\n    let mut paren_level_chars_index39 = 0;\n    let mut paren_level_chars_index40\
    \ = 0;\n    let mut paren_level_chars_index41 = 0;\n    let mut paren_level_chars_index42\
    \ = 0;\n    let mut paren_level_chars_index43 = 0;\n    let mut paren", "    let\
    \ mut paren_stack: Vec<isize> = vec![];\n    let mut paren_depth: usize = 0;\n\
    \    for paren in paren_string.chars() {\n        if paren == '(' {\n        \
    \    paren_depth += 1;\n            paren_stack.push(paren_depth);\n        }\
    \ else if paren == ')' {\n            paren_depth -= 1;\n            if paren_depth\
    \ == 0 {\n                paren_stack.push(paren_depth);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_levels = vec![0];\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_prev = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_next = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_ptr_next_prev = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_chars\
    \ = Vec::new();\n    let mut paren_level_chars_index = 0;\n    let mut paren_level_chars_len\
    \ = 0;\n    let mut paren_level_chars_chars_index = 0;\n    let mut paren_level_chars_chars_len_index\
    \ = 0;\n    let mut paren_level_chars_chars_chars_len_index = 0;\n    let mut\
    \ paren_level_chars_chars_chars_len_index = 0;\n    let mut paren_level_chars_chars_chars_len_index\
    \ = 0;\n    let mut paren_level_chars_chars_chars_len_index = 0;\n    let mut\
    \ paren_level_chars_chars_chars_len_index = 0;\n    let mut paren_level_chars_chars_chars_len_index\
    \ = 0;\n    let mut paren_level_chars_chars_chars_len_index = 0;\n    let mut\
    \ paren_level_chars_chars_chars_len_index = 0;\n    let mut paren_level_chars_chars_chars_len_index\
    \ = 0;\n    let mut paren_level_chars_chars_chars_len_index = 0;\n    let mut\
    \ paren_level_chars_chars_chars_len_index = 0;\n    let mut paren_level_chars_chars_chars_len_index\
    \ = 0;\n    let mut paren_level_chars_chars_chars_len_index = 0;\n    let mut\
    \ paren_level_chars_chars_chars_len_index = 0;\n    let mut paren_level_chars_chars_chars_len_index\
    \ = 0;\n    let mut paren_level_chars_chars_chars_len_index = 0;\n    let mut\
    \ paren_level_chars_chars_chars_len_index = 0;\n    let mut paren_level_chars_chars_chars_len_index\
    \ = 0;\n    let mut paren_level_chars_chars_chars_len_index = 0;\n    let mut\
    \ paren_level_chars_chars_chars_len_index = 0;\n    let mut paren_level_chars_chars_chars_len_index\
    \ = 0;\n    let mut paren_level_chars_chars_chars_len_index = 0;\n    let mut\
    \ paren_level_chars_chars_chars_len_index = 0;\n    let mut paren_level_chars_chars_chars_len_index\
    \ = 0;\n    let mut paren_level_chars_chars_chars_len_index = 0;\n    let mut\
    \ paren_level_chars_chars_chars_len_index = 0;\n    let mut paren_level_chars_chars_chars_len_index\
    \ = 0;\n    let mut paren_level_chars_chars_chars_len_index = 0;\n    let mut\
    \ paren_level_chars_chars_chars_len_index = 0;\n    let mut paren_level_chars_chars_chars_len_index\
    \ = 0;\n    let mut paren_level_chars_chars_chars_len_index = 0;\n    let mut\
    \ paren_level_chars_chars_chars_len_index = 0;\n    let mut paren_level_chars_chars_chars_len_index",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut level = 0;\n    let mut paren_levels =\
    \ Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new", "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_chars_index\
    \ = 0;\n    let mut paren_level_chars_index2 = 0;\n    let mut paren_level_chars_index3\
    \ = 0;\n    let mut paren_level_chars_index4 = 0;\n    let mut paren_level_chars_index5\
    \ = 0;\n    let mut paren_level_chars_index6 = 0;\n    let mut paren_level_chars_index7\
    \ = 0;\n    let mut paren_level_chars_index8 = 0;\n    let mut paren_level_chars_index9\
    \ = 0;\n    let mut paren_level_chars_index10 = 0;\n    let mut paren_level_chars_index11\
    \ = 0;\n    let mut paren_level_chars_index12 = 0;\n    let mut paren_level_chars_index13\
    \ = 0;\n    let mut paren_level_chars_index14 = 0;\n    let mut paren_level_chars_index15\
    \ = 0;\n    let mut paren_level_chars_index16 = 0;\n    let mut paren_level_chars_index17\
    \ = 0;\n    let mut paren_level_chars_index18 = 0;\n    let mut paren_level_chars_index19\
    \ = 0;\n    let mut paren_level_chars_index20 = 0;\n    let mut paren_level_chars_index21\
    \ = 0;\n    let mut paren_level_chars_index22 = 0;\n    let mut paren_level_chars_index23\
    \ = 0;\n    let mut paren_level_chars_index24 = 0;\n    let mut paren_level_chars_index25\
    \ = 0;\n    let mut paren_level_chars_index26 = 0;\n    let mut paren_level_chars_index27\
    \ = 0;\n    let mut paren_level_chars_index28 = 0;\n    let mut paren_level_chars_index29\
    \ = 0;\n    let mut paren_level_chars_index30 = 0;\n    let mut paren_level_chars_index31\
    \ = 0;\n    let mut paren_level_chars_index32 = 0;\n    let mut paren_level_chars_index33\
    \ = 0;\n    let mut paren_level_chars_index34 = 0;\n    let mut paren_level_chars_index35\
    \ = 0;\n    let mut paren_level_chars_index36 = 0;\n    let mut paren_level_chars_index37\
    \ = 0;\n    let mut paren_level_chars_index38 = 0;\n    let mut paren_level_chars_index39\
    \ = 0;\n    let mut paren_level_chars_index40 = 0;\n    let mut paren_level_chars_index41\
    \ = 1;\n    let mut paren_level_chars_index42 = 1;\n    let mut paren_level_chars_index43\
    \ = 1;\n    let mut ", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren", "    let mut paren_level = 0;\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_size = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_depth: isize =\
    \ 0;\n    let mut paren_level: isize = 0;\n    let mut paren_levels: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_len: isize = 0;\n    let mut paren_levels_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_len: isize = 0;\n    let\
    \ mut paren_levels_lens_lens: Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens: Vec<isize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_len: isize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens: Vec<isize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_len: isize = 0;\n    let mut\
    \ paren_levels_lens_lens_lens_lens_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_depth: usize =\
    \ 0;\n    for paren in paren_string.chars() {\n        if paren == '(' {\n   \
    \         paren_depth += 1;\n            paren_stack.push(paren_depth);\n    \
    \    } else if paren == ')' {\n            paren_depth -= 1;\n            if paren_depth\
    \ == 0 {\n                paren_stack.push(paren_depth);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_stack = Vec::new();\n    let\
    \ mut paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_len =\
    \ 0;\n    let mut paren_levels_len2 = 0;\n    let mut paren_levels_len3 = 0;\n\
    \    let mut paren_levels_len4 = 0;\n    let mut paren_levels_len5 = 0;\n    let\
    \ mut paren_levels_len6 = 0;\n    let mut paren_levels_len7 = 0;\n    let mut\
    \ paren_levels_len8 = 0;\n    let mut paren_levels_len9 = 0;\n    let mut paren_levels_len10\
    \ = 0;\n    let mut paren_levels_len11 = 0;\n    let mut paren_levels_len12 =\
    \ 0;\n    let mut paren_levels_len13 = 0;\n    let mut paren_levels_len14 = 0;\n\
    \    let mut paren_levels_len15 = 0;\n    let mut paren_levels_len16 = 0;\n  \
    \  let mut paren_levels_len17 = 0;\n    let mut paren_levels_len18 = 0;\n    let\
    \ mut paren_levels_len19 = 0;\n    let mut paren_levels_len20 = 0;\n    let mut\
    \ paren_levels_len21 = 0;\n    let mut paren_levels_len22 = 0;\n    let mut paren_levels_len23\
    \ = 0;\n    let mut paren_levels_len24 = 0;\n    let mut paren_levels_len25 =\
    \ 0;\n    let mut paren_levels_len26 = 0;\n    let mut paren_levels_len27 = 0;\n\
    \    let mut paren_levels_len28 = 0;\n    let mut paren_levels_len29 = 0;\n  \
    \  let mut paren_levels_len30 = 0;\n    let mut paren_levels_len31 = 0;\n    let\
    \ mut paren_levels_len32 = 0;\n    let mut paren_levels_len33 = 0;\n    let mut\
    \ paren_levels_len34 = 0;\n    let mut paren_levels_len35 = 0;\n    let mut paren_levels_len36\
    \ = 0;\n    let mut paren_levels_len37 = 0;\n    let mut paren_levels_len38 =\
    \ 0;\n    let mut paren_levels_len39 = 0;\n    let mut paren_levels_len40 = 0;\n\
    \    let mut paren_levels_len41 = 1;\n    let mut paren_levels_len42 = 1;\n  \
    \  let mut paren_level", "    let mut level = 0;\n    let mut paren_level = 0;\n\
    \    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level", "    let mut\
    \ paren_level = 0;\n    let mut paren_stack = vec![];\n    let mut paren_levels\
    \ = vec![];\n    let mut paren_levels_size = vec![];\n    let mut paren_levels_size_max\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_index = vec![];\n    let mut paren_levels_size_max_index\
    \ = vec![];\n    let mut paren_levels_size_max_", "    let mut paren_levels =\
    \ Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    let mut paren_level_stack = Vec::new();\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n    let\
    \ mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_", "    let mut paren_stack: Vec<isize>\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count = vec![];\n\
    \    let mut paren_level_count_stack: Vec<isize> = vec![];\n    let mut paren_level_count_stack_count\
    \ = vec![];\n    let mut paren_level_count_stack_count2 = vec![];\n    let mut\
    \ paren_level_count_stack_count3 = vec![];\n    let mut paren_level_count_stack_count4\
    \ = vec![];\n    let mut paren_level_count_stack_count5 = vec![];\n    let mut\
    \ paren_level_count_stack_count6 = vec![];\n    let mut paren_level_count_stack_count7\
    \ = vec![];\n    let mut paren_level_count_stack_count8 = vec![];\n    let mut\
    \ paren_level_count_stack_count9 = vec![];\n    let mut paren_level_count_stack_count10\
    \ = vec![];\n    let mut paren_level_count_stack_count11 = vec![];\n    let mut\
    \ paren_level_count_stack_count12 = vec![];\n    let mut paren_level_count_stack_count13\
    \ = vec![];\n    let mut paren_level_count_stack_count14 = vec![];\n    let mut\
    \ paren_level_count_stack_count15 = vec![];\n    let mut paren_level_count_stack_count16\
    \ = vec![];\n    let mut paren_level_count_stack_count17 = vec![];\n    let mut\
    \ paren_level_count_stack_count18 = vec![];\n    let mut paren_level_count_stack_count19\
    \ = vec![];\n    let mut paren_level_count_stack_count20 = vec![];\n    let mut\
    \ paren_level_count_stack_count21 = vec![];\n    let mut paren_level_count_stack_count22\
    \ = vec![];\n    let mut paren_level_count_stack_count23 = vec![];\n    let mut\
    \ paren_level_count_stack_count24 = vec![];\n    let mut paren_level_count_stack_count25\
    \ = vec![];\n    let mut paren_level_count_stack_count26 = vec![];\n    let mut\
    \ paren_level_count_stack_count27 = vec![];\n    let mut paren_level_count_stack_count28\
    \ = vec![];\n    let mut paren_level_count_stack_count29 = vec![];\n    let mut\
    \ paren_level_count_stack_count30 = vec![];\n    let mut paren_level_count_stack_count31\
    \ = vec![];\n    let mut ", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_char_count_index = 0;\n    let mut paren_level_char_count_index2\
    \ = 0;\n    let mut paren_level_char_count_index3 = 0;\n    let mut paren_level_char_count_index4\
    \ = 0;\n    let mut paren_level_char_count_index5 = 0;\n    let mut paren_level_char_count_index6\
    \ = 0;\n    let mut paren_level_char_count_index7 = 0;\n    let mut paren_level_char_count_index8\
    \ = 0;\n    let mut paren_level_char_count_index9 = 0;\n    let mut paren_level_char_count_index10\
    \ = 0;\n    let mut paren_level_char_count_index11 = 0;\n    let mut paren_level_char_count_index12\
    \ = 0;\n    let mut paren_level_char_count_index13 = 0;\n    let mut paren_level_char_count_index14\
    \ = 0;\n    let mut paren_level_char_count_index15 = 0;\n    let mut paren_level_char_count_index16\
    \ = 0;\n    let mut paren_level_char_count_index17 = 0;\n    let mut paren_level_char_count_index18\
    \ = 0;\n    let mut paren_level_char_count_index19 = 0;\n    let mut paren_level_char_count_index20\
    \ = 0;\n    let mut paren_level_char_count_index21 = 0;\n    let mut paren_level_char_count_index22\
    \ = 0;\n    let mut paren_level_char_count_index23 = 0;\n    let mut paren_level_char_count_index24\
    \ = 0;\n    let mut paren_level_char_count_index25 = 0;\n    let mut paren_level_char_count_index26\
    \ = 0;\n    let mut paren_level_char_count_index27 = 0;\n    let mut paren_level_char_count_index28\
    \ = 0;\n    let mut paren_level_char_count_index29 = 0;\n    let mut paren_level_char_count_index30\
    \ = 0;\n    let mut paren_level_char_count_index31 = 0;\n    let mut paren_level_char_count_index32\
    \ = 0;\n    let mut paren_level_char_count_index33 = 0;\n    let mut paren_level_char_count_index34\
    \ = 0;\n    let mut paren_level_char_count_index35 = 0;\n    let mut paren_level_char_count_index36\
    \ = 0;\n    let mut paren_level_char_count_index37 = 0;\n    let mut paren_level_char_count_index38\
    \ = 0;\n    let mut paren_level_char_count_index39 = 0;\n    let mut paren_level_char_count_index40\
    \ = 0;", "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let\
    \ mut paren_levels = vec![];\n    let mut paren_nesting_levels = vec![];\n   \
    \ let mut paren_levels_stack = vec![];\n    let mut paren_nesting_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_nesting_levels_stack_size = paren_nesting_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_nesting_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr = paren_levels_stack.as_mut_ptr();\n\
    \    let mut paren_nesting_levels_stack_ptr = paren_nesting_levels_stack.as_mut_ptr();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_nesting_levels_stack_end = paren_nesting_levels_stack_ptr.offset(\n\
    \        paren_nesting_levels_stack_size,\n    );\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_ptr.offset(0);\n    let mut paren_nesting_levels_stack_top\
    \ = paren_nesting_levels_stack_ptr.offset(0);\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n    let mut paren_nesting_levels_stack_bottom\
    \ = paren_nesting_levels_stack_ptr.offset(\n        paren_nesting_levels_stack_size,\n\
    \    );\n    let mut paren_levels_stack_top = paren_levels_stack_ptr.offset(0);\n\
    \    let mut paren_nesting_levels_stack_top = paren_nesting_levels_stack_ptr.offset(0);\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_nesting_levels_stack_bottom = paren_nesting_levels_stack_ptr.offset(\n\
    \        paren_nesting_levels_stack_size,\n    );\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_ptr.offset(0);\n    let mut paren_nesting_levels_stack_top\
    \ = paren_nesting_levels_stack_ptr.offset(0);\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr.offset(paren_level", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let\
    \ mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n \
    \   let mut paren_levels_stack_max_max_pos = 0;\n    let mut paren_levels_stack_max_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_max_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_max_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_pos = 0;\n    let mut paren_levels_stack_max_max_max_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_max_max_max_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_max_max_max_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_pos = 0;\n    let mut paren_levels_stack_max_max_max_max_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_max_max_max_max_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_max_max_max_max_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_max_pos = 0;\n    let mut\
    \ paren_levels_stack_max_max_max_max_max_max_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_max_max_max_pos = 0;\n   \
    \ let mut paren_levels_stack_max_max_max_max_max_max_max_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_max_max_max_max_pos = 0;\n\
    \    let mut paren_levels_stack_max_max_max_max_max_max_max_max_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_max_max_max_max_max_pos =\
    \ 0;\n    let mut paren_levels_stack_max_max_max_max_max_max_max_max_max_max_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_", "    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_levels_len\
    \ = 0;\n    let mut paren_nesting_levels_lens = Vec::new();\n    let mut paren_nesting_levels_lens_len\
    \ = 0;\n    let mut paren_nesting_levels_lens_len2 = 0;\n    let mut paren_nesting_levels_lens_len3\
    \ = 0;\n    let mut paren_nesting_levels_lens_len4 = 0;\n    let mut paren_nesting_levels_lens_len5\
    \ = 0;\n    let mut paren_nesting_levels_lens_len6 = 0;\n    let mut paren_nesting_levels_lens_len7\
    \ = 0;\n    let mut paren_nesting_levels_lens_len8 = 0;\n    let mut paren_nesting_levels_lens_len9\
    \ = 0;\n    let mut paren_nesting_levels_lens_len10 = 0;\n    let mut paren_nesting_levels_lens_len11\
    \ = 0;\n    let mut paren_nesting_levels_lens_len12 = 0;\n    let mut paren_nesting_levels_lens_len13\
    \ = 0;\n    let mut paren_nesting_levels_lens_len14 = 0;\n    let mut paren_nesting_levels_lens_len15\
    \ = 0;\n    let mut paren_nesting_levels_lens_len16 = 0;\n    let mut paren_nesting_levels_lens_len17\
    \ = 0;\n    let mut paren_nesting_levels_lens_len18 = 0;\n    let mut paren_nesting_levels_lens_len19\
    \ = 0;\n    let mut paren_nesting_levels_lens_len20 = 0;\n    let mut paren_nesting_levels_lens_len21\
    \ = 0;\n    let mut paren_nesting_levels_lens_len22 = 0;\n    let mut paren_nesting_levels_lens_len23\
    \ = 0;\n    let mut paren_nesting_levels_lens_len24 = 0;\n    let mut paren_nesting_levels_lens_len25\
    \ = 0;\n    let mut paren_nesting_levels_lens_len26 = 0;\n    let mut paren_nesting_levels_lens_len27\
    \ = 0;\n    let mut paren_nesting_levels_lens_len28 = 0;\n    let mut paren_nesting_levels_lens_len29\
    \ = 0;\n    let mut paren_nesting_levels_lens_", "    let mut paren_stack: Vec<isize>\
    \ = vec![];\n    let mut paren_level: isize = 0;\n    for paren in paren_string.chars()\
    \ {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n \
    \           paren_level += 1;\n        } else if paren == ')' {\n            paren_level\
    \ -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut paren_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = vec![];\n    let mut paren_level_max_count = vec![];\n    let mut paren_level_max_count_index\
    \ = -1;\n    let mut paren_level_max_count_value = -1;\n    let mut paren_level_max_count_index2\
    \ = -1;\n    let mut paren_level_max_count_value2 = -1;\n    let mut paren_level_max_count_index3\
    \ = -1;\n    let mut paren_level_max_count_value3 = -1;\n    let mut paren_level_max_count_index4\
    \ = -1;\n    let mut paren_level_max_count_value4 = -1;\n    let mut paren_level_max_count_index5\
    \ = -1;\n    let mut paren_level_max_count_value5 = -1;\n    let mut paren_level_max_count_index6\
    \ = -1;\n    let mut paren_level_max_count_value6 = -1;\n    let mut paren_level_max_count_index7\
    \ = -1;\n    let mut paren_level_max_count_value7 = -1;\n    let mut paren_level_max_count_index8\
    \ = -1;\n    let mut paren_level_max_count_value8 = -1;\n    let mut paren_level_max_count_index9\
    \ = -1;\n    let mut paren_level_max_count_value9 = -1;\n    let mut paren_level_max_count_index10\
    \ = -1;\n    let mut paren_level_max_count_value10 = -1;\n    let mut paren_level_max_count_index11\
    \ = -1;\n    let mut paren_level_max_count_value11 = -1;\n    let mut paren_level_max_count_index12\
    \ = -1;\n    let mut paren_level_max_count_value12 = -1;\n    let mut paren_level_max_count_index13\
    \ = -1;\n    let mut paren_level_max_count_value13 = -1;\n    let mut paren_level_max_count_index14\
    \ = -1;\n    let mut paren_level_max_count_value14 = -1;\n    let mut paren_level_max_count_index15\
    \ = -1;\n    let mut paren_level_max_count_value15 = -1;\n    let mut paren_level_max_count_index16\
    \ = -1;\n    let mut paren_level_max_count_value16 = -1;\n    let mut paren_level_max_count_index17\
    \ = -1;\n    let mut paren_level_max_count_value17 = -1;\n    let mut paren_level_max_count_index18\
    \ = -1;\n    let mut paren_level_max_count_value18 = -1;\n    let mut paren_level_max_count_index19\
    \ = -1;\n    let mut paren_level_max_count_", "    let mut paren_stack = Vec::new();\n\
    \    let mut paren_depth = 0;\n    let mut paren_levels = Vec::new();\n    for\
    \ paren in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_depth);\n\
    \            paren_depth += 1;\n            paren_levels.push(paren_depth);\n\
    \        } else if paren == ')' {\n            paren_depth -= 1;\n           \
    \ if paren_depth == 0 {\n                paren_levels.pop();\n            }\n\
    \        }\n    }\n    paren_levels", "    let mut paren_stack = Vec::new();\n\
    \    let mut paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_iter = paren_levels.iter();\n    let\
    \ mut paren_levels_iter = paren_levels.iter();\n    let mut paren_levels_iter\
    \ = paren_levels.iter();\n    let mut paren_levels_iter = paren_levels.iter();\n\
    \    let mut paren_levels_iter = paren_levels.iter();\n    let mut paren_levels_iter\
    \ = paren_levels.iter();\n    let mut paren_levels_iter = paren_levels.iter();\n\
    \    let mut paren_levels_iter = paren_levels.iter();\n    let mut paren_levels_iter\
    \ = paren_levels.iter();\n    let mut paren_levels_iter = paren_levels.iter();\n\
    \    let mut paren_levels_iter = paren_levels.iter();\n    let mut paren_levels_iter\
    \ = paren_levels.iter();\n    let mut paren_levels_iter = paren_levels.iter();\n\
    \    let mut paren_levels_iter = paren_levels.iter();\n    let mut paren_levels_iter\
    \ = paren_levels.iter();\n    let mut paren_levels_iter = paren_levels.iter();\n\
    \    let mut paren_levels_iter = paren_levels.iter();\n    let mut paren_levels_iter\
    \ = paren_levels.iter();\n    let mut paren_levels_iter = paren_levels.iter();\n\
    \    let mut paren_levels_iter = paren_levels.iter();\n    let mut paren_levels_iter\
    \ = paren_levels.iter();\n    let mut paren_levels_iter = paren_levels.iter();\n\
    \    let mut paren_levels_iter = paren_levels.iter();\n    let mut paren_levels_iter\
    \ = paren_levels.iter();\n    let mut paren_levels_iter = paren_levels.iter();\n\
    \    let mut paren_levels_iter = paren_levels.iter();\n    let mut paren_levels_iter\
    \ = paren_levels.iter();\n    let mut paren_levels_iter = paren_levels.iter();\n\
    \    let mut paren_levels_iter = paren_levels.iter();\n    let mut paren_levels_iter\
    \ = paren_levels.iter();\n    let mut paren_levels_iter = paren_levels.iter();\n\
    \    let mut paren_levels_iter = paren_levels.iter();\n    let mut paren_levels_iter\
    \ = paren_levels.iter();\n    let mut paren_levels_iter = paren_levels.", "  \
    \  let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len() - 1;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_level", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars =\
    \ String::new();\n    let mut paren_level_char_index = 0;\n    let mut paren_level_chars\
    \ = paren_string.chars();\n    let mut paren_level_char_iter = paren_level_chars.iter();\n\
    \    let mut paren_level_char_iter = paren_level_char_iter.peekable();\n    let\
    \ mut paren_level_char_iter = paren_level_char_iter.peekable();\n    let mut paren_level_char_iter\
    \ = paren_level_char_iter.peekable();\n    let mut paren_level_char_iter = paren_level_char_iter.peekable();\n\
    \    let mut paren_level_char_iter = paren_level_char_iter.peekable();\n    let\
    \ mut paren_level_char_iter = paren_level_char_iter.peekable();\n    let mut paren_level_char_iter\
    \ = paren_level_char_iter.peekable();\n    let mut paren_level_char_iter = paren_level_char_iter.peekable();\n\
    \    let mut paren_level_char_iter = paren_level_char_iter.peekable();\n    let\
    \ mut paren_level_char_iter = paren_level_char_iter.peekable();\n    let mut paren_level_char_iter\
    \ = paren_level_char_iter.peekable();\n    let mut paren_level_char_iter = paren_level_char_iter.peekable();\n\
    \    let mut paren_level_char_iter = paren_level_char_iter.peekable();\n    let\
    \ mut paren_level_char_iter = paren_level_char_iter.peekable();\n    let mut paren_level_char_iter\
    \ = paren_level_char_iter.peekable();\n    let mut paren_level_char_iter = paren_level_char_iter.peekable();\n\
    \    let mut paren_level_char_iter = paren_level_char_iter.peekable();\n    let\
    \ mut paren_level_char_iter = paren_level_char_iter.peekable();\n    let mut paren_level_char_iter\
    \ = paren_level_char_iter.peekable();\n    let mut paren_level_char_iter = paren_level_char_iter.peekable();\n\
    \    let mut paren_level_char_iter = paren_level_char_iter.peekable();\n    let\
    \ mut paren_level_char_iter = paren_level_char_iter.peekable();\n    let mut paren_level_char_iter\
    \ = paren_level_char_iter.peekable();\n    let mut paren_level_char_iter = paren_level_char_iter.peekable();\n\
    \    let mut paren_level_char_iter = paren_level_char_", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_level = 0;\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n", "    let mut\
    \ paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_depth: usize =\
    \ 0;\n    let mut paren_level: usize = 0;\n    let mut paren_levels: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_len: usize = 0;\n    let mut paren_levels_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_len: usize = 0;\n    let\
    \ mut paren_levels_lens_lens: Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens: Vec<isize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens: Vec<isize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut\
    \ paren_levels_lens_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_len", "    let mut level = 0;\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level", "    let mut\
    \ paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut level = 0;\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_max = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index = 0;\n\
    \    let mut paren_", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_max = paren_levels_stack_size;\n    let mut paren_levels_stack_max_pos\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_size = paren_levels_stack_max;\n\
    \    let mut paren_levels_stack_max_value = paren_levels_stack_max;\n    let mut\
    \ paren_levels_stack_max_pos = paren_levels_stack_size;\n    let mut paren_levels_stack_max_value\
    \ = paren_levels_stack_max;\n    let mut paren_levels_stack_max_value_pos = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_max_value_pos = paren_levels_stack_size;\n   \
    \ let mut paren_levels_stack_max_value_pos = paren_levels_stack_size;\n    let\
    \ mut paren_levels_stack_max_value_pos = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_max_value_pos = paren_levels_stack_size;\n    let mut paren_levels_stack_max_value_pos\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_value_pos = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_max_value_pos = paren_levels_stack_size;\n   \
    \ let mut paren_levels_stack_max_value_pos = paren_levels_stack_size;\n    let\
    \ mut paren_levels_stack_max_value_pos = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_max_value_pos = paren_levels_stack_size;\n    let mut paren_levels_stack_max_value_pos\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_value_pos = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_max_value_pos = paren_levels_stack_size;\n   \
    \ let mut paren_levels_stack_max_value_pos = paren_levels_stack_size;\n    let\
    \ mut paren_levels_stack_max_value_pos = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_max_value_pos = paren_levels_stack_size;\n    let mut paren_levels_stack_max_value_pos\
    \ = paren_levels_stack_size;\n    let mut ", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_stack: Vec<isize>\
    \ = vec![];\n    let mut paren_level: isize = 0;\n    for paren in paren_string.chars()\
    \ {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n \
    \           paren_level += 1;\n        } else if paren == ')' {\n            paren_level\
    \ -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut level = 0;\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_ptr_end_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n   \
    \ let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_level_string = paren_string;\n    let mut paren_level_string_index\
    \ = 0;\n    while paren_level_string_index < paren_string.len() {\n        let\
    \ mut paren_level_string = paren_string.clone();\n        let mut paren_level_string_index\
    \ = 0;\n        while paren_level_string_index < paren_level_string.len() {\n\
    \            let mut paren_level_string = paren_level_string.clone();\n      \
    \      let mut paren_level_string_index = 0;\n            while paren_level_string_index\
    \ < paren_level_string.len() {\n                let mut paren_level_string = paren_level_string.clone();\n\
    \                let mut paren_level_string_index = 0;\n                while\
    \ paren_level_string_index < paren_level_string.len() {\n                    let\
    \ mut paren_level_string = paren_level_string.clone();\n                    let\
    \ mut paren_level_string_index = 0;\n                    while paren_level_string_index\
    \ < paren_level_string.len() {\n                        let mut paren_level_string\
    \ = paren_level_string.clone();\n                        let mut paren_level_string_index\
    \ = 0;\n                        while paren_level_string_index < paren_level_string.len()\
    \ {\n                            let mut paren_level_string = paren_level_string.clone();\n\
    \                            let mut paren_level_string_index = 0;\n         \
    \                   while paren_level_string_index < paren_level_string.len()\
    \ {\n                                let mut paren_level_string = paren_level_string.clone();\n\
    \                                let mut paren_level_string_index = 0;\n     \
    \                           while paren_level_string_index < paren_level_string.len()\
    \ {\n                                    let mut paren_level_string = paren_level_string.clone();\n\
    \                                    let mut paren_level_string_index = 0;\n \
    \                                   while paren_level_string_index < paren_level_string.len()\
    \ {\n                                        let mut paren_level_string = paren_level_string.clone();\n\
    \                                        let mut paren_level_string_index = 0;\n\
    \                                        while paren_level_string_index < paren_level_string.len()\
    \ {\n                                            let mut paren_level_string =\
    \ paren_level_string.clone();\n                                            let\
    \ mut paren_level_string_index = 0;\n                                        \
    \    while paren_level_string_index < paren_level_string.len() {\n           \
    \                                     let mut paren_level_string = paren_level_string.clone();\n\
    \                                                let mut paren_level_string_index\
    \ = 0;\n                                                ", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index =\
    \ 0;\n    let mut paren_level_string = \"\";\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_char_index = 0;\n    let mut paren_level_char_length\
    \ = 0;\n    let mut paren_level_char_length_index = 0;\n    let mut paren_level_char_length_char_count\
    \ = 0;\n    let mut paren_level_char_length_char_index = 0;\n    let mut paren_level_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_index = 0;\n    let mut\
    \ paren_level_char_length_char_length_char_count = 0;\n    let mut paren_level_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length = 0;\n   \
    \ let mut paren_level_char_length_char_length_char_length_index = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_char_count = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_char_index = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_char_length = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_char_length_index = 0;\n\
    \    let mut paren_level_char_length_char_length_char_length_char_length_char_count\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_count\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_char_count\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_char_length_char_count\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos = 0;\n   \
    \ let mut paren_level_stack = vec![0];\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_size = paren_level_stack.len();\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mu", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren", "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_iter = paren_string.chars().enumerate();\n    let mut\
    \ paren_levels_iter = paren_levels_iter.filter_map(|(i, c)| {\n        if c ==\
    \ '(' {\n            paren_level += 1;\n            paren_levels.push(paren_level);\n\
    \            Some(paren_level)\n        } else {\n            paren_level -= 1;\n\
    \            Some(paren_level)\n        }\n    });\n    paren_levels_iter.collect::<Vec<_>>()",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mu", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_",
  "    let mut level = 0;\n    let mut paren_stack = vec![];\n    for paren in paren_string.chars()\
    \ {\n        if paren == '(' {\n            paren_stack.push(level);\n       \
    \     level += 1;\n        } else if paren == ')' {\n            level -= 1;\n\
    \            if level == 0 {\n                paren_stack.pop();\n           \
    \ }\n        } else {\n            level += 1;\n        }\n    }\n    paren_stack",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    for paren\
    \ in paren_string.chars() {\n        if paren == '(' {\n            paren_depth\
    \ += 1;\n            paren_stack.push(paren_depth);\n        } else if paren ==\
    \ ')' {\n            paren_depth -= 1;\n            if paren_depth == 0 {\n  \
    \              paren_stack.push(paren_depth);\n            }\n        }\n    }\n\
    \    paren_stack", "    let mut paren_stack: Vec<isize> = vec![];\n    let mut\
    \ paren_level: isize = 0;\n    for paren in paren_string.chars() {\n        if\
    \ paren == ')' {\n            paren_stack.pop();\n            paren_level += 1;\n\
    \        } else if paren == '(' {\n            paren_stack.push(paren_level);\n\
    \        }\n    }\n    paren_stack", "    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n \
    \   let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_len:\
    \ isize = 0;\n    let mut paren_levels_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_len: isize = 0;\n    let mut paren_levels_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: isize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: isize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_",
  "    let mut level = 0;\n    let mut paren_stack = vec![];\n    let mut paren_stack_len\
    \ = paren_string.len();\n    let mut paren_stack_pos = 0;\n    let mut paren_stack_char:\
    \ char;\n    let mut paren_stack_char_len = 0;\n    let mut paren_stack_char_pos\
    \ = 0;\n    let mut paren_stack_char_next = 0;\n    let mut paren_stack_char_next_len\
    \ = 0;\n    let mut paren_stack_char_next_pos = 0;\n    let mut paren_stack_char_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_len = 0;\n    let mut paren_stack_char_next_next_pos\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut paren_stack_char_next_next_next\
    \ = 0;\n    let mut paren_stack_char_next_next_next = 0;\n    let mut ", "   \
    \ let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_depth = 0;\n    let mut paren_level_level\
    \ = 0;\n    let mut paren_level_level_depth = 0;\n    let mut paren_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level = 0;\n    let mut paren_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level = 0;\n    let mut\
    \ paren_level_level_level_level_level_level_level = 0;\n    let mut paren_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_", "    let\
    \ mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_level_stack = vec![];\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n    let\
    \ mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = vec![];\n    let mut paren_level_count_index = vec![];\n    let mut paren_level_count_index2\
    \ = vec![];\n    let mut paren_level_count_index3 = vec![];\n    let mut paren_level_count_index4\
    \ = vec![];\n    let mut paren_level_count_index5 = vec![];\n    let mut paren_level_count_index6\
    \ = vec![];\n    let mut paren_level_count_index7 = vec![];\n    let mut paren_level_count_index8\
    \ = vec![];\n    let mut paren_level_count_index9 = vec![];\n    let mut paren_level_count_index10\
    \ = vec![];\n    let mut paren_level_count_index11 = vec![];\n    let mut paren_level_count_index12\
    \ = vec![];\n    let mut paren_level_count_index13 = vec![];\n    let mut paren_level_count_index14\
    \ = vec![];\n    let mut paren_level_count_index15 = vec![];\n    let mut paren_level_count_index16\
    \ = vec![];\n    let mut paren_level_count_index17 = vec![];\n    let mut paren_level_count_index18\
    \ = vec![];\n    let mut paren_level_count_index19 = vec![];\n    let mut paren_level_count_index20\
    \ = vec![];\n    let mut paren_level_count_index21 = vec![];\n    let mut paren_level_count_index22\
    \ = vec![];\n    let mut paren_level_count_index23 = vec![];\n    let mut paren_level_count_index24\
    \ = vec![];\n    let mut paren_level_count_index25 = vec![];\n    let mut paren_level_count_index26\
    \ = vec![];\n    let mut paren_level_count_index27 = vec![];\n    let mut paren_level_count_index28\
    \ = vec![];\n    let mut paren_level_count_index29 = vec![];\n    let mut paren_level_count_index30\
    \ = vec![];\n    let mut paren_level_count_index31 = vec![];\n    let mut paren_level_count_index32\
    \ = vec![];\n    let mut paren_level_count_index33 = vec![];\n    let mut paren_level_count_index34\
    \ = vec![];\n    let mut paren_level_count_index35 = vec!", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n\
    \    let mut paren_level_string = \"\";\n    let mut paren_level_string_index\
    \ = 0;\n    let mut paren_level_string_len = 0;\n    let mut paren_level_string_len_index\
    \ = 0;\n    let mut paren_level_string_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let ", "    let mut\
    \ paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels =\
    \ Vec::new();\n    let mut paren_nestings = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_nestings_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr = paren_nestings_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_nestings_stack_ptr_end = paren_nestings_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr_end = paren_nestings_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_nestings_stack_ptr_end = paren_nestings_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr_end = paren_nestings_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_nestings_stack_ptr_end = paren_nestings_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr_end = paren_nestings_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_nestings_stack_ptr_end = paren_nestings_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr_end = paren_nestings_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_nestings_stack_ptr_end = paren_nestings_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr_end = paren_nestings_stack.len();\n\
    \    let mut ", "    let mut level = 0;\n    let mut paren_level = 0;\n    let\
    \ mut paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let\
    \ mut paren_level_chars = vec![];\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mu", "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_iter = paren_string.char_indices().filter_map(|i| {\n\
    \        if i.0.is_whitespace() {\n            None\n        } else {\n      \
    \      Some(paren_level += 1)\n        }\n    });\n    let mut paren_levels_iter\
    \ = paren_levels_iter.filter_map(|i| {\n        if i.0.is_whitespace() {\n   \
    \         None\n        } else {\n            Some(paren_level += 1)\n       \
    \ }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i|\
    \ {\n        if i.0.is_whitespace() {\n            None\n        } else {\n  \
    \          Some(paren_level += 1)\n        }\n    });\n    let mut paren_levels_iter\
    \ = paren_levels_iter.filter_map(|i| {\n        if i.0.is_whitespace() {\n   \
    \         None\n        } else {\n            Some(paren_level += 1)\n       \
    \ }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i|\
    \ {\n        if i.0.is_whitespace() {\n            None\n        } else {\n  \
    \          Some(paren_level += 1)\n        }\n    });\n    let mut paren_levels_iter\
    \ = paren_levels_iter.filter_map(|i| {\n        if i.0.is_whitespace() {\n   \
    \         None\n        } else {\n            Some(paren_level += 1)\n       \
    \ }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i|\
    \ {\n        if i.0.is_whitespace() {\n            None\n        } else {\n  \
    \          Some(paren_level += 1)\n        }\n    });\n    let mut paren_levels_iter\
    \ = paren_levels_iter.filter_map(|i| {\n        if i.0.is_whitespace() {\n   \
    \         None\n        } else {\n            Some(paren_level += 1)\n       \
    \ }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i|\
    \ {\n        if i.0.is_whitespace() {\n            None\n        } else {\n  \
    \          Some(paren_level += 1)\n        }\n    });\n    let mut paren_levels_iter\
    \ = paren_levels_iter.filter_map(|i| {\n        if i.0.is_whitespace() {\n   \
    \         None\n        } else {\n            Some(paren_level += 1)\n       \
    \ }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|i|\
    \ {\n        if i.0.is_whitespace() {\n            None\n        } else {\n  \
    \          Some(paren_level += 1)\n        }\n    });\n    let mut paren_levels_iter\
    \ = ", "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_end_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_", " \
    \   let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mu", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_string = paren_string;\n    while paren_level_count < paren_string.len()\
    \ {\n        let mut paren_level = paren_level + 1;\n        let mut paren_level_count\
    \ = 0;\n        while paren_level_count < paren_level_string.len() {\n       \
    \     if paren_level_count + paren_level > paren_string.len() {\n            \
    \    break;\n            }\n            if paren_level_string[paren_level_count]\
    \ == paren_string[paren_level_count + paren_level] {\n                paren_level_count\
    \ = paren_level_count + 1;\n            } else {\n                break;\n   \
    \         }\n        }\n        paren_levels.push(paren_level);\n        paren_level_string\
    \ = paren_string.split_off(paren_level_count);\n    }\n    paren_levels", "  \
    \  let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mu", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_char = 0;\n    let\
    \ mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.len();\n\
    \    let mut paren_level_char_len = paren_level_char_len.saturating_sub(1);\n\
    \    while paren_level_char_pos < paren_level_char_len {\n        paren_level_char\
    \ = paren_level_string[paren_level_char_pos];\n        paren_level_char_pos +=\
    \ 1;\n        if paren_level_char == ' ' {\n            paren_level_char_pos +=\
    \ 1;\n        }\n        if paren_level_char == '(' {\n            paren_level\
    \ += 1;\n            paren_levels.push(paren_level);\n            paren_level_index\
    \ += 1;\n            paren_level_char_pos = paren_level_char_len;\n        }\n\
    \        if paren_level_char == ')' {\n            paren_level -= 1;\n       \
    \     paren_levels.push(paren_level);\n            paren_level_index += 1;\n \
    \           paren_level_char_pos = paren_level_char_len;\n        }\n    }\n \
    \   paren_levels", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string_index = 0;\n    while paren_level_string_index\
    \ < paren_string.len() {\n        let mut paren_level_char = paren_level_string[paren_level_string_index];\n\
    \        if paren_level_char == ')' {\n            paren_level_string_index +=\
    \ 1;\n            paren_level_string = paren_string.clone();\n            paren_level_string_index\
    \ = 0;\n            paren_level_string[paren_level_string_index] = '(';\n    \
    \        paren_level_string[paren_level_string_index + 1] = ')';\n           \
    \ paren_level_string[paren_level_string_index + 2] = ' ';\n            paren_level_string[paren_level_string_index\
    \ + 3] = ')';\n            paren_level_string[paren_level_string_index + 4] =\
    \ ')';\n            paren_level_string[paren_level_string_index + 5] = ')';\n\
    \            paren_level_string[paren_level_string_index + 6] = ')';\n       \
    \     paren_level_string[paren_level_string_index + 7] = ')';\n            paren_level_string[paren_level_string_index\
    \ + 8] = ')';\n            paren_level_string[paren_level_string_index + 9] =\
    \ ')';\n            paren_level_string[paren_level_string_index + 10] = ')';\n\
    \            paren_level_string[paren_level_string_index + 11] = ')';\n      \
    \      paren_level_string[paren_level_string_index + 12] = ')';\n            paren_level_string[paren_level_string_index\
    \ + 13] = ')';\n            paren_level_string[paren_level_string_index + 14]\
    \ = ')';\n            paren_level_string[paren_level_string_index + 15] = ')';\n\
    \            paren_level_string[paren_level_string_index + 16] = ')';\n      \
    \      paren_level_string[paren_level_string_index + 17] = ')';\n            paren_level_string[paren_level_string_index\
    \ + 18] = ')';\n            paren_level_string[paren_level_string_index + 19]\
    \ = ')';\n            paren_level_string[paren_level_string_index + 20] = ')';\n\
    \            paren_level_string[paren_level_string_index + 21] = ')';\n      \
    \      paren_level_string[paren_level_string_index + 22] = ')';\n            paren_level_string",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_stack = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_len = Vec::new();\n   \
    \ let mut paren_levels_lens = Vec::new();\n    let mut paren_levels_lens_len =\
    \ Vec::new();\n    let mut paren_levels_lens_lens = Vec::new();\n    let mut paren_levels_lens_lens_len\
    \ = Vec::new();\n    let mut paren_levels_lens_lens_lens = Vec::new();\n    let\
    \ mut paren_levels_lens_lens_lens_len = Vec::new();\n    let mut paren_levels_lens_lens_lens_lens\
    \ = Vec::new();\n    let mut paren_levels_lens_lens_lens_lens_len = Vec::new();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens = Vec::new();\n    let mut\
    \ paren_levels_lens_lens_lens_lens_lens_len = Vec::new();\n    let mut paren_levels_lens_lens_lens_lens_lens_lens\
    \ = Vec::new();\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len =\
    \ Vec::new();\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens = Vec::new();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len = Vec::new();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = Vec::new();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = Vec::new();\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = Vec::new();\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = Vec::new();\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len",
  "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren", "    let mut level = 0;\n    let mut paren_stack = Vec::new();\n\
    \    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_char = paren_string[paren_stack_pos];\n    while\
    \ paren_stack_pos < paren_string.len() {\n        if paren_stack_char == ')' {\n\
    \            paren_stack.pop();\n            paren_stack_len -= paren_stack.len();\n\
    \            paren_stack_pos += 1;\n            level -= 1;\n        }\n     \
    \   if paren_stack_char == '(' {\n            paren_stack.push(level);\n     \
    \       paren_stack_len += 1;\n            paren_stack_pos += 1;\n           \
    \ level += 1;\n        }\n        paren_stack_char = paren_string[paren_stack_pos];\n\
    \    }\n    paren_stack", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = 0;\n    let mut paren_levels_ptr = paren_levels_stack.as_mut_ptr();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_", "    let mut paren_stack = Vec::new();\n    let mut paren_depth\
    \ = 0;\n    let mut paren_level = 0;\n    let mut paren_level_count = Vec::new();\n\
    \    let mut paren_level_count_stack = Vec::new();\n    let mut paren_level_count_stack_ptr\
    \ = Vec::new();\n    let mut paren_level_count_stack_ptr_ptr = Vec::new();\n \
    \   let mut paren_level_count_stack_ptr_ptr_ptr = Vec::new();\n    let mut paren_level_count_stack_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n \
    \   let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_level_count_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let ", "    let mut paren_levels = vec![0];\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mu", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_nestings = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_nestings_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_nestings_stack_ptr = 0;\n    let mut paren_levels_ptr\
    \ = 0;\n    let mut paren_nestings_ptr = 0;\n    let mut paren_levels_ptr_next\
    \ = 0;\n    let mut paren_nestings_ptr_next = 0;\n    let mut paren_levels_ptr_next2\
    \ = 0;\n    let mut paren_nestings_ptr_next2 = 0;\n    let mut paren_levels_ptr_next3\
    \ = 0;\n    let mut paren_nestings_ptr_next3 = 0;\n    let mut paren_levels_ptr_next4\
    \ = 0;\n    let mut paren_nestings_ptr_next4 = 0;\n    let mut paren_levels_ptr_next5\
    \ = 0;\n    let mut paren_nestings_ptr_next5 = 0;\n    let mut paren_levels_ptr_next6\
    \ = 0;\n    let mut paren_nestings_ptr_next6 = 0;\n    let mut paren_levels_ptr_next7\
    \ = 0;\n    let mut paren_nestings_ptr_next7 = 0;\n    let mut paren_levels_ptr_next8\
    \ = 0;\n    let mut paren_nestings_ptr_next8 = 0;\n    let mut paren_levels_ptr_next9\
    \ = 0;\n    let mut paren_nestings_ptr_next9 = 0;\n    let mut paren_levels_ptr_next10\
    \ = 0;\n    let mut paren_nestings_ptr_next10 = 0;\n    let mut paren_levels_ptr_next11\
    \ = 0;\n    let mut paren_nestings_ptr_next11 = 0;\n    let mut paren_levels_ptr_next12\
    \ = 0;\n    let mut paren_nestings_ptr_next12 = 0;\n    let mut paren_levels_ptr_next13\
    \ = 0;\n    let mut paren_nestings_ptr_next13 = 0;\n    let mut paren_levels_ptr_next14\
    \ = 0;\n    let mut paren_nestings_ptr_next14 = 0;\n    let mut paren_levels_ptr_next15\
    \ = 0;\n    let mut paren_nestings_ptr_next15", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_char_index = 0;\n    let mut paren_level_char_length\
    \ = 0;\n    let mut paren_level_char_length_index = 0;\n    let mut paren_level_char_length_count\
    \ = 0;\n    let mut paren_level_char_length_char_count = 0;\n    let mut paren_level_char_length_char:\
    \ char;\n    let mut paren_level_char_length_char_index = 0;\n    let mut paren_level_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_index = 0;\n    let mut\
    \ paren_level_char_length_char_length_count = 0;\n    let mut paren_level_char_length_char_length_char_count\
    \ = 0;\n    let mut paren_level_char_length_char_length_char: char;\n    let mut\
    \ paren_level_char_length_char_length_char_index = 0;\n    let mut paren_level_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_index = 0;\n\
    \    let mut paren_level_char_length_char_length_char_length_count = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_char_count = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_char: char;\n    let mut\
    \ paren_level_char_length_char_length_char_length_char_index = 0;\n    let mut\
    \ paren_level_char_length_char_length_char_length_char_length = 0;\n    let mut\
    \ paren_level_char_length_char_length_char_length_char_length_index = 0;\n   \
    \ let mut paren_level_char_length_char_length_char_length_char_length_count =\
    \ 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_count\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char:\
    \ char;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_count\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_count\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_ptr_pos = 0;\n    let mut paren_levels_stack_ptr_len\
    \ = paren_levels_stack_ptr.len();\n    let mut paren_levels_stack_ptr_ptr = paren_levels_stack_ptr_len;\n\
    \    let mut paren_levels_stack_ptr_ptr_pos = 0;\n    let mut paren_levels_stack_ptr_ptr_len\
    \ = paren_levels_stack_ptr_ptr.len();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_ptr_len;\n    let mut paren_levels_stack_ptr_ptr_ptr_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_len = paren_levels_stack_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_len;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_pos = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_len\
    \ = paren_levels_stack_ptr_ptr_ptr_ptr.len();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_ptr_ptr_ptr_len;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_len = paren_levels_stack_ptr_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_pos = 0;\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_len = paren_levels_stack_ptr_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_pos = 0;\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_len = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_pos = 0;\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_len = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_size\
    \ = Vec::new();\n    let mut paren_levels_size_ptr = Vec::new();\n    let mut\
    \ paren_levels_size_cur = Vec::new();\n    let mut paren_levels_size_next = Vec::new();\n\
    \    let mut paren_levels_size_prev = Vec::new();\n    let mut paren_levels_size_next\
    \ = Vec::new();\n    let mut paren_levels_size_prev = Vec::new();\n    let mut\
    \ paren_levels_size_next = Vec::new();\n    let mut paren_levels_size_prev = Vec::new();\n\
    \    let mut paren_levels_size_next = Vec::new();\n    let mut paren_levels_size_prev\
    \ = Vec::new();\n    let mut paren_levels_size_next = Vec::new();\n    let mut\
    \ paren_levels_size_prev = Vec::new();\n    let mut paren_levels_size_next = Vec::new();\n\
    \    let mut paren_levels_size_prev = Vec::new();\n    let mut paren_levels_size_next\
    \ = Vec::new();\n    let mut paren_levels_size_prev = Vec::new();\n    let mut\
    \ paren_levels_size_next = Vec::new();\n    let mut paren_levels_size_prev = Vec::new();\n\
    \    let mut paren_levels_size_next = Vec::new();\n    let mut paren_levels_size_prev\
    \ = Vec::new();\n    let mut paren_levels_size_next = Vec::new();\n    let mut\
    \ paren_levels_size_prev = Vec::new();\n    let mut paren_levels_size_next = Vec::new();\n\
    \    let mut paren_levels_size_prev = Vec::new();\n    let mut paren_levels_size_next\
    \ = Vec::new();\n    let mut paren_levels_size_prev = Vec::new();\n    let mut\
    \ paren_levels_size_next = Vec::new();\n    let mut paren_levels_size_prev = Vec::new();\n\
    \    let mut paren_levels_size_next = Vec::new();\n    let mut paren_levels_size_prev\
    \ = Vec::new();\n    let mut paren_levels_size_next = Vec::new();\n    let mut\
    \ paren_levels_size_prev = Vec::new();\n    let mut paren_levels_size_next = Vec",
  "    let mut paren_stack = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = vec![];\n    let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_ptr\
    \ = paren_stack.as_ptr();\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_len);\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_char_count_index\
    \ = 0;\n    let mut paren_level_char_count_index2 = 0;\n    let mut paren_level_char_count_index3\
    \ = 0;\n    let mut paren_level_char_count_index4 = 0;\n    let mut paren_level_char_count_index5\
    \ = 0;\n    let mut paren_level_char_count_index6 = 0;\n    let mut paren_level_char_count_index7\
    \ = 0;\n    let mut paren_level_char_count_index8 = 0;\n    let mut paren_level_char_count_index9\
    \ = 0;\n    let mut paren_level_char_count_index10 = 0;\n    let mut paren_level_char_count_index11\
    \ = 0;\n    let mut paren_level_char_count_index12 = 0;\n    let mut paren_level_char_count_index13\
    \ = 0;\n    let mut paren_level_char_count_index14 = 0;\n    let mut paren_level_char_count_index15\
    \ = 0;\n    let mut paren_level_char_count_index16 = 0;\n    let mut paren_level_char_count_index17\
    \ = 0;\n    let mut paren_level_char_count_index18 = 0;\n    let mut paren_level_char_count_index19\
    \ = 0;\n    let mut paren_level_char_count_index20 = 0;\n    let mut paren_level_char_count_index21\
    \ = 0;\n    let mut paren_level_char_count_index22 = 0;\n    let mut paren_level_char_count_index23\
    \ = 0;\n    let mut paren_level_char_count_index24 = 0;\n    let mut paren_level_char_count_index25\
    \ = 0;\n    let mut paren_level_char_count_index26 = 0;\n    let mut paren_level_char_count_index27\
    \ = 0;\n    let mut paren_level_char_count_index28 = 0;\n    let mut paren_level_char_count_index29\
    \ = 0;\n    let mut paren_level_char_count_index30 = 0;\n    let mut paren_level_char_count_index31\
    \ = 0;\n    let mut paren_level_char_count_index32 = 0;\n    let mut paren_level_char_count_index33\
    \ = 0;\n    let mut paren_level_char_count_index34 = 0;\n    let mut paren_level_char_count_index35\
    \ = 0;\n    let mut paren_level_char_count_index36 = 0;\n    let mut paren_level_char_count_index37\
    \ = 0;\n    let mut paren_level_char_count_index38 = 0;\n    let mut paren_level_char_count_index39\
    \ = 0;\n    let mut paren_level_char_count_index40", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_chars = vec![];\n\
    \    let mut paren_level_char = 0;\n    let mut paren_level_char_pos = 0;\n  \
    \  let mut paren_level_char_len = paren_level_char.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let ", "    let mut paren_level =\
    \ 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack =\
    \ Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_size\
    \ = paren_stack.len();\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut paren_levels_pos = 0;\n    let mut paren_levels_len\
    \ = paren_levels_size;\n    let mut ", "    let mut paren_stack = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_max = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_index\
    \ = 0;", "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_ptr = paren_levels_stack.as_mut_slice();\n  \
    \  let mut paren_levels_ptr_end = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.end();\n    let mut paren_levels_ptr_end = paren_levels_ptr.end();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren", " \
    \   let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len()\
    \ - 1;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let\
    \ mut paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len()\
    \ - 1;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let\
    \ mut paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len()\
    \ - 1;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let\
    \ mut paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len() - 1;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len()\
    \ - 1;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let\
    \ mut paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len() - 1;\n    let mu", " \
    \   let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n\
    \    for paren in paren_string.chars() {\n        if paren == '(' {\n        \
    \    paren_stack.push(paren_level);\n            paren_level += 1;\n        }\
    \ else if paren == ')' {\n            paren_level -= 1;\n            if paren_level\
    \ == 0 {\n                paren_stack.push(paren_level);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_stack: Vec<isize> = vec![];\n\
    \    let mut paren_level: isize = 0;\n    let mut paren_level_count: usize = 0;\n\
    \    let mut paren_level_max_count: usize = 0;\n    let mut paren_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_count: usize = 0;\n    let mut\
    \ paren_level_max_level_max_count: usize = 0;\n    let mut paren_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_count: usize = 0;\n\
    \    let mut paren_level_max_level_max_level_max_level: usize = 0;\n    let mut\
    \ paren_level_max_level_max_level_max_level_count: usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_", " \
    \   let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n   \
    \ let mut paren_level_string = paren_string;\n    let mut paren_level_string =\
    \ paren_string;\n    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren", "    let mut paren_levels = vec![];\n \
    \   let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_char_pos = 0;\n    let\
    \ mut paren_level_char_pos_count = 0;\n    let mut paren_level_char_pos_count_max\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index = 0;\n    let mut paren_level_char_pos_count_max_index2\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index3 = 0;\n    let mut paren_level_char_pos_count_max_index4\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index5 = 0;\n    let mut paren_level_char_pos_count_max_index6\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index7 = 0;\n    let mut paren_level_char_pos_count_max_index8\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index9 = 0;\n    let mut paren_level_char_pos_count_max_index10\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index11 = 0;\n    let mut paren_level_char_pos_count_max_index12\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index13 = 0;\n    let mut paren_level_char_pos_count_max_index14\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index15 = 0;\n    let mut paren_level_char_pos_count_max_index16\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index17 = 0;\n    let mut paren_level_char_pos_count_max_index18\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index19 = 0;\n    let mut paren_level_char_pos_count_max_index20\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index21 = 0;\n    let mut paren_level_char_pos_count_max_index22\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index23 = 0;\n    let mut paren_level_char_pos_count_max_index24\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index25 = 0;\n    let mut paren_level_char_pos_count_max_index26\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index27 = 0;\n    let mut paren_level_char_pos_count_max_index28\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index29 = 0;\n    let mut paren_level_char_pos_count_max_index30\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index31 = 0;\n    let mut paren_level_char_pos_count_max_index32\
    \ = 0;", "    let mut paren_stack = vec![];\n    let mut paren_depth = 0;\n  \
    \  let mut paren_level = 0;\n    let mut paren_levels = vec![];\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();", "    let mut paren_levels = vec![0];\n    let mut paren_levels_stack\
    \ = vec![0];\n    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_ptr\
    \ = 0;\n    let mut paren_levels_ptr_next = 0;\n    let mut paren_levels_ptr_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next = 0;\n    let mut paren_levels_ptr_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next = 0;\n    let mut\
    \ paren_levels_ptr_next_next_next_next_next_next = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next =\
    \ 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next = 0;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next = 0;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_", " \
    \   let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_index = 0;\n    let mut paren_level_chars = vec![0];\n    let mut\
    \ paren_level_char_index = 0;\n    let mut paren_level_char_count = 0;\n    let\
    \ mut paren_level_chars = paren_string.chars();\n    while paren_level_char_index\
    \ < paren_level_chars.len() {\n        let paren_level_char = paren_level_chars[paren_level_char_index];\n\
    \        if paren_level_char == '(' {\n            paren_level += 1;\n       \
    \     paren_levels[paren_level_index] = paren_level;\n            paren_level_char_index\
    \ += 1;\n            paren_level_char_count += 1;\n        } else if paren_level_char\
    \ == ')' {\n            paren_level -= 1;\n            paren_levels[paren_level_index]\
    \ = paren_level;\n            paren_level_char_index += 1;\n            paren_level_char_count\
    \ += 1;\n        } else {\n            paren_level_char_index += 1;\n        \
    \    paren_level_char_count += 1;\n        }\n        paren_level_index += 1;\n\
    \    }\n    paren_levels", "    let mut paren_stack: Vec<isize> = vec![];\n  \
    \  let mut paren_level: usize = 0;\n    for paren in paren_string.chars() {\n\
    \        if paren == '(' {\n            paren_stack.push(paren_level);\n     \
    \       paren_level += 1;\n        } else if paren == ')' {\n            paren_level\
    \ -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_chars = vec![0];\n\
    \    let mut paren_level_char = 0;\n    let mut paren_level_char_pos = 0;\n  \
    \  let mut paren_level_char_len = paren_level_char.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let ", "    let mut paren_level =\
    \ 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n \
    \   let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = &mut paren_levels_stack;\n    let mut paren_levels_stack_ptr_ptr\
    \ = &mut paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr =\
    \ &mut paren_levels_stack_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_stack_ptr_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_stack_ptr_ptr_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ &mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n \
    \   let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr", "    let mut level = 0;\n\
    \    let mut paren_stack = vec![];\n    let mut paren_stack_len = paren_string.len();\n\
    \    let mut paren_stack_pos = 0;\n    let mut paren_stack_char = paren_string[paren_stack_pos];\n\
    \    while paren_stack_pos < paren_string.len() {\n        if paren_stack_char\
    \ == ')' {\n            paren_stack.pop();\n            paren_stack_len -= paren_stack.len();\n\
    \            if paren_stack.len() == 0 {\n                level += 1;\n      \
    \      }\n        }\n        if paren_stack_char == '(' {\n            paren_stack.push(paren_stack_pos);\n\
    \            paren_stack_len += 1;\n        }\n        paren_stack_pos += 1;\n\
    \        paren_stack_char = paren_string[paren_stack_pos];\n    }\n    level",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_len:\
    \ usize = 0;\n    let mut paren_levels_lens: Vec<usize> = vec![];\n    let mut\
    \ paren_levels_lens_len: usize = 0;\n    let mut paren_levels_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: usize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<usize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let ", " \
    \   let mut level = 0;\n    let mut paren_stack = vec![];\n    let mut paren_stack_len\
    \ = paren_string.len();\n    let mut paren_stack_pos = 0;\n    let mut paren_stack_char\
    \ = paren_string[paren_stack_pos];\n    while paren_stack_pos < paren_string.len()\
    \ {\n        if paren_stack_char == ')' {\n            paren_stack_len -= 1;\n\
    \            paren_stack_pos += 1;\n            paren_stack_char = paren_string[paren_stack_pos];\n\
    \        } else if paren_stack_char == '(' {\n            paren_stack.push(level);\n\
    \            level += 1;\n            paren_stack_pos += 1;\n            paren_stack_char\
    \ = paren_string[paren_stack_pos];\n        } else {\n            paren_stack_len\
    \ -= 1;\n            paren_stack_pos += 1;\n            paren_stack_char = paren_string[paren_stack_pos];\n\
    \        }\n    }\n    paren_stack", "    let mut paren_stack = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_ptr = paren_levels.as_ptr();\n\
    \    let mut paren_levels_ptr_len = paren_levels_ptr.len();\n    let mut paren_levels_ptr_cur\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end = paren_levels_ptr + paren_levels_ptr_len;\n\
    \    let mut paren_levels_ptr_cur = paren_levels_ptr;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr + paren_levels_ptr_len;\n    let mut paren_levels_ptr_cur\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end = paren_levels_ptr + paren_levels_ptr_len;\n\
    \    let mut paren_levels_ptr_cur = paren_levels_ptr;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr + paren_levels_ptr_len;\n    let mut paren_levels_ptr_cur\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end = paren_levels_ptr + paren_levels_ptr_len;\n\
    \    let mut paren_levels_ptr_cur = paren_levels_ptr;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr + paren_levels_ptr_len;\n    let mut paren_levels_ptr_cur\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end = paren_levels_ptr + paren_levels_ptr_len;\n\
    \    let mut paren_levels_ptr_cur = paren_levels_ptr;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr + paren_levels_ptr_len;\n    let mut paren_levels_ptr_cur\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end = paren_levels_ptr + paren_levels_ptr_len;\n\
    \    let mut paren_levels_ptr_cur = paren_levels_ptr;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr + paren_levels_ptr_len;\n    let mut paren_levels_ptr_cur\
    \ = ", "    let mut level = 0;\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_max = 0;\n    let mut paren_level_max_count =\
    \ 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_index = 0;\n    let mut paren_", "    let\
    \ mut paren_level = 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let\
    \ mut paren_levels_stack: Vec<isize> = vec![];\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_bottom: isize = 0;\n", "    let mut\
    \ paren_levels = vec![0];\n    let mut paren_levels_stack = vec![0];\n    let\
    \ mut paren_levels_stack_size = vec![0];\n    let mut paren_levels_stack_ptr =\
    \ vec![0];\n    let mut paren_levels_stack_ptr_ptr = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = vec![0];\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n \
    \   let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren", "    let mut paren_levels = vec![];\n    let\
    \ mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_char_count_in_paren = 0;\n    let mut paren_level_char_count_in_paren_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group = 0;\n    let\
    \ mut paren_level_char_count_in_paren_group_group_group = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0;\n    let mut paren_level_char_count_in_paren_group_group_group_group_group_group_group_group_group_group_group_group_group_group\
    \ = 0;\n", "    let mut level = 0;\n    let mut paren_stack = vec![];\n    for\
    \ paren in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(level);\n\
    \            level += 1;\n        } else if paren == ')' {\n            level\
    \ -= 1;\n            if level == 0 {\n                paren_stack.pop();\n   \
    \         }\n        } else {\n            level += 1;\n        }\n    }\n   \
    \ paren_stack", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos = 0;\n    let mut paren_levels_stack_pos_pos_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos_pos_bottom =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_pos_pos_pos = 0;\n\
    \    let mut paren_levels_stack_pos_pos_pos_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_pos_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_pos_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_pos_pos_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_pos_pos_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_pos_pos_pos_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_pos_pos_pos_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_pos_pos_pos_pos_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_pos_pos_pos_pos_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_pos_pos_pos_pos_pos_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_pos_pos_pos_pos_pos_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_pos_pos_pos_pos_pos_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos_pos_pos_pos_pos_pos_pos_pos_pos_bottom = paren_levels_stack.len();\n\
    \    let mut paren_", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_string = \"\
    \";\n    let mut paren_level_char = 0;\n    let mut paren_level_char_next = 0;\n\
    \    let mut paren_level_char_next_next = 0;\n    let mut paren_level_char_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next = 0;\n    let mut paren_level_char_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next = 0;\n    let\
    \ mut paren_level_char_next_next_next_next_next_next_next = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let ", "    let mut paren_stack: Vec<isize> = vec![];\n    let mut\
    \ paren_level: isize = 0;\n    let mut paren_levels: Vec<isize> = vec![];\n  \
    \  let mut paren_levels_len: usize = 0;\n    let mut paren_levels_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_len: usize = 0;\n    let mut paren_levels_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_len: usize = 0;\n \
    \   let mut paren_levels_lens_lens_lens: Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens: Vec<usize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_", "    let mut\
    \ paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_level_char = 0;\n    let mut paren_level_char_next =\
    \ 0;\n    let mut paren_level_char_next_index = 0;\n    let mut paren_level_char_next_index2\
    \ = 0;\n    let mut paren_level_char_next_index3 = 0;\n    let mut paren_level_char_next_index4\
    \ = 0;\n    let mut paren_level_char_next_index5 = 0;\n    let mut paren_level_char_next_index6\
    \ = 0;\n    let mut paren_level_char_next_index7 = 0;\n    let mut paren_level_char_next_index8\
    \ = 0;\n    let mut paren_level_char_next_index9 = 0;\n    let mut paren_level_char_next_index10\
    \ = 0;\n    let mut paren_level_char_next_index11 = 0;\n    let mut paren_level_char_next_index12\
    \ = 0;\n    let mut paren_level_char_next_index13 = 0;\n    let mut paren_level_char_next_index14\
    \ = 0;\n    let mut paren_level_char_next_index15 = 0;\n    let mut paren_level_char_next_index16\
    \ = 0;\n    let mut paren_level_char_next_index17 = 0;\n    let mut paren_level_char_next_index18\
    \ = 0;\n    let mut paren_level_char_next_index19 = 0;\n    let mut paren_level_char_next_index20\
    \ = 0;\n    let mut paren_level_char_next_index21 = 0;\n    let mut paren_level_char_next_index22\
    \ = 0;\n    let mut paren_level_char_next_index23 = 0;\n    let mut paren_level_char_next_index24\
    \ = 0;\n    let mut paren_level_char_next_index25 = 0;\n    let mut paren_level_char_next_index26\
    \ = 0;\n    let mut paren_level_char_next_index27 = 0;\n    let mut paren_level_char_next_index28\
    \ = 0;\n    let mut paren_level_char_next_index29 = 0;\n    let mut paren_level_char_next_index30\
    \ = 0;\n    let mut paren_level_char_next_index31 = 0;\n    let mut paren_level_char_next_index32\
    \ = 0;\n    let mut paren_level_char_next_index33 = 0;\n    let mut paren_level_char_next_index34\
    \ = 0;\n    let mut paren_level_char_next_index35 = 0;\n    let mut paren_level_char_next_index36\
    \ = 0;\n    let mut paren_level_char_next_index37 = 0;\n    let mut paren_level_char_next_index38\
    \ = 0;\n    let mut paren_level_char_next_index39 = 0;\n    let mu", "    let\
    \ mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut paren_levels_iter\
    \ = paren_string.char_indices().rev();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = String::new();\n    let mut paren_level_chars_len\
    \ = paren_level_chars.len();\n    let mut paren_level_chars_pos = 0;\n    let\
    \ mut paren_level_chars_end = paren_level_chars_len;\n    let mut paren_level_chars_start\
    \ = paren_level_chars_len;\n    let mut paren_level_chars_end_pos = 0;\n    let\
    \ mut paren_level_chars_start_pos = 0;\n    let mut paren_level_chars_end_pos_end\
    \ = paren_level_chars_len;\n    let mut paren_level_chars_start_pos_end = paren_level_chars_len;\n\
    \    let mut paren_level_chars_start_pos_start = paren_level_chars_len;\n    let\
    \ mut paren_level_chars_start_pos_end = paren_level_chars_len;\n    let mut paren_level_chars_end_pos_start\
    \ = paren_level_chars_len;\n    let mut paren_level_chars_end_pos_start = paren_level_chars_len;\n\
    \    let mut paren_level_chars_end_pos_end = paren_level_chars_len;\n    let mut\
    \ paren_level_chars_end_pos_start = paren_level_chars_len;\n    let mut paren_level_chars_end_pos_end\
    \ = paren_level_chars_len;\n    let mut paren_level_chars_end_pos_start = paren_level_chars_len;\n\
    \    let mut paren_level_chars_end_pos_end = paren_level_chars_len;\n    let mut\
    \ paren_level_chars_end_pos_start = paren_level_chars_len;\n    let mut paren_level_chars_end_pos_end\
    \ = paren_level_chars_len;\n    let mut paren_level_chars_end_pos_start = paren_level_chars_len;\n\
    \    let mut paren_level_chars_end_pos_end = paren_level_chars_len;\n    let mut\
    \ paren_level_chars_end_pos_start = paren_level_chars_len;\n    let mut paren_level_chars_end_pos_end\
    \ = paren_level_chars_len;\n    let mut paren_level_chars_end_pos_start = paren_level_chars_len;\n\
    \    let mut paren_level_chars_end_pos_end = paren_level_chars_len;\n    let mut\
    \ paren_level_chars_end_pos_start = paren_level_chars_len;\n    let mut paren_level_chars_end_pos_end\
    \ = paren_level_chars_len;\n    let mut paren_level_chars_end_pos_start = paren_level_chars_len;\n\
    \    let mut paren_level_chars_end_pos_end = paren_level_chars_len;\n    let mut\
    \ paren_level_chars_end_pos_start = paren_level_chars_len;\n", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    while paren_level_count < paren_level {\n        let mut\
    \ paren_level_string = paren_string;\n        let mut paren_level_string = paren_string;\n\
    \        while paren_level_count < paren_level {\n            let mut paren_level_string\
    \ = paren_string;\n            let mut paren_level_string = paren_string;\n  \
    \          while paren_level_count < paren_level {\n                let mut paren_level_string\
    \ = paren_string;\n                let mut paren_level_string = paren_string;\n\
    \                while paren_level_count < paren_level {\n                   \
    \ let mut paren_level_string = paren_string;\n                    let mut paren_level_string\
    \ = paren_string;\n                    while paren_level_count < paren_level {\n\
    \                        let mut paren_level_string = paren_string;\n        \
    \                let mut paren_level_string = paren_string;\n                \
    \        while paren_level_count < paren_level {\n                           \
    \ let mut paren_level_string = paren_string;\n                            let\
    \ mut paren_level_string = paren_string;\n                            while paren_level_count\
    \ < paren_level {\n                                let mut paren_level_string\
    \ = paren_string;\n                                let mut paren_level_string\
    \ = paren_string;\n                                while paren_level_count < paren_level\
    \ {\n                                    let mut paren_level_string = paren_string;\n\
    \                                    let mut paren_level_string = paren_string;\n\
    \                                    while paren_level_count < paren_level {\n\
    \                                        let mut paren_level_string = paren_string;\n\
    \                                        let mut paren_level_string = paren_string;\n\
    \                                        while paren_level_count < paren_level\
    \ {\n                                            let mut paren_level_string =\
    \ paren_string;\n                                            let mut paren_level_string\
    \ = paren_string;\n                                            while paren_level_count\
    \ < paren_level {\n                                                let mut paren_level_string\
    \ = paren_string;\n                                                let mut paren_level_string\
    \ = paren_string;\n                                            }\n           \
    \                             }\n                                    }\n     \
    \                           }\n                            }\n               \
    \         }\n                    }\n                }\n            }\n       \
    \ }\n        paren_level_count = paren_level;\n        paren_level += 1;\n   \
    \ }\n    paren_levels\n", "    let mut level = 0;\n    let mut paren_levels =\
    \ Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_end_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_", " \
    \   let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n\
    \    for paren in paren_string.chars() {\n        if paren == '(' {\n        \
    \    paren_stack.push(paren_level);\n            paren_level += 1;\n        }\
    \ else if paren == ')' {\n            paren_level -= 1;\n            if paren_level\
    \ == 0 {\n                paren_stack.push(paren_level);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_levels = Vec::new();\n   \
    \ let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n   \
    \ let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_last_ptr = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_last_ptr_prev = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_last_ptr_next = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_next_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_last_ptr_next_next_next_next_next_next_next_next_next_next_prev\
    \ = paren_level", "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_nesting_levels\
    \ = Vec::new();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_nesting_levels_iter = paren_string.char_indices();\n    let\
    \ mut paren_levels_end = paren_levels_iter.next();\n    let mut paren_nesting_levels_end\
    \ = paren_nesting_levels_iter.next();\n    let mut paren_levels_end_index = paren_levels_end.unwrap();\n\
    \    let mut paren_nesting_levels_end_index = paren_nesting_levels_end.unwrap();\n\
    \    let mut paren_levels_end_chars = paren_levels_end.unwrap();\n    let mut\
    \ paren_nesting_levels_end_chars = paren_nesting_levels_end.unwrap();\n    let\
    \ mut paren_levels_end_chars_index = paren_levels_end_chars.unwrap();\n    let\
    \ mut paren_nesting_levels_end_chars_index = paren_nesting_levels_end_chars.unwrap();\n\
    \    let mut paren_levels_end_chars_value = paren_levels_end_chars_index as char;\n\
    \    let mut paren_nesting_levels_end_chars_value = paren_nesting_levels_end_chars_index\
    \ as char;\n    let mut paren_levels_end_chars_value_index = paren_levels_end_chars_value\
    \ as usize;\n    let mut paren_nesting_levels_end_chars_value_index = paren_nesting_levels_end_chars_value\
    \ as usize;\n    let mut paren_levels_end_chars_value_value = paren_levels_end_chars_value_index\
    \ as usize;\n    let mut paren_nesting_levels_end_chars_value_value = paren_nesting_levels_end_chars_value_index\
    \ as usize;\n    let mut paren_levels_end_chars_value_value_index = paren_levels_end_chars_value_value\
    \ as usize;\n    let mut paren_nesting_levels_end_chars_value_value_index = paren_nesting_levels_end_chars_value_value\
    \ as usize;\n    let mut paren_levels_end_chars_value_value_value = paren_levels_end_chars_value_value_index\
    \ as usize;\n    let mut paren_nesting_levels_end_chars_value_value_value = paren_nesting_levels_end_chars_value_value_index\
    \ as usize;\n    let mut paren_levels_end_chars_value_value_value_index = paren_levels_end_chars_value_value_value\
    \ as usize;\n    let mut paren_nesting_levels_end_", "    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_chars = paren_string.chars();\n\
    \    let mut paren_level_chars_iter = paren_level_chars.iter();\n    let mut paren_level_chars_iter\
    \ = paren_level_chars.iter();\n    let mut paren_level_chars_iter = paren_level_chars.iter();\n\
    \    let mut paren_level_chars_iter = paren_level_chars.iter();\n    let mut paren_level_chars_iter\
    \ = paren_level_chars.iter();\n    let mut paren_level_chars_iter = paren_level_chars.iter();\n\
    \    let mut paren_level_chars_iter = paren_level_chars.iter();\n    let mut paren_level_chars_iter\
    \ = paren_level_chars.iter();\n    let mut paren_level_chars_iter = paren_level_chars.iter();\n\
    \    let mut paren_level_chars_iter = paren_level_chars.iter();\n    let mut paren_level_chars_iter\
    \ = paren_level_chars.iter();\n    let mut paren_level_chars_iter = paren_level_chars.iter();\n\
    \    let mut paren_level_chars_iter = paren_level_chars.iter();\n    let mut paren_level_chars_iter\
    \ = paren_level_chars.iter();\n    let mut paren_level_chars_iter = paren_level_chars.iter();\n\
    \    let mut paren_level_chars_iter = paren_level_chars.iter();\n    let mut paren_level_chars_iter\
    \ = paren_level_chars.iter();\n    let mut paren_level_chars_iter = paren_level_chars.iter();\n\
    \    let mut paren_level_chars_iter = paren_level_chars.iter();\n    let mut paren_level_chars_iter\
    \ = paren_level_chars.iter();\n    let mut paren_level_chars_iter = paren_level_chars.iter();\n\
    \    let mut paren_level_chars_iter = paren_level_chars.iter();\n    let mut paren_level_chars_iter\
    \ = paren_level_chars.iter();\n    let mut paren_level_chars_iter = paren_level_chars.iter();\n\
    \    let mut paren_level_chars_iter = paren_level_chars.iter();\n    let mut paren_level_chars_iter\
    \ = paren_level_chars.iter();\n    let mut paren_level_chars_iter = paren_level_chars.iter();\n\
    \    let mut paren_level_chars_iter = paren", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let\
    \ mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_level_stack = vec![0];\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_size = paren_level_stack.len();\n    let\
    \ mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n   \
    \ let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mu", "    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr", "    let\
    \ mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_len = 0;\n    let mut paren_levels_len2 = 0;\n    let\
    \ mut paren_levels_len3 = 0;\n    let mut paren_levels_len4 = 0;\n    let mut\
    \ paren_levels_len5 = 0;\n    let mut paren_levels_len6 = 0;\n    let mut paren_levels_len7\
    \ = 0;\n    let mut paren_levels_len8 = 0;\n    let mut paren_levels_len9 = 0;\n\
    \    let mut paren_levels_len10 = 0;\n    let mut paren_levels_len11 = 0;\n  \
    \  let mut paren_levels_len12 = 0;\n    let mut paren_levels_len13 = 0;\n    let\
    \ mut paren_levels_len14 = 0;\n    let mut paren_levels_len15 = 0;\n    let mut\
    \ paren_levels_len16 = 0;\n    let mut paren_levels_len17 = 0;\n    let mut paren_levels_len18\
    \ = 0;\n    let mut paren_levels_len19 = 0;\n    let mut paren_levels_len20 =\
    \ 0;\n    let mut paren_levels_len21 = 0;\n    let mut paren_levels_len22 = 0;\n\
    \    let mut paren_levels_len23 = 0;\n    let mut paren_levels_len24 = 0;\n  \
    \  let mut paren_levels_len25 = 0;\n    let mut paren_levels_len26 = 0;\n    let\
    \ mut paren_levels_len27 = 0;\n    let mut paren_levels_len28 = 0;\n    let mut\
    \ paren_levels_len29 = 0;\n    let mut paren_levels_len30 = 0;\n    let mut paren_levels_len31\
    \ = 0;\n    let mut paren_levels_len32 = 0;\n    let mut paren_levels_len33 =\
    \ 0;\n    let mut paren_levels_len34 = 0;\n    let mut paren_levels_len35 = 0;\n\
    \    let mut paren_levels_len36 = 0;\n    let mut paren_levels_len37 = 0;\n  \
    \  let mut paren_levels_len38 = 0;\n    let mut paren_levels_len39 = 0;\n    let\
    \ mut paren_levels_len40 = 0;\n    let mut paren_levels_len41 = 1;\n    let mut\
    \ paren_levels_len42 = 1;\n    let mut paren_level", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n \
    \   for paren in paren_string.chars() {\n        if paren == '(' {\n         \
    \   paren_stack.push(paren_level);\n            paren_level += 1;\n        } else\
    \ if paren == ')' {\n            paren_level -= 1;\n            if paren_level\
    \ == 0 {\n                paren_stack.push(paren_level);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_stack = Vec::new();\n    let\
    \ mut paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_level_stack\
    \ = Vec::new();\n    let mut paren_level_stack_size = paren_level_stack.len();\n\
    \    let mut paren_level_stack_pos = paren_level_stack.len();\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos\
    \ + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos\
    \ + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos\
    \ + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos\
    \ + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos\
    \ + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos\
    \ + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos\
    \ + 1;\n    let mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let\
    \ mut paren_level_stack_pos = paren_level_stack_pos + 1;\n    let mut paren_level_stack_pos\
    \ = paren_level_stack_pos + 1;\n    let mut paren_level_stack_", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_stack = Vec::new();\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n    let\
    \ mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut\
    \ paren_level_stack = vec![];\n    let mut paren_level_stack_pos = 0;\n    let\
    \ mut paren_level_stack_len = paren_level_stack.len();\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_", "    let mut paren_stack: Vec<isize> = vec![];\n    let\
    \ mut paren_level: isize = 0;\n    for paren in paren_string.chars() {\n     \
    \   if paren == '(' {\n            paren_stack.push(paren_level);\n          \
    \  paren_level += 1;\n        } else if paren == ')' {\n            paren_level\
    \ -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut level = 0;\n\
    \    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_levels_len = 0;\n    let mut paren_levels_lens = Vec::new();\n   \
    \ let mut paren_levels_lens_len = 0;\n    let mut paren_levels_lens_lens = Vec::new();\n\
    \    let mut paren_levels_lens_lens_len = 0;\n    let mut paren_levels_lens_lens_lens\
    \ = Vec::new();\n    let mut paren_levels_lens_lens_lens_len = 0;\n    let mut\
    \ paren_levels_lens_lens_lens_lens = Vec::new();\n    let mut paren_levels_lens_lens_lens_lens_len\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens = Vec::new();\n    let\
    \ mut paren_levels_lens_lens_lens_lens_lens_len = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens\
    \ = Vec::new();\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len =\
    \ 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens = Vec::new();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len = 0;\n    let\
    \ mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens = Vec::new();\n   \
    \ let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len = 0;\n    let\
    \ mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens = Vec::new();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens =\
    \ Vec::new();\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens\
    \ = Vec::new();\n    let mu", "    let mut paren_levels = vec![0];\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_max = paren_levels_stack_size;\n    let mut paren_levels_stack_max_pos\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_max_val_pos = paren_levels_stack_size;\n    let\
    \ mut paren_levels_stack_max_val_val = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_pos\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val =\
    \ paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_pos\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_val\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_val_pos\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_val_val\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_val_val_pos\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_val_val_val\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_val_val_val_pos\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_val_val_val_val\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_val_val_val_val_pos\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_val_val_val_val_val\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_val_val_val_val_val_pos\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_val_val_val_val_val_val\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_val_val_val_val_val_val_pos\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_max_val_val_val_",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mu", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n   \
    \ let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_stack = vec![];\n    let mut paren_level_stack_pos\
    \ = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n    let\
    \ mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n  \
    \  let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char>;\n    let mut paren", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_max\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.as_ptr();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max = paren_levels_stack_ptr_max_ptr.as_ptr();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr = paren_levels_stack_ptr_max_ptr_max_ptr.as_ptr();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr_max = paren_levels_stack_ptr_max_ptr_max_ptr_max.as_ptr();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr = paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr.as_ptr();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max = paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max.as_ptr();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max_ptr = paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max_ptr.as_ptr();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max = paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max.as_ptr();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr =\
    \ paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr.as_ptr();\n \
    \   let mut paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max\
    \ = paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max.as_ptr();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max\
    \ = paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_ptr = 0;\n    let mut paren_levels_ptr_end =\
    \ paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr = paren_levels_ptr;\n  \
    \  let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr", "    let mut paren_stack\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels = vec![];\n\
    \    for paren in paren_string.chars() {\n        if paren == '(' {\n        \
    \    paren_stack.push(paren_level);\n            paren_level += 1;\n         \
    \   paren_levels.push(paren_level);\n        } else if paren == ')' {\n      \
    \      paren_level -= 1;\n            if paren_level == 0 {\n                paren_levels.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_levels", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos =\
    \ 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mu", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string_index = 0;\n    while paren_level_string_index\
    \ < paren_string.len() {\n        let mut paren_level_string = paren_string;\n\
    \        let mut paren_level_string_index = 0;\n        while paren_level_string_index\
    \ < paren_string.len() {\n            let mut paren_level_string = paren_string;\n\
    \            let mut paren_level_string_index = 0;\n            while paren_level_string_index\
    \ < paren_string.len() {\n                let mut paren_level_string = paren_string;\n\
    \                let mut paren_level_string_index = 0;\n                while\
    \ paren_level_string_index < paren_string.len() {\n                    let mut\
    \ paren_level_string = paren_string;\n                    let mut paren_level_string_index\
    \ = 0;\n                    while paren_level_string_index < paren_string.len()\
    \ {\n                        let mut paren_level_string = paren_string;\n    \
    \                    let mut paren_level_string_index = 0;\n                 \
    \       while paren_level_string_index < paren_string.len() {\n              \
    \              let mut paren_level_string = paren_string;\n                  \
    \          let mut paren_level_string_index = 0;\n                           \
    \ while paren_level_string_index < paren_string.len() {\n                    \
    \            let mut paren_level_string = paren_string;\n                    \
    \            let mut paren_level_string_index = 0;\n                         \
    \       while paren_level_string_index < paren_string.len() {\n              \
    \                      let mut paren_level_string = paren_string;\n          \
    \                          let mut paren_level_string_index = 0;\n           \
    \                         while paren_level_string_index < paren_string.len()\
    \ {\n                                        let mut paren_level_string = paren_string;\n\
    \                                        let mut paren_level_string_index = 0;\n\
    \                                        while paren_level_string_index < paren_string.len()\
    \ {\n                                            let mut paren_level_string =\
    \ paren_string;\n                                            let mut paren_level_string_index\
    \ = 0;\n                                            if paren_level_string == \"\
    (\" || paren_level_string == \"{\" || paren_level_string == \"[\"\n          \
    \                                      || paren_level_string == \"(()\" || paren_level_string\
    \ == \"(()()\"\n                                                || paren_level_string\
    \ == \"(()()()\" || paren_level_string == \"(()()()()\"\n                    \
    \                            || paren_level_string == \"(()()()()()\" || paren_level_string\
    \ == \"(()()()", "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_depth:\
    \ isize = 0;\n    let mut paren_level: isize = 0;\n    let mut paren_levels: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_len: isize = 0;\n    let mut paren_levels_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_len: isize = 0;\n    let\
    \ mut paren_levels_lens_lens: Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens: Vec<isize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_len: isize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens: Vec<isize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_len: isize = 0;\n    let mut\
    \ paren_levels_lens_lens_lens_lens_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n \
    \   let mut paren_level_count = 0;\n    let mut paren_level_max = 0;\n    let\
    \ mut paren_level_max_count = 0;\n    let mut paren_level_max_depth = 0;\n   \
    \ let mut paren_level_max_depth_count = 0;\n    let mut paren_level_max_depth_max\
    \ = 0;\n    let mut paren_level_max_depth_max_count = 0;\n    let mut paren_level_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_count = 0;\n    let mut paren_level_max_depth_max_depth_max\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_count = 0;\n    let mut\
    \ paren_level_max_depth_max_depth_max_depth = 0;\n    let mut paren_level_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth = 0;\n    let mut\
    \ paren_level_max_depth_max_depth_max_depth_count = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_count = 0;\n\
    \    let mut paren_level_max_depth_max_depth_max_depth_max_depth = 0;\n    let\
    \ mut paren_level_max_depth_max_depth_max_depth_max_count = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max =\
    \ 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;", "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n \
    \   let mut paren_level_index = 0;\n    let mut paren_level_chars = vec![];\n\
    \    let mut paren_level_chars_index = 0;\n    let mut paren_level_chars_index2\
    \ = 0;\n    let mut paren_level_chars_index3 = 0;\n    let mut paren_level_chars_index4\
    \ = 0;\n    let mut paren_level_chars_index5 = 0;\n    let mut paren_level_chars_index6\
    \ = 0;\n    let mut paren_level_chars_index7 = 0;\n    let mut paren_level_chars_index8\
    \ = 0;\n    let mut paren_level_chars_index9 = 0;\n    let mut paren_level_chars_index10\
    \ = 0;\n    let mut paren_level_chars_index11 = 0;\n    let mut paren_level_chars_index12\
    \ = 0;\n    let mut paren_level_chars_index13 = 0;\n    let mut paren_level_chars_index14\
    \ = 0;\n    let mut paren_level_chars_index15 = 0;\n    let mut paren_level_chars_index16\
    \ = 0;\n    let mut paren_level_chars_index17 = 0;\n    let mut paren_level_chars_index18\
    \ = 0;\n    let mut paren_level_chars_index19 = 0;\n    let mut paren_level_chars_index20\
    \ = 0;\n    let mut paren_level_chars_index21 = 0;\n    let mut paren_level_chars_index22\
    \ = 0;\n    let mut paren_level_chars_index23 = 0;\n    let mut paren_level_chars_index24\
    \ = 0;\n    let mut paren_level_chars_index25 = 0;\n    let mut paren_level_chars_index26\
    \ = 0;\n    let mut paren_level_chars_index27 = 0;\n    let mut paren_level_chars_index28\
    \ = 0;\n    let mut paren_level_chars_index29 = 0;\n    let mut paren_level_chars_index30\
    \ = 0;\n    let mut paren_level_chars_index31 = 0;\n    let mut paren_level_chars_index32\
    \ = 0;\n    let mut paren_level_chars_index33 = 0;\n    let mut paren_level_chars_index34\
    \ = 0;\n    let mut paren_level_chars_index35 = 0;\n    let mut paren_level_chars_index36\
    \ = 0;\n    let mut paren_level_chars_index37 = 0;\n    let mut paren_level_chars_index38\
    \ = 0;\n    let mut paren_level_chars_index39 = 0;\n    let mut paren_level_chars_index40\
    \ = 0;\n    let mut paren_level_chars_index41 = 0;\n    let mut paren_level_chars_index42\
    \ = 0;\n    let mut paren_level_chars_index43 = 0;\n    let mut paren", "    let\
    \ mut paren_stack = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_count_index\
    \ = 0;\n    let mut paren_level_max_count_index2 = 0;\n    let mut paren_level_max_count_index3\
    \ = 0;\n    let mut paren_level_max_count_index4 = 0;\n    let mut paren_level_max_count_index5\
    \ = 0;\n    let mut paren_level_max_count_index6 = 0;\n    let mut paren_level_max_count_index7\
    \ = 0;\n    let mut paren_level_max_count_index8 = 0;\n    let mut paren_level_max_count_index9\
    \ = 0;\n    let mut paren_level_max_count_index10 = 0;\n    let mut paren_level_max_count_index11\
    \ = 0;\n    let mut paren_level_max_count_index12 = 0;\n    let mut paren_level_max_count_index13\
    \ = 0;\n    let mut paren_level_max_count_index14 = 0;\n    let mut paren_level_max_count_index15\
    \ = 0;\n    let mut paren_level_max_count_index16 = 0;\n    let mut paren_level_max_count_index17\
    \ = 0;\n    let mut paren_level_max_count_index18 = 0;\n    let mut paren_level_max_count_index19\
    \ = 0;\n    let mut paren_level_max_count_index20 = 0;\n    let mut paren_level_max_count_index21\
    \ = 0;\n    let mut paren_level_max_count_index22 = 0;\n    let mut paren_level_max_count_index23\
    \ = 0;\n    let mut paren_level_max_count_index24 = 0;\n    let mut paren_level_max_count_index25\
    \ = 0;\n    let mut paren_level_max_count_index26 = 0;\n    let mut paren_level_max_count_index27\
    \ = 0;\n    let mut paren_level_max_count_index28 = 0;\n    let mut paren_level_max_count_index29\
    \ = 0;\n    let mut paren_level_max_count_index30 = 0;\n    let mut paren_level_max_count_index31\
    \ = 0;\n    let mut paren_level_max_count_index32 = 0;\n    let mut paren_level_max_count_index33\
    \ = 0;\n    let mut paren_level_max_count_index34 = 0;\n    let mut paren_level_max_count_index35\
    \ = 0;\n    let mut paren_level_max_count_index36 = 0;\n    let mut paren_level_max_count_index37\
    \ = 0;\n    let mut paren_level_max_count_index38 = 0;\n    let mut paren_level_max_count_index39\
    \ = 0;\n    let mut paren_level_max_count_index40 = 0;", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars =\
    \ Vec::new();\n    let mut paren_level_char: char;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_", "    let mut paren_stack = Vec::new();\n    let\
    \ mut paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_len =\
    \ paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n    let\
    \ mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n\
    \    let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mu", "    let mut paren_stack: Vec<isize> = vec![];\n\
    \    let mut paren_depth: isize = 0;\n    let mut paren_level: isize = 0;\n  \
    \  for paren in paren_string.chars() {\n        if paren == ')' {\n          \
    \  paren_stack.pop();\n            if paren_stack.len() == 0 {\n             \
    \   paren_depth += 1;\n            }\n        }\n        if paren == '(' {\n \
    \           paren_stack.push(paren_depth);\n            paren_depth += 1;\n  \
    \      }\n        if paren == ' ' {\n            paren_level += 1;\n        }\n\
    \    }\n    paren_stack", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_chars = Vec::new();\n    let mut paren_level_char: char;\n    let\
    \ mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_", "    let mut paren_level = 0;\n    let mut paren_levels:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_stack: Vec<isize> = vec![];\n\
    \    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_ptr = 0;\n\
    \    let mut paren_levels_ptr_stack = 0;\n    let mut paren_levels_ptr_stack_end\
    \ = 0;\n    let mut paren_levels_ptr_stack_start = 0;\n    let mut paren_levels_ptr_stack_start_end\
    \ = 0;\n    let mut paren_levels_ptr_stack_start_end = 0;\n    let mut paren_levels_ptr_stack_start_ptr\
    \ = 0;\n    let mut paren_levels_ptr_stack_start_ptr_end = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start\
    \ = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start_end = 0;\n    let mut\
    \ paren_levels_ptr_stack_start_ptr_start_ptr = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start_ptr_end\
    \ = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start_ptr_start = 0;\n  \
    \  let mut paren_levels_ptr_stack_start_ptr_start_ptr_start_end = 0;\n    let\
    \ mut paren_levels_ptr_stack_start_ptr_start_ptr_start_ptr = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start_ptr_start_ptr_end\
    \ = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start_ptr_start_ptr_start\
    \ = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start_ptr_start_ptr_start_end\
    \ = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start_ptr_start_ptr_start_ptr\
    \ = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start_ptr_start_ptr_start_ptr_end\
    \ = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start_ptr_start_ptr_start_ptr_start\
    \ = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start_ptr_start_ptr_start_ptr_start_end\
    \ = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start_ptr_start_ptr_start_ptr_start_ptr\
    \ = 0;\n    let mut paren_levels_ptr_stack_start_ptr_start_ptr_start_ptr_start_ptr_start_ptr_end\
    \ = 0;\n    let mut ", "    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_nestings = Vec::new();\n\
    \    let mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_nestings_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_end = paren_levels_iter.next();\n\
    \    let mut paren_nestings_end = paren_nestings_iter.next();\n    while paren_levels_end.unwrap()\
    \ != None && paren_nestings_end.unwrap() != None {\n        if paren_levels_end.unwrap().unwrap()\
    \ == paren_nestings_end.unwrap().unwrap() {\n            paren_levels.push(paren_level);\n\
    \            paren_nestings.push(paren_nesting);\n            paren_levels_iter.next();\n\
    \            paren_nestings_iter.next();\n            paren_level += 1;\n    \
    \        paren_nesting += 1;\n        } else {\n            paren_level += 1;\n\
    \            paren_nesting += 1;\n        }\n        paren_levels_end = paren_levels_iter.next();\n\
    \        paren_nestings_end = paren_nestings_iter.next();\n    }\n    if paren_levels_end.unwrap()\
    \ != None {\n        paren_levels.push(paren_level);\n        paren_nestings.push(paren_nesting);\n\
    \    }\n    paren_levels", "    let mut paren_levels = vec![0];\n    let mut paren_levels_stack\
    \ = vec![0];\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_", "    let mut paren_levels = Vec::new();\n    let mut paren_level =\
    \ 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_level", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n \
    \   let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n", "    let mut\
    \ level = 0;\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_nestings = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_nestings_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_nestings_stack_ptr = 0;\n    let mut paren_levels_ptr\
    \ = 0;\n    let mut paren_nestings_ptr = 0;\n    let mut paren_levels_ptr_next\
    \ = 0;\n    let mut paren_nestings_ptr_next = 0;\n    let mut paren_levels_ptr_next2\
    \ = 0;\n    let mut paren_nestings_ptr_next2 = 0;\n    let mut paren_levels_ptr_next3\
    \ = 0;\n    let mut paren_nestings_ptr_next3 = 0;\n    let mut paren_levels_ptr_next4\
    \ = 0;\n    let mut paren_nestings_ptr_next4 = 0;\n    let mut paren_levels_ptr_next5\
    \ = 0;\n    let mut paren_nestings_ptr_next5 = 0;\n    let mut paren_levels_ptr_next6\
    \ = 0;\n    let mut paren_nestings_ptr_next6 = 0;\n    let mut paren_levels_ptr_next7\
    \ = 0;\n    let mut paren_nestings_ptr_next7 = 0;\n    let mut paren_levels_ptr_next8\
    \ = 0;\n    let mut paren_nestings_ptr_next8 = 0;\n    let mut paren_levels_ptr_next9\
    \ = 0;\n    let mut paren_nestings_ptr_next9 = 0;\n    let mut paren_levels_ptr_next10\
    \ = 0;\n    let mut paren_nestings_ptr_next10 = 0;\n    let mut paren_levels_ptr_next11\
    \ = 0;\n    let mut paren_nestings_ptr_next11 = 0;\n    let mut paren_levels_ptr_next12\
    \ = 0;\n    let mut paren_nestings_ptr_next12 = 0;\n    let mut paren_levels_ptr_next13\
    \ = 0;\n    let mut paren_nestings_ptr_next13 = 0;\n    let mut paren_levels_ptr_next14\
    \ = 0;\n    let mut paren_nestings_ptr_next14 = 0;\n    let mut paren_levels_ptr_next15\
    \ = 0;\n    let mut paren_nestings_ptr_next15 = 0;\n    let mu", "    let mut\
    \ paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut paren_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_,\
    \ index)| {\n        if paren_levels_iter.peek().is_some() {\n            paren_levels_iter.next();\n\
    \            Some(paren_level + 1)\n        } else {\n            None\n     \
    \   }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_,\
    \ index)| {\n        if paren_levels_iter.peek().is_some() {\n            paren_levels_iter.next();\n\
    \            Some(paren_level + 1)\n        } else {\n            None\n     \
    \   }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_,\
    \ index)| {\n        if paren_levels_iter.peek().is_some() {\n            paren_levels_iter.next();\n\
    \            Some(paren_level + 1)\n        } else {\n            None\n     \
    \   }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_,\
    \ index)| {\n        if paren_levels_iter.peek().is_some() {\n            paren_levels_iter.next();\n\
    \            Some(paren_level + 1)\n        } else {\n            None\n     \
    \   }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_,\
    \ index)| {\n        if paren_levels_iter.peek().is_some() {\n            paren_levels_iter.next();\n\
    \            Some(paren_level + 1)\n        } else {\n            None\n     \
    \   }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_,\
    \ index)| {\n        if paren_levels_iter.peek().is_some() {\n            paren_levels_iter.next();\n\
    \            Some(paren_level + 1)\n        } else {\n            None\n     \
    \   }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_,\
    \ index)| {\n        if paren_levels_iter.peek().is_some() {\n            paren_levels_iter.next();\n\
    \            Some(paren_level + 1)\n        } else {\n            None\n     \
    \   }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_,\
    \ index)| {\n        if paren_levels_iter.peek().is_some() {\n            paren_levels_iter.next();\n\
    \            Some(paren_level + 1)\n        } else {\n            None\n     \
    \   }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_", " \
    \   let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = Vec::new();\n    let mut paren_level_count_index\
    \ = 0;\n    let mut paren_level_count_index2 = 0;\n    let mut paren_level_count_index3\
    \ = 0;\n    let mut paren_level_count_index4 = 0;\n    let mut paren_level_count_index5\
    \ = 0;\n    let mut paren_level_count_index6 = 0;\n    let mut paren_level_count_index7\
    \ = 0;\n    let mut paren_level_count_index8 = 0;\n    let mut paren_level_count_index9\
    \ = 0;\n    let mut paren_level_count_index10 = 0;\n    let mut paren_level_count_index11\
    \ = 0;\n    let mut paren_level_count_index12 = 0;\n    let mut paren_level_count_index13\
    \ = 0;\n    let mut paren_level_count_index14 = 0;\n    let mut paren_level_count_index15\
    \ = 0;\n    let mut paren_level_count_index16 = 0;\n    let mut paren_level_count_index17\
    \ = 0;\n    let mut paren_level_count_index18 = 0;\n    let mut paren_level_count_index19\
    \ = 0;\n    let mut paren_level_count_index20 = 0;\n    let mut paren_level_count_index21\
    \ = 0;\n    let mut paren_level_count_index22 = 0;\n    let mut paren_level_count_index23\
    \ = 0;\n    let mut paren_level_count_index24 = 0;\n    let mut paren_level_count_index25\
    \ = 0;\n    let mut paren_level_count_index26 = 0;\n    let mut paren_level_count_index27\
    \ = 0;\n    let mut paren_level_count_index28 = 0;\n    let mut paren_level_count_index29\
    \ = 0;\n    let mut paren_level_count_index30 = 0;\n    let mut paren_level_count_index31\
    \ = 0;\n    let mut paren_level_count_index32 = 0;\n    let mut paren_level_count_index33\
    \ = 0;\n    let mut paren_level_count_index34 = 0;\n    let mut paren_level_count_index35\
    \ = 0;\n    let mut paren_level_count_index36 = 0;\n    let mut paren_level_count_index37\
    \ = 0;\n    let mut paren_level_count_index38 = 0;\n    let mut paren_level_count_index39\
    \ = 0;\n    let mut paren_level_count_index40 = 0;\n    let mut paren_level_count_index41\
    \ = 0;\n    let mut paren_level_count_index42 = 0;\n    let mut paren_level_count_index43\
    \ = 0;\n    let mut paren", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_char_next: char;\n    let mut paren_level_char_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next: char;\n    let mut paren_level_char_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next: char;\n    let\
    \ mut paren_level_char_next_next_next_next_next_next: char;\n    let mut paren_level_char_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren", "    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_nestings = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_nestings_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_nestings_stack_size = paren_nestings_stack.len();\n    let\
    \ mut paren_levels_stack_ptr = paren_levels_stack.as_mut_ptr();\n    let mut paren_nestings_stack_ptr\
    \ = paren_nestings_stack.as_mut_ptr();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n    let mut paren_nestings_stack_ptr_end\
    \ = paren_nestings_stack_ptr.offset(paren_nestings_stack_size);\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n    let mut paren_nestings_stack_ptr_end\
    \ = paren_nestings_stack_ptr.offset(paren_nestings_stack_size);\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n    let mut paren_nestings_stack_ptr_end\
    \ = paren_nestings_stack_ptr.offset(paren_nestings_stack_size);\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n    let mut paren_nestings_stack_ptr_end\
    \ = paren_nestings_stack_ptr.offset(paren_nestings_stack_size);\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n    let mut paren_nestings_stack_ptr_end\
    \ = paren_nestings_stack_ptr.offset(paren_nestings_stack_size);\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n    let mut paren_nestings_stack_ptr_end\
    \ = paren_nestings_stack_ptr.offset(paren_nestings_stack_size);\n    let mut paren_levels_",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_len\
    \ = 0;\n    let mut paren_levels_len2 = 0;\n    let mut paren_levels_len3 = 0;\n\
    \    let mut paren_levels_len4 = 0;\n    let mut paren_levels_len5 = 0;\n    let\
    \ mut paren_levels_len6 = 0;\n    let mut paren_levels_len7 = 0;\n    let mut\
    \ paren_levels_len8 = 0;\n    let mut paren_levels_len9 = 0;\n    let mut paren_levels_len10\
    \ = 0;\n    let mut paren_levels_len11 = 0;\n    let mut paren_levels_len12 =\
    \ 0;\n    let mut paren_levels_len13 = 0;\n    let mut paren_levels_len14 = 0;\n\
    \    let mut paren_levels_len15 = 0;\n    let mut paren_levels_len16 = 0;\n  \
    \  let mut paren_levels_len17 = 0;\n    let mut paren_levels_len18 = 0;\n    let\
    \ mut paren_levels_len19 = 0;\n    let mut paren_levels_len20 = 0;\n    let mut\
    \ paren_levels_len21 = 0;\n    let mut paren_levels_len22 = 0;\n    let mut paren_levels_len23\
    \ = 0;\n    let mut paren_levels_len24 = 0;\n    let mut paren_levels_len25 =\
    \ 0;\n    let mut paren_levels_len26 = 0;\n    let mut paren_levels_len27 = 0;\n\
    \    let mut paren_levels_len28 = 0;\n    let mut paren_levels_len29 = 0;\n  \
    \  let mut paren_levels_len30 = 0;\n    let mut paren_levels_len31 = 0;\n    let\
    \ mut paren_levels_len32 = 0;\n    let mut paren_levels_len33 = 0;\n    let mut\
    \ paren_levels_len34 = 0;\n    let mut paren_levels_len35 = 0;\n    let mut paren_levels_len36\
    \ = 0;\n    let mut paren_levels_len37 = 0;\n    let mut paren_levels_len38 =\
    \ 0;\n    let mut paren_levels_len39 = 0;\n    let mut paren_levels_len40 = 0;\n\
    \    let mut paren_levels_len41 = 1;\n    let mut paren_levels_len42 = 1;\n  \
    \  let mut paren_levels_len43 = 1;\n    let mut paren", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_chars = vec![];\n\
    \    let mut paren_level_char = 0;\n    let mut paren_level_char_pos = 0;\n  \
    \  let mut paren_level_char_pos_count = 0;\n    let mut paren_level_char_pos_char_count\
    \ = 0;\n    let mut paren_level_char_pos_chars = vec![];\n    let mut paren_level_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_count = 0;\n    let mut\
    \ paren_level_char_pos_char_pos_chars = vec![];\n    let mut paren_level_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_count = 0;\n \
    \   let mut paren_level_char_pos_char_pos_char_pos_chars = vec![];\n    let mut\
    \ paren_level_char_pos_char_pos_char_pos_char = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_chars = vec![];\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos = 0;\n    let mut\
    \ paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_count = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_chars =\
    \ vec![];\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_count\
    \ = 0;\n    let mut paren_level_", "    let mut paren_levels = vec![0];\n    let\
    \ mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_stack = vec![];\n\
    \    let mut paren_depth = 0;\n    for paren in paren_string.chars() {\n     \
    \   if paren == '(' {\n            paren_depth += 1;\n            paren_stack.push(paren_depth);\n\
    \        } else if paren == ')' {\n            paren_depth -= 1;\n           \
    \ if paren_depth == 0 {\n                paren_stack.push(paren_depth);\n    \
    \        }\n        }\n    }\n    paren_stack", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_chars = vec![];\n    let\
    \ mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos_in_paren = 0;\n\
    \    let mut paren_level_char_pos_in_paren_group = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren\
    \ = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren_group = 0;\n\
    \    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren = 0;\n\
    \    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren_group\
    \ = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren_group_in_paren\
    \ = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren_group_in_paren_group\
    \ = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren\
    \ = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group\
    \ = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group\
    \ = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren\
    \ = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group\
    \ = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group\
    \ = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group\
    \ = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren\
    \ = 0;\n    let mut paren_level_char_pos_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group_in_paren_group\
    \ = 0;\n    let mut paren", "    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_nesting_levels\
    \ = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_nesting_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n    let mut paren_nesting_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_ptr = 0;\n    let mut paren_nesting_levels_ptr\
    \ = 0;\n    let mut paren_levels_ptr_stack = Vec::new();\n    let mut paren_nesting_levels_ptr_stack\
    \ = Vec::new();\n    let mut paren_levels_ptr_stack_ptr = 0;\n    let mut paren_nesting_levels_ptr_stack_ptr\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_ptr = 0;\n    let mut paren_nesting_levels_ptr_stack_ptr_ptr\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_ptr_ptr = 0;\n    let mut paren_nesting_levels_ptr_stack_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_ptr_ptr_ptr = 0;\n    let mut paren_nesting_levels_ptr_stack_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_ptr_ptr_ptr_ptr = 0;\n    let mut\
    \ paren_nesting_levels_ptr_stack_ptr_ptr_ptr_ptr_ptr = 0;\n    let mut paren_levels_ptr_stack_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_nesting_levels_ptr_stack_ptr_ptr_ptr_ptr_ptr_ptr = 0;\n\
    \    let mut paren_levels_ptr_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = 0;\n    let\
    \ mut paren_nesting_levels_ptr_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = 0;\n    let\
    \ mut paren_levels_ptr_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = 0;\n    let mut\
    \ paren_nesting_levels_ptr_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = 0;\n    let mut\
    \ paren_levels_ptr_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = 0;\n    let mut paren_nesting_levels_ptr_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_nesting_levels_ptr_stack_ptr_ptr_ptr_ptr_ptr", "   \
    \ let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_stack:\
    \ Vec<isize> = Vec::new();\n    let mut paren_nesting_level: Vec<isize> = Vec::new();\n\
    \    let mut paren_nesting_level_stack: Vec<isize> = Vec::new();\n    let mut\
    \ paren_nesting_level_stack_size: Vec<isize> = Vec::new();\n    let mut paren_nesting_level_stack_ptr:\
    \ Vec<isize> = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr: Vec<isize>\
    \ = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr: Vec<isize>\
    \ = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr_ptr: Vec<isize>\
    \ = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr_ptr_ptr: Vec<isize>\
    \ = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr_ptr_ptr_ptr:\
    \ Vec<isize> = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr:\
    \ Vec<isize> = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr:\
    \ Vec<isize> = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr:\
    \ Vec<isize> = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr:\
    \ Vec<isize> = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr:\
    \ Vec<isize> = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr:\
    \ Vec<isize> = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr:\
    \ Vec<isize> = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr:\
    \ Vec<isize> = Vec::new();\n    let mut paren_nesting_level_stack_ptr_ptr_ptr_ptr",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_nestings = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_nestings_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_nestings_stack_ptr = 0;\n    let mut paren_levels_ptr\
    \ = 0;\n    let mut paren_nestings_ptr = 0;\n    let mut paren_levels_ptr_next\
    \ = 0;\n    let mut paren_nestings_ptr_next = 0;\n    let mut paren_levels_ptr_next2\
    \ = 0;\n    let mut paren_nestings_ptr_next2 = 0;\n    let mut paren_levels_ptr_next3\
    \ = 0;\n    let mut paren_nestings_ptr_next3 = 0;\n    let mut paren_levels_ptr_next4\
    \ = 0;\n    let mut paren_nestings_ptr_next4 = 0;\n    let mut paren_levels_ptr_next5\
    \ = 0;\n    let mut paren_nestings_ptr_next5 = 0;\n    let mut paren_levels_ptr_next6\
    \ = 0;\n    let mut paren_nestings_ptr_next6 = 0;\n    let mut paren_levels_ptr_next7\
    \ = 0;\n    let mut paren_nestings_ptr_next7 = 0;\n    let mut paren_levels_ptr_next8\
    \ = 0;\n    let mut paren_nestings_ptr_next8 = 0;\n    let mut paren_levels_ptr_next9\
    \ = 0;\n    let mut paren_nestings_ptr_next9 = 0;\n    let mut paren_levels_ptr_next10\
    \ = 0;\n    let mut paren_nestings_ptr_next10 = 0;\n    let mut paren_levels_ptr_next11\
    \ = 0;\n    let mut paren_nestings_ptr_next11 = 0;\n    let mut paren_levels_ptr_next12\
    \ = 0;\n    let mut paren_nestings_ptr_next12 = 0;\n    let mut paren_levels_ptr_next13\
    \ = 0;\n    let mut paren_nestings_ptr_next13 = 0;\n    let mut paren_levels_ptr_next14\
    \ = 0;\n    let mut paren_nestings_ptr_next14 = 0;\n    let mut paren_levels_ptr_next15\
    \ = 0;\n    let mut paren_nestings_ptr_next15 = 0;\n    let mu", "    let mut\
    \ paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![0];\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_size\
    \ = vec![0];\n    let mut paren_levels_stack_ptr = vec![0];\n    let mut paren_levels_stack_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr = vec![0];\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_stack = Vec::new();\n    let mut paren_level_stack_pos = 0;\n  \
    \  let mut paren_level_stack_len = paren_level_stack.len();\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_len\
    \ = 0;\n    let mut paren_levels_lens: Vec<isize> = Vec::new();\n    let mut paren_levels_lens_len\
    \ = 0;\n    let mut paren_levels_lens_len2 = 0;\n    let mut paren_levels_lens_len3\
    \ = 0;\n    let mut paren_levels_lens_len4 = 0;\n    let mut paren_levels_lens_len5\
    \ = 0;\n    let mut paren_levels_lens_len6 = 0;\n    let mut paren_levels_lens_len7\
    \ = 0;\n    let mut paren_levels_lens_len8 = 0;\n    let mut paren_levels_lens_len9\
    \ = 0;\n    let mut paren_levels_lens_len10 = 0;\n    let mut paren_levels_lens_len11\
    \ = 0;\n    let mut paren_levels_lens_len12 = 0;\n    let mut paren_levels_lens_len13\
    \ = 0;\n    let mut paren_levels_lens_len14 = 0;\n    let mut paren_levels_lens_len15\
    \ = 0;\n    let mut paren_levels_lens_len16 = 0;\n    let mut paren_levels_lens_len17\
    \ = 0;\n    let mut paren_levels_lens_len18 = 0;\n    let mut paren_levels_lens_len19\
    \ = 0;\n    let mut paren_levels_lens_len20 = 0;\n    let mut paren_levels_lens_len21\
    \ = 0;\n    let mut paren_levels_lens_len22 = 0;\n    let mut paren_levels_lens_len23\
    \ = 0;\n    let mut paren_levels_lens_len24 = 0;\n    let mut paren_levels_lens_len25\
    \ = 0;\n    let mut paren_levels_lens_len26 = 0;\n    let mut paren_levels_lens_len27\
    \ = 0;\n    let mut paren_levels_lens_len28 = 0;\n    let mut paren_levels_lens_len29\
    \ = 0;\n    let mut paren_levels_lens_len30 = 0;\n    let mut paren_levels_lens_len31\
    \ = 0;\n    let mut paren_levels_lens_len32 = 0;\n    let mut paren_levels_lens_len33\
    \ = 0;\n    let mut paren_levels_lens_len34 = 0;\n    let mut paren_level", " \
    \   let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mu", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string_index = 0;\n\
    \    while paren_level_string_index < paren_string.len() {\n        let mut paren_level_char\
    \ = paren_level_string[paren_level_string_index];\n        if paren_level_char\
    \ == ')' {\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = '(';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = ')';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = ')';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = '(';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = ')';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = ')';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = '(';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = ')';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = '(';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = ')';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = '(';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = ')';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = '(';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = ')';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = '(';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = ')';\n            paren_level_string_index += 1;\n            paren_level_string[paren_level_string_index]\
    \ = '(';\n            paren_level_string_index += 1;\n            paren_", " \
    \   let mut paren_levels = vec![0];\n    let mut paren_levels_stack = vec![0];\n\
    \    let mut paren_levels_stack_ptr = vec![0];\n    let mut paren_levels_ptr =\
    \ vec![0];\n    let mut paren_levels_ptr_ptr = vec![0];\n    let mut paren_levels_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_ptr_ptr_ptr_ptr = vec![0];\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr_ptr = vec![0];\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n    let\
    \ mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n    let\
    \ mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![0];\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![0];\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr"]
stop_tokens:
- "\n}"

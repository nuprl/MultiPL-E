name: HumanEval_6_parse_nested_parens
language: rs
prompt: "/// Input to this function is a string represented multiple groups for nested\
  \ parentheses separated by spaces.\n/// For each of the group, output the deepest\
  \ level of nesting of parentheses.\n/// E.g. (()()) has maximum two levels of nesting\
  \ while ((())) has three.\n/// >>> parse_nested_parens(String::from(\"(()()) ((()))\
  \ () ((())()())\"))\n/// vec![2, 3, 1, 3]\nfn parse_nested_parens(paren_string:\
  \ String) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = parse_nested_parens;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  }\n"
completions: ["    let mut paren_level = 0;\n    let mut paren_stack = Vec::new();\n\
    \    let mut paren_stack_size = paren_stack.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_end = paren_stack_size;\n    let mut paren_stack_cur\
    \ = paren_stack[paren_stack_pos];\n    let mut paren_stack_top = paren_stack[paren_stack_end\
    \ - 1];\n    let mut paren_stack_cur_depth = 0;\n    let mut paren_stack_cur_pos\
    \ = 0;\n    let mut paren_stack_cur_end = paren_stack_end;\n    let mut paren_stack_cur_top\
    \ = paren_stack_top;\n    let mut paren_stack_cur_cur = paren_stack_cur;\n   \
    \ let mut paren_stack_cur_top = paren_stack_top;\n    let mut paren_stack_cur_cur_depth\
    \ = 0;\n    let mut paren_stack_cur_cur_pos = 0;\n    let mut paren_stack_cur_cur_end\
    \ = paren_stack_cur_end;\n    let mut paren_stack_cur_cur_top = paren_stack_cur_top;\n\
    \    let mut paren_stack_cur_cur_cur = paren_stack_cur_cur;\n    let mut paren_stack_cur_cur_top\
    \ = paren_stack_cur_top;\n    let mut paren_stack_cur_cur_cur_depth = 0;\n   \
    \ let mut paren_stack_cur_cur_cur_pos = 0;\n    let mut paren_stack_cur_cur_cur_end\
    \ = paren_stack_cur_cur_end;\n    let mut paren_stack_cur_cur_cur_top = paren_stack_cur_cur_top;\n\
    \    let mut paren_stack_cur_cur_cur_cur = paren_stack_cur_cur_cur;\n    let mut\
    \ paren_stack_cur_cur_cur_top = paren_stack_cur_cur_top;\n    let mut paren_stack_cur_cur_cur_cur\
    \ = paren_stack_cur_cur_cur;\n    let mut paren_stack_cur_cur_cur_top = paren_stack_cur_cur_cur;\n\
    \    let mut paren_stack_cur_cur_cur_cur_depth = 0;\n    let mut paren_stack_cur_cur_cur_cur_pos\
    \ = 0;\n    let mut paren_stack_cur_cur_cur_cur_end = paren_stack_cur_cur_cur_end;\n\
    \    let mut paren_stack_cur_cur_cur_cur_top = paren_stack_cur_cur_cur_top;\n\
    \    let mut paren_stack_cur_cur_cur_cur_cur = paren_stack_cur_cur_cur_cur;\n\
    \    let mut paren_stack_cur_cur_cur_cur_top = paren_stack_cur_cur_cur_cur;\n\
    \    let mut paren_stack_cur_cur_cur_cur_cur_depth = 0;\n    let mut paren_stack_cur_cur_cur_cur_cur_pos\
    \ = 0;\n", "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_size = paren_stack.len();\n    let mut\
    \ paren_levels_index = paren_stack.len();\n    let mut paren_levels_index2 = paren_stack.len();\n\
    \    let mut paren_levels_index3 = paren_stack.len();\n    let mut paren_levels_index4\
    \ = paren_stack.len();\n    let mut paren_levels_index5 = paren_stack.len();\n\
    \    let mut paren_levels_index6 = paren_stack.len();\n    let mut paren_levels_index7\
    \ = paren_stack.len();\n    let mut paren_levels_index8 = paren_stack.len();\n\
    \    let mut paren_levels_index9 = paren_stack.len();\n    let mut paren_levels_index10\
    \ = paren_stack.len();\n    let mut paren_levels_index11 = paren_stack.len();\n\
    \    let mut paren_levels_index12 = paren_stack.len();\n    let mut paren_levels_index13\
    \ = paren_stack.len();\n    let mut paren_levels_index14 = paren_stack.len();\n\
    \    let mut paren_levels_index15 = paren_stack.len();\n    let mut paren_levels_index16\
    \ = paren_stack.len();\n    let mut paren_levels_index17 = paren_stack.len();\n\
    \    let mut paren_levels_index18 = paren_stack.len();\n    let mut paren_levels_index19\
    \ = paren_stack.len();\n    let mut paren_levels_index20 = paren_stack.len();\n\
    \    let mut paren_levels_index21 = paren_stack.len();\n    let mut paren_levels_index22\
    \ = paren_stack.len();\n    let mut paren_levels_index23 = paren_stack.len();\n\
    \    let mut paren_levels_index24 = paren_stack.len();\n    let mut paren_levels_index25\
    \ = paren_stack.len();\n    let mut paren_levels_index26 = paren_stack.len();\n\
    \    let mut paren_levels_index27 = paren_stack.len();\n    let mut paren_levels_index28\
    \ = paren_stack.len();\n    let mut paren_levels_index29 = paren_stack.len();",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut ", " \
    \   let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize\
    \ = 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_len:\
    \ isize = 0;\n    let mut paren_levels_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_len: isize = 0;\n    let mut paren_levels_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: isize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: isize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_",
  "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_nestings = Vec::new();\n    let mut paren_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_nestings_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_end = paren_levels_iter.next();\n    let mut paren_nestings_end\
    \ = paren_nestings_iter.next();\n    while paren_levels_end.unwrap() != None &&\
    \ paren_nestings_end.unwrap() != None {\n        if paren_levels_end.unwrap().unwrap()\
    \ == paren_nestings_end.unwrap().unwrap() {\n            paren_levels.push(paren_level);\n\
    \            paren_nestings.push(paren_nesting);\n            paren_levels_end\
    \ = paren_levels_iter.next();\n            paren_nestings_end = paren_nestings_iter.next();\n\
    \            paren_level += 1;\n            paren_nesting += 1;\n        } else\
    \ {\n            paren_level += 1;\n            paren_nesting += 1;\n        }\n\
    \    }\n    if paren_levels_end.unwrap() == None || paren_nestings_end.unwrap()\
    \ == None {\n        paren_levels.push(paren_level);\n        paren_nestings.push(paren_nesting);\n\
    \    }\n    paren_levels", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_start = paren_level_string.chars().nth(0).unwrap();\n\
    \    let mut paren_level_end = paren_level_string.chars().nth(paren_level_string.len()\
    \ - 1).unwrap();\n    let mut paren_level_char = paren_level_start;\n    let mut\
    \ paren_level_char_next = paren_level_end;\n    let mut paren_level_char_prev\
    \ = paren_level_end;\n    let mut paren_level_char_prev = paren_level_end;\n \
    \   let mut paren_level_char_next = paren_level_end;\n    let mut paren_level_char_next\
    \ = paren_level_end;\n    let mut paren_level_char_prev = paren_level_end;\n \
    \   let mut paren_level_char_prev = paren_level_end;\n    let mut paren_level_char_next\
    \ = paren_level_end;\n    let mut paren_level_char_next = paren_level_end;\n \
    \   let mut paren_level_char_prev = paren_level_end;\n    let mut paren_level_char_prev\
    \ = paren_level_end;\n    let mut paren_level_char_next = paren_level_end;\n \
    \   let mut paren_level_char_next = paren_level_end;\n    let mut paren_level_char_prev\
    \ = paren_level_end;\n    let mut paren_level_char_prev = paren_level_end;\n \
    \   let mut paren_level_char_next = paren_level_end;\n    let mut paren_level_char_next\
    \ = paren_level_end;\n    let mut paren_level_char_prev = paren_level_end;\n \
    \   let mut paren_level_char_prev = paren_level_end;\n    let mut paren_level_char_next\
    \ = paren_level_end;\n    let mut paren_level_char_next = paren_level_end;\n \
    \   let mut paren_level_char_prev = paren_level_end;\n    let mut paren_level_char_prev\
    \ = paren_level_end;\n    let mut paren_level_char_next = paren_level_end;\n \
    \   let mut paren_level_char_next = paren_level_end;\n    let mut paren_level_char_prev\
    \ = paren_level_end;\n    let mut paren_level_char_prev = paren_level_end;\n \
    \   let mut paren_level_char_next = paren_level_end;\n    let mut paren_level_char_next\
    \ = paren_level_end;\n    let mut paren_level_char_prev = paren_level_end;\n \
    \   let mut paren_level_char_prev = paren_level_end;\n    let mut paren_level_char_next\
    \ = paren_", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    while paren_level_count <\
    \ MAX_NESTING {\n        let mut paren_level_string = paren_string;\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string =\
    \ paren_string;\n        let mut paren_level_string = paren_string;\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string =\
    \ paren_string;\n        let mut paren_level_string = paren_string;\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string =\
    \ paren_string;\n        let mut paren_level_string = paren_string;\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string =\
    \ paren_string;\n        let mut paren_level_string = paren_string;\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string =\
    \ paren_string;\n        let mut paren_level_string = paren_string;\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string =\
    \ paren_string;\n        let mut paren_level_string = paren_string;\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string =\
    \ paren_string;\n        let mut paren_level_string = paren_string;\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string =\
    \ paren_string;\n        let mut paren_level_string = paren_string;\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string =\
    \ paren_string;\n        let mut paren_level_string = paren_string;\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string =\
    \ paren_string;\n        let mut paren_level_string = paren_string;\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string =\
    \ paren_string;\n        let mut paren_level_string = paren_string;\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string =\
    \ paren_string;\n        let mut paren_level_string = paren_string;\n        let\
    \ mut ", "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n\
    \    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_levels_len = 0;\n    let mut paren_levels_lens = Vec::new();\n   \
    \ let mut paren_levels_lens_len = 0;\n    let mut paren_levels_lens_len2 = 0;\n\
    \    let mut paren_levels_lens_len3 = 0;\n    let mut paren_levels_lens_len4 =\
    \ 0;\n    let mut paren_levels_lens_len5 = 0;\n    let mut paren_levels_lens_len6\
    \ = 0;\n    let mut paren_levels_lens_len7 = 0;\n    let mut paren_levels_lens_len8\
    \ = 0;\n    let mut paren_levels_lens_len9 = 0;\n    let mut paren_levels_lens_len10\
    \ = 0;\n    let mut paren_levels_lens_len11 = 0;\n    let mut paren_levels_lens_len12\
    \ = 0;\n    let mut paren_levels_lens_len13 = 0;\n    let mut paren_levels_lens_len14\
    \ = 0;\n    let mut paren_levels_lens_len15 = 0;\n    let mut paren_levels_lens_len16\
    \ = 0;\n    let mut paren_levels_lens_len17 = 0;\n    let mut paren_levels_lens_len18\
    \ = 0;\n    let mut paren_levels_lens_len19 = 0;\n    let mut paren_levels_lens_len20\
    \ = 0;\n    let mut paren_levels_lens_len21 = 0;\n    let mut paren_levels_lens_len22\
    \ = 0;\n    let mut paren_levels_lens_len23 = 0;\n    let mut paren_levels_lens_len24\
    \ = 0;\n    let mut paren_levels_lens_len25 = 0;\n    let mut paren_levels_lens_len26\
    \ = 0;\n    let mut paren_levels_lens_len27 = 0;\n    let mut paren_levels_lens_len28\
    \ = 0;\n    let mut paren_levels_lens_len29 = 0;\n    let mut paren_levels_lens_len30\
    \ = 0;\n    let mut paren_levels_lens_len31 = 0;\n    let mut paren_levels_lens_len32\
    \ = 0;\n    let mut paren_levels_lens_len33 = 0;\n    let mut paren_levels_lens_len34\
    \ = 0;\n    let mut paren_levels_lens_len35 = 0;", "    let mut paren_levels =\
    \ vec![0];\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_top\
    \ = vec![0];\n    let mut paren_levels_stack_bottom = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mut paren_levels_stack_bottom\
    \ = vec![0];\n    let mut paren_levels_stack_top = vec![0];\n    let mu", "  \
    \  let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = String::new();\n    let mut paren_level_chars_index\
    \ = 0;\n    let mut paren_level_chars_index2 = 0;\n    let mut paren_level_chars_index3\
    \ = 0;\n    let mut paren_level_chars_index4 = 0;\n    let mut paren_level_chars_index5\
    \ = 0;\n    let mut paren_level_chars_index6 = 0;\n    let mut paren_level_chars_index7\
    \ = 0;\n    let mut paren_level_chars_index8 = 0;\n    let mut paren_level_chars_index9\
    \ = 0;\n    let mut paren_level_chars_index10 = 0;\n    let mut paren_level_chars_index11\
    \ = 0;\n    let mut paren_level_chars_index12 = 0;\n    let mut paren_level_chars_index13\
    \ = 0;\n    let mut paren_level_chars_index14 = 0;\n    let mut paren_level_chars_index15\
    \ = 0;\n    let mut paren_level_chars_index16 = 0;\n    let mut paren_level_chars_index17\
    \ = 0;\n    let mut paren_level_chars_index18 = 0;\n    let mut paren_level_chars_index19\
    \ = 0;\n    let mut paren_level_chars_index20 = 0;\n    let mut paren_level_chars_index21\
    \ = 0;\n    let mut paren_level_chars_index22 = 0;\n    let mut paren_level_chars_index23\
    \ = 0;\n    let mut paren_level_chars_index24 = 0;\n    let mut paren_level_chars_index25\
    \ = 0;\n    let mut paren_level_chars_index26 = 0;\n    let mut paren_level_chars_index27\
    \ = 0;\n    let mut paren_level_chars_index28 = 0;\n    let mut paren_level_chars_index29\
    \ = 0;\n    let mut paren_level_chars_index30 = 0;\n    let mut paren_level_chars_index31\
    \ = 0;\n    let mut paren_level_chars_index32 = 0;\n    let mut paren_level_chars_index33\
    \ = 0;\n    let mut paren_level_chars_index34 = 0;\n    let mut paren_level_chars_index35\
    \ = 0;\n    let mut paren_level_chars_index36 = 0;\n    let mut paren_level_chars_index37\
    \ = 0;\n    let mut paren_level_chars_index38 = 0;\n    let mut paren_level_chars_index39\
    \ = 0;\n    let mut paren_level_chars_index40 = 0;\n    let mut paren_level_chars_index41\
    \ = 0;\n    let mut paren_level_chars_index42 = 0;\n    let mut ", "    let mut\
    \ paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_", " \
    \   let mut level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_next = Vec::new();\n\
    \    let mut paren_levels_ptr_next_ptr = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_next_ptr_next_ptr_next = Vec::new();\n    let mut\
    \ paren_levels_ptr_next_ptr_next_ptr_next_ptr = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr", "    let mut level =\
    \ 0;\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let\
    \ mut paren_level_char_count = 0;\n    let mut paren_level_chars: Vec<String>\
    \ = vec![];\n    let mut paren_level_char: char = '(';\n    let mut paren_level_chars:\
    \ Vec<String> = vec![];\n    let mut paren_level_char: char = '(';\n    let mut\
    \ paren_level_chars: Vec<String> = vec![];\n    let mut paren_level_char: char\
    \ = '(';\n    let mut paren_level_chars: Vec<String> = vec![];\n    let mut paren_level_char:\
    \ char = '(';\n    let mut paren_level_chars: Vec<String> = vec![];\n    let mut\
    \ paren_level_char: char = '(';\n    let mut paren_level_chars: Vec<String> =\
    \ vec![];\n    let mut paren_level_char: char = '(';\n    let mut paren_level_chars:\
    \ Vec<String> = vec![];\n    let mut paren_level_char: char = '(';\n    let mut\
    \ paren_level_chars: Vec<String> = vec![];\n    let mut paren_level_char: char\
    \ = '(';\n    let mut paren_level_chars: Vec<String> = vec![];\n    let mut paren_level_char:\
    \ char = '(';\n    let mut paren_level_chars: Vec<String> = vec![];\n    let mut\
    \ paren_level_char: char = '(';\n    let mut paren_level_chars: Vec<String> =\
    \ vec![];\n    let mut paren_level_char: char = '(';\n    let mut paren_level_chars:\
    \ Vec<String> = vec![];\n    let mut paren_level_char: char = '(';\n    let mut\
    \ paren_level_chars: Vec<String> = vec![];\n    let mut paren_level_char: char\
    \ = '(';\n    let mut paren_level_chars: Vec<String> = vec![];\n    let mut paren_level_char:\
    \ char = '(';\n    let mut paren_level_chars: Vec<String> = vec![];\n    let mut\
    \ paren_level_char: char = '(';\n    let mut paren_level_chars: Vec<String> =\
    \ vec![];\n    let mut paren_level_char: char = '(';", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack_size;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_level",
  "    let mut level = 0;\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let ", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_level", "    let mut paren_stack = vec![];\n    let mut paren_depth\
    \ = 0;\n    let mut paren_level = 0;\n    let mut paren_levels = vec![];\n   \
    \ let mut paren_levels_len = 0;\n    let mut paren_levels_lens = vec![];\n   \
    \ let mut paren_levels_lens_len = 0;\n    let mut paren_levels_lens_len2 = 0;\n\
    \    let mut paren_levels_lens_len3 = 0;\n    let mut paren_levels_lens_len4 =\
    \ 0;\n    let mut paren_levels_lens_len5 = 0;\n    let mut paren_levels_lens_len6\
    \ = 0;\n    let mut paren_levels_lens_len7 = 0;\n    let mut paren_levels_lens_len8\
    \ = 0;\n    let mut paren_levels_lens_len9 = 0;\n    let mut paren_levels_lens_len10\
    \ = 0;\n    let mut paren_levels_lens_len11 = 0;\n    let mut paren_levels_lens_len12\
    \ = 0;\n    let mut paren_levels_lens_len13 = 0;\n    let mut paren_levels_lens_len14\
    \ = 0;\n    let mut paren_levels_lens_len15 = 0;\n    let mut paren_levels_lens_len16\
    \ = 0;\n    let mut paren_levels_lens_len17 = 0;\n    let mut paren_levels_lens_len18\
    \ = 0;\n    let mut paren_levels_lens_len19 = 0;\n    let mut paren_levels_lens_len20\
    \ = 0;\n    let mut paren_levels_lens_len21 = 0;\n    let mut paren_levels_lens_len22\
    \ = 0;\n    let mut paren_levels_lens_len23 = 0;\n    let mut paren_levels_lens_len24\
    \ = 0;\n    let mut paren_levels_lens_len25 = 0;\n    let mut paren_levels_lens_len26\
    \ = 0;\n    let mut paren_levels_lens_len27 = 0;\n    let mut paren_levels_lens_len28\
    \ = 0;\n    let mut paren_levels_lens_len29 = 0;\n    let mut paren_levels_lens_len30\
    \ = 0;\n    let mut paren_levels_lens_len31 = 0;\n    let mut paren_levels_lens_len32\
    \ = 0;\n    let mut paren_levels_lens_len33 = 0;\n    let mut paren_levels_lens_len34\
    \ = 0;\n    let mut paren_levels_lens_len35 = 0;\n    let mu", "    let mut paren_level\
    \ = 0;\n    let mut paren_stack = vec![];\n    for paren in paren_string.chars()\
    \ {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n \
    \           paren_level += 1;\n        } else if paren == ')' {\n            paren_level\
    \ -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nest", "    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new", "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_depth:\
    \ usize = 0;\n    for paren in paren_string.chars() {\n        if paren == '('\
    \ {\n            paren_stack.push(paren_depth);\n            paren_depth += 1;\n\
    \        } else if paren == ')' {\n            paren_depth -= 1;\n           \
    \ if paren_depth == 0 {\n                paren_stack.push(paren_depth);\n    \
    \        }\n        }\n    }\n    paren_stack", "    let mut paren_stack = Vec::new();\n\
    \    let mut paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_len = paren_stack.len();\n    let mut\
    \ paren_levels_len2 = paren_levels_len;\n    let mut paren_levels_len3 = paren_levels_len;\n\
    \    let mut paren_levels_len4 = paren_levels_len;\n    let mut paren_levels_len5\
    \ = paren_levels_len;\n    let mut paren_levels_len6 = paren_levels_len;\n   \
    \ let mut paren_levels_len7 = paren_levels_len;\n    let mut paren_levels_len8\
    \ = paren_levels_len;\n    let mut paren_levels_len9 = paren_levels_len;\n   \
    \ let mut paren_levels_len10 = paren_levels_len;\n    let mut paren_levels_len11\
    \ = paren_levels_len;\n    let mut paren_levels_len12 = paren_levels_len;\n  \
    \  let mut paren_levels_len13 = paren_levels_len;\n    let mut paren_levels_len14\
    \ = paren_levels_len;\n    let mut paren_levels_len15 = paren_levels_len;\n  \
    \  let mut paren_levels_len16 = paren_levels_len;\n    let mut paren_levels_len17\
    \ = paren_levels_len;\n    let mut paren_levels_len18 = paren_levels_len;\n  \
    \  let mut paren_levels_len19 = paren_levels_len;\n    let mut paren_levels_len20\
    \ = paren_levels_len;\n    let mut paren_levels_len21 = paren_levels_len;\n  \
    \  let mut paren_levels_len22 = paren_levels_len;\n    let mut paren_levels_len23\
    \ = paren_levels_len;\n    let mut paren_levels_len24 = paren_levels_len;\n  \
    \  let mut paren_levels_len25 = paren_levels_len;\n    let mut paren_levels_len26\
    \ = paren_levels_len;\n    let mut paren_levels_len27 = paren_levels_len;\n  \
    \  let mut paren_levels_len28 = paren_levels_len;\n    let mut paren_levels_len29\
    \ = paren_levels_len;\n    let mut paren_levels_len30 = paren_levels_len;\n  \
    \  let mut paren_level", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string_index = 0;\n    let mut paren_level_char: char;\n\
    \    let mut paren_level_char_length = 0;\n    let mut paren_level_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_string: String;\n    let mut paren_level_char_length_string_index\
    \ = 0;\n    let mut paren_level_char_length_string_index2 = 0;\n    let mut paren_level_char_length_string_index3\
    \ = 0;\n    let mut paren_level_char_length_string_index4 = 0;\n    let mut paren_level_char_length_string_index5\
    \ = 0;\n    let mut paren_level_char_length_string_index6 = 0;\n    let mut paren_level_char_length_string_index7\
    \ = 0;\n    let mut paren_level_char_length_string_index8 = 0;\n    let mut paren_level_char_length_string_index9\
    \ = 0;\n    let mut paren_level_char_length_string_index10 = 0;\n    let mut paren_level_char_length_string_index11\
    \ = 0;\n    let mut paren_level_char_length_string_index12 = 0;\n    let mut paren_level_char_length_string_index13\
    \ = 0;\n    let mut paren_level_char_length_string_index14 = 0;\n    let mut paren_level_char_length_string_index15\
    \ = 0;\n    let mut paren_level_char_length_string_index16 = 0;\n    let mut paren_level_char_length_string_index17\
    \ = 0;\n    let mut paren_level_char_length_string_index18 = 0;\n    let mut paren_level_char_length_string_index19\
    \ = 0;\n    let mut paren_level_char_length_string_index20 = 0;\n    let mut paren_level_char_length_string_index21\
    \ = 0;\n    let mut paren_level_char_length_string_index22 = 0;\n    let mut paren_level_char_length_string_index23\
    \ = 0;\n    let mut paren_level_char_length_string_index24 = 0;\n    let mut paren_level_char_length_string_index25\
    \ = 0;\n    let mut paren_level_char_length_string_index26 = 0;\n    let mut paren_level_char_length_string_index27\
    \ = 0;\n    let mut paren_level_char_length_string_index28 = 0;\n    let mut paren_level_char_length_string_index29\
    \ = 0;\n    let mut paren_level_char_length_string_index30 = 0;\n    let mut paren_level_char_length_string_index31\
    \ = 0;\n    let mut paren_level_char_length_string_index32 = 0;\n    let mut paren_level_char_",
  "    let mut level = 0;\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index =\
    \ 0;\n    let mut paren_level_string = paren_string;\n    let mut paren_level_string_index\
    \ = 0;\n    let mut paren_level_string = paren_string;\n    while paren_level_string_index\
    \ < paren_string.len() {\n        let mut paren_level_string = paren_string;\n\
    \        let mut paren_level_string_index = 0;\n        while paren_level_string_index\
    \ < paren_string.len() {\n            let mut paren_level_string = paren_string;\n\
    \            let mut paren_level_string_index = 0;\n            while paren_level_string_index\
    \ < paren_string.len() {\n                let mut paren_level_string = paren_string;\n\
    \                let mut paren_level_string_index = 0;\n                while\
    \ paren_level_string_index < paren_string.len() {\n                    let mut\
    \ paren_level_string = paren_string;\n                    let mut paren_level_string_index\
    \ = 0;\n                    while paren_level_string_index < paren_string.len()\
    \ {\n                        let mut paren_level_string = paren_string;\n    \
    \                    let mut paren_level_string_index = 0;\n                 \
    \       while paren_level_string_index < paren_string.len() {\n              \
    \              let mut paren_level_string = paren_string;\n                  \
    \          let mut paren_level_string_index = 0;\n                           \
    \ while paren_level_string_index < paren_string.len() {\n                    \
    \            let mut paren_level_string = paren_string;\n                    \
    \            let mut paren_level_string_index = 0;\n                         \
    \       while paren_level_string_index < paren_string.len() {\n              \
    \                      let mut paren_level_string = paren_string;\n          \
    \                          let mut paren_level_string_index = 0;\n           \
    \                         while paren_level_string_index < paren_string.len()\
    \ {\n                                        let mut paren_level_string = paren_string;\n\
    \                                        let mut paren_level_string_index = 0;\n\
    \                                        while paren_level_string_index < paren_string.len()\
    \ {\n                                            let mut paren_level_string =\
    \ paren_string;\n                                            let mut paren_level_string_index\
    \ = 0;\n                                            while paren_level_string_index\
    \ < paren_string.len() {\n                                                let\
    \ mut paren_level_string = paren_string;\n                                   \
    \             let mut paren_level_string_index = 0;\n                        \
    \                        while paren_level_string_index < paren_string.len() {\n\
    \                                                    let mut paren_level_string\
    \ = paren_string;\n                                                    let mut\
    \ paren_level_string_index = 0;\n                                            \
    \        ", "    let mut paren_levels = Vec::new();\n    let mut paren_level =\
    \ 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count =\
    \ 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_chars_count\
    \ = Vec::new();\n    let mut paren_level_chars_index = Vec::new();\n    let mut\
    \ paren_level_chars_index_count = Vec::new();\n    let mut paren_level_chars_index_count\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max = Vec::new();\n\
    \    let mut paren_level_chars_index_count_max_count = Vec::new();\n    let mut\
    \ paren_level_chars_index_count_max_count_max = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max_max_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max_max_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max_max_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max_max_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max_max_max_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_max_max_max_max_max_max_max_max_max\
    \ = Vec::new();\n    let mut paren_level_chars_index_count_max_count_max_max_",
  "    let mut paren_level = 0;\n    let mut paren_stack = vec![];\n    let mut paren_stack_len\
    \ = paren_string.len();\n    let mut paren_stack_pos = 0;\n    let mut paren_stack_char\
    \ = paren_string[paren_stack_pos];\n    while paren_stack_pos < paren_string.len()\
    \ {\n        if paren_stack_char == ')' {\n            paren_stack.pop();\n  \
    \          paren_stack_len -= paren_stack.len();\n            paren_stack_pos\
    \ += 1;\n            paren_stack_char = paren_string[paren_stack_pos];\n     \
    \   }\n        if paren_stack_char == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_stack_len += 1;\n            paren_stack_pos += 1;\n      \
    \      paren_stack_char = paren_string[paren_stack_pos];\n        }\n        paren_level\
    \ += 1;\n        paren_stack_char = paren_string[paren_stack_pos];\n    }\n  \
    \  paren_stack", "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level:\
    \ usize = 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    for paren in\
    \ paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_level += 1;\n            paren_levels.push(paren_level);\n\
    \        } else if paren == ')' {\n            paren_level -= 1;\n           \
    \ if paren_level == 0 {\n                paren_stack.push(paren_level);\n    \
    \        }\n        } else if paren == ' ' {\n            if paren_stack.len()\
    \ == 0 {\n                continue;\n            }\n            paren_level -=\
    \ 1;\n            paren_levels.push(paren_level);\n        }\n    }\n    paren_levels",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_chars = Vec::new();\n    let mut paren_level_char: char;\n    let\
    \ mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_", "    let mut paren_levels = vec![0];\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_", "    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n \
    \   let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next2 = 0;\n    let mut paren_levels_stack_ptr_next3\
    \ = 0;\n    let mut paren_levels_stack_ptr_next4 = 0;\n    let mut paren_levels_stack_ptr_next5\
    \ = 0;\n    let mut paren_levels_stack_ptr_next6 = 0;\n    let mut paren_levels_stack_ptr_next7\
    \ = 0;\n    let mut paren_levels_stack_ptr_next8 = 0;\n    let mut paren_levels_stack_ptr_next9\
    \ = 0;\n    let mut paren_levels_stack_ptr_next10 = 0;\n    let mut paren_levels_stack_ptr_next11\
    \ = 0;\n    let mut paren_levels_stack_ptr_next12 = 0;\n    let mut paren_levels_stack_ptr_next13\
    \ = 0;\n    let mut paren_levels_stack_ptr_next14 = 0;\n    let mut paren_levels_stack_ptr_next15\
    \ = 0;\n    let mut paren_levels_stack_ptr_next16 = 0;\n    let mut paren_levels_stack_ptr_next17\
    \ = 0;\n    let mut paren_levels_stack_ptr_next18 = 0;\n    let mut paren_levels_stack_ptr_next19\
    \ = 0;\n    let mut paren_levels_stack_ptr_next20 = 0;\n    let mut paren_levels_stack_ptr_next21\
    \ = 0;\n    let mut paren_levels_stack_ptr_next22 = 0;\n    let mut paren_levels_stack_ptr_next23\
    \ = 0;\n    let mut paren_levels_stack_ptr_next24 = 0;\n    let mut paren_levels_stack_ptr_next25\
    \ = 0;\n    let mut paren_levels_stack_ptr_next26 = 0;\n    let mut paren_levels_stack_ptr_next27\
    \ = 0;\n    let mut paren_levels_stack_ptr_next28 = 0;\n    let mut paren_levels_stack_ptr_next29\
    \ = 0;\n    let mut paren_levels_stack_ptr_next30 = 0;\n    let mut paren_levels_stack_ptr_next31\
    \ = 0;\n    let mut paren_levels_stack_ptr_next32 = 0;\n    let mut paren_levels_stack_ptr_next33\
    \ = 0;\n    let mut paren_levels_stack", "    let mut paren_stack: Vec<isize>\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n  \
    \  let mut paren_levels = vec![];\n    let mut paren_nesting_levels = vec![];\n\
    \    let mut paren_levels_len = 0;\n    let mut paren_nesting_levels_len = 0;\n\
    \    let mut paren_levels_lens = vec![];\n    let mut paren_nesting_levels_lens\
    \ = vec![];\n    let mut paren_levels_lens_len = 0;\n    let mut paren_nesting_levels_lens_len\
    \ = 0;\n    let mut paren_levels_lens_lens = vec![];\n    let mut paren_nesting_levels_lens_lens\
    \ = vec![];\n    let mut paren_levels_lens_lens_len = 0;\n    let mut paren_nesting_levels_lens_lens_len\
    \ = 0;\n    let mut paren_levels_lens_lens_lens = vec![];\n    let mut paren_nesting_levels_lens_lens_lens\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_len = 0;\n    let mut paren_nesting_levels_lens_lens_lens_len\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens = vec![];\n    let mut paren_nesting_levels_lens_lens_lens_lens\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_len = 0;\n    let mut\
    \ paren_nesting_levels_lens_lens_lens_lens_len = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens\
    \ = vec![];\n    let mut paren_nesting_levels_lens_lens_lens_lens_lens = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_len = 0;\n    let mut paren_nesting_levels_lens_lens_lens_lens_lens_len\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens = vec![];\n   \
    \ let mut paren_nesting_levels_lens_lens_lens_lens_lens_lens = vec![];\n    let\
    \ mut paren_levels_lens_lens_lens_lens_lens_lens_len = 0;\n    let mut paren_nesting_levels_lens_len",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_stack = vec![0];\n    let mut\
    \ paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nest", "    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren", " \
    \   let mut level = 0;\n    let mut paren_stack = Vec::new();\n    let mut paren_stack_len\
    \ = paren_string.len();\n    let mut paren_stack_pos = 0;\n    let mut paren_stack_char\
    \ = paren_string[paren_stack_pos];\n    while paren_stack_pos < paren_string.len()\
    \ {\n        if paren_stack_char == ')' {\n            paren_stack.pop();\n  \
    \          paren_stack_len -= paren_stack.len();\n            paren_stack_pos\
    \ += 1;\n            level += 1;\n        } else if paren_stack_char == '(' {\n\
    \            paren_stack.push(level);\n            paren_stack_len += 1;\n   \
    \         paren_stack_pos += 1;\n            level += 1;\n        } else {\n \
    \           paren_stack_pos += 1;\n            level += 1;\n        }\n      \
    \  paren_stack_char = paren_string[paren_stack_pos];\n    }\n    paren_stack",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_index = 0;\n    let mut paren_level_char = 0;\n    let mut paren_level_char_next\
    \ = 0;\n    let mut paren_level_char_next_index = 0;\n    let mut paren_level_char_next_index2\
    \ = 0;\n    let mut paren_level_char_next_index3 = 0;\n    let mut paren_level_char_next_index4\
    \ = 0;\n    let mut paren_level_char_next_index5 = 0;\n    let mut paren_level_char_next_index6\
    \ = 0;\n    let mut paren_level_char_next_index7 = 0;\n    let mut paren_level_char_next_index8\
    \ = 0;\n    let mut paren_level_char_next_index9 = 0;\n    let mut paren_level_char_next_index10\
    \ = 0;\n    let mut paren_level_char_next_index11 = 0;\n    let mut paren_level_char_next_index12\
    \ = 0;\n    let mut paren_level_char_next_index13 = 0;\n    let mut paren_level_char_next_index14\
    \ = 0;\n    let mut paren_level_char_next_index15 = 0;\n    let mut paren_level_char_next_index16\
    \ = 0;\n    let mut paren_level_char_next_index17 = 0;\n    let mut paren_level_char_next_index18\
    \ = 0;\n    let mut paren_level_char_next_index19 = 0;\n    let mut paren_level_char_next_index20\
    \ = 0;\n    let mut paren_level_char_next_index21 = 0;\n    let mut paren_level_char_next_index22\
    \ = 0;\n    let mut paren_level_char_next_index23 = 0;\n    let mut paren_level_char_next_index24\
    \ = 0;\n    let mut paren_level_char_next_index25 = 0;\n    let mut paren_level_char_next_index26\
    \ = 0;\n    let mut paren_level_char_next_index27 = 0;\n    let mut paren_level_char_next_index28\
    \ = 0;\n    let mut paren_level_char_next_index29 = 0;\n    let mut paren_level_char_next_index30\
    \ = 0;\n    let mut paren_level_char_next_index31 = 0;\n    let mut paren_level_char_next_index32\
    \ = 0;\n    let mut paren_level_char_next_index33 = 0;\n    let mut paren_level_char_next_index34\
    \ = 0;\n    let mut paren_level_char_next_index35 = 0;\n    let mut paren_level_char_next_index36\
    \ = 0;\n    let mut paren_level_char_next_index37 = 0;\n    let mut paren_level_char_next_index38\
    \ = 0;\n    let mut paren_level_char_next_index39 = 0;\n    let mu", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_indexes:\
    \ Vec<usize>;\n    let mut paren_level_char_indexes_len: usize;\n    let mut paren_level_char_indexes_len_index\
    \ = 0;\n    let mut paren_level_char_indexes_len_indexes: Vec<usize>;\n    let\
    \ mut paren_level_char_indexes_len_indexes_len: usize;\n    let mut paren_level_char_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_char_indexes_len_indexes_len_indexes: Vec<usize>;\n\
    \    let mut paren_level_char_indexes_len_indexes_len_indexes_len: usize;\n  \
    \  let mut paren_level_char_indexes_len_indexes_len_indexes_len_index = 0;\n \
    \   let mut paren_level_char_indexes_len_indexes_len_indexes_len_indexes: Vec<usize>;\n\
    \    let mut paren_level_char_indexes_len_indexes_len_indexes_len_indexes_len:\
    \ usize;\n    let mut paren_level_char_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_char_indexes_len_indexes_len_indexes_len_indexes_len_indexes:\
    \ Vec<usize>;\n    let mut paren_level_char_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_char_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes:\
    \ Vec<usize>;\n    let mut paren_level_char_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_char_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes:\
    \ Vec<usize>;\n    let mut paren_level_char_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_char_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes:\
    \ Vec<usize>;\n    let mut paren_level_char_indexes_len", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_", "    let mut paren_levels = vec![];\n    let\
    \ mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len\
    \ = paren_string.chars().count();\n    let mut paren_level_char_pos = 0;\n   \
    \ let mut paren_level_char_len = paren_string.chars().count();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n   \
    \ let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;", "    let mut paren_level = 0;\n    let\
    \ mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n \
    \   let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_max\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_copy = paren_level", "    let mut\
    \ paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![0];\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut ",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos = 0;\n   \
    \ let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack;\n    let mut paren_levels_stack_ptr_pos = 0;\n    let\
    \ mut paren_levels_stack_ptr_size = paren_levels_stack_ptr.len();\n    let mut\
    \ paren_levels_stack_ptr_ptr = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_ptr_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_size = paren_levels_stack_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr = paren_levels_stack_ptr_ptr;\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_pos = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_size\
    \ = paren_levels_stack_ptr_ptr_ptr.len();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_size = paren_levels_stack_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_pos = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_size\
    \ = paren_levels_stack_ptr_ptr_ptr_ptr_ptr.len();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_size = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_pos = 0;\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_size = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_pos = 0;\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_size = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack", "    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_nestings = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_nestings_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n    let mut paren_nestings_stack_ptr\
    \ = 0;\n    let mut paren_levels_ptr = 0;\n    let mut paren_nestings_ptr = 0;\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr;\n    let mut paren_nestings_ptr_end\
    \ = paren_nestings_ptr;\n    let mut paren_levels_ptr_end_ptr = paren_levels_ptr_end;\n\
    \    let mut paren_nestings_ptr_end_ptr = paren_nestings_ptr_end;\n    let mut\
    \ paren_levels_ptr_end_ptr_end = paren_levels_ptr_end_ptr;\n    let mut paren_nestings_ptr_end_ptr_end\
    \ = paren_nestings_ptr_end_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr_end_ptr_end;\n    let mut paren_nestings_ptr_end_ptr_end_ptr\
    \ = paren_nestings_ptr_end_ptr_end;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr_end_ptr_end_ptr;\n    let mut paren_nestings_ptr_end_ptr_end_ptr_end\
    \ = paren_nestings_ptr_end_ptr_end_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr_end_ptr_end_ptr_end;\n    let mut paren_nestings_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_nestings_ptr_end_ptr_end_ptr_end;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr_end_ptr_end_ptr_end_ptr;\n    let mut paren_nestings_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_nestings_ptr_end_ptr_end_ptr_end_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_depth\
    \ = 0;\n    let mut paren_level_level = 0;\n    let mut paren_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level = 0;\n    let mut paren_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level = 0;\n    let mut paren_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level = 0;\n    let mut paren_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level = 0;\n   \
    \ let mut paren_level_level_level_level_level_level_level_depth = 0;\n    let\
    \ mut paren_level_level_level_level_level_level_level_level = 0;\n    let mut\
    \ paren_level_level_level_level_level_level_level_level_depth = 0;\n    let mut\
    \ paren_level_level_level_level_level_level_level_level_level_level = 0;\n   \
    \ let mut paren_level_level_level_level_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_depth: isize =\
    \ 0;\n    for paren in paren_string.chars() {\n        if paren == '(' {\n   \
    \         paren_stack.push(paren_depth);\n            paren_depth += 1;\n    \
    \    } else if paren == ')' {\n            paren_depth -= 1;\n            if paren_depth\
    \ == 0 {\n                paren_stack.push(paren_depth);\n            }\n    \
    \    } else {\n            paren_depth += 1;\n        }\n    }\n    paren_stack",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nest", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char\
    \ = 0;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len\
    \ = paren_string.chars().count();\n    let mut paren_level_char_len = paren_level_char_len\
    \ as usize;\n    let mut paren_level_char_pos = paren_level_char_len as usize;\n\
    \    let mut paren_level_char_pos = paren_level_char_pos as usize;\n    let mut\
    \ paren_level_char_len = paren_level_char_len as usize;\n    let mut paren_level_char_pos\
    \ = paren_level_char_pos as usize;\n    let mut paren_level_char_len = paren_level_char_len\
    \ as usize;\n    let mut paren_level_char_pos = paren_level_char_pos as usize;\n\
    \    let mut paren_level_char_len = paren_level_char_len as usize;\n    let mut\
    \ paren_level_char_pos = paren_level_char_pos as usize;\n    let mut paren_level_char_len\
    \ = paren_level_char_len as usize;\n    let mut paren_level_char_pos = paren_level_char_pos\
    \ as usize;\n    let mut paren_level_char_len = paren_level_char_len as usize;\n\
    \    let mut paren_level_char_pos = paren_level_char_pos as usize;\n    let mut\
    \ paren_level_char_len = paren_level_char_len as usize;\n    let mut paren_level_char_pos\
    \ = paren_level_char_pos as usize;\n    let mut paren_level_char_len = paren_level_char_len\
    \ as usize;\n    let mut paren_level_char_pos = paren_level_char_pos as usize;\n\
    \    let mut paren_level_char_len = paren_level_char_len as usize;\n    let mut\
    \ paren_level_char_pos = paren_level_char_pos as usize;\n    let mut paren_level_char_len\
    \ = paren_level_char_len as usize;\n    let mut paren_level_char_pos = paren_level_char_pos\
    \ as usize;\n    let mut paren_level_char_len = paren_level_char_len as usize;\n\
    \    let mut paren_level_char_pos = paren_level_char_pos as usize;\n    let mut\
    \ paren_level_char_len = paren_level_char_len as usize;\n    let mut paren_level_char_pos\
    \ = paren_level_char_pos as usize;\n", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_end_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n \
    \   let mut paren_level_count = 0;\n    for paren in paren_string.chars() {\n\
    \        if paren == '(' {\n            paren_stack.push(paren_level);\n     \
    \       paren_level_count += 1;\n        } else if paren == ')' {\n          \
    \  paren_level -= 1;\n            paren_level_count -= 1;\n            if paren_level_count\
    \ == 0 {\n                paren_stack.push(paren_level);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_stack = vec![];\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels = vec![];\n    let mut paren_levels_len\
    \ = 0;\n    let mut paren_levels_lens = vec![];\n    let mut paren_levels_lens_len\
    \ = 0;\n    let mut paren_levels_lens_len2 = 0;\n    let mut paren_levels_lens_len3\
    \ = 0;\n    let mut paren_levels_lens_len4 = 0;\n    let mut paren_levels_lens_len5\
    \ = 0;\n    let mut paren_levels_lens_len6 = 0;\n    let mut paren_levels_lens_len7\
    \ = 0;\n    let mut paren_levels_lens_len8 = 0;\n    let mut paren_levels_lens_len9\
    \ = 0;\n    let mut paren_levels_lens_len10 = 0;\n    let mut paren_levels_lens_len11\
    \ = 0;\n    let mut paren_levels_lens_len12 = 0;\n    let mut paren_levels_lens_len13\
    \ = 0;\n    let mut paren_levels_lens_len14 = 0;\n    let mut paren_levels_lens_len15\
    \ = 0;\n    let mut paren_levels_lens_len16 = 0;\n    let mut paren_levels_lens_len17\
    \ = 0;\n    let mut paren_levels_lens_len18 = 0;\n    let mut paren_levels_lens_len19\
    \ = 0;\n    let mut paren_levels_lens_len20 = 0;\n    let mut paren_levels_lens_len21\
    \ = 0;\n    let mut paren_levels_lens_len22 = 0;\n    let mut paren_levels_lens_len23\
    \ = 0;\n    let mut paren_levels_lens_len24 = 0;\n    let mut paren_levels_lens_len25\
    \ = 0;\n    let mut paren_levels_lens_len26 = 0;\n    let mut paren_levels_lens_len27\
    \ = 0;\n    let mut paren_levels_lens_len28 = 0;\n    let mut paren_levels_lens_len29\
    \ = 0;\n    let mut paren_levels_lens_len30 = 0;\n    let mut paren_levels_lens_len31\
    \ = 0;\n    let mut paren_levels_lens_len32 = 0;\n    let mut paren_levels_lens_len33\
    \ = 0;\n    let mut paren_levels_lens_len34 = 0;\n    let mut paren_levels_lens_len35\
    \ = 0;\n    let mut paren_levels_lens_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nest", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_", "    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n \
    \   let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = 0;\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr", "    let mut level = 0;\n   \
    \ let mut paren_stack = Vec::new();\n    let mut paren_stack_len = paren_string.len();\n\
    \    let mut paren_stack_pos = 0;\n    let mut paren_stack_char = paren_string[paren_stack_pos];\n\
    \    while paren_stack_pos < paren_string.len() {\n        if paren_stack_char\
    \ == ')' {\n            paren_stack.pop();\n            paren_stack_len -= paren_stack.len();\n\
    \            paren_stack_pos += 1;\n            level -= 1;\n        } else if\
    \ paren_stack_char == '(' {\n            paren_stack.push(level);\n          \
    \  paren_stack_len += 1;\n            paren_stack_pos += 1;\n            level\
    \ += 1;\n        } else {\n            paren_stack_pos += 1;\n            paren_stack_char\
    \ = paren_string[paren_stack_pos];\n        }\n    }\n    paren_stack", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars\
    \ = Vec::new();\n    let mut paren_level_char = 0;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;", "    let mut paren_stack = vec![];\n\
    \    let mut paren_depth = 0;\n    for paren in paren_string.chars().filter(|c|\
    \ c == '(' || c == '[' || c == '{') {\n        if paren_depth == paren_stack.len()\
    \ {\n            paren_stack.push(paren_depth);\n        }\n        if paren_depth\
    \ == paren_stack.len() {\n            paren_depth++;\n        }\n        if paren_depth\
    \ == paren_stack.len() {\n            paren_depth++;\n        }\n        paren_depth++;\n\
    \    }\n    paren_stack", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_char = 0;\n    let mut paren_level_char_pos = 0;\n  \
    \  let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_len\
    \ = paren_level_char_len;\n    let mut paren_level_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_len = paren_level_char_len;\n    let mut paren_level_char_len\
    \ = paren_level_char_len;\n    let mut paren_level_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_len = paren_level_char_len;\n    let mut paren_level_char_len\
    \ = paren_level_char_len;\n    let mut paren_level_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_len = paren_level_char_len;\n    let mut paren_level_char_len\
    \ = paren_level_char_len;\n    let mut paren_level_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_len = paren_level_char_len;\n    let mut paren_level_char_len\
    \ = paren_level_char_len;\n    let mut paren_level_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_len = paren_level_char_len;\n    let mut paren_level_char_len\
    \ = paren_level_char_len;\n    let mut paren_level_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_len = paren_level_char_len;\n    let mut paren_level_char_len\
    \ = paren_level_char_len;\n    let mut paren_level_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_len = paren_level_char_len;\n    let mut paren_level_char_len\
    \ = paren_level_char_len;\n    let mut paren_level_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_len = paren_level_char_len;\n    let mut paren_level_char_len\
    \ = paren_level_char_len;\n    let mut paren_level_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_len = paren_level_char_len;\n    let mut paren_level_char_len\
    \ = paren_level_char_len;\n    let mut paren_level_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_len = paren_level_char_len;\n    let mut paren_level_char_len\
    \ = paren_level_char_len;\n    let mut paren_", "    let mut level = 0;\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_level_count: isize = 0;\n    let mut paren_level_string:\
    \ String = String::new();\n    let mut paren_level_string_len: usize = 0;\n  \
    \  let mut paren_level_string_len_len: usize = 0;\n    let mut paren_level_string_len_len2:\
    \ usize = 0;\n    let mut paren_level_string_len_len3: usize = 0;\n    let mut\
    \ paren_level_string_len4: usize = 0;\n    let mut paren_level_string_len5: usize\
    \ = 0;\n    let mut paren_level_string_len6: usize = 0;\n    let mut paren_level_string_len7:\
    \ usize = 0;\n    let mut paren_level_string_len8: usize = 0;\n    let mut paren_level_string_len9:\
    \ usize = 0;\n    let mut paren_level_string_len10: usize = 0;\n    let mut paren_level_string_len11:\
    \ usize = 0;\n    let mut paren_level_string_len12: usize = 0;\n    let mut paren_level_string_len13:\
    \ usize = 0;\n    let mut paren_level_string_len14: usize = 0;\n    let mut paren_level_string_len15:\
    \ usize = 0;\n    let mut paren_level_string_len16: usize = 0;\n    let mut paren_level_string_len17:\
    \ usize = 0;\n    let mut paren_level_string_len18: usize = 0;\n    let mut paren_level_string_len19:\
    \ usize = 0;\n    let mut paren_level_string_len20: usize = 0;\n    let mut paren_level_string_len21:\
    \ usize = 0;\n    let mut paren_level_string_len22: usize = 0;\n    let mut paren_level_string_len23:\
    \ usize = 0;\n    let mut paren_level_string_len24: usize = 0;\n    let mut paren_level_string_len25:\
    \ usize = 0;\n    let mut paren_level_string_len26: usize = 0;\n    let mut paren_level_string_len27:\
    \ usize = 0;\n    let mut paren_level_string_len28: usize = 0;\n    let mut paren_level_string_len29:\
    \ usize = 0;\n    let mut paren_level_string_len30: usize = 0;\n    let mut paren_level_string_len31:\
    \ usize = 0;\n    let mut paren_level_string_len32: usize = 0;", "    let mut\
    \ paren_level = 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_stack: Vec<isize> = vec![];\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr = paren_levels_stack_ptr_ptr;\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mu", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    while !paren_level_string.is_empty()\
    \ {\n        let mut paren_level_string = paren_string;\n        let mut paren_level_count\
    \ = 0;\n        while !paren_level_string.is_empty() {\n            let mut paren_level_string\
    \ = paren_string;\n            let mut paren_level = 0;\n            while !paren_level_string.is_empty()\
    \ {\n                let mut paren_level_string = paren_string;\n            \
    \    let mut paren_level = 0;\n                while !paren_level_string.is_empty()\
    \ {\n                    let mut paren_level_string = paren_string;\n        \
    \            let mut paren_level = 0;\n                    while !paren_level_string.is_empty()\
    \ {\n                        let mut paren_level_string = paren_string;\n    \
    \                    let mut paren_level = 0;\n                        while !paren_level_string.is_empty()\
    \ {\n                            let mut paren_level_string = paren_string;\n\
    \                            let mut paren_level = 0;\n                      \
    \      while !paren_level_string.is_empty() {\n                              \
    \  let mut paren_level_string = paren_string;\n                              \
    \  let mut paren_level = 0;\n                                while !paren_level_string.is_empty()\
    \ {\n                                    let mut paren_level_string = paren_string;\n\
    \                                    let mut paren_level = 0;\n              \
    \                      while !paren_level_string.is_empty() {\n              \
    \                          let mut paren_level_string = paren_string;\n      \
    \                                  let mut paren_level = 0;\n                \
    \                        while !paren_level_string.is_empty() {\n            \
    \                                let mut paren_level_string = paren_string;\n\
    \                                            let mut paren_level = 0;\n      \
    \                                      while !paren_level_string.is_empty() {\n\
    \                                                let mut paren_level_string =\
    \ paren_string;\n                                                let mut paren_level\
    \ = 0;\n                                            }\n                      \
    \                  }\n                                    }\n                \
    \                }\n                            }\n                        }\n\
    \                    }\n                }\n            }\n            paren_level_string\
    \ = paren_string;\n            paren_level_count = 0;\n        }\n        paren_level_string\
    \ = paren_string;\n        paren_level_count = 0;\n    }\n    paren_levels", " \
    \   let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = vec![];\n    let mut paren_levels_stack_ptr = 0;\n    let\
    \ mut paren_levels_stack_ptr_max = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_max_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_max.clone();\n    let mut paren_levels_stack_ptr_max_ptr_copy_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_", "    let mut paren_stack = vec![];\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_count_index = 0;\n    let mut paren_level_max_count_index2\
    \ = 0;\n    let mut paren_level_max_count_index3 = 0;\n    let mut paren_level_max_count_index4\
    \ = 0;\n    let mut paren_level_max_count_index5 = 0;\n    let mut paren_level_max_count_index6\
    \ = 0;\n    let mut paren_level_max_count_index7 = 0;\n    let mut paren_level_max_count_index8\
    \ = 0;\n    let mut paren_level_max_count_index9 = 0;\n    let mut paren_level_max_count_index10\
    \ = 0;\n    let mut paren_level_max_count_index11 = 0;\n    let mut paren_level_max_count_index12\
    \ = 0;\n    let mut paren_level_max_count_index13 = 0;\n    let mut paren_level_max_count_index14\
    \ = 0;\n    let mut paren_level_max_count_index15 = 0;\n    let mut paren_level_max_count_index16\
    \ = 0;\n    let mut paren_level_max_count_index17 = 0;\n    let mut paren_level_max_count_index18\
    \ = 0;\n    let mut paren_level_max_count_index19 = 0;\n    let mut paren_level_max_count_index20\
    \ = 0;\n    let mut paren_level_max_count_index21 = 0;\n    let mut paren_level_max_count_index22\
    \ = 0;\n    let mut paren_level_max_count_index23 = 0;\n    let mut paren_level_max_count_index24\
    \ = 0;\n    let mut paren_level_max_count_index25 = 0;\n    let mut paren_level_max_count_index26\
    \ = 0;\n    let mut paren_level_max_count_index27 = 0;\n    let mut paren_level_max_count_index28\
    \ = 0;\n    let mut paren_level_max_count_index29 = 0;\n    let mut paren_level_max_count_index30\
    \ = 0;\n    let mut paren_level_max_count_index31 = 0;\n    let mut paren_level_max_count_index32\
    \ = 0;\n    let mut paren_level_max_count_index33 = 0;\n    let mut paren_level_max_count_index34\
    \ = 0;\n    let mut paren_level_max_count_index35 = 0;\n    let mut paren_level_max_count_index36\
    \ = 0;\n    let mut paren_level_max_count_index37 = 0;\n    let mut paren_level_max_count_index38\
    \ = 0;\n    let mut paren_level_max_count_index39 = 0;\n    let mut paren_level_max_count_index40\
    \ = 0;\n", "    let mut paren_levels = Vec::new();\n    let mut paren_level =\
    \ 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut paren_levels = vec![];\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr = paren_levels_stack_len;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr",
  "    let mut paren_levels = vec![0];\n    let mut paren_levels_stack = vec![0];\n\
    \    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_ptr = 0;\n\
    \    let mut paren_levels_ptr_stack = 0;\n    let mut paren_levels_ptr_stack_ptr\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack = 0;\n    let mut\
    \ paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr =\
    \ 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack\
    \ = 0;\n    let mut paren_levels_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_stack_ptr_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n \
    \   let mut paren_level_count = vec![];\n    let mut paren_level_count_stack =\
    \ vec![];\n    let mut paren_level_count_stack_count = vec![];\n    let mut paren_level_count_stack_count2\
    \ = vec![];\n    let mut paren_level_count_stack_count3 = vec![];\n    let mut\
    \ paren_level_count_stack_count4 = vec![];\n    let mut paren_level_count_stack_count5\
    \ = vec![];\n    let mut paren_level_count_stack_count6 = vec![];\n    let mut\
    \ paren_level_count_stack_count7 = vec![];\n    let mut paren_level_count_stack_count8\
    \ = vec![];\n    let mut paren_level_count_stack_count9 = vec![];\n    let mut\
    \ paren_level_count_stack_count10 = vec![];\n    let mut paren_level_count_stack_count11\
    \ = vec![];\n    let mut paren_level_count_stack_count12 = vec![];\n    let mut\
    \ paren_level_count_stack_count13 = vec![];\n    let mut paren_level_count_stack_count14\
    \ = vec![];\n    let mut paren_level_count_stack_count15 = vec![];\n    let mut\
    \ paren_level_count_stack_count16 = vec![];\n    let mut paren_level_count_stack_count17\
    \ = vec![];\n    let mut paren_level_count_stack_count18 = vec![];\n    let mut\
    \ paren_level_count_stack_count19 = vec![];\n    let mut paren_level_count_stack_count20\
    \ = vec![];\n    let mut paren_level_count_stack_count21 = vec![];\n    let mut\
    \ paren_level_count_stack_count22 = vec![];\n    let mut paren_level_count_stack_count23\
    \ = vec![];\n    let mut paren_level_count_stack_count24 = vec![];\n    let mut\
    \ paren_level_count_stack_count25 = vec![];\n    let mut paren_level_count_stack_count26\
    \ = vec![];\n    let mut paren_level_count_stack_count27 = vec![];\n    let mut\
    \ paren_level_count_stack_count28 = vec![];\n    let mut paren_level_count_stack_count29\
    \ = vec![];\n    let mut paren_level_count_stack_count30 = vec![];\n    let mut\
    \ paren_level_count_stack_count31 = vec![];\n    let mut paren_level_count_stack_count",
  "    let mut level = 0;\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_count = 0;\n    let mut paren_level_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth = 0;\n    let mut paren_level_max_depth_max_depth_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_count = 0;\n    let mut\
    \ paren_level_max_depth_max_depth_max_depth = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_count = 0;\n\
    \    let mut paren_level_max_depth_max_depth_max_depth_max_depth = 0;\n    let\
    \ mut paren_level_max_depth_max_depth_max_depth_max_count = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_", "    let mut level = 0;\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_len =\
    \ paren_levels;\n    let mut paren_levels_len_len = paren_levels_len;\n    let\
    \ mut paren_levels_len_len_len = paren_levels_len_len;\n    let mut paren_levels_len_len_len_len\
    \ = paren_levels_len_len_len;\n    let mut paren_levels_len_len_len_len_len =\
    \ paren_levels_len_len_len_len;\n    let mut paren_levels_len_len_len_len_len_len\
    \ = paren_levels_len_len_len_len_len_len;\n    let mut paren_levels_len_len_len_len_len_len_len_len\
    \ = paren_levels_len_len_len_len_len_len_len_len_len;\n    let mut paren_levels_len_len_len_len_len_len_len_len_len_len\
    \ = paren_levels_len_len_len_len_len_len_len_len_len_len_len_len;\n    let mut\
    \ paren_levels_len_len_len_len_len_len_len_len_len_len_len_len = paren_levels_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len;\n\
    \    let mut paren_levels_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nest", "    let mut paren_stack = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels =\
    \ Vec::new();\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_nesting_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_nesting_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_nesting_levels_iter = paren_string.char_indices();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_nesting_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_nesting_levels_iter = paren_string.char_indices();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_nesting_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_nesting_levels_iter = paren_string.char_indices();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_nesting_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_nesting_levels_iter = paren_string.char_indices();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_nesting_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_nesting_levels_iter = paren_string.char_indices();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_nesting_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_nesting_levels_iter = paren_string.char_indices();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_nesting_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_iter = paren", "  \
    \  let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_", "   \
    \ let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: usize =\
    \ 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_len:\
    \ usize = 0;\n    let mut paren_levels_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_len: usize = 0;\n    let mut paren_levels_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: usize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_level_count: isize = 0;\n    let mut paren_level_string:\
    \ String = String::new();\n    let mut paren_level_string_count: isize = 0;\n\
    \    let mut paren_level_strings: Vec<String> = vec![];\n    let mut paren_level_strings_count:\
    \ isize = 0;\n    let mut paren_level_strings_string: String = String::new();\n\
    \    let mut paren_level_strings_string_count: isize = 0;\n    let mut paren_level_strings_strings:\
    \ Vec<String> = vec![];\n    let mut paren_level_strings_strings_count: isize\
    \ = 0;\n    let mut paren_level_strings_strings_string: String = String::new();\n\
    \    let mut paren_level_strings_strings_string_count: isize = 0;\n    let mut\
    \ paren_level_strings_strings_strings: Vec<String> = vec![];\n    let mut paren_level_strings_strings_strings_count:\
    \ isize = 0;\n    let mut paren_level_strings_strings_strings_string: String =\
    \ String::new();\n    let mut paren_level_strings_strings_strings_string_count:\
    \ isize = 0;\n    let mut paren_level_strings_strings_strings_strings: Vec<String>\
    \ = vec![];\n    let mut paren_level_strings_strings_strings_strings_count: isize\
    \ = 0;\n    let mut paren_level_strings_strings_strings_strings_string: String\
    \ = String::new();\n    let mut paren_level_strings_strings_strings_strings_strings_count:\
    \ isize = 0;\n    let mut paren_level_strings_strings_strings_strings_strings:\
    \ Vec<String> = vec![];\n    let mut paren_level_strings_strings_strings_strings_strings_count:\
    \ isize = 0;\n    let mut paren_level_strings_strings_strings_strings_strings_string:\
    \ String = String::new();\n    let mut paren_level_strings_strings_strings_strings_strings_strings_count:\
    \ isize = 0;\n    let mut paren_level_strings_strings_strings_strings_strings_strings:\
    \ Vec<String> = vec![];\n    let mut paren_level_strings_strings_strings_strings_strings_strings_count:\
    \ isize = 0;\n    let mut paren_level_strings_strings_", "    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut paren_stack = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_lens = Vec::new();\n    let mut\
    \ paren_levels_lens_len = paren_levels_lens.len();\n    let mut paren_levels_lens_lens\
    \ = paren_levels_lens_lens.len();\n    let mut paren_levels_lens_lens_len = paren_levels_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_len = paren_levels_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_len = paren_levels_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_len = paren_levels_lens_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_len = paren_levels_lens_lens_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len = paren_levels_lens_lens_lens_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = paren_levels_", "    let mut paren_stack = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels = vec![];\n    let mut paren_levels_size = paren_stack.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_pos = paren_stack.len();\n\
    \    let mut paren_levels_pos = paren_stack.len();\n    let mut paren_levels_pos\
    \ = paren_stack.len();\n    let mut paren_levels_pos = paren_stack.len();\n  \
    \  let mut paren_levels_pos = paren_stack.len();\n    let mut paren_levels_pos\
    \ = paren_stack.len();\n    let mut paren_levels_pos = paren_stack.len();\n  \
    \  let mut paren_levels_pos = paren_stack.len();\n    let mut paren_levels_pos\
    \ = paren_stack.len();\n    let mut paren_levels_pos = paren_stack.len();\n  \
    \  let mut paren_levels_pos = paren_stack.len();\n    let mut paren_levels_pos\
    \ = paren_stack.len();\n    let mut paren_levels_pos = paren_stack.len();\n  \
    \  let mut paren_levels_pos = paren_stack.len();\n    let mut paren_levels_pos\
    \ = paren_stack.len();\n    let mut paren_levels_pos = paren_stack.len();\n  \
    \  let mut paren_levels_pos = paren_stack.len();\n    let mut paren_levels_pos\
    \ = paren_stack.len();\n    let mut paren_levels_pos = paren_stack.len();\n  \
    \  let mut paren_levels_pos = paren_stack.len();\n    let mut paren_levels_pos\
    \ = paren_stack.len();\n    let mut paren_levels_pos = paren_stack.len();\n  \
    \  let mut paren_levels_pos = paren_stack.len();\n    let mut paren_levels_pos\
    \ = paren_stack.len();\n    let mut paren_levels_pos = paren_stack.len();\n  \
    \  let mut paren_levels_pos = paren_stack.len();\n    let mut paren_levels_pos\
    \ = paren_stack.len();\n    let mut paren_levels_pos = paren_stack.len();\n  \
    \  let mut paren_levels_pos = paren_stack.len();\n    let mut paren_levels_pos\
    \ = paren_stack.len();\n    let mut paren_levels_pos = paren_stack.len();\n  \
    \  let mut paren_levels_pos = paren_stack.len();\n    let mut paren_levels_pos\
    \ = paren_", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string_index = 0;\n    while paren_level_string_index\
    \ < paren_string.len() {\n        let mut paren_level_string = paren_string.clone();\n\
    \        let mut paren_level_string_index = 0;\n        while paren_level_string_index\
    \ < paren_level_string.len() {\n            let mut paren_level_string = paren_level_string.clone();\n\
    \            let mut paren_level_string_index = 0;\n            while paren_level_string_index\
    \ < paren_level_string.len() {\n                let mut paren_level_string = paren_level_string.clone();\n\
    \                let mut paren_level_string_index = 0;\n                while\
    \ paren_level_string_index < paren_level_string.len() {\n                    let\
    \ mut paren_level_string = paren_level_string.clone();\n                    let\
    \ mut paren_level_string_index = 0;\n                    while paren_level_string_index\
    \ < paren_level_string.len() {\n                        let mut paren_level_string\
    \ = paren_level_string.clone();\n                        let mut paren_level_string_index\
    \ = 0;\n                        while paren_level_string_index < paren_level_string.len()\
    \ {\n                            let mut paren_level_string = paren_level_string.clone();\n\
    \                            let mut paren_level_string_index = 0;\n         \
    \                   while paren_level_string_index < paren_level_string.len()\
    \ {\n                                let mut paren_level_string = paren_level_string.clone();\n\
    \                                let mut paren_level_string_index = 0;\n     \
    \                           while paren_level_string_index < paren_level_string.len()\
    \ {\n                                    let mut paren_level_string = paren_level_string.clone();\n\
    \                                    let mut paren_level_string_index = 0;\n \
    \                                   while paren_level_string_index < paren_level_string.len()\
    \ {\n                                        let mut paren_level_string = paren_level_string.clone();\n\
    \                                        let mut paren_level_string_index = 0;\n\
    \                                        while paren_level_string_index < paren_level_string.len()\
    \ {\n                                            let mut paren_level_string =\
    \ paren_level_string.clone();\n                                            let\
    \ mut paren_level_string_index = 0;\n                                        \
    \    while paren_level_string_index < paren_level_string.len() {\n           \
    \                                     let mut paren_level_string = paren_level_string.clone();\n\
    \                                                let mut paren_level_string_index\
    \ = 0;\n", "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n\
    \    for paren in paren_string.chars() {\n        if paren == '(' {\n        \
    \    paren_depth += 1;\n            paren_stack.push(paren_depth);\n        }\
    \ else if paren == ')' {\n            paren_depth -= 1;\n            if paren_depth\
    \ == 0 {\n                paren_stack.push(paren_depth);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_levels = vec![0];\n    let\
    \ mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_ptr = 0;\n\
    \    let mut paren_levels_ptr = 0;\n    let mut paren_levels_ptr_max = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_max_ptr = paren_levels_ptr;\n    let mut paren_levels_ptr_max_ptr_max\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_max_ptr_max_ptr = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_max_ptr_max_ptr_max = paren_levels_ptr;\n    let\
    \ mut paren_levels_ptr_max_ptr_max_ptr_max_ptr = paren_levels_ptr;\n    let mut\
    \ paren_levels_ptr_max_ptr_max_ptr_max_ptr_max = paren_levels_ptr;\n    let mut\
    \ paren_levels_ptr_max_ptr_max_ptr_max_ptr_max_ptr = paren_levels_ptr;\n    let\
    \ mut paren_levels_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max_ptr_max\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_max_", "    let mut paren_stack\
    \ = Vec::new();\n    let mut paren_depth = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_len = paren_stack.len();\n\
    \    let mut paren_levels_len_ptr = paren_levels_len;\n    let mut paren_levels_ptr\
    \ = paren_levels;\n    let mut paren_levels_ptr_len = paren_levels_ptr.len();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.len();\n    let mut paren_levels_ptr_end = paren_levels_ptr.len();\n\
    \    let mut paren_levels_ptr_end = paren", "    let mut paren_stack = vec![];\n\
    \    let mut paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = vec![];\n    let mut paren_levels_len = 0;\n    let mut paren_levels_lens\
    \ = vec![];\n    let mut paren_levels_lens_len = 0;\n    let mut paren_levels_lens_len2\
    \ = 0;\n    let mut paren_levels_lens_len3 = 0;\n    let mut paren_levels_lens_len4\
    \ = 0;\n    let mut paren_levels_lens_len5 = 0;\n    let mut paren_levels_lens_len6\
    \ = 0;\n    let mut paren_levels_lens_len7 = 0;\n    let mut paren_levels_lens_len8\
    \ = 0;\n    let mut paren_levels_lens_len9 = 0;\n    let mut paren_levels_lens_len10\
    \ = 0;\n    let mut paren_levels_lens_len11 = 0;\n    let mut paren_levels_lens_len12\
    \ = 0;\n    let mut paren_levels_lens_len13 = 0;\n    let mut paren_levels_lens_len14\
    \ = 0;\n    let mut paren_levels_lens_len15 = 0;\n    let mut paren_levels_lens_len16\
    \ = 0;\n    let mut paren_levels_lens_len17 = 0;\n    let mut paren_levels_lens_len18\
    \ = 0;\n    let mut paren_levels_lens_len19 = 0;\n    let mut paren_levels_lens_len20\
    \ = 0;\n    let mut paren_levels_lens_len21 = 0;\n    let mut paren_levels_lens_len22\
    \ = 0;\n    let mut paren_levels_lens_len23 = 0;\n    let mut paren_levels_lens_len24\
    \ = 0;\n    let mut paren_levels_lens_len25 = 0;\n    let mut paren_levels_lens_len26\
    \ = 0;\n    let mut paren_levels_lens_len27 = 0;\n    let mut paren_levels_lens_len28\
    \ = 0;\n    let mut paren_levels_lens_len29 = 0;\n    let mut paren_levels_lens_len30\
    \ = 0;\n    let mut paren_levels_lens_len31 = 0;\n    let mut paren_levels_lens_len32\
    \ = 0;\n    let mut paren_levels_lens_len33 = 0;\n    let mut paren_levels_lens_len34\
    \ = 0;\n    let mut paren_levels_lens_len35 = 0;\n    let mu", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index =\
    \ 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_chars_index\
    \ = 0;\n    let mut paren_level_chars_index2 = 0;\n    let mut paren_level_chars_index3\
    \ = 0;\n    let mut paren_level_chars_index4 = 0;\n    let mut paren_level_chars_index5\
    \ = 0;\n    let mut paren_level_chars_index6 = 0;\n    let mut paren_level_chars_index7\
    \ = 0;\n    let mut paren_level_chars_index8 = 0;\n    let mut paren_level_chars_index9\
    \ = 0;\n    let mut paren_level_chars_index10 = 0;\n    let mut paren_level_chars_index11\
    \ = 0;\n    let mut paren_level_chars_index12 = 0;\n    let mut paren_level_chars_index13\
    \ = 0;\n    let mut paren_level_chars_index14 = 0;\n    let mut paren_level_chars_index15\
    \ = 0;\n    let mut paren_level_chars_index16 = 0;\n    let mut paren_level_chars_index17\
    \ = 0;\n    let mut paren_level_chars_index18 = 0;\n    let mut paren_level_chars_index19\
    \ = 0;\n    let mut paren_level_chars_index20 = 0;\n    let mut paren_level_chars_index21\
    \ = 0;\n    let mut paren_level_chars_index22 = 0;\n    let mut paren_level_chars_index23\
    \ = 0;\n    let mut paren_level_chars_index24 = 0;\n    let mut paren_level_chars_index25\
    \ = 0;\n    let mut paren_level_chars_index26 = 0;\n    let mut paren_level_chars_index27\
    \ = 0;\n    let mut paren_level_chars_index28 = 0;\n    let mut paren_level_chars_index29\
    \ = 0;\n    let mut paren_level_chars_index30 = 0;\n    let mut paren_level_chars_index31\
    \ = 0;\n    let mut paren_level_chars_index32 = 0;\n    let mut paren_level_chars_index33\
    \ = 0;\n    let mut paren_level_chars_index34 = 0;\n    let mut paren_level_chars_index35\
    \ = 0;\n    let mut paren_level_chars_index36 = 0;\n    let mut paren_level_chars_index37\
    \ = 0;\n    let mut paren_level_chars_index38 = 0;\n    let mut paren_level_chars_index39\
    \ = 0;\n    let mut paren_level_chars_index40 = 0;\n    let mut paren_level_chars_index41\
    \ = 0;\n    let mut paren_level_chars_index42 = 0;\n    let mut paren_level_chars_index43\
    \ = 0;\n    let mu", "    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_nesting_levels\
    \ = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_nesting_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_nesting_levels_stack_ptr = paren_nesting_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_max = paren_levels_stack.len();\n    let mut\
    \ paren_nesting_levels_stack_ptr_max = paren_nesting_levels_stack.len();\n   \
    \ let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack.len();\n    let\
    \ mut paren_nesting_levels_stack_ptr_max_ptr = paren_nesting_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max = paren_levels_stack.len();\n\
    \    let mut paren_nesting_levels_stack_ptr_max_ptr_max = paren_nesting_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr = paren_levels_stack.len();\n\
    \    let mut paren_nesting_levels_stack_ptr_max_ptr_max_ptr = paren_nesting_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr_max = paren_levels_stack.len();\n\
    \    let mut paren_nesting_levels_stack_ptr_max_ptr_max_ptr_max = paren_nesting_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr = paren_levels_stack.len();\n\
    \    let mut paren_nesting_levels_stack_ptr_max_ptr_max_ptr_max_ptr = paren_nesting_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max = paren_levels_stack.len();\n\
    \    let mut paren_nesting_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max = paren_nesting_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_max_ptr_max_ptr_max_ptr_max_ptr = paren_levels_stack.len();\n\
    \    let mut paren_nesting_levels_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nest", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    while paren_level_count < MAX_NESTING {\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        while paren_level_count\
    \ < MAX_NESTING {\n            let mut paren_level_string = paren_string;\n  \
    \          let mut paren_level_string = paren_string;\n            let mut paren_level_string\
    \ = paren_string;\n            while paren_level_count < MAX_NESTING {\n     \
    \           let mut paren_level_string = paren_string;\n                let mut\
    \ paren_level_string = paren_string;\n                let mut paren_level_string\
    \ = paren_string;\n                while paren_level_count < MAX_NESTING {\n \
    \                   let mut paren_level_string = paren_string;\n             \
    \       let mut paren_level_string = paren_string;\n                    let mut\
    \ paren_level_string = paren_string;\n                    while paren_level_count\
    \ < MAX_NESTING {\n                        let mut paren_level_string = paren_string;\n\
    \                        let mut paren_level_string = paren_string;\n        \
    \                let mut paren_level_string = paren_string;\n                \
    \        while paren_level_count < MAX_NESTING {\n                           \
    \ let mut paren_level_string = paren_string;\n                            let\
    \ mut paren_level_string = paren_string;\n                            let mut\
    \ paren_level_string = paren_string;\n                            while paren_level_count\
    \ < MAX_NESTING {\n                                let mut paren_level_string\
    \ = paren_string;\n                                let mut paren_level_string\
    \ = paren_string;\n                                let mut paren_level_string\
    \ = paren_string;\n                                while paren_level_count < MAX_NESTING\
    \ {\n                                    let mut paren_level_string = paren_string;\n\
    \                                    let mut paren_level_string = paren_string;\n\
    \                                    let mut paren_level_string = paren_string;\n\
    \                                    while paren_level_count < MAX_NESTING {\n\
    \                                        let mut paren_level_string = paren_string;\n\
    \                                        let mut paren_level_string = paren_string;\n\
    \                                        let mut paren_level_string = paren_string;\n\
    \                                    }", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_chars = vec![];\n    let\
    \ mut paren_level_chars_index = 0;\n    let mut paren_level_chars_index2 = 0;\n\
    \    let mut paren_level_chars_index3 = 0;\n    let mut paren_level_chars_index4\
    \ = 0;\n    let mut paren_level_chars_index5 = 0;\n    let mut paren_level_chars_index6\
    \ = 0;\n    let mut paren_level_chars_index7 = 0;\n    let mut paren_level_chars_index8\
    \ = 0;\n    let mut paren_level_chars_index9 = 0;\n    let mut paren_level_chars_index10\
    \ = 0;\n    let mut paren_level_chars_index11 = 0;\n    let mut paren_level_chars_index12\
    \ = 0;\n    let mut paren_level_chars_index13 = 0;\n    let mut paren_level_chars_index14\
    \ = 0;\n    let mut paren_level_chars_index15 = 0;\n    let mut paren_level_chars_index16\
    \ = 0;\n    let mut paren_level_chars_index17 = 0;\n    let mut paren_level_chars_index18\
    \ = 0;\n    let mut paren_level_chars_index19 = 0;\n    let mut paren_level_chars_index20\
    \ = 0;\n    let mut paren_level_chars_index21 = 0;\n    let mut paren_level_chars_index22\
    \ = 0;\n    let mut paren_level_chars_index23 = 0;\n    let mut paren_level_chars_index24\
    \ = 0;\n    let mut paren_level_chars_index25 = 0;\n    let mut paren_level_chars_index26\
    \ = 0;\n    let mut paren_level_chars_index27 = 0;\n    let mut paren_level_chars_index28\
    \ = 0;\n    let mut paren_level_chars_index29 = 0;\n    let mut paren_level_chars_index30\
    \ = 0;\n    let mut paren_level_chars_index31 = 0;\n    let mut paren_level_chars_index32\
    \ = 0;\n    let mut paren_level_chars_index33 = 0;\n    let mut paren_level_chars_index34\
    \ = 0;\n    let mut paren_level_chars_index35 = 0;\n    let mut paren_level_chars_index36\
    \ = 0;\n    let mut paren_level_chars_index37 = 0;\n    let mut paren_level_chars_index38\
    \ = 0;\n    let mut paren_level_chars_index39 = 0;\n    let mut paren_level_chars_index40\
    \ = 0;\n    let mut paren_level_chars_index41 = 1;\n    let mut paren_level_chars_index42\
    \ = 1;\n    let mut paren", "    let mut paren_stack = vec![];\n    let mut paren_depth\
    \ = 0;\n    let mut paren_level = 0;\n    for paren in paren_string.chars() {\n\
    \        if paren == '(' {\n            paren_stack.push(paren_depth);\n     \
    \       paren_depth += 1;\n            paren_level += 1;\n        } else if paren\
    \ == ')' {\n            paren_depth -= 1;\n            paren_level -= 1;\n   \
    \         if paren_stack.is_empty() {\n                return vec![paren_level];\n\
    \            }\n        }\n    }\n    panic!(\"Parentheses string should contain\
    \ at least one open and one close parenthesis.\");", "    let mut level = 0;\n\
    \    let mut paren_stack = vec![];\n    for paren in paren_string.chars() {\n\
    \        if paren == ')' {\n            paren_stack.pop();\n            level\
    \ += 1;\n        } else if paren == '(' {\n            paren_stack.push(level);\n\
    \        }\n    }\n    paren_stack", "    let mut paren_stack = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_levels_size = Vec::new();\n    let mut paren_levels_size_ptr = Vec::new();\n\
    \    let mut paren_levels_size_max = Vec::new();\n    let mut paren_levels_size_max_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_min = Vec::new();\n    let mut\
    \ paren_levels_size_min_ptr = Vec::new();\n    let mut paren_levels_size_max =\
    \ Vec::new();\n    let mut paren_levels_size_max_ptr = Vec::new();\n    let mut\
    \ paren_levels_size_min = Vec::new();\n    let mut paren_levels_size_min_ptr =\
    \ Vec::new();\n    let mut paren_levels_size_max = Vec::new();\n    let mut paren_levels_size_max_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_min = Vec::new();\n    let mut\
    \ paren_levels_size_min_ptr = Vec::new();\n    let mut paren_levels_size_max =\
    \ Vec::new();\n    let mut paren_levels_size_max_ptr = Vec::new();\n    let mut\
    \ paren_levels_size_min = Vec::new();\n    let mut paren_levels_size_min_ptr =\
    \ Vec::new();\n    let mut paren_levels_size_max = Vec::new();\n    let mut paren_levels_size_max_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_min = Vec::new();\n    let mut\
    \ paren_levels_size_min_ptr = Vec::new();\n    let mut paren_levels_size_max =\
    \ Vec::new();\n    let mut paren_levels_size_max_ptr = Vec::new();\n    let mut\
    \ paren_levels_size_min = Vec::new();\n    let mut paren_levels_size_min_ptr =\
    \ Vec::new();\n    let mut paren_levels_size_max = Vec::new();\n    let mut paren_levels_size_max_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_min = Vec::new();\n    let mut\
    \ paren_levels_size_min_ptr = Vec::new();\n    let mut paren_levels_size_max =\
    \ Vec::new();\n    let mut paren_levels_size_max_ptr = Vec::new();\n    let mu",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_iter = paren_string.char_indices().rev();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.map(|i| {\n        if paren_level == 0 {\n            paren_level\
    \ = i.0;\n            paren_levels.push(0)\n        } else {\n            paren_levels.push(i.0\
    \ - paren_level);\n            paren_level = i.0;\n        }\n        paren_level\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.map(|i| {\n      \
    \  if paren_level == 0 {\n            paren_level = i.0;\n            paren_levels.push(0)\n\
    \        } else {\n            paren_levels.push(i.0 - paren_level);\n       \
    \     paren_level = i.0;\n        }\n        paren_level\n    });\n    let mut\
    \ paren_levels_iter = paren_levels_iter.map(|i| {\n        if paren_level == 0\
    \ {\n            paren_level = i.0;\n            paren_levels.push(0)\n      \
    \  } else {\n            paren_levels.push(i.0 - paren_level);\n            paren_level\
    \ = i.0;\n        }\n        paren_level\n    });\n    let mut paren_levels_iter\
    \ = paren_levels_iter.map(|i| {\n        if paren_level == 0 {\n            paren_level\
    \ = i.0;\n            paren_levels.push(0)\n        } else {\n            paren_levels.push(i.0\
    \ - paren_level);\n            paren_level = i.0;\n        }\n        paren_level\n\
    \    });\n    let mut paren_levels_iter = paren_levels_iter.map(|i| {\n      \
    \  if paren_level == 0 {\n            paren_level = i.0;\n            paren_levels.push(0)\n\
    \        } else {\n            paren_levels.push(i.0 - paren_level);\n       \
    \     paren_level = i.0;\n        }\n        paren_level\n    });\n    let mut\
    \ paren_levels_iter = paren_levels_iter.map(|i| {\n        if paren_level == 0\
    \ {\n            paren_level = i.0;\n            paren_levels.push(0)\n      \
    \  } else {\n            paren_levels.push(i.0 - paren_level);\n            paren_level\
    \ = i.0;\n        }\n        paren_level\n    });\n    let mut paren_levels_iter\
    \ = paren_levels_iter.map(|i| {\n        if paren_level == 0 {\n            paren_level\
    \ = i.0;\n            paren_levels.push(0)\n        } else {\n            paren_levels.push(i.0\
    \ - paren_level);\n            paren", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_chars = Vec::new();\n \
    \   let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_next = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_level", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_iter = paren_string.chars().enumerate().filter_map(|(i,\
    \ c)| {\n        if c.is_whitespace() {\n            paren_level += 1;\n     \
    \       Some(paren_level)\n        } else {\n            paren_level += 1;\n \
    \           None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(idx,\
    \ c)| {\n        if c.is_whitespace() {\n            paren_level -= 1;\n     \
    \       Some(paren_level)\n        } else {\n            paren_level -= 1;\n \
    \           None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(idx,\
    \ c)| {\n        if c.is_whitespace() {\n            paren_level -= 1;\n     \
    \       Some(paren_level)\n        } else {\n            paren_level -= 1;\n \
    \           None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(idx,\
    \ c)| {\n        if c.is_whitespace() {\n            paren_level -= 1;\n     \
    \       Some(paren_level)\n        } else {\n            paren_level -= 1;\n \
    \           None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(idx,\
    \ c)| {\n        if c.is_whitespace() {\n            paren_level -= 1;\n     \
    \       Some(paren_level)\n        } else {\n            paren_level -= 1;\n \
    \           None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(idx,\
    \ c)| {\n        if c.is_whitespace() {\n            paren_level -= 1;\n     \
    \       Some(paren_level)\n        } else {\n            paren_level -= 1;\n \
    \           None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(idx,\
    \ c)| {\n        if c.is_whitespace() {\n            paren_level -= 1;\n     \
    \       Some(paren_level)\n        } else {\n            paren_level -= 1;\n \
    \           None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(idx,\
    \ c)| {\n        if c.is_whitespace() {\n            paren_level -= 1;\n     \
    \       Some(paren_level)\n        } else {\n            paren_level -= 1;\n \
    \           None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|(idx,\
    \ c)| {\n        if c.is_whitespace() {\n            paren_level -= 1;\n     \
    \       ", "    let mut paren_levels = Vec::new();\n    let mut paren_level =\
    \ 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr = paren_levels_stack_len;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_level",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_level_string = paren_string;\n    let mut paren_level_char\
    \ = '(';\n    let mut paren_level_char_index = 0;\n    let mut paren_level_char_length\
    \ = 0;\n    let mut paren_level_char_length_index = 0;\n    let mut paren_level_char_length_string\
    \ = paren_level_char.to_string();\n    let mut paren_level_char_length_char =\
    \ '(';\n    let mut paren_level_char_length_char_index = 0;\n    let mut paren_level_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_index = 0;\n    let mut\
    \ paren_level_char_length_char_length_string = paren_level_char_length_char.to_string();\n\
    \    let mut paren_level_char_length_char_length_char = '(';\n    let mut paren_level_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length = 0;\n   \
    \ let mut paren_level_char_length_char_length_char_index = 0;\n    let mut paren_level_char_length_char_length_char_length_string\
    \ = paren_level_char_length_char_length_char.to_string();\n    let mut paren_level_char_length_char_length_char_length_char\
    \ = '(';\n    let mut paren_level_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_string\
    \ = paren_level_char_length_char_length_char_length_char_char.to_string();\n \
    \   let mut paren_level_char_length_char_length_char_length_char_length_char =\
    \ '(';\n    let mut paren_level_char_length_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_string\
    \ = paren_level_char_length_char_length_char_length_char_char_length_char_length_char.to_string();\n\
    \    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    for paren in paren_string.chars() {\n        if paren == '(' {\n        \
    \    paren_level += 1;\n            paren_level_count += 1;\n        } else if\
    \ paren == ')' {\n            paren_level -= 1;\n            paren_level_count\
    \ += 1;\n            if paren_level == 0 {\n                paren_levels.push(paren_level_count);\n\
    \            }\n        }\n    }\n    paren_levels", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let ", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let\
    \ mut paren_level_chars = Vec::new();\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_len = paren_level_chars.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = ",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    while !paren_level_string.is_empty() {\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level = 0;\n        while !paren_level_string.is_empty()\
    \ {\n            let mut paren_level_string = paren_string;\n            let mut\
    \ paren_level = 0;\n            while !paren_level_string.is_empty() {\n     \
    \           let mut paren_level_string = paren_string;\n                let mut\
    \ paren_level = 0;\n                while !paren_level_string.is_empty() {\n \
    \                   let mut paren_level_string = paren_string;\n             \
    \       let mut paren_level = 0;\n                    while !paren_level_string.is_empty()\
    \ {\n                        let mut paren_level_string = paren_string;\n    \
    \                    let mut paren_level = 0;\n                        while !paren_level_string.is_empty()\
    \ {\n                            let mut paren_level_string = paren_string;\n\
    \                            let mut paren_level = 0;\n                      \
    \      while !paren_level_string.is_empty() {\n                              \
    \  let mut paren_level_string = paren_string;\n                              \
    \  let mut paren_level = 0;\n                                while !paren_level_string.is_empty()\
    \ {\n                                    let mut paren_level_string = paren_string;\n\
    \                                    let mut paren_level = 0;\n              \
    \                      while !paren_level_string.is_empty() {\n              \
    \                          let mut paren_level_string = paren_string;\n      \
    \                                  let mut paren_level = 0;\n                \
    \                        while !paren_level_string.is_empty() {\n            \
    \                                let mut paren_level_string = paren_string;\n\
    \                                            let mut paren_level = 0;\n      \
    \                                      while !paren_level_string.is_empty() {\n\
    \                                                let mut paren_level_string =\
    \ paren_string;\n                                                let mut paren_level\
    \ = 0;\n                                            }\n                      \
    \                  }\n                                    }\n                \
    \                }\n                            }\n                        }\n\
    \                    }\n                }\n            }\n        }\n        paren_levels.push(paren_level);\n\
    \        paren_level_count = paren_level_count\n            + paren_level\n  \
    \          + 1;\n        paren_level_string = paren_string;\n        paren_level_string\
    \ = paren_string;\n        paren_level_string = paren_string;\n        paren_level_string\
    \ = paren_string;\n        paren_level_string = paren_string;\n        ", "  \
    \  let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren", "    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_nestings = Vec::new();\n\
    \    let mut paren_levels_len = paren_levels.len();\n    let mut paren_nestings_len\
    \ = paren_nestings.len();\n    let mut paren_levels_ptr = paren_levels.as_mut_ptr();\n\
    \    let mut paren_nestings_ptr = paren_nestings.as_mut_ptr();\n    let mut paren_levels_end\
    \ = paren_levels_ptr.offset(paren_levels_len);\n    let mut paren_nestings_end\
    \ = paren_nestings_ptr.offset(paren_nestings_len);\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.offset(paren_levels_len);\n    let mut paren_nestings_ptr_end\
    \ = paren_nestings_ptr.offset(paren_nestings_len);\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.offset(paren_levels_len);\n    let mut paren_nestings_ptr_end\
    \ = paren_nestings_ptr.offset(paren_nestings_len);\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.offset(paren_levels_len);\n    let mut paren_nestings_ptr_end\
    \ = paren_nestings_ptr.offset(paren_nestings_len);\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.offset(paren_levels_len);\n    let mut paren_nestings_ptr_end\
    \ = paren_nestings_ptr.offset(paren_nestings_len);\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.offset(paren_levels_len);\n    let mut paren_nestings_ptr_end\
    \ = paren_nestings_ptr.offset(paren_nestings_len);\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.offset(paren_levels_len);\n    let mut paren_nestings_ptr_end\
    \ = paren_nestings_ptr.offset(paren_nestings_len);\n    let mut paren_levels_ptr_end\
    \ = paren_levels_ptr.offset(paren_levels_len);\n    let mut paren_nestings_ptr_end\
    \ = paren_nestings_ptr.offset(paren_", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut\
    \ paren_levels_iter_next = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter_next = paren_levels_iter.peekable();\n\
    \    let mu", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_pos = paren_levels_stack_top;\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack_top;\n    let mut paren_levels_stack_pos = paren_levels_stack_top;\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack_top;\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack_top;\n    let mut paren_levels_stack_pos = paren_levels_stack_top;\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack_top;\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack_top;\n    let mut paren_levels_stack_pos = paren_levels_stack_top;\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack_top;\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack_top;\n    let mut paren_levels_stack_pos = paren_levels_stack_top;\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack_top;\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack_top;\n    let mut paren_levels_stack_pos = paren_levels_stack_top;\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack_top;\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack_top;\n    let mut paren_levels_stack_pos = paren_levels_stack_top;\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack_top;\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack_top;\n    let mut paren_levels_stack_pos = paren_levels_stack_top;\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack_top;\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack_top;\n    let mut paren_levels_stack_pos = paren_levels_stack_top;\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack_top;\n    let mut paren_levels_stack_pos\
    \ = paren_levels_stack_top;\n    let mut paren_levels_stack_pos = paren_levels_stack_top;\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack_top;\n    let mu", " \
    \   let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos = 0;\n   \
    \ let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.", "    let mut paren_stack\
    \ = vec![];\n    let mut paren_depth = 0;\n    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_len = paren_stack.len();\n\
    \    let mut paren_levels_len2 = paren_levels_len;\n    let mut paren_levels_len3\
    \ = paren_levels_len2;\n    let mut paren_levels_len4 = paren_levels_len3;\n \
    \   let mut paren_levels_len5 = paren_levels_len4;\n    let mut paren_levels_len6\
    \ = paren_levels_len5;\n    let mut paren_levels_len7 = paren_levels_len6;\n \
    \   let mut paren_levels_len8 = paren_levels_len7;\n    let mut paren_levels_len9\
    \ = paren_levels_len8;\n    let mut paren_levels_len10 = paren_levels_len9;\n\
    \    let mut paren_levels_len11 = paren_levels_len10;\n    let mut paren_levels_len12\
    \ = paren_levels_len11;\n    let mut paren_levels_len13 = paren_levels_len12;\n\
    \    let mut paren_levels_len14 = paren_levels_len13;\n    let mut paren_levels_len15\
    \ = paren_levels_len14;\n    let mut paren_levels_len16 = paren_levels_len15;\n\
    \    let mut paren_levels_len17 = paren_levels_len16;\n    let mut paren_levels_len18\
    \ = paren_levels_len17;\n    let mut paren_levels_len19 = paren_levels_len18;\n\
    \    let mut paren_levels_len20 = paren_levels_len19;\n    let mut paren_levels_len21\
    \ = paren_levels_len20;\n    let mut paren_levels_len22 = paren_levels_len21;\n\
    \    let mut paren_levels_len23 = paren_levels_len22;\n    let mut paren_levels_len24\
    \ = paren_levels_len23;\n    let mut paren_levels_len25 = paren_levels_len24;\n\
    \    let mut paren_levels_len26 = paren_levels_len25;\n    let mut paren_levels_len27\
    \ = paren_levels_len26;\n    let mut paren_levels_len28 = paren_levels_len27;\n\
    \    let mut paren", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nest", "    let mut paren_level = 0;\n    let\
    \ mut paren_levels = vec![];\n    let mut paren_levels_stack = vec![];\n    let\
    \ mut paren_levels_stack_size = vec![];\n    let mut paren_levels_stack_ptr =\
    \ vec![];\n    let mut paren_levels_stack_ptr_ptr = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = vec![];\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr", "    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n \
    \   let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = ", "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n  \
    \  let mut paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren", "    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren", "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr", "    let\
    \ mut level = 0;\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_level_stack = Vec::new();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_size =\
    \ paren_level_stack.len();\n    let mut paren_level_stack_pos = 0;\n    let mut\
    \ paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n    let\
    \ mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n   \
    \ let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_pos = 0;",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut paren_stack = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_size\
    \ = paren_stack.len();\n    let mut paren_levels_sizes = Vec::new();\n    let\
    \ mut paren_levels_sizes_size = paren_levels_sizes.len();\n    let mut paren_levels_sizes_sizes\
    \ = paren_levels_sizes_sizes.len();\n    let mut paren_levels_sizes_sizes_size\
    \ = paren_levels_sizes_sizes_sizes.len();\n    let mut paren_levels_sizes_sizes_sizes_size\
    \ = paren_levels_sizes_sizes_sizes_sizes.len();\n    let mut paren_levels_sizes_sizes_sizes_sizes_size\
    \ = paren_levels_sizes_sizes_sizes_sizes_sizes.len();\n    let mut paren_levels_sizes_sizes_sizes_sizes_sizes_size\
    \ = paren_levels_sizes_sizes_sizes_sizes_sizes_sizes.len();\n    let mut paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes.len();\n    let mut\
    \ paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size = paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = paren_levels_", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n \
    \   let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mu", "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n\
    \    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let\
    \ mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack", "    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_", "    let mut level = 0;\n    let mut paren_stack\
    \ = Vec::new();\n    for paren in paren_string.chars().filter_map(|c| match c\
    \ {\n        '(' | ')' | ' ' => false,\n        _ => true,\n    }) {\n       \
    \ if paren == ' ' {\n            paren_stack.push(level);\n            level +=\
    \ 1;\n        } else {\n            level -= 1;\n            if paren_stack.len()\
    \ == 0 {\n                return vec![level];\n            }\n            paren_stack.pop();\n\
    \        }\n    }\n    vec![level]", "    let mut paren_stack = vec![];\n    let\
    \ mut paren_depth = 0;\n    for paren in paren_string.chars() {\n        if paren\
    \ == ')' {\n            paren_depth += 1;\n        } else if paren == '(' {\n\
    \            paren_depth += 1;\n            if paren_depth > paren_stack.len()\
    \ {\n                paren_stack.push(paren_depth);\n            }\n        }\
    \ else {\n            paren_depth = 0;\n        }\n    }\n    paren_stack", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nest", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_stack\
    \ = Vec::new();\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_", "   \
    \ let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars\
    \ = vec![];\n    let mut paren_level_char = 0;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let ", "    let mut paren_level =\
    \ 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_nestings = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_nestings_stack = Vec::new();\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_size = paren_nestings_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.as_mut_ptr();\n    let\
    \ mut paren_nestings_stack_ptr = paren_nestings_stack.as_mut_ptr();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_nestings_stack_ptr_end = paren_nestings_stack_ptr.offset(paren_nestings_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_nestings_stack_ptr_end = paren_nestings_stack_ptr.offset(paren_nestings_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_nestings_stack_ptr_end = paren_nestings_stack_ptr.offset(paren_nestings_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_nestings_stack_ptr_end = paren_nestings_stack_ptr.offset(paren_nestings_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_nestings_stack_ptr_end = paren_nestings_stack_ptr.offset(paren_nestings_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_nestings_stack_ptr_end = paren_nestings_stack_ptr.offset(paren_nestings_stack_size);\n\
    \    let mut paren_levels_", "    let mut paren_stack: Vec<isize> = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = vec![];\n    for\
    \ paren in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_level_count.push(paren_level);\n            paren_level +=\
    \ 1;\n        } else if paren == ')' {\n            paren_level -= 1;\n      \
    \      paren_level_count[paren_level] -= 1;\n            if paren_level_count[paren_level]\
    \ == 0 {\n                paren_stack.push(paren_level);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_stack = Vec::new();\n    let\
    \ mut paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = paren_stack.len();\n    let mut paren_level_depth = paren_level;\n    let\
    \ mut paren_level_level_stack = paren_stack.clone();\n    let mut paren_level_level_level_count\
    \ = paren_level_level_stack.len();\n    let mut paren_level_level_level_level_depth\
    \ = paren_level_level_level;\n    let mut paren_level_level_level_level_level_level_stack\
    \ = paren_level_level_level_stack.clone();\n    let mut paren_level_level_level_level_level_level_level_level_stack\
    \ = paren_level_level_level_level_level_level_level_stack.clone();\n    let mut\
    \ paren_level_level_level_level_level_level_level_level_level_stack = paren_level_level_level_level_level_level_level_level_level_level_stack.clone();\n\
    \    let mut paren_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = paren_level_level_level_level_level_level_level_level_level_level_level_level_level_stack.clone();\n\
    \    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack.clone();\n\
    \    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack.clone();\n\
    \    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack.clone();\n\
    \    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack.clone();\n\
    \    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack.clone();\n\
    \    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack\
    \ = paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_stack.clone();\n\
    \    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    for paren in paren_string.chars() {\n        if paren\
    \ == '(' {\n            paren_level += 1;\n            paren_nesting += 1;\n \
    \           paren_levels.push(paren_nesting);\n        } else if paren == ')'\
    \ {\n            paren_nesting -= 1;\n            paren_level -= 1;\n        \
    \    if paren_nesting == 0 {\n                paren_levels.pop();\n          \
    \  }\n        } else {\n            paren_nesting = 0;\n        }\n    }\n   \
    \ paren_levels", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mu",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels =\
    \ Vec::new();\n    let mut paren_levels_len = paren_stack.len();\n    let mut\
    \ paren_levels_len2 = paren_levels_len;\n    let mut paren_levels_len3 = paren_levels_len;\n\
    \    let mut paren_levels_len4 = paren_levels_len;\n    let mut paren_levels_len5\
    \ = paren_levels_len;\n    let mut paren_levels_len6 = paren_levels_len;\n   \
    \ let mut paren_levels_len7 = paren_levels_len;\n    let mut paren_levels_len8\
    \ = paren_levels_len;\n    let mut paren_levels_len9 = paren_levels_len;\n   \
    \ let mut paren_levels_len10 = paren_levels_len;\n    let mut paren_levels_len11\
    \ = paren_levels_len;\n    let mut paren_levels_len12 = paren_levels_len;\n  \
    \  let mut paren_levels_len13 = paren_levels_len;\n    let mut paren_levels_len14\
    \ = paren_levels_len;\n    let mut paren_levels_len15 = paren_levels_len;\n  \
    \  let mut paren_levels_len16 = paren_levels_len;\n    let mut paren_levels_len17\
    \ = paren_levels_len;\n    let mut paren_levels_len18 = paren_levels_len;\n  \
    \  let mut paren_levels_len19 = paren_levels_len;\n    let mut paren_levels_len20\
    \ = paren_levels_len;\n    let mut paren_levels_len21 = paren_levels_len;\n  \
    \  let mut paren_levels_len22 = paren_levels_len;\n    let mut paren_levels_len23\
    \ = paren_levels_len;\n    let mut paren_levels_len24 = paren_levels_len;\n  \
    \  let mut paren_levels_len25 = paren_levels_len;\n    let mut paren_levels_len26\
    \ = paren_levels_len;\n    let mut paren_levels_len27 = paren_levels_len;\n  \
    \  let mut paren_levels_len28 = paren_levels_len;\n    let mut paren_levels_len29\
    \ = paren_levels_len;\n    let mut paren_levels_len30 = paren_level", "    let\
    \ mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack", "    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut level = 0;\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level", "    let mut paren_levels\
    \ = vec![0];\n    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_char\
    \ = 0;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len\
    \ = paren_string.len();\n    let mut paren_level_char_len_pos = 0;\n    let mut\
    \ paren_level_char_len_len = 0;\n    let mut paren_level_char_len_len_pos = 0;\n\
    \    let mut paren_level_char_len_len_len = 0;\n    let mut paren_level_char_len_len_len_pos\
    \ = 0;\n    let mut paren_level_char_len_len_len_len = 0;\n    let mut paren_level_char_len_len_len_len_pos\
    \ = 0;\n    let mut paren_level_char_len_len_len_len_len = 0;\n    let mut paren_level_char_len_len_len_len_len_pos\
    \ = 0;\n    let mut paren_level_char_len_len_len_len_len_len = 0;\n    let mut\
    \ paren_level_char_len_len_len_len_len_len_pos = 0;\n    let mut paren_level_char_len_len_len_len_len_len_len\
    \ = 0;\n    let mut paren_level_char_len_len_len_len_len_len_len_pos = 0;\n  \
    \  let mut paren_level_char_len_len_len_len_len_len_len_len_len = 0;\n    let\
    \ mut paren_level_char_len_len_len_len_len_len_len_len_pos = 0;\n    let mut paren_level_char_len_len_len_len_len_len_len_len_len_len\
    \ = 0;\n    let mut paren_level_char_len_len_len_len_len_len_len_len_len_pos =\
    \ 0;\n    let mut paren_level_char_len_len_len_len_len_len_len_len_len_len = 0;\n\
    \    let mut paren_level_char_len_len_len_len_len_len_len_len_len_len_pos = 0;\n\
    \    let mut paren_level_char_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = 0;\n    let mut paren_level_char_len_len_len_len_len_len_len_len_len_len_len_pos\
    \ = 0;\n    let mut paren_level_char_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = 0;\n    let mut paren_level_char_len_len_len_len_len_len_len_len_len_len_len_len_pos\
    \ = 0;\n    let mut paren_level_char_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = 0;\n    let mut paren_level_char_len_len_len_len_len_len_len_len_len_len_len_len_len_pos\
    \ = 0;\n    let mut paren_level_char_len_len_len_len_len_len_len_len_len_len_",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n \
    \   let mut paren_nesting_level = 0;\n    for paren in paren_string.chars() {\n\
    \        if paren == '(' {\n            paren_stack.push(paren_level);\n     \
    \       paren_level += 1;\n            paren_nesting_level += 1;\n        } else\
    \ if paren == ')' {\n            paren_level -= 1;\n            paren_nesting_level\
    \ -= 1;\n            if paren_nesting_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        } else if paren == ' ' {\n            if paren_nesting_level\
    \ == 0 {\n                paren_stack.push(paren_level);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_levels = Vec::new();\n   \
    \ let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n   \
    \ let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack_pos;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_level",
  "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_nestings = Vec::new();\n    let mut paren_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_nestings_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_end = paren_levels_iter.next();\n    let mut paren_nestings_end\
    \ = paren_nestings_iter.next();\n    while paren_levels_end.unwrap() != None &&\
    \ paren_nestings_end.unwrap() != None {\n        if paren_levels_end.unwrap().unwrap()\
    \ == paren_nestings_end.unwrap().unwrap() {\n            paren_levels.push(paren_level);\n\
    \            paren_nestings.push(paren_nesting);\n            paren_levels_end\
    \ = paren_levels_iter.next();\n            paren_nestings_end = paren_nestings_iter.next();\n\
    \            paren_level += 1;\n            paren_nesting += 1;\n        } else\
    \ {\n            paren_level += 1;\n            paren_nesting += 1;\n        }\n\
    \    }\n    paren_levels.push(paren_level);\n    paren_nestings.push(paren_nesting);\n\
    \    paren_levels_end.unwrap()", "    let mut paren_stack = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_lens = Vec::new();\n    let mut\
    \ paren_levels_lens_len = paren_levels_lens.len();\n    let mut paren_levels_lens_lens\
    \ = paren_levels_lens_lens.len();\n    let mut paren_levels_lens_lens_len = paren_levels_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_len = paren_levels_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_len = paren_levels_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_len = paren_levels_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_len = paren_levels_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len = paren_levels_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len = paren_levels_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = paren_levels_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = paren_levels_lens_lens.len();\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = paren_levels_lens_lens.len();\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = paren_levels_lens_lens.len();\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = paren_levels_lens_lens.len();\n    let mut ", "    let mut level = 0;\n  \
    \  let mut paren_stack = Vec::new();\n    let mut paren_stack_pos = 0;\n    let\
    \ mut paren_stack_len = paren_string.len();\n    while paren_stack_pos < paren_stack_len\
    \ {\n        let mut paren_stack_char = paren_string[paren_stack_pos];\n     \
    \   if paren_stack_char == ')' {\n            paren_stack.pop_back();\n      \
    \      level -= 1;\n        }\n        if paren_stack_char == '(' {\n        \
    \    paren_stack.push(level);\n            level += 1;\n        }\n        paren_stack_pos\
    \ += 1;\n    }\n    paren_stack", "    let mut paren_stack = Vec::new();\n   \
    \ let mut paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_level_depth\
    \ = 0;\n    let mut paren_level_level = 0;\n    let mut paren_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level = 0;\n    let mut paren_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level = 0;\n    let mut paren_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level = 0;\n    let mut paren_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level = 0;\n   \
    \ let mut paren_level_level_level_level_level_level_level_depth = 0;\n    let\
    \ mut paren_level_level_level_level_level_level_level_level = 0;\n    let mut\
    \ paren_level_level_level_level_level_level_level_level_depth = 0;\n    let mut\
    \ paren_level_level_level_level_level_level_level_level_level_level = 0;\n   \
    \ let mut paren_level_level_level_level_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_depth\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level\
    \ = 0;\n    let mut paren_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_level_",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_depth: usize =\
    \ 0;\n    let mut paren_level: usize = 0;\n    let mut paren_levels: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_len: usize = 0;\n    let mut paren_levels_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_len: usize = 0;\n    let\
    \ mut paren_levels_lens_lens: Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens: Vec<isize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens: Vec<isize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut\
    \ paren_levels_lens_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_len", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_chars = vec![];\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_char_pos = 0;\n\
    \    let mut paren_level_char_len = paren_level_chars.len();\n    let mut paren_level_char_len\
    \ = paren_level_chars.len();\n    let mut paren_level_char_pos = 0;\n    let mut\
    \ paren_level_char_len = paren_level_chars.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_pos_count = 0;\n   \
    \ let mut paren_level_char_pos_count_max = 0;\n    let mut paren_level_char_pos_count_max_index\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min_index\
    \ = 0;\n    let mut paren_level_char_pos_count_max = 0;\n    let mut paren_level_char_pos_count_max_index\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min_index\
    \ = 0;\n    let mut paren_level_char_pos_count_max = 0;\n    let mut paren_level_char_pos_count_max_index\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min_index\
    \ = 0;\n    let mut paren_level_char_pos_count_max = 0;\n    let mut paren_level_char_pos_count_max_index\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min_index\
    \ = 0;\n    let mut paren_level_char_pos_count_max = 0;\n    let mut paren_level_char_pos_count_max_index\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min_index\
    \ = 0;\n    let mut paren_level_char_pos_count_max = 0;\n    let mut paren_level_char_pos_count_max_index\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min_index\
    \ = 0;\n    let mut paren_level_char_pos_count_max = 0;\n    let mut paren_level_char_pos_count_max_index\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min_index\
    \ = 0;\n    let mut paren_level_char_pos_count_max = 0;\n    let mut paren_level_char_pos_count_max_index\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min_index\
    \ = 0;\n    let mut paren_level_char_pos_count_max = 0;\n    let mut paren_level_char_pos_count_max_index\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min_index\
    \ = 0;\n    let mut ", "    let mut paren_levels = vec![0];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_chars = vec![0];\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars = paren_string.chars();\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_index =\
    \ 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char_index = 0;\n    let mut paren_level_chars\
    \ = paren_string.chars();\n    let mut paren_level_char_index = 0;\n    let mut\
    \ paren_level_char_index = 0;\n    let mut paren_level_chars = paren_string.chars();\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_index =\
    \ 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char_index = 0;\n    let mut paren_level_chars\
    \ = paren_string.chars();\n    let mut paren_level_char_index = 0;\n    let mut\
    \ paren_level_char_index = 0;\n    let mut paren_level_chars = paren_string.chars();\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_index =\
    \ 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char_index = 0;\n    let mut paren_level_chars\
    \ = paren_string.chars();\n    let mut paren_level_char_index = 0;\n    let mut\
    \ paren_level_char_index = 0;\n    let mut paren_level_chars = paren_string.chars();\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_index =\
    \ 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char_index = 0;\n    let mut paren_level_chars\
    \ = paren_string.chars();\n    let mut paren_level_char_index = 0;\n    let mut\
    \ paren_level_char_index = 0;\n    let mut paren_level_chars = paren_string.chars();\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_index =\
    \ 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_",
  "    let mut paren_stack = vec![];\n    let mut paren_level = 0;\n    for paren\
    \ in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_level += 1;\n        } else if paren == ')' {\n           \
    \ paren_level -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_start = paren_string.chars().nth(0).unwrap();\n\
    \    let mut paren_level_end = paren_level_start;\n    let mut paren_level_end\
    \ = paren_level_end;\n    let mut paren_level_end = paren_level_end;\n    let\
    \ mut paren_level_end = paren_level_end;\n    let mut paren_level_end = paren_level_end;\n\
    \    let mut paren_level_end = paren_level_end;\n    let mut paren_level_end =\
    \ paren_level_end;\n    let mut paren_level_end = paren_level_end;\n    let mut\
    \ paren_level_end = paren_level_end;\n    let mut paren_level_end = paren_level_end;\n\
    \    let mut paren_level_end = paren_level_end;\n    let mut paren_level_end =\
    \ paren_level_end;\n    let mut paren_level_end = paren_level_end;\n    let mut\
    \ paren_level_end = paren_level_end;\n    let mut paren_level_end = paren_level_end;\n\
    \    let mut paren_level_end = paren_level_end;\n    let mut paren_level_end =\
    \ paren_level_end;\n    let mut paren_level_end = paren_level_end;\n    let mut\
    \ paren_level_end = paren_level_end;\n    let mut paren_level_end = paren_level_end;\n\
    \    let mut paren_level_end = paren_level_end;\n    let mut paren_level_end =\
    \ paren_level_end;\n    let mut paren_level_end = paren_level_end;\n    let mut\
    \ paren_level_end = paren_level_end;\n    let mut paren_level_end = paren_level_end;\n\
    \    let mut paren_level_end = paren_level_end;\n    let mut paren_level_end =\
    \ paren_level_end;\n    let mut paren_level_end = paren_level_end;\n    let mut\
    \ paren_level_end = paren_level_end;\n    let mut paren_level_end = paren_level_end;\n\
    \    let mut paren_level_end = paren_level_end;\n    let mut paren_level_end =\
    \ paren_level_end;\n    let mut paren_level_end = paren_level_end;\n    let mut\
    \ paren_level_end = paren_level_end;\n    let mut paren_level_end = paren_level_end;\n\
    \    let mut paren_level_end = paren_level_end;\n    let mut paren_level_end =\
    \ paren_level_end;\n    let mut paren_level_end = paren_level_end;\n    let mut\
    \ paren_level_end = paren_level_", "    let mut paren_stack: Vec<isize> = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = vec![];\n    let\
    \ mut paren_level_count_index = -1;\n    let mut paren_level_count_index2 = 0;\n\
    \    let mut paren_level_count_index3 = 0;\n    let mut paren_level_count_index4\
    \ = 0;\n    let mut paren_level_count_index5 = 0;\n    let mut paren_level_count_index6\
    \ = 0;\n    let mut paren_level_count_index7 = 0;\n    let mut paren_level_count_index8\
    \ = 0;\n    let mut paren_level_count_index9 = 0;\n    let mut paren_level_count_index10\
    \ = 0;\n    let mut paren_level_count_index11 = 0;\n    let mut paren_level_count_index12\
    \ = 0;\n    let mut paren_level_count_index13 = 0;\n    let mut paren_level_count_index14\
    \ = 0;\n    let mut paren_level_count_index15 = 0;\n    let mut paren_level_count_index16\
    \ = 0;\n    let mut paren_level_count_index17 = 0;\n    let mut paren_level_count_index18\
    \ = 0;\n    let mut paren_level_count_index19 = 0;\n    let mut paren_level_count_index20\
    \ = 0;\n    let mut paren_level_count_index21 = 0;\n    let mut paren_level_count_index22\
    \ = 0;\n    let mut paren_level_count_index23 = 0;\n    let mut paren_level_count_index24\
    \ = 0;\n    let mut paren_level_count_index25 = 0;\n    let mut paren_level_count_index26\
    \ = 0;\n    let mut paren_level_count_index27 = 0;\n    let mut paren_level_count_index28\
    \ = 0;\n    let mut paren_level_count_index29 = 0;\n    let mut paren_level_count_index30\
    \ = 0;\n    let mut paren_level_count_index31 = 0;\n    let mut paren_level_count_index32\
    \ = 0;\n    let mut paren_level_count_index33 = 0;\n    let mut paren_level_count_index34\
    \ = 0;\n    let mut paren_level_count_index35 = 0;\n    let mut paren_level_count_index36\
    \ = 0;\n    let mut paren_level_count_index37 = 0;\n    let mut paren_level_count_index38\
    \ = 0;\n    let mut paren_level_count_index39 = 0;\n    let mut paren_level_count_index40\
    \ = 0;\n    let mut paren_level_count_index41 = 0;\n    let mut paren_level_count_index42\
    \ = 0;\n    let mut paren_level_count_index43 = 0;\n    let mut paren_level_count_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let ", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = ", "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n   \
    \ let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack", "    let mut paren_stack = Vec::new();\n    let mut paren_depth\
    \ = 0;\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_depth\
    \ = 0;\n    let mut paren_levels_level = 0;\n    let mut paren_levels_levels =\
    \ Vec::new();\n    let mut paren_levels_levels_depth = 0;\n    let mut paren_levels_levels_level\
    \ = 0;\n    let mut paren_levels_levels_levels = Vec::new();\n    let mut paren_levels_levels_levels_depth\
    \ = 0;\n    let mut paren_levels_levels_levels_level = 0;\n    let mut paren_levels_levels_levels_levels\
    \ = Vec::new();\n    let mut paren_levels_levels_levels_levels_depth = 0;\n  \
    \  let mut paren_levels_levels_levels_levels_level = 0;\n    let mut paren_levels_levels_levels_levels_levels\
    \ = Vec::new();\n    let mut paren_levels_levels_levels_levels_levels_depth =\
    \ 0;\n    let mut paren_levels_levels_levels_levels_levels_level = 0;\n    let\
    \ mut paren_levels_levels_levels_levels_levels_levels = Vec::new();\n    let mut\
    \ paren_levels_levels_levels_levels_levels_levels_depth = 0;\n    let mut paren_levels_levels_levels_levels_levels_levels_level\
    \ = 0;\n    let mut paren_levels_levels_levels_levels_levels_levels_levels = Vec::new();\n\
    \    let mut paren_levels_levels_levels_levels_levels_levels_levels_depth = 0;\n\
    \    let mut paren_levels_levels_levels_levels_levels_levels_levels_level = 0;\n\
    \    let mut paren_levels_levels_levels_levels_levels_levels_levels_levels = Vec::new();\n\
    \    let mut paren_levels_levels_levels_levels_levels_levels_levels_levels_depth\
    \ = 0;\n    let mut paren_levels_levels_levels_levels_levels_levels_levels_levels_level\
    \ = 0;\n    let mut paren_levels_levels_levels_levels_levels_levels_levels_levels_levels\
    \ = Vec::new();\n    let mut paren_levels_levels_levels_levels_levels_levels_levels_",
  "    let mut level = 0;\n    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char\
    \ = 0;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len\
    \ = paren_level_char.len();\n    let mut paren_level_char_pos = 0;\n    let mut\
    \ paren_level_char_len = paren_level_char.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_", "    let mut paren_stack = Vec::new();\n    let mut paren_depth\
    \ = 0;\n    let mut paren_level = 0;\n    let mut paren_level_depth = Vec::new();\n\
    \    let mut paren_level_depth_counter = Vec::new();\n    let mut paren_level_depth_counter_index\
    \ = 0;\n    let mut paren_level_depth_counter_size = 0;\n    let mut paren_level_depth_counter_max_size\
    \ = 0;\n    let mut paren_level_depth_counter_max_index = 0;\n    let mut paren_level_depth_counter_max_value\
    \ = 0;\n    let mut paren_level_depth_counter_max_count = 0;\n    let mut paren_level_depth_counter_max_count_index\
    \ = 0;\n    let mut paren_level_depth_counter_max_count_value = 0;\n    let mut\
    \ paren_level_depth_counter_max_count_count = 0;\n    let mut paren_level_depth_counter_max_count_count_index\
    \ = 0;\n    let mut paren_level_depth_counter_max_count_count_value = 0;\n   \
    \ let mut paren_level_depth_counter_max_count_count_count = 0;\n    let mut paren_level_depth_counter_max_count_count_count_index\
    \ = 0;\n    let mut paren_level_depth_counter_max_count_count_count_value = 0;\n\
    \    let mut paren_level_depth_counter_max_count_count_count_count = 0;\n    let\
    \ mut paren_level_depth_counter_max_count_count_count_count_index = 0;\n    let\
    \ mut paren_level_depth_counter_max_count_count_count_count_value = 0;\n    let\
    \ mut paren_level_depth_counter_max_count_count_count_count_count = 0;\n    let\
    \ mut paren_level_depth_counter_max_count_count_count_count_index = 0;\n    let\
    \ mut paren_level_depth_counter_max_count_count_count_count_value = 0;\n    let\
    \ mut paren_level_depth_counter_max_count_count_count_count_count = 0;\n    let\
    \ mut paren_level_depth_counter_max_count_count_count_count_count_index = 0;\n\
    \    let mut paren_level_depth_counter_max_count_count_count_count_count_value\
    \ = 0;\n    let mut paren_level_depth_counter_max_count_count_count_count_count_count\
    \ = 0;\n    let mut paren_level_depth_counter_max_count_count_count_count_count_index\
    \ = 0;\n    let mut paren_level_depth_counter_max_count_count_count_count_count_value\
    \ = 0;\n    let mut paren_level_depth_counter_max_count_count_count_count_count_count_count\
    \ = 0;\n    let mut paren_level_depth_counter_max_count_count_count_count_count_count_index\
    \ = 0;\n    let mut paren_level_depth_counter_max_count_count_count_count_count_count_value\
    \ = 0;\n    let mut paren_", "    let mut paren_stack: Vec<isize> = vec![];\n\
    \    let mut paren_depth: isize = 0;\n    let mut paren_level: isize = 0;\n  \
    \  let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_len: isize\
    \ = 0;\n    let mut paren_levels_lens: Vec<isize> = vec![];\n    let mut paren_levels_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens: Vec<isize> = vec![];\n    let\
    \ mut paren_levels_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: isize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: isize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len",
  "    let mut level = 0;\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = paren_string.chars().filter(|c| c == '(').count();\n    let mut paren_level_count_max\
    \ = paren_level_count;\n    let mut paren_level_count_min = paren_level_count;\n\
    \    let mut paren_level_count_sum = 0;\n    let mut paren_level_count_sum2 =\
    \ 0;\n    let mut paren_level_count_sum3 = 0;\n    let mut paren_level_count_sum4\
    \ = 0;\n    let mut paren_level_count_sum5 = 0;\n    let mut paren_level_count_sum6\
    \ = 0;\n    let mut paren_level_count_sum7 = 0;\n    let mut paren_level_count_sum8\
    \ = 0;\n    let mut paren_level_count_sum9 = 0;\n    let mut paren_level_count_sum10\
    \ = 0;\n    let mut paren_level_count_sum11 = 0;\n    let mut paren_level_count_sum12\
    \ = 0;\n    let mut paren_level_count_sum13 = 0;\n    let mut paren_level_count_sum14\
    \ = 0;\n    let mut paren_level_count_sum15 = 0;\n    let mut paren_level_count_sum16\
    \ = 0;\n    let mut paren_level_count_sum17 = 0;\n    let mut paren_level_count_sum18\
    \ = 0;\n    let mut paren_level_count_sum19 = 0;\n    let mut paren_level_count_sum20\
    \ = 0;\n    let mut paren_level_count_sum21 = 0;\n    let mut paren_level_count_sum22\
    \ = 0;\n    let mut paren_level_count_sum23 = 0;\n    let mut paren_level_count_sum24\
    \ = 0;\n    let mut paren_level_count_sum25 = 0;\n    let mut paren_level_count_sum26\
    \ = 0;\n    let mut paren_level_count_sum27 = 0;\n    let mut paren_level_count_sum28\
    \ = 0;\n    let mut paren_level_count_sum29 = 0;\n    let mut paren_level_count_sum30\
    \ = 0;\n    let mut paren_level_count_sum31 = 0;\n    let mut paren_level_count_sum32\
    \ = 0;\n    let mut paren_level_count_sum33 = 0;\n    let mut paren_level_count_sum34\
    \ = 0;\n    let mut paren_level_count_sum35 = 0;\n    let mut paren_level_count_sum36\
    \ = 0;\n    let mut paren_level_count_sum37 = 0;\n    let mut paren_level_count_sum38\
    \ = 0;\n    let mut paren_level_count_sum39 = 0;\n    let mut paren_level_count_sum40\
    \ = 0;\n    let mut paren_level_count_sum41 = 0;\n", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n\
    \    let mut paren_level_indexes: Vec<usize> = vec![];\n    let mut paren_level_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_indexes:\
    \ Vec<usize> = vec![];\n    let mut paren_level_indexes_len_indexes_len = 0;\n\
    \    let mut paren_level_indexes_len_indexes_len_index = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes:\
    \ Vec<usize> = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_index = 0;\n\
    \    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes: Vec<usize>\
    \ = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes:\
    \ Vec<usize> = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes:\
    \ Vec<usize> = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes:\
    \ Vec<usize> = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes:\
    \ Vec<usize> = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index",
  "    let mut level = 0;\n    let mut paren_levels = vec![];\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_size = vec![];\n    let mut paren_levels_stack_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = vec![];\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mu", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_stack\
    \ = Vec::new();\n    let mut paren_level_stack_pointer = 0;\n    let mut paren_level_stack_pointer_max\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index = 0;\n    let mut paren_level_stack_pointer_max_value\
    \ = -1;\n    let mut paren_level_stack_pointer_max_value_index = 0;\n    let mut\
    \ paren_level_stack_pointer_max_value_length = 0;\n    let mut paren_level_stack_pointer_max_value_length_index\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value = 0;\n  \
    \  let mut paren_level_stack_pointer_max_value_length_value_index = 0;\n    let\
    \ mut paren_level_stack_pointer_max_value_length_value_length = 0;\n    let mut\
    \ paren_level_stack_pointer_max_value_length_value_length_index = 0;\n    let\
    \ mut paren_level_stack_pointer_max_value_length_value_length_value = 0;\n   \
    \ let mut paren_level_stack_pointer_max_value_length_value_length_value_index\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length_index\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length_value\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length_value_index\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length_value_length\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length_value_length_index\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length_value_length_value\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length_value_length_value_index\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length_value_length_value_length\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length_value_length_value_length_index\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length_value_length_value_length_value\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length_value_length_value_length_value_index\
    \ = 0;\n    let mut paren_level_stack_pointer_max_value_length_value_length_value_length_value_length_value_length_value_length\
    \ = 0;\n    let mut paren", "    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let ", "    let mut paren_stack = Vec::new();\n    let mut\
    \ paren_depth = 0;\n    let mut paren_level = 0;\n    for paren in paren_string.chars()\
    \ {\n        if paren == '(' {\n            paren_stack.push(paren_depth);\n \
    \           paren_depth += 1;\n            paren_level += 1;\n        } else if\
    \ paren == ')' {\n            paren_depth -= 1;\n            paren_level -= 1;\n\
    \            if paren_stack.is_empty() {\n                return vec![paren_level];\n\
    \            }\n        }\n    }\n    vec![paren_level]", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index =\
    \ 0;\n    let mut paren_level_stack = Vec::new();\n    let mut paren_level_stack_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_max = 0;\n    let mut paren_level_stack_pointer_max_index\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index2 = 0;\n    let mut paren_level_stack_pointer_max_index3\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index4 = 0;\n    let mut paren_level_stack_pointer_max_index5\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index6 = 0;\n    let mut paren_level_stack_pointer_max_index7\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index8 = 0;\n    let mut paren_level_stack_pointer_max_index9\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index10 = 0;\n    let mut paren_level_stack_pointer_max_index11\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index12 = 0;\n    let mut paren_level_stack_pointer_max_index13\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index14 = 0;\n    let mut paren_level_stack_pointer_max_index15\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index16 = 0;\n    let mut paren_level_stack_pointer_max_index17\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index18 = 0;\n    let mut paren_level_stack_pointer_max_index19\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index20 = 0;\n    let mut paren_level_stack_pointer_max_index21\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index22 = 0;\n    let mut paren_level_stack_pointer_max_index23\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index24 = 0;\n    let mut paren_level_stack_pointer_max_index25\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index26 = 0;\n    let mut paren_level_stack_pointer_max_index27\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index28 = 0;\n    let mut paren_level_stack_pointer_max_index29\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index30 = 0;\n    let mut paren_level_stack_pointer_max_index31\
    \ = 0;\n    let mut paren_level_stack_pointer_max_index32 = 0;\n    let mut paren_",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new", "    let mut paren_stack = Vec::new();\n    let mut paren_depth\
    \ = 0;\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    for\
    \ paren in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_depth);\n\
    \            paren_depth += 1;\n            paren_level += 1;\n            paren_nesting\
    \ += 1;\n        } else if paren == ')' {\n            paren_depth -= 1;\n   \
    \         paren_level -= 1;\n            paren_nesting -= 1;\n            if paren_nesting\
    \ == 0 {\n                paren_stack.push(paren_depth);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_levels = vec![0];\n    let\
    \ mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_stack\
    \ = vec![0];\n    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n \
    \   let mut paren_levels = vec![];\n    let mut paren_levels_len = paren_stack.len();\n\
    \    let mut paren_levels_ptr = paren_levels.as_ptr();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_ptr = paren_levels.as_ptr();\n\
    \    let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_ptr\
    \ = paren_levels.as_ptr();\n    let mut paren_levels_len = paren_stack.len();\n\
    \    let mut paren_levels_ptr = paren_levels.as_ptr();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_ptr = paren_levels.as_ptr();\n\
    \    let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_ptr\
    \ = paren_levels.as_ptr();\n    let mut paren_levels_len = paren_stack.len();\n\
    \    let mut paren_levels_ptr = paren_levels.as_ptr();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_ptr = paren_levels.as_ptr();\n\
    \    let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_ptr\
    \ = paren_levels.as_ptr();\n    let mut paren_levels_len = paren_stack.len();\n\
    \    let mut paren_levels_ptr = paren_levels.as_ptr();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_ptr = paren_levels.as_ptr();\n\
    \    let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_ptr\
    \ = paren_levels.as_ptr();\n    let mut paren_levels_len = paren_stack.len();\n\
    \    let mut paren_levels_ptr = paren_levels.as_ptr();\n    let mut paren_levels_len\
    \ = paren_stack.len();\n    let mut paren_levels_ptr = paren_levels.as_ptr();\n\
    \    let mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_ptr\
    \ = paren_levels.as_ptr();\n    let mut paren_levels_len = paren_stack.len();\n\
    \    let mut paren_levels_ptr = paren_levels.", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n   \
    \ let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.", "    let mut paren_stack: Vec<isize> = vec![];\n   \
    \ let mut paren_level: isize = 0;\n    let mut paren_level_count: isize = 0;\n\
    \    for paren in paren_string.chars() {\n        if paren == ')' {\n        \
    \    paren_level_count = paren_level_count;\n            paren_level += 1;\n \
    \           paren_stack.push(paren_level);\n        } else if paren == '(' {\n\
    \            paren_level_count = paren_level_count;\n            paren_level -=\
    \ 1;\n            paren_stack.push(paren_level);\n        } else {\n         \
    \   paren_level_count += 1;\n        }\n    }\n    paren_stack", "    let mut\
    \ paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n    for paren\
    \ in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_level += 1;\n        } else if paren == ')' {\n           \
    \ paren_level -= 1;\n            if paren_stack.pop() == 0 {\n               \
    \ return paren_stack;\n            }\n        }\n    }\n    panic!(\"Invalid paren\
    \ string: {}\", paren_string);", "    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.as_mut_ptr();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(", " \
    \   let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = vec![];\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    for paren in paren_string.chars() {\n        if paren == '(' {\n   \
    \         paren_stack.push(paren_level);\n            paren_level += 1;\n    \
    \    } else if paren == ')' {\n            paren_level -= 1;\n            if paren_level\
    \ == 0 {\n                paren_stack.push(paren_level);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_levels = vec![0];\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_stack = vec![0];\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr_len = paren_levels_stack_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr = paren_levels_stack_ptr_len;\n    let\
    \ mut paren_levels_stack_ptr_ptr_pos = 0;\n    let mut paren_levels_stack_ptr_ptr_len\
    \ = paren_levels_stack_ptr_ptr.len();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_ptr_len;\n    let mut paren_levels_stack_ptr_ptr_ptr_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_len = paren_levels_stack_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_len;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_pos = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_len\
    \ = paren_levels_stack_ptr_ptr_ptr_ptr.len();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_ptr_ptr_ptr_len;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_len = paren_levels_stack_ptr_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_pos = 0;\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_len = paren_levels_stack_ptr_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_pos = 0;\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_len = paren_levels_stack_ptr_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_pos = 0;\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_len = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr.",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_index = 0;\n    let mut paren_level_char = 0;\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char_length = 0;\n    let mut paren_level_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char = 0;\n    let mut paren_level_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length = 0;\n    let mut paren_level_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char = 0;\n    let mut\
    \ paren_level_char_length_char_length_char_index = 0;\n    let mut paren_level_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_index = 0;\n\
    \    let mut paren_level_char_length_char_length_char_length_char = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_char_index = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_char_length = 0;\n    let\
    \ mut paren_level_char_length_char_length_char_length_char_length_index = 0;\n\
    \    let mut paren_level_char_length_char_length_char_length_char_length_char\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_char\
    \ = 0;\n    let mut paren_level_char_length_char_length_char_length_char_length_char_length_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_char_length_"]
stop_tokens:
- "\n}"

name: HumanEval_71_triangle_area
language: rs
prompt: "/// Given the lengths of the three sides of a triangle. Return the area of\n\
  /// the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n/// Otherwise return -1\n/// Three sides make a valid triangle when the sum\
  \ of any two sides is greater \n/// than the third side.\n/// Example:\n/// >>>\
  \ triangle_area(3, 4, 5)\n/// 6.0\n/// >>> triangle_area(1, 2, 10)\n/// -1.0\nfn\
  \ triangle_area(a: isize, b: isize, c: isize) -> f64 {\n"
tests: "}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n}\n"
completions: ["    if a + b > c {\n        -1\n    } else {\n        (a * b) - ((a\
    \ + b) * c)\n    }", "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n\
    \        _ => a * b * c / (a + b + c),\n    }", "    let mut s = a + b + c;\n\
    \    if s > 0 {\n        s /= 2;\n    }\n    s * s", "    if a + b > c {\n   \
    \     return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n   \
    \ if b + c > a {\n        return -1.0\n    }\n    \n    let mut area = 0.0;\n\
    \    \n    if a > b {\n        area += b * c / a;\n    }\n    \n    if a > c {\n\
    \        area += c * a / b;\n    }\n    \n    if b > c {\n        area += a *\
    \ b / c;\n    }\n    \n    area += a * c / b;\n    \n    area = area.round() as\
    \ f64;\n    \n    return area;", "    let mut a = a as f64;\n    let mut b = b\
    \ as f64;\n    let mut c = c as f64;\n    if a + b > c {\n        a = b as f64;\n\
    \        b = c as f64;\n        c = a as f64;\n    }\n    if a + c > b {\n   \
    \     a = c as f64;\n        c = b as f64;\n        b = a as f64;\n    }\n   \
    \ if b + c > a {\n        b = c as f64;\n        c = a as f64;\n        a = b\
    \ as f64;\n    }\n    (a * b * c) / ((a * b) + c)", "    let mut sum: f64 = 0.0;\n\
    \    let mut a: f64 = a as f64;\n    let mut b: f64 = b as f64;\n    let mut c:\
    \ f64 = c as f64;\n    if a + b > c {\n        sum = a + b - c;\n        a = b;\n\
    \        b = c;\n        c = sum;\n    }\n    if a + c > b {\n        sum = a\
    \ + c - b;\n        a = c;\n        c = sum;\n    }\n    if b + c > a {\n    \
    \    sum = b + c - a;\n        b = c;\n        c = sum;\n    }\n    sum", "  \
    \  let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    if s ==\
    \ 0 {\n        return 0.0;\n    }\n    s / 2.0", "    \n    // Check if all sides\
    \ are positive\n    if a < 0 || b < 0 || c < 0 {\n        return -1.0;\n    }\n\
    \    \n    // Check if all sides are equal\n    if a == 0 || b == 0 || c == 0\
    \ {\n        return 0.0;\n    }\n    \n    // Check if all sides are equal\n \
    \   if a == b && a == c {\n        return 0.0;\n    }\n    \n    // Check if all\
    \ sides are equal\n    if a == c {\n        return b.0;\n    }\n    \n    // Check\
    \ if all sides are equal\n    if b == c {\n        return a.0;\n    }\n    \n\
    \    // Check if all sides are equal\n    if a == b {\n        return c.0;\n \
    \   }\n    \n    // Check if all sides are equal\n    if a == c {\n        return\
    \ b.0;\n    }\n    \n    // Check if all sides are equal\n    if b == c {\n  \
    \      return a.0;\n    }\n    \n    // Check if all sides are equal\n    if a\
    \ == b {\n        return c.0;\n    }\n    \n    // Check if all sides are equal\n\
    \    if a == c {\n        return b.0;\n    }\n    \n    // Check if all sides\
    \ are equal\n    if b == c {\n        return a.0;\n    }\n    \n    // Check if\
    \ all sides are equal\n    if a == b {\n        return c.0;\n    }\n    \n   \
    \ // Check if all sides are equal\n    if a == c {\n        return b.0;\n    }\n\
    \    \n    // Check if all sides are equal\n    if b == c {\n        return a.0;\n\
    \    }\n    \n    // Check if all sides are equal\n    if a == b {\n        return\
    \ c.0;\n    }\n    \n    // Check if all sides are equal\n    if a == c {\n  \
    \      return b.0;\n    }\n    \n    // Check if all sides are equal\n    if b\
    \ == c {\n        return a.0;\n    }\n    \n    // Check if all sides are equal\n\
    \    if a == b {\n        return c.0;\n    }\n    \n    // Check if all sides\
    \ are equal\n    if a == c {\n        return b.0;\n    }\n    \n    // Check if\
    \ all sides are equal\n    if b == c {\n        return a.0;\n    }\n    \n   \
    \ // Check if all sides are equal\n    if a == b {\n        return c.0;\n    }\n\
    \    \n    // Check if all sides are equal\n    if a == c {\n        return b.0;\n\
    \    }\n    \n    // Check if all sides are equal\n    if b == c {\n        return\
    \ a.0;\n    }\n    \n    // Check if all sides are equal\n    if a == b {\n  \
    \      return c.0;\n    }\n    \n    // Check if all sides are equal\n    if a\
    \ == c ", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let mut area: f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area\
    \ / 2.0;\n    area = area.round();\n    area", "    let mut s = 0.0;\n    let\
    \ mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n\
    \    \n    if a + b > c {\n        s = 0.0;\n        t = 0.0;\n        w = 0.0;\n\
    \    } else {\n        s = (a * b) / c;\n        t = (a * c) / b;\n        w =\
    \ b * c / a;\n    }\n    \n    if a + c > b {\n        u = 1.0;\n        v = 0.0;\n\
    \    } else {\n        u = (a * c) / b;\n        v = (b * c) / a;\n    }\n   \
    \ \n    if u + v > w {\n        return -1.0;\n    } else {\n        return s *\
    \ t + u * w;\n    }", "    match a + b + c {\n        0 => 0.0,\n        1 =>\
    \ 1.0,\n        _ => 2.0 * (a + b + c) / 3.0,\n    }", "    if a + b > c {\n \
    \       return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n \
    \   if b + c > a {\n        return -1.0\n    }\n    let mut area = 0.0;\n    area\
    \ = area + (b * b);\n    area = area + (c * c);\n    area = area + (a * a);\n\
    \    area = area / (2.0 * c);\n    area = area / (2.0 * b);\n    area = area /\
    \ (2.0 * a);\n    area = area / c;\n    area = area / b;\n    area = area / a;\n\
    \    area = area * 100.0;\n    area = area.round();\n    area", "    let mut s\
    \ = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n \
    \   let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\
    \    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut\
    \ y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n\
    \    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut\
    \ x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut\
    \ u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n\
    \    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut\
    \ t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n\
    \    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut\
    \ s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\
    \    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut\
    \ y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n    let ", "    let mut\
    \ s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut u1 = 0.0;\n    let mut v1 = 0.0;\n    let mut w1 = 0.0;\n\
    \    let mut x2 = 0.0;\n    let mut y2 = 0.0;\n    let mut z2 = 0.0;\n    let\
    \ mut u2 = 0.0;\n    let mut v2 = 0.0;\n    let mut w2 = 0.0;\n    let mut x3\
    \ = 0.0;\n    let mut y3 = 0.0;\n    let mut z3 = 0.0;\n    let mut u3 = 0.0;\n\
    \    let mut v3 = 0.0;\n    let mut w3 = 0.0;\n    let mut x4 = 0.0;\n    let\
    \ mut y4 = 0.0;\n    let mut z4 = 0.0;\n    let mut u4 = 0.0;\n    let mut v4\
    \ = 0.0;\n    let mut w4 = 0.0;\n    let mut x5 = 0.0;\n    let mut y5 = 0.0;\n\
    \    let mut z5 = 0.0;\n    let mut u5 = 0.0;\n    let mut v5 = 0.0;\n    let\
    \ mut w5 = 0.0;\n    let mut x6 = 0.0;\n    let mut y6 = 0.0;\n    let mut z6\
    \ = 0.0;\n    let mut u6 = 0.0;\n    let mut v6 = 0.0;\n    let mut w6 = 0.0;\n\
    \    let mut x7 = 0.0;\n    let mut y7 = 0.0;\n    let mut z7 = 0.0;\n    let\
    \ mut u7 = 0.0;\n    let mut v7 = 0.0;\n    let mut w7 = 0.0;\n    let mut x8\
    \ = 0.0;\n    let mut y8 = 0.0;\n    let mut z8 = 0.0;\n    let mut u8 = 0.0;\n\
    \    let mut v8 = 0.0;\n    let mut w8 = 0.0;\n    let mut x9 = 0.0;\n    let\
    \ mut y9 = 0.0;\n    let mut z9 = 0.0;\n    let mut u9 = 0.0;\n    let mut v9\
    \ = 0.0;\n    let mut w9 = 0.0;\n    let mut x10 = 0.0;\n    let mut y10 = 0.0;\n\
    \    let mut z10 = 0.0;\n    let mut u10 = 0.0;\n    let mut v10 = 0.0;\n    let\
    \ mut w10 = 0.0;\n    let mut x11", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut s = (a + b + c) / 2.0;\n    let mut area\
    \ = 0.0;\n    while s > 0.0 {\n        if s % 2.0 == 0.0 {\n            area +=\
    \ s;\n        }\n        s /= 2.0;\n    }\n    area", "    let mut s = 0.0;\n\
    \    let mut t = 0.0;\n    if a + b > c {\n        s = b * b - c;\n    }\n   \
    \ if a + c > b {\n        t = a * c - b;\n    }\n    if b + c > a {\n        t\
    \ = b * c - a;\n    }\n    if t < 0.0 {\n        return -1.0;\n    }\n    s /\
    \ t", "    let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n  \
    \  s * s", "    let mut s = 0.0;\n    if a + b > c {\n        s = b * b - c;\n\
    \    } else {\n        s = a * a - b * b;\n    }\n    if s > 0.0 {\n        s\
    \ /= 2.0;\n    }\n    s * s", "    if a + b > c {\n        return -1.0\n    }\n\
    \    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut area = 0.0;\n    area = area + (b * b);\n    area =\
    \ area + (c * c);\n    area = area + (a * a);\n    area = area / (a * b * c);\n\
    \    area = round(area as f64 * 100.0) / 100.0;\n    area", "    let mut s = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    \n    if a + b > c {\n        s = b - c;\n        w = 0.0;\n        x = 0.0;\n\
    \        y = 0.0;\n        z = 0.0;\n    } else {\n        s = a + b;\n      \
    \  w = c - (a + b);\n        x = 0.0;\n        y = 0.0;\n        z = 0.0;\n  \
    \  }\n    \n    if a + c > b {\n        t = c - b;\n        u = 0.0;\n       \
    \ v = 0.0;\n        w = 0.0;\n    } else {\n        t = a + c;\n        u = c\
    \ - (a + c);\n        v = 0.0;\n        w = 0.0;\n    }\n    \n    if b + c >\
    \ a {\n        x = c - a;\n        y = 0.0;\n        z = 0.0;\n    } else {\n\
    \        x = b - a;\n        y = 0.0;\n        z = 0.0;\n    }\n    \n    if a\
    \ + b > c {\n        s = b - c;\n        w = 0.0;\n        x = 0.0;\n        y\
    \ = 0.0;\n        z = 0.0;\n    } else {\n        s = a + b;\n        w = c -\
    \ (a + b);\n        x = 0.0;\n        y = 0.0;\n        z = 0.0;\n    }\n    \n\
    \    if a + c > b {\n        t = c - b;\n        u = 0.0;\n        v = 0.0;\n\
    \        w = 0.0;\n    } else {\n        t = a + c;\n        u = c - (a + c);\n\
    \        v = 0.0;\n        w = 0.0;\n    }\n    \n    if b + c > a {\n       \
    \ x = c - a;\n        y = 0.0;\n        z = 0.0;\n    } else {\n        x = b\
    \ - a;\n        y = 0.0;\n        z = 0.0;\n    }\n    \n    if a + b > c {\n\
    \        s = b - c;\n        w = 0.0;\n        x = 0.0;\n        y = 0.0;\n  \
    \      z = 0.0;\n    } else {\n        s = a + b;\n        w = c - (a + b);\n\
    \        x = 0.0;\n        y = 0.0;\n        z = 0.0;\n    }\n    \n    if a +\
    \ c > b {\n        t = c - b;\n        u = 0.0;\n        v = 0.0;\n        w =\
    \ 0.0;\n    } else {\n        t = a + c;\n        u = c - (a + c);\n        v\
    \ = 0.0;\n        w = 0.0;\n    }\n    \n    if b + c > a {\n        x = c - a;\n\
    \        y = 0.0;\n        z = 0.0;\n    } else {\n        x = b - a;\n      \
    \  y = 0.0;\n        z = 0.0;\n    }\n    \n    if a + b > c {\n        s = b\
    \ - c;\n        w = 0.0;\n"]
stop_tokens:
- "\n}"

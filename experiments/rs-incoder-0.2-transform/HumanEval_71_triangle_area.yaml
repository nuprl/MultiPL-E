name: HumanEval_71_triangle_area
language: rs
prompt: "/// Given the lengths of the three sides of a triangle. Return the area of\n\
  /// the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n/// Otherwise return -1\n/// Three sides make a valid triangle when the sum\
  \ of any two sides is greater \n/// than the third side.\n/// Example:\n/// >>>\
  \ triangle_area(3, 4, 5)\n/// 6.0\n/// >>> triangle_area(1, 2, 10)\n/// -1.0\nfn\
  \ triangle_area(a: isize, b: isize, c: isize) -> f64 {\n"
tests: "}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(3,\
  \ 4, 5), 6.0);\n    assert_eq!(candidate(1, 2, 10), -1.0);\n    assert_eq!(candidate(4,\
  \ 8, 5), 8.18);\n    assert_eq!(candidate(2, 2, 2), 1.73);\n    assert_eq!(candidate(1,\
  \ 2, 3), -1.0);\n    assert_eq!(candidate(10, 5, 7), 16.25);\n    assert_eq!(candidate(2,\
  \ 6, 3), -1.0);\n    assert_eq!(candidate(1, 1, 1), 0.43);\n    assert_eq!(candidate(2,\
  \ 2, 10), -1.0);\n}\n"
completions: ["    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let mut area: f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = ", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut area = 0.0;\n    area = area + ((a + b\
    \ + c) / 2.0);\n    area = area + ((a + b) * (b + c) / 2.0);\n    area = area\
    \ + ((a * b) * (c + a) / 2.0);\n    area = area - ((a * b) * (b + c) / 2.0);\n\
    \    area = area - ((a + b) * (c + a) / 2.0);\n    area = area - ((a + b + c)\
    \ / 2.0);\n    area = area - ((a + c) * (b + c) / 2.0);\n    area = area - ((a\
    \ * b) * (c + a) / 2.0);\n    area = area - ((a * b) * (c + a) / 2.0);\n    area\
    \ = area - ((a * b) * (c + a) / 2.0);\n    area = area - ((a * b) * (c + a) /\
    \ 2.0);\n    area = area - ((a * b) * (c + a) / 2.0);\n    area = area - ((a *\
    \ b) * (c + a) / 2.0);\n    area = area - ((a * b) * (c + a) / 2.0);\n    area\
    \ = area - ((a * b) * (c + a) / 2.0);\n    area = area - ((a * b) * (c + a) /\
    \ 2.0);\n    area = area - ((a * b) * (c + a) / 2.0);\n    area = area - ((a *\
    \ b) * (c + a) / 2.0);\n    area = area - ((a * b) * (c + a) / 2.0);\n    area\
    \ = area - ((a * b) * (c + a) / 2.0);\n    area = area - ((a * b) * (c + a) /\
    \ 2.0);\n    area = area - ((a * b) * (c + a) / 2.0);\n    area = area - ((a *\
    \ b) * (c + a) / 2.0);\n    area = area - ((a * b) * (c + a) / 2.0);\n    area\
    \ = area - ((a * b) * (c + a) / 2.0);\n    area = area - ((a * b) * (c + a) /\
    \ 2.0);\n    area = area - ((a * b) * (c + a) / 2.0);\n    area = area - ((a *\
    \ b) * (c + a) / 2.0);\n    area = area - ((a * b) * (c + a) / 2.0);\n    area\
    \ = area - ((a * b) * (c + a) / 2.0);\n    area = area - ((a * b) * (c + a) /\
    \ 2.0);\n    area = area - ((a * b) * (c + a) / 2.0);\n    area = area - ((a *\
    \ b) * (c + a) / 2.0);\n    area = area - ((a * b) * (c + a) / 2.0);\n    area\
    \ = area - ((a * b) * (c + a) / 2.0);\n    area = area - ((a * b) * (c + ", " \
    \   if a + b > c {\n        -1\n    } else {\n        (b * b) - ((a * c) - (b\
    \ * a))\n    }", "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n\
    \        _ => a * b * c / (a + b + c),\n    }", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    let mut area = 0.0;\n    area += a * b\
    \ * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area /= 3.0;\n\
    \    area", "    match a + b + c {\n        0 => 0.0,\n        x => if a + b >\
    \ c { -1.0 } else { 1.0 },\n        _ => if a + c > b { -1.0 } else { 1.0 },\n\
    \    }", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let mut area = 0.0;\n    area = area + (a * b) - (c * c);\n    area = area\
    \ + (a * c) - (b * b);\n    area = area + (c * a) - (b * c);\n    area = area\
    \ + (c * b) - (a * a);\n    area = area / 2.0;\n    area = round(area, 2);\n \
    \   return area;", "    if a + b > c {\n        return -1.0\n    }\n    if a +\
    \ c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    let mut s = 0.0\n    let mut t = 0.0\n    s = s + a\n    t = t + b\n\
    \    t = t + c\n    s = s + t\n    if s == 0.0 {\n        return -1.0\n    }\n\
    \    s / 3.0", "    let mut sum: f64 = 0.0;\n    if a + b > c {\n        sum =\
    \ a + b - c;\n    } else {\n        sum = c;\n    }\n    if a + c > b {\n    \
    \    sum += a + c - b;\n    } else {\n        sum += b;\n    }\n    if b + c >\
    \ a {\n        sum += b + c - a;\n    } else {\n        sum += a;\n    }\n   \
    \ sum", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n  \
    \  let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y\
    \ = 0.0;\n    let mut z = 0.0;\n    let mut a = a as f64;\n    let mut b = b as\
    \ f64;\n    let mut c = c as f64;\n    if a + b > c {\n        let mut t = a;\n\
    \        a = b;\n        b = t;\n    }\n    if a + c > b {\n        let mut t\
    \ = a;\n        a = c;\n        c = t;\n    }\n    if b + c > a {\n        let\
    \ mut t = b;\n        b = c;\n        c = t;\n    }\n    if a + b > c {\n    \
    \    let mut t = a;\n        a = b;\n        b = t;\n    }\n    if a + c > b {\n\
    \        let mut t = a;\n        a = c;\n        c = t;\n    }\n    if b + c >\
    \ a {\n        let mut t = b;\n        b = c;\n        c = t;\n    }\n    if a\
    \ + b > c {\n        let mut t = a;\n        a = b;\n        b = t;\n    }\n \
    \   if a + c > b {\n        let mut t = a;\n        a = c;\n        c = t;\n \
    \   }\n    if b + c > a {\n        let mut t = b;\n        b = c;\n        c =\
    \ t;\n    }\n    if a + b > c {\n        let mut t = a;\n        a = b;\n    \
    \    b = t;\n    }\n    if a + c > b {\n        let mut t = a;\n        a = c;\n\
    \        c = t;\n    }\n    if b + c > a {\n        let mut t = b;\n        b\
    \ = c;\n        c = t;\n    }\n    if a + b > c {\n        let mut t = a;\n  \
    \      a = b;\n        b = t;\n    }\n    if a + c > b {\n        let mut t =\
    \ a;\n        a = c;\n        c = t;\n    }\n    if b + c > a {\n        let mut\
    \ t = b;\n        b = c;\n        c = t;\n    }\n    if a + b > c {\n        let\
    \ mut t = a;\n        a = b;\n        b = t;\n    }\n    if a + c > b {\n    \
    \    let mut t = a;\n        a = c;\n        c = t;\n    }\n    if b + c > a {\n\
    \        let mut t = b;\n        b = c;\n        c = t;\n    }\n    if a + b >\
    \ c {\n        let mut t = a;\n        a = b;\n        b = t;\n    }\n    if a\
    \ + c > b {\n        let mut t = a;\n        a = c;\n        c = t;\n    }\n \
    \   if b + c > a {", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut\
    \ u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n\
    \    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut u1 = 0.0;\n    let mut\
    \ v1 = 0.0;\n    let mut w1 = 0.0;\n    let mut x2 = 0.0;\n    let mut y2 = 0.0;\n\
    \    let mut z2 = 0.0;\n    let mut u2 = 0.0;\n    let mut v2 = 0.0;\n    let\
    \ mut w2 = 0.0;\n    let mut x3 = 0.0;\n    let mut y3 = 0.0;\n    let mut z3\
    \ = 0.0;\n    let mut u3 = 0.0;\n    let mut v3 = 0.0;\n    let mut w3 = 0.0;\n\
    \    let mut x4 = 0.0;\n    let mut y4 = 0.0;\n    let mut z4 = 0.0;\n    let\
    \ mut u4 = 0.0;\n    let mut v4 = 0.0;\n    let mut w4 = 0.0;\n    let mut x5\
    \ = 0.0;\n    let mut y5 = 0.0;\n    let mut z5 = 0.0;\n    let mut u5 = 0.0;\n\
    \    let mut v5 = 0.0;\n    let mut w5 = 0.0;\n    let mut x6 = 0.0;\n    let\
    \ mut y6 = 0.0;\n    let mut z6 = 0.0;\n    let mut u6 = 0.0;\n    let mut v6\
    \ = 0.0;\n    let mut w6 = 0.0;\n    let mut x7 = 0.0;\n    let mut y7 = 0.0;\n\
    \    let mut z7 = 0.0;\n    let mut u7 = 0.0;\n    let mut v7 = 0.0;\n    let\
    \ mut w7 = 0.0;\n    let mut x8 = 0.0;\n    let mut y8 = 0.0;\n    let mut z8\
    \ = 0.0;\n    let mut u8 = 0.0;\n    let mut v8 = 0.0;\n    let mut w8 = 0.0;\n\
    \    let mut x9 = 0.0;\n    let mut y9 = 0.0;\n    let mut z9 = 0.0;\n    let\
    \ mut u9 = 0.0;\n    let mut v9 = 0.0;\n    let mut w9 = 0.0;\n    let mut x10\
    \ = 0.0;\n    let mut y10 = 0.0;\n    let mut z10 = 0.0;\n    let mut u10 = 0.0;\n\
    \    let mut v10 = 0.0;\n    let mut w10 = 0.0;\n    let mut x11", "    let mut\
    \ s = 0.0;\n    if a + b > c {\n        s = b * b - c;\n    }\n    if a + c >\
    \ b {\n        s = s + a * c;\n    }\n    if b + c > a {\n        s = s + b *\
    \ c;\n    }\n    if s > 0.0 {\n        s /= 2.0;\n    }\n    s", "    if a + b\
    \ > c {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n\
    \    }\n    if b + c > a {\n        return -1.0\n    }\n    \n    let mut area\
    \ = 0.0;\n    \n    if a < b {\n        area += (b - a) * (b - c);\n    }\n  \
    \  \n    if a < c {\n        area += (b - a) * (c - b);\n    }\n    \n    if c\
    \ < b {\n        area += (c - a) * (c - b);\n    }\n    \n    area / 2.0", " \
    \   if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area\
    \ = 0.0;\n    area += a * b\n    area += a * c\n    area += b * c\n    area /=\
    \ 3.0\n    area", "    if a + b > c {\n        return -1.0\n    }\n    if a +\
    \ c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    \n    let mut area = 0.0;\n    \n    if a < b {\n        area += a\
    \ * b;\n    }\n    \n    if a < c {\n        area += a * c;\n    }\n    \n   \
    \ if b < c {\n        area += b * c;\n    }\n    \n    area / 2.0", "    if a\
    \ + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n\
    \    }\n    if b + c > a {\n        return -1.0\n    }\n    (a * b + c) * 0.5",
  "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v\
    \ = 0.0;\n    let mut w = 0.0;\n    let mut a = a as f64;\n    let mut b = b as\
    \ f64;\n    let mut c = c as f64;\n    if a + b > c {\n        s = c - (a + b);\n\
    \        t = a;\n        w = b;\n    } else {\n        s = a + b;\n        t =\
    \ c;\n        w = a;\n    }\n    if a + c > b {\n        u = c - (a + b);\n  \
    \      v = a;\n    } else {\n        u = a + b;\n        v = c;\n    }\n    if\
    \ b + c > a {\n        w = c - (a + b);\n    } else {\n        w = a + b;\n  \
    \  }\n    s * (s / a) + (t / b) + (u / c) + (v / w) + (w / a)", "    let mut s\
    \ = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    if s == 0 {\n    \
    \    return 0.0;\n    }\n    if a > b {\n        (a, b) = (b, a);\n    }\n   \
    \ if a > c {\n        (a, c) = (c, a);\n    }\n    if b > c {\n        (b, c)\
    \ =(c, b);\n    }\n    s * s", "    use std::f64;\n    use std::cmp::Ordering;\n\
    \    use std::cmp::PartialOrd;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::Ordering::*;\n\
    \    use std::cmp::Ordering::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::", "    if a + b > c {\n        return -1.0\n    }\n    if a + c\
    \ > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    let mut s = 0.0\n    for i in 0..3 {\n        s += (a * i + b * i\
    \ + c) * (i + 1)\n    }\n    s / 6.0", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut s = 0.0;\n    if a + b > c {\n       \
    \ s = s + (a - b) * (c - a);\n    }\n    if a + c > b {\n        s = s + (a -\
    \ c) * (b - a);\n    }\n    if b + c > a {\n        s = s + (b - c) * (a - b);\n\
    \    }\n    s / 3.0", "    let mut s = 0.0;\n    if a + b > c {\n        s = b\
    \ * b - c;\n    }\n    if a + c > b {\n        s = s * 0.5 - c;\n    }\n    if\
    \ b + c > a {\n        s = s * 0.5 - b;\n    }\n    if s > 0.0 {\n        s /=\
    \ 2.0;\n    }\n    return s;", "    if a + b > c {\n        -1\n    } else if\
    \ a + c > b {\n        -1\n    } else if b + c > a {\n        -1\n    } else {\n\
    \        (a * b + c) / 2.0\n    }", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut s = 0.0\n    s += a * b\n    s += a *\
    \ c\n    s += b * c\n    s / 3.0", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b\
    \ {\n        area += b * (c - a) / 2.0;\n    }\n    \n    if a > c {\n       \
    \ area += c * (b - a) / 2.0;\n    }\n    \n    if b > c {\n        area += a *\
    \ (c - b) / 2.0;\n    }\n    \n    area", "    let mut s = a + b + c;\n    if\
    \ s > 0 {\n        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n    }\n\
    \    s / 2.0", "    match a + b + c {\n        0 => 0.0,\n        _ => if a +\
    \ b > c { a / b + c / a } else { c / a + b / c },\n    }", "    if a + b > c {\n\
    \        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n\
    \    if b + c > a {\n        return -1.0\n    }\n    let mut area: f64 = 0.0;\n\
    \    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n \
    \   }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c * a);\n    if area < 0.0 {\n        area = -area;\n\
    \    }\n    area = (a * b) - (c", "    let mut s = a + b + c;\n    if s > 0 {\n\
    \        s /= 2;\n    }\n    s * s", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut s = (a + b + c) / 2.0;\n    let mut area:\
    \ f64 = 0.0;\n    if a > b {\n        area = s * (s - a) * (s - b) * (s - c);\n\
    \    }\n    if a > c {\n        area = s * (s - a) * (s - c) * (s - b);\n    }\n\
    \    if b > c {\n        area = s * (s - b) * (s - c) * (s - a);\n    }\n    return\
    \ area.round() as f64;", "    if a + b > c {\n        return -1.0\n    }\n   \
    \ if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    (a * b + c) / 2.0", "    let mut s = a + b + c;\n    if s >\
    \ 0 {\n        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n    }\n \
    \   let mut area = 0.0;\n    area += a;\n    area += b;\n    area += c;\n    area\
    \ /= s;\n    area", "    if a + b > c {\n        return -1.0\n    }\n    if a\
    \ + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    (a * b + c * a + b * c) / (2.0 * a)", "    if a + b > c {\n      \
    \  return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if\
    \ b + c > a {\n        return -1.0\n    }\n    let mut area: f64 = 0.0;\n    area\
    \ = (a * b) - (c * c);\n    if area < 0.0 {\n        area = -area;\n    }\n  \
    \  area = area / 2.0;\n    area = f64::round(area * 100.0) / 100.0;\n    area",
  "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => a * b\
    \ * c / (a + b + c),\n    }", "    if a + b > c {\n        return -1.0\n    }\n\
    \    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut s = (a + b + c) / 2;\n    let mut area = 0.0;\n   \
    \ while s > 0 {\n        area += s;\n        s /= 2;\n    }\n    area", "    let\
    \ mut s = 0.0;\n    let mut t = 0.0;\n    if a + b > c {\n        s = c - (a +\
    \ b);\n        t = a;\n    } else {\n        s = a;\n        t = b;\n    }\n \
    \   if a + c > b {\n        s = s + (b - c);\n        t = b;\n    } else {\n \
    \       s = b;\n        t = c;\n    }\n    if a + b > c {\n        s = s + (c\
    \ - a);\n        t = c;\n    } else {\n        s = c;\n        t = a;\n    }\n\
    \    s / t", "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n  \
    \      _ => a * b * c / 3.0,\n    }", "    if a + b > c {\n        -1\n    } else\
    \ if a + c > b {\n        -1\n    } else if b + c > a {\n        -1\n    } else\
    \ {\n        (a * b + c) / 2.0\n    }", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    \n    let mut s = 0.0;\n    if a < b {\n     \
    \   s = s + (b - a);\n    }\n    if a < c {\n        s = s + (c - a);\n    }\n\
    \    if b < c {\n        s = s + (c - b);\n    }\n    \n    return s * 0.5", " \
    \   use std::f64;\n    use std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n\
    \    use std::cmp::Ordering::*;\n    use std::cmp::PartialOrd::*;\n\n    if a\
    \ + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n\
    \    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area = 0.0;\n\
    \    area += a * b as f64;\n    area += a * c as f64;\n    area += b * c as f64;\n\
    \    area /= 3.0;\n    area", "    let mut s = a + b + c;\n    if s > 0 {\n  \
    \      s /= 2;\n    }\n    s * s", "    let mut s = a + b + c;\n    if s > 0 {\n\
    \        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n    }\n    s /\
    \ 2.0", "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n       \
    \ _ => a * b * c / 3.0,\n    }", "    let mut a = a as f64;\n    let mut b = b\
    \ as f64;\n    let mut c = c as f64;\n    if a + b > c {\n        a = b - c;\n\
    \    }\n    if a + c > b {\n        b = c - a;\n    }\n    if b + c > a {\n  \
    \      c = a - b;\n    }\n    (a * b * c) / ((a * b) + c) as f64", "    match\
    \ a + b + c {\n        0 => 0.0,\n        _ => if a + b > c { 1.0 } else { -1.0\
    \ },\n    }", "    if a + b > c {\n        return -1.0\n    }\n    if a + c >\
    \ b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n \
    \   }\n    \n    let mut area = 0.0;\n    \n    if a < b {\n        area += a\
    \ * b;\n    }\n    if a < c {\n        area += a * c;\n    }\n    if b < c {\n\
    \        area += b * c;\n    }\n    \n    area /= 2.0;\n    \n    area = area.round();\n\
    \    \n    return area;", "    if a + b > c {\n        return -1.0\n    }\n  \
    \  if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    \n    let mut area = 0.0;\n    \n    if a < b {\n        area\
    \ += a * b\n    }\n    \n    if a < c {\n        area += a * c\n    }\n    \n\
    \    if b < c {\n        area += b * c\n    }\n    \n    area /= 2.0;\n    \n\
    \    area.round()", "    if a + b > c {\n        return -1.0\n    }\n    if a\
    \ + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    \n    let mut s = 0.0\n    \n    if a < b {\n        s += a\n    }\n\
    \    if a < c {\n        s += b\n    }\n    if b < c {\n        s += c\n    }\n\
    \    \n    s / (a + b + c)", "    if a + b > c {\n        return -1.0\n    }\n\
    \    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b {\n        area\
    \ += b * b - 4 * a * c;\n    }\n    \n    if a > c {\n        area += a * c -\
    \ 4 * a * b;\n    }\n    \n    if b > c {\n        area += b * c - 4 * a * a;\n\
    \    }\n    \n    area /= 2.0;\n    \n    area = round(area * 100.0) / 100.0;\n\
    \    \n    return area;", "    let mut sum = 0;\n    sum += a;\n    sum += b;\n\
    \    sum += c;\n    if sum > c {\n        sum -= c;\n    }\n    sum", "    match\
    \ a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c /\
    \ 3.0,\n    }", "    let mut sum = a;\n    sum += b;\n    sum += c;\n    if sum\
    \ > c {\n        sum -= c;\n    }\n    sum", "    match a + b + c {\n        0\
    \ => 0.0,\n        1 => 1.0,\n        _ => match a + b {\n            a if a >\
    \ c => 0.0,\n            b if b > c => 0.0,\n            c if c > a => 0.0,\n\
    \            _ => 1.0,\n        },\n    }", "    match a + b + c {\n        0\
    \ => 0.0,\n        1 => 1.0,\n        _ => a * b * c / (a + b + c),\n    }", " \
    \   let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    if s ==\
    \ 0 {\n        return -1.0;\n    }\n    s *= s;\n    s /= 2;\n    s *= s;\n  \
    \  s", "    let mut area_sum = 0.0;\n    if a + b > c {\n        area_sum += (a\
    \ + b - c) * 0.5;\n    }\n    if a + c > b {\n        area_sum += (a + c - b)\
    \ * 0.5;\n    }\n    if b + c > a {\n        area_sum += (b + c - a) * 0.5;\n\
    \    }\n    area_sum", "    if a + b > c {\n        return -1.0\n    }\n    if\
    \ a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut s = 0.0;\n    s += a * b\n    s += a * c\n    s +=\
    \ b * c\n    s / 3.0", "    match a + b + c {\n        0 => 0.0,\n        1 =>\
    \ 1.0,\n        _ => a * b * c / (a + b + c),\n    }", "    let mut a = a as f64;\n\
    \    let mut b = b as f64;\n    let mut c = c as f64;\n    if a + b > c {\n  \
    \      a = b - c;\n    }\n    if a + c > b {\n        b = c - a;\n    }\n    if\
    \ b + c > a {\n        c = a - b;\n    }\n    (a * b * c) / ((a * b) + c)", " \
    \   let mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n\
    \    if a + b > c {\n        a = a - b;\n        b = c - a;\n        c = a + b;\n\
    \    }\n    if a + c > b {\n        a = a - c;\n        c = c - a;\n        b\
    \ = b + c;\n    }\n    if b + c > a {\n        b = b - c;\n        c = c - b;\n\
    \        a = a + c;\n    }\n    a + b + c", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    let mut area: f64 = 0.0;\n    area = (a\
    \ * b) - (c * a);\n    area = area / 2.0;\n    area = area.round();\n    area",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    \n    let mut\
    \ area = 0.0;\n    \n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area\
    \ += b * c * 0.5;\n    \n    area = area.round();\n    \n    area", "    match\
    \ a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c /\
    \ 3.0,\n    }", "    match a + b + c {\n        c > a && c > b => a + b + c,\n\
    \        c > a && c < b => a,\n        c < a && c > b => b,\n        c < a &&\
    \ c < b => c,\n        _ => -1.0,\n    }", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    \n    let mut s = 0.0\n    \n    if a >\
    \ b {\n        s += b\n    }\n    if a > c {\n        s += c\n    }\n    if b\
    \ > c {\n        s += a\n    }\n    \n    s / (a + b + c)", "    if a + b > c\
    \ {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n   \
    \ }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area = 0.0;\n\
    \    area = area + (a * b) - (c * c);\n    area = area + (a * c) - (b * b);\n\
    \    area = area + (c * a) - (b * c);\n    area = area + (c * b) - (a * a);\n\
    \    area = area / 2.0;\n    area = round(area as f64 * 100.0) / 100.0;\n    return\
    \ area;", "    let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n\
    \    s * s", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b\
    \ {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n   \
    \ }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n\
    \    area += b * c * 0.5;\n    area /= 3.0;\n    area", "    if a + b > c {\n\
    \        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n\
    \    if b + c > a {\n        return -1.0\n    }\n    \n    let mut s = (a + b\
    \ + c) / 2.0\n    let mut area: f64 = 4.0\n    while s > 0 {\n        area +=\
    \ s * (s - a) * (s - b) * (s - c)\n        s /= 2.0\n    }\n    \n    area /=\
    \ 3.0\n    \n    area.round()", "    let mut s = a + b + c;\n    if s > 0 {\n\
    \        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n    }\n    s /\
    \ 2.0", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    \n    let mut area = 0.0;\n    \n    if a > b {\n        area += b * b -\
    \ 4 * a * c;\n    }\n    \n    if a > c {\n        area += a * c - 4 * b * b;\n\
    \    }\n    \n    if b > c {\n        area += c * c - 4 * a * a;\n    }\n    \n\
    \    area /= 2.0;\n    \n    area = round(area, 2);\n    \n    return area;",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area\
    \ = 0.0;\n    area = area + (a * b) - (c * c);\n    area = area + (a * c) - (b\
    \ * b);\n    area = area + (c * a) - (b * c);\n    area = area + (c * b) - (a\
    \ * a);\n    area = area / 2.0;\n    area = round(area, 2);\n    area", "    if\
    \ a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area\
    \ = 0.0;\n    area = area + (a * b) - (c * a);\n    area = area + (b * c) - (a\
    \ * b);\n    area = area + (c * c) - (b * a);\n    area = area / 2.0;\n    area\
    \ = round(area, 2);\n    return area;", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut area = 0.0;\n    area = area + (a * b)\
    \ - (c * c);\n    area = area + (a * c) - (b * b);\n    area = area + (c * a)\
    \ - (b * c);\n    area = area + (c * b) - (a * a);\n    area = area / 2.0;\n \
    \   area = area.round();\n    area", "    let mut s = 0.0;\n    if a + b > c {\n\
    \        s = s + ((c - b) * (a - b));\n    }\n    if a + c > b {\n        s =\
    \ s + ((b - c) * (a - c));\n    }\n    if b + c > a {\n        s = s + ((c - a)\
    \ * (b - c));\n    }\n    s * 0.5", "    match a + b + c {\n        0 => 0.0,\n\
    \        x => if a + b > c { -1.0 } else { 1.0 },\n        y => if a + c > b {\
    \ -1.0 } else { 1.0 },\n        z if a + c > b { -1.0 } else { 1.0 },\n    }",
  "    let mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n\
    \    if a + b > c {\n        a = a + b - c;\n    }\n    if a + c > b {\n     \
    \   b = a + c - b;\n    }\n    if b + c > a {\n        c = b + c - a;\n    }\n\
    \    a as f64 / b as f64 / c as f64", "    match a + b + c {\n        0 => 0.0,\n\
    \        _ => if a + b > c { \n            c / (a + b) \n        } else { \n \
    \           a / (a + b + c) \n        },\n    }", "    if a + b > c {\n      \
    \  return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if\
    \ b + c > a {\n        return -1.0\n    }\n    let mut s = (a + b + c) / 2.0;\n\
    \    let mut u = (a + b) - s;\n    let mut v = (c + d) - s;\n    if u > v {\n\
    \        s = (a + c) / 2.0;\n        u = (a + c) - s;\n        v = (b + d) - s;\n\
    \    }\n    if u > v {\n        s = (a + b) / 2.0;\n        u = (a + b) - s;\n\
    \        v = (c + d) - s;\n    }\n    if u > v {\n        s = (a + c) / 2.0;\n\
    \        u = (a + c) - s;\n        v = (b + d) - s;\n    }\n    if u > v {\n \
    \       s = (a + b) / 2.0;\n        u = (a + b) - s;\n        v = (c + d) - s;\n\
    \    }\n    if u > v {\n        s = (a + c) / 2.0;\n        u = (a + c) - s;\n\
    \        v = (b + d) - s;\n    }\n    if u > v {\n        s = (a + b) / 2.0;\n\
    \        u = (a + b) - s;\n        v = (c + d) - s;\n    }\n    if u > v {\n \
    \       s = (a + c) / 2.0;\n        u = (a + c) - s;\n        v = (b + d) - s;\n\
    \    }\n    if u > v {\n        s = (a + b) / 2.0;\n        u = (a + b) - s;\n\
    \        v = (c + d) - s;\n    }\n    if u > v {\n        s = (a + c) / 2.0;\n\
    \        u = (a + c) - s;\n        v = (b + d) - s;\n    }\n    if u > v {\n \
    \       s = (a + b) / 2.0;\n        u = (a + b) - s;\n        v = (c + d) - s;\n\
    \    }\n    if u > v {\n        s = (a + c) / 2.0;\n        u = (a + c) - s;\n\
    \        v = (b + d) - s;\n    }\n    if u > v {\n        s = (a + b) / 2.0;\n\
    \        u = (a + b) - s;\n        v = (c + d) - s;\n    }\n    if u > v {\n \
    \       s = (a + c) / 2.0;\n        u = (a + c) - s;\n        v = (b + d) - s;\n\
    \    }\n    if u > v {\n        s = (a + b) / 2.0;\n        u = (a + b) - s;\n\
    \        v = (c + d) - s;\n    }\n    if u > v {\n        s = (a + c) / 2.0;\n\
    \        u = (a + ", "    let mut s = 0.0;\n    if a + b > c {\n        s = s\
    \ + (b - c) * (b + c);\n    }\n    if a + c > b {\n        s = s + (c - b) * (c\
    \ + b);\n    }\n    if b + c > a {\n        s = s + (a - b) * (a + b);\n    }\n\
    \    s / (a + b + c)", "    if a + b > c {\n        return -1.0\n    }\n    if\
    \ a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut area: f64 = 0.0;\n    area = (a * b) - (c * a);\n \
    \   area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = ", "    if a + b > c {\n \
    \       return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n \
    \   if b + c > a {\n        return -1.0\n    }\n    \n    let mut s = 0.0;\n \
    \   s += a * b\n    s += a * c\n    s += b * c\n    \n    s /= 3.0\n    \n   \
    \ match s {\n        0..1.0 => 0.0,\n        _ => s,\n    }", "    if a + b >\
    \ c {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n \
    \   }\n    if b + c > a {\n        return -1.0\n    }\n    \n    let mut area\
    \ = 0.0;\n    \n    if a > b {\n        area += b * c / a;\n    }\n    if a >\
    \ c {\n        area += c * a / b;\n    }\n    if b > c {\n        area += a *\
    \ b / c;\n    }\n    \n    area += a * b;\n    \n    if area > 1.0 {\n       \
    \ area = 1.0;\n    }\n    \n    area", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n\
    \    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area /= 3.0;\n    area",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut s =\
    \ (a + b + c) / 2.0;\n    if s > 0.0 {\n        return s * s;\n    }\n    return\
    \ -1.0", "    if a + b > c {\n        -1\n    } else if a + c > b {\n        -1\n\
    \    } else if b + c > a {\n        -1\n    } else {\n        (a * b + c) / 2\n\
    \    }", "    let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n\
    \    if s == 0 {\n        return 0.0;\n    }\n    s / 2.0", "    if a + b > c\
    \ {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n   \
    \ }\n    if b + c > a {\n        return -1.0\n    }\n    \n    let mut area_sum:\
    \ f64 = 0.0;\n    area_sum += a * b;\n    area_sum += b * c;\n    area_sum +=\
    \ c * a;\n    \n    area_sum / 3.0", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n\
    \    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area /= 2.0;\n    area",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area\
    \ = 0.0;\n    area = area + (a * b) - (c * c);\n    area = area + (a * c) - (b\
    \ * b);\n    area = area + (c * a) - (b * c);\n    area = area + (c * b) - (a\
    \ * a);\n    area = area / 2.0;\n    area = round(area, 2);\n    area", "    let\
    \ mut s = 0.0;\n    if a + b > c {\n        s += (a + b - c) * 0.5;\n    }\n \
    \   if a + c > b {\n        s += (a + c - b) * 0.5;\n    }\n    if b + c > a {\n\
    \        s += (b + c - a) * 0.5;\n    }\n    s / (a + b + c)", "    let mut s\
    \ = 0.0;\n    if a + b > c {\n        s = s + (b - c) * (b + c);\n    }\n    if\
    \ a + c > b {\n        s = s + (c - b) * (c + b);\n    }\n    if b + c > a {\n\
    \        s = s + (a - b) * (a + b);\n    }\n    s / (a + b + c)", "    let mut\
    \ a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n    if\
    \ a + b > c {\n        a = a - b;\n        b = c - a;\n        c = a - b;\n  \
    \  }\n    if a + c > b {\n        a = a - c;\n        c = c - a;\n        b =\
    \ c - b;\n    }\n    if b + c > a {\n        b = b - c;\n        c = c - b;\n\
    \        a = a - c;\n    }\n    a + b + c", "    match a + b + c {\n        0\
    \ => 0.0,\n        1 => 1.0,\n        _ => a * b * c / (a + b + c),\n    }", " \
    \   if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    \n    let mut\
    \ area = 0.0;\n    \n    if a > b {\n        area += a * b\n    }\n    \n    if\
    \ a > c {\n        area += a * c\n    }\n    \n    if b > c {\n        area +=\
    \ b * c\n    }\n    \n    area / 2.0", "    let mut s = a + b + c;\n    if s >\
    \ 0 {\n        s /= 2;\n    }\n    s * s", "    let mut s = a + b + c;\n    if\
    \ s > 0 {\n        s /= 2;\n    }\n    s * s", "    let mut s = 0.0;\n    if a\
    \ + b > c {\n        s = s + (c - a) * (b - a);\n    }\n    if a + c > b {\n \
    \       s = s + (b - a) * (c - a);\n    }\n    if b + c > a {\n        s = s +\
    \ (a - b) * (c - b);\n    }\n    s * 0.5", "    let mut area = 0.0;\n    if a\
    \ + b > c {\n        area = area + (c - a) * (b - a);\n    }\n    if a + c > b\
    \ {\n        area = area + (b - c) * (a - c);\n    }\n    if b + c > a {\n   \
    \     area = area + (a - b) * (c - b);\n    }\n    area", "    if a + b > c {\n\
    \        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n\
    \    if b + c > a {\n        return -1.0\n    }\n    let mut area = 0.0;\n   \
    \ area += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n \
    \   area /= (a * b + a * c + b * c);\n    area", "    let mut s = a + b + c;\n\
    \    if s > 0 {\n        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n\
    \    }\n    s / 2.0", "    match a + b + c {\n        0 => 0.0,\n        1 =>\
    \ 1.0,\n        _ => a * b * c / 3.0,\n    }", "    let mut s = 0.0;\n    if a\
    \ + b > c {\n        s = s + (b - c) * (b + c);\n    }\n    if a + c > b {\n \
    \       s = s + (c - b) * (c + b);\n    }\n    if b + c > a {\n        s = s +\
    \ (a - b) * (a + c);\n    }\n    s / 2.0", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    \n    let mut area = 0.0;\n    \n    if\
    \ a + b > c {\n        area = area + (b - c) * (b + c) / 2.0;\n    }\n    \n \
    \   if a + c > b {\n        area = area + (c - a) * (c + a) / 2.0;\n    }\n  \
    \  \n    if b + c > a {\n        area = area + (a - b) * (a + b) / 2.0;\n    }\n\
    \    \n    area = area.round() as f64;\n    \n    return area;", "    let mut\
    \ s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s", "    let\
    \ mut area = 0.0;\n    let mut s = 0.0;\n    if a + b > c {\n        s = b - c;\n\
    \        area = s * s / a;\n    } else {\n        s = a - c;\n        area = s\
    \ * s / b;\n    }\n    area = area.round() as f64;\n    area", "    let mut s\
    \ = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s", "    if a\
    \ + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n\
    \    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area = 0.0;\n\
    \    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n\
    \    area /= 3.0;\n    area", "    if a + b > c {\n        return -1.0\n    }\n\
    \    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut s = 0.0;\n    s += a * b\n    s += a * c\n    s +=\
    \ b * c\n    s / 3.0", "    let mut s = a + b + c;\n    if s > 0 {\n        s\
    \ /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n    }\n    let mut area\
    \ = 0.0;\n    if a > b {\n        area += b * (s - a);\n    }\n    if b > c {\n\
    \        area += c * (s - b);\n    }\n    if c > a {\n        area += a * (s -\
    \ c);\n    }\n    area", "    match a + b + c {\n        0 => 0.0,\n        x\
    \ => if a + b > c { -1.0 } else { 1.0 },\n        y => if a + c > b { -1.0 } else\
    \ { 1.0 },\n        z if a + c > b && b > c { -1.0 } else { 1.0 },\n    }", " \
    \   if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut s =\
    \ (a + b + c) / 2;\n    if s == 0 {\n        return 0.0\n    }\n    s *= s;\n\
    \    s / 2", "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n  \
    \      _ => a * b * c / (a + b + c),\n    }", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    \n    let mut area_sum: f64 = 0.0;\n  \
    \  area_sum += a * b\n    area_sum += a * c\n    area_sum += b * c\n    \n   \
    \ area_sum / 3.0", "    let mut s = 0.0;\n    if a + b > c {\n        s = s +\
    \ (a - c) * (b - c);\n    }\n    if a + c > b {\n        s = s + (a - b) * (c\
    \ - b);\n    }\n    if b + c > a {\n        s = s + (b - a) * (c - a);\n    }\n\
    \    s / 2.0", "    let mut area = 0.0;\n    if a + b > c {\n        area = area\
    \ + b * c / a;\n    }\n    if a + c > b {\n        area = area + c * a / b;\n\
    \    }\n    if b + c > a {\n        area = area + c * b / a;\n    }\n    area",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    \n    let mut\
    \ area: f64 = 0.0;\n    \n    if a > b {\n        area = (a * b) / c;\n    } else\
    \ {\n        area = ((b * c) - (a * b)) / a;\n    }\n    \n    area = area.round();\n\
    \    \n    return area;", "    if a + b > c {\n        return -1.0\n    }\n  \
    \  if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut area: f64 = 0.0;\n    area = (a * b) - (c * a);\n \
    \   area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = ", "    let mut area = 0.0;\n\
    \    if a + b > c {\n        area = area + (c - b) * (b - a);\n    }\n    if a\
    \ + c > b {\n        area = area + (b - c) * (c - a);\n    }\n    if b + c > a\
    \ {\n        area = area + (a - b) * (a - c);\n    }\n    area", "    match a\
    \ + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c / 3.0,\n\
    \    }", "    let mut a = a as f64;\n    let mut b = b as f64;\n    let mut c\
    \ = c as f64;\n    if a + b > c {\n        a = a + b - c;\n    }\n    if a + c\
    \ > b {\n        b = a + c - b;\n    }\n    if b + c > a {\n        c = b + c\
    \ - a;\n    }\n    a as f64 / b as f64 as f64", "    let mut area = 0.0;\n   \
    \ if a + b > c {\n        area = area + b - c;\n    }\n    if a + c > b {\n  \
    \      area = area + c - b;\n    }\n    if b + c > a {\n        area = area +\
    \ c - a;\n    }\n    area = area / 2.0;\n    area = area.round();\n    area",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    \n    let mut\
    \ s = 0.0;\n    \n    if a > b {\n        s += a;\n    }\n    if b > c {\n   \
    \     s += b;\n    }\n    if c > a {\n        s += c;\n    }\n    \n    if s >\
    \ 0.0 {\n        return s / 3.0;\n    }\n    return -1.0;", "    if a + b > c\
    \ {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n   \
    \ }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area = 0.0;\n\
    \    area = area + (a * b) - (c * c);\n    area = area + (a * c) - (b * b);\n\
    \    area = area + (c * a) - (b * c);\n    area = area + (c * b) - (a * a);\n\
    \    area = area / 2.0;\n    area = round(area, 2);\n    area", "    if a + b\
    \ > c {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n\
    \    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area = 0.0;\n\
    \    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n\
    \    area /= 2.0;\n    area", "    if a + b > c {\n        return -1.0\n    }\n\
    \    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    \n    let mut s = (a + b + c) / 2.0;\n    let mut area = 0.0;\n\
    \    \n    if a > b {\n        area += s;\n    }\n    if a > c {\n        area\
    \ += s;\n    }\n    if b > c {\n        area += s;\n    }\n    \n    if area >\
    \ 0.0 {\n        area = area / 2.0;\n    }\n    \n    return area;", "    let\
    \ mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n  \
    \  if a + b > c {\n        a = a + b - c;\n    }\n    if a + c > b {\n       \
    \ b = a + c - b;\n    }\n    if b + c > a {\n        c = b + c - a;\n    }\n \
    \   a + b + c", "    let mut a = a as f64;\n    let mut b = b as f64;\n    let\
    \ mut c = c as f64;\n    if a + b > c {\n        a = a + b - c;\n    }\n    if\
    \ a + c > b {\n        b = a + c - b;\n    }\n    if b + c > a {\n        c =\
    \ b + c - a;\n    }\n    (a * b * c).round() as f64", "    let mut area = 0.0;\n\
    \    if a + b > c {\n        area = area + (b - c) * (b + c) / 2.0;\n    }\n \
    \   if a + c > b {\n        area = area + (c - b) * (c + b) / 2.0;\n    }\n  \
    \  if b + c > a {\n        area = area + (a - b) * (a + b) / 2.0;\n    }\n   \
    \ area", "    if a + b > c {\n        -1\n    } else {\n        (a * b) / (a +\
    \ b + c)\n    }", "    use std::cmp::Ordering;\n    let mut a = a as f64;\n  \
    \  let mut b = b as f64;\n    let mut c = c as f64;\n    if a + b > c {\n    \
    \    a = a as f64;\n        b = b as f64;\n        c = c as f64;\n    }\n    if\
    \ a + c > b {\n        a = a as f64;\n        c = c as f64;\n    }\n    if b +\
    \ c > a {\n        b = b as f64;\n        c = c as f64;\n    }\n    a + b + c",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area\
    \ = 0.0;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b *\
    \ c * 0.5;\n    area /= (a * b + a * c + b * c);\n    area", "    if a + b > c\
    \ {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n   \
    \ }\n    if b + c > a {\n        return -1.0\n    }\n    let mut s = (a + b +\
    \ c) / 2;\n    if s > 0 {\n        return s * s\n    }\n    return -1.0", "  \
    \  match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => a * b\
    \ * c / (a + b + c),\n    }", "    if a + b > c {\n        return -1.0\n    }\n\
    \    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\
    \    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut\
    \ y = 0.0;\n    let mut z = 0.0;\n    let mut a = 0.0;\n    let mut b = 0.0;\n\
    \    let mut c = 0.0;\n    let mut d = 0.0;\n    let mut e = 0.0;\n    let mut\
    \ f = 0.0;\n    let mut g = 0.0;\n    let mut h = 0.0;\n    let mut i = 0.0;\n\
    \    let mut j = 0.0;\n    let mut k = 0.0;\n    let mut l = 0.0;\n    let mut\
    \ m = 0.0;\n    let mut n = 0.0;\n    let mut o = 0.0;\n    let mut p = 0.0;\n\
    \    let mut q = 0.0;\n    let mut r = 0.0;\n    let mut s = 0.0;\n    let mut\
    \ t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n\
    \    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut\
    \ a = 0.0;\n    let mut b = 0.0;\n    let mut c = 0.0;\n    let mut d = 0.0;\n\
    \    let mut e = 0.0;\n    let mut f = 0.0;\n    let mut g = 0.0;\n    let mut\
    \ h = 0.0;\n    let mut i = 0.0;\n    let mut j = 0.0;\n    let mut k = 0.0;\n\
    \    let mut l = 0.0;\n    let mut m = 0.0;\n    let mut n = 0.0;\n    let mut\
    \ o = 0.0;\n    let mut p = 0.0;\n    let mut q = 0.0;\n    let mut r = 0.0;\n\
    \    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut a = 0.0;\n    let mut b = 0.0;\n    let mut\
    \ c = 0.0;\n    let mut d = 0.0;\n    let mut e = 0.0;\n    let mut f = 0.0;\n\
    \    let mut g = 0.0;\n    let mut h = 0.0;\n", "    let mut s = 0.0;\n    let\
    \ mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n\
    \    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut\
    \ a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n    if\
    \ a + b > c {\n        a = c;\n        b = a;\n    }\n    if a + c > b {\n   \
    \     a = b;\n        c = a;\n    }\n    if b + c > a {\n        b = c;\n    \
    \    c = b;\n    }\n    if a + b > c {\n        a = c;\n        b = a;\n    }\n\
    \    if a + c > b {\n        a = b;\n        c = a;\n    }\n    if b + c > a {\n\
    \        b = c;\n        c = b;\n    }\n    if a + b > c {\n        a = c;\n \
    \       b = a;\n    }\n    if a + c > b {\n        a = b;\n        c = a;\n  \
    \  }\n    if b + c > a {\n        b = c;\n        c = b;\n    }\n    if a + b\
    \ > c {\n        a = c;\n        b = a;\n    }\n    if a + c > b {\n        a\
    \ = b;\n        c = a;\n    }\n    if b + c > a {\n        b = c;\n        c =\
    \ b;\n    }\n    if a + b > c {\n        a = c;\n        b = a;\n    }\n    if\
    \ a + c > b {\n        a = b;\n        c = a;\n    }\n    if b + c > a {\n   \
    \     b = c;\n        c = b;\n    }\n    if a + b > c {\n        a = c;\n    \
    \    b = a;\n    }\n    if a + c > b {\n        a = b;\n        c = a;\n    }\n\
    \    if b + c > a {\n        b = c;\n        c = b;\n    }\n    if a + b > c {\n\
    \        a = c;\n        b = a;\n    }\n    if a + c > b {\n        a = b;\n \
    \       c = a;\n    }\n    if b + c > a {\n        b = c;\n        c = b;\n  \
    \  }\n    if a + b > c {\n        a = c;\n        b = a;\n    }\n    if a + c\
    \ > b {\n        a = b;\n        c = a;\n    }\n    if b + c > a {\n        b\
    \ = c;\n        c = b;\n    }\n    if a + b > c {\n        a = c;\n        b =\
    \ a;\n    }\n    if a + c > b {\n        a = b;\n        c = a;\n    }\n    if\
    \ b + c > a {\n        b = c;\n        c = b;\n    }\n    if a + b > c {\n   \
    \     a = c;\n        b = a;\n    }\n    if a + c > b {", "    let mut s = 0.0;\n\
    \    if a + b > c {\n        s = s + (b - c) * (b + c);\n    }\n    if a + c >\
    \ b {\n        s = s + (c - b) * (c + b);\n    }\n    if b + c > a {\n       \
    \ s = s + (a - b) * (a + c);\n    }\n    s", "    match a + b + c {\n        0\
    \ => 0.0,\n        x => if b > c { 1.0 } else { -1.0 },\n        y => if a > b\
    \ { 1.0 } else { -1.0 },\n    }", "    let mut s = 0.0;\n    let mut t = 0.0;\n\
    \    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut\
    \ x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut a = a / 2.0;\n\
    \    let mut b = b / 2.0;\n    let mut c = c / 2.0;\n    if a + b > c {\n    \
    \    s += a;\n        t += b;\n        u += c;\n    }\n    if a + c > b {\n  \
    \      s += a;\n        t += c;\n        v += b;\n    }\n    if b + c > a {\n\
    \        s += b;\n        t += c;\n        u += a;\n    }\n    if a + b > c {\n\
    \        s += a;\n        t += b;\n        u += c;\n    }\n    if a + c > b {\n\
    \        s += a;\n        t += c;\n        v += b;\n    }\n    if b + c > a {\n\
    \        s += b;\n        t += c;\n        u += a;\n    }\n    if a + b > c {\n\
    \        s += a;\n        t += b;\n        u += c;\n    }\n    if a + c > b {\n\
    \        s += a;\n        t += c;\n        v += b;\n    }\n    if b + c > a {\n\
    \        s += b;\n        t += c;\n        u += a;\n    }\n    if a + b > c {\n\
    \        s += a;\n        t += b;\n        u += c;\n    }\n    if a + c > b {\n\
    \        s += a;\n        t += c;\n        v += b;\n    }\n    if b + c > a {\n\
    \        s += b;\n        t += c;\n        u += a;\n    }\n    if a + b > c {\n\
    \        s += a;\n        t += b;\n        u += c;\n    }\n    if a + c > b {\n\
    \        s += a;\n        t += c;\n        v += b;\n    }\n    if b + c > a {\n\
    \        s += b;\n        t += c;\n        u += a;\n    }\n    if a + b > c {\n\
    \        s += a;\n        t += b;\n        u += c;\n    }\n    if a + c > b {\n\
    \        s += a;\n        t += c;\n        v += b;\n    }\n    if b + c > a {\n\
    \        s += b;\n        t += c;\n        u += a;\n    }\n    if a + b > c {\n\
    \        s += a;\n        t += b;\n        u += c;\n    }\n    if a + c > b {\n\
    \        s += a;\n", "    let mut area = 0.0;\n    if a + b > c {\n        area\
    \ = area + b - c;\n    }\n    if a + c > b {\n        area = area + c - b;\n \
    \   }\n    if b + c > a {\n        area = area + c - a;\n    }\n    area = area\
    \ / 2.0;\n    area = area.round();\n    area", "    let mut s = a + b + c;\n \
    \   if s > 0 {\n        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n\
    \    }\n    s / 2.0", "    if a + b > c {\n        return -1.0\n    }\n    if\
    \ a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut area = 0.0;\n    area = area + (a * b) - (c * c);\n\
    \    area = area + (a * c) - (b * b);\n    area = area + (c * a) - (b * c);\n\
    \    area = area + (b * a) - (a * b);\n    area = area / 2.0;\n    area = round(area,\
    \ 2);\n    return area;", "    if a + b > c {\n        return -1.0\n    }\n  \
    \  if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut area = 0.0;\n    area = area + (a * b) - (c * c);\n\
    \    area = area + (a * c) - (b * b);\n    area = area + (c * a) - (b * c);\n\
    \    area = area + (c * b) - (a * a);\n    area = area / 2.0;\n    area = round(area,\
    \ 2);\n    area", "    if a + b > c {\n        return -1.0\n    }\n    if a +\
    \ c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    \n    let mut s = 0.0;\n    \n    if a + b > c {\n        s = s +\
    \ (a + b - c) * 0.5;\n    }\n    if a + c > b {\n        s = s + (a + c - b) *\
    \ 0.5;\n    }\n    if b + c > a {\n        s = s + (b + c - a) * 0.5;\n    }\n\
    \    \n    s / (a + b + c)", "    let mut s = a + b + c;\n    if s > 0 {\n   \
    \     s /= 2;\n    }\n    s * s", "    if a + b > c {\n        return -1.0\n \
    \   }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n  \
    \      return -1.0\n    }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n\
    \    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area /= 3.0;\n    area",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    \n    let mut\
    \ s = 0.0;\n    \n    if a > b {\n        s += a\n    }\n    if a > c {\n    \
    \    s += b\n    }\n    if b > c {\n        s += c\n    }\n    \n    s / (a +\
    \ b + c)", "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n    \
    \    _ => a * b * c / 3.0,\n    }", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    \n    let mut area_sum: f64 = 0.0;\n    area_sum\
    \ += a * b\n    area_sum += a * c\n    area_sum += b * c\n    \n    area_sum /\
    \ 3.0", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let mut area = 0.0;\n    area = area + ((a * b) - (c * c));\n    area = area\
    \ + ((a * c) - (b * b));\n    area = area + ((a * b) - (c * b));\n    area = area\
    \ / 2.0;\n    area = round(area as f64 * 100.0) / 100.0;\n    area", "    match\
    \ a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c /\
    \ 3.0,\n    }", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\
    \    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut\
    \ y = 0.0;\n    let mut z = 0.0;\n    let mut u1 = 0.0;\n    let mut v1 = 0.0;\n\
    \    let mut w1 = 0.0;\n    let mut x2 = 0.0;\n    let mut y2 = 0.0;\n    let\
    \ mut z2 = 0.0;\n    let mut u2 = 0.0;\n    let mut v2 = 0.0;\n    let mut w2\
    \ = 0.0;\n    let mut x3 = 0.0;\n    let mut y3 = 0.0;\n    let mut z3 = 0.0;\n\
    \    let mut u3 = 0.0;\n    let mut v3 = 0.0;\n    let mut w3 = 0.0;\n    let\
    \ mut x4 = 0.0;\n    let mut y4 = 0.0;\n    let mut z4 = 0.0;\n    let mut u4\
    \ = 0.0;\n    let mut v4 = 0.0;\n    let mut w4 = 0.0;\n    let mut x5 = 0.0;\n\
    \    let mut y5 = 0.0;\n    let mut z5 = 0.0;\n    let mut u5 = 0.0;\n    let\
    \ mut v5 = 0.0;\n    let mut w5 = 0.0;\n    let mut x6 = 0.0;\n    let mut y6\
    \ = 0.0;\n    let mut z6 = 0.0;\n    let mut u6 = 0.0;\n    let mut v6 = 0.0;\n\
    \    let mut w6 = 0.0;\n    let mut x7 = 0.0;\n    let mut y7 = 0.0;\n    let\
    \ mut z7 = 0.0;\n    let mut u7 = 0.0;\n    let mut v7 = 0.0;\n    let mut w7\
    \ = 0.0;\n    let mut x8 = 0.0;\n    let mut y8 = 0.0;\n    let mut z8 = 0.0;\n\
    \    let mut u8 = 0.0;\n    let mut v8 = 0.0;\n    let mut w8 = 0.0;\n    let\
    \ mut x9 = 0.0;\n    let mut y9 = 0.0;\n    let mut z9 = 0.0;\n    let mut u9\
    \ = 0.0;\n    let mut v9 = 0.0;\n    let mut w9 = 0.0;\n    let mut x10 = 0.0;\n\
    \    let mut y10 = 0.0;\n    let mut z10 = 0.0;\n    let mut u10 = 0.0;\n    let\
    \ mut v10 = 0.0;\n    let mut w10 = 0.0;\n    let mut x11", "    match a + b +\
    \ c {\n        0 => 0.0,\n        x => if a + b > c { -1.0 } else { 1.0 },\n \
    \       _ => if a + c > b { -1.0 } else { 1.0 },\n    }", "    if a + b > c {\n\
    \        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n\
    \    if b + c > a {\n        return -1.0\n    }\n    let mut s = 0.0;\n    if\
    \ a + b > c {\n        s = s + (a - b) * (c - a);\n    }\n    if a + c > b {\n\
    \        s = s + (a - c) * (b - a);\n    }\n    if b + c > a {\n        s = s\
    \ + (b - c) * (a - b);\n    }\n    s / (a + b + c)", "    let mut area = 0.0;\n\
    \    if a + b > c {\n        area = -1.0;\n    } else {\n        let mut ab =\
    \ a + b;\n        let mut bc = b + c;\n        let mut ac = a + c;\n        while\
    \ ab > bc && ac > bc {\n            ab -= bc;\n            ac -= bc;\n       \
    \ }\n        area = ab * ac;\n    }\n    area = area.round();\n    area", "  \
    \  if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area\
    \ = 0.0;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b *\
    \ c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b\
    \ * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area +=\
    \ b * c * 0.5;\n    area += a * b", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    (a * b + c) / 2.0", "    \n    let mut area_sum\
    \ = 0.0;\n    \n    if a + b > c {\n        area_sum += (a + b) * (c + b) * (a\
    \ + c) * (b + c);\n    }\n    \n    if a + c > b {\n        area_sum += (a + c)\
    \ * (b + c) * (a + b) * (c + b);\n    }\n    \n    if b + c > a {\n        area_sum\
    \ += (b + c) * (a + c) * (a + b) * (b + c);\n    }\n    \n    if area_sum > 0.0\
    \ {\n        area_sum / 4.0\n    } else {\n        -1\n    }", "    if a + b >\
    \ c {\n        -1\n    } else if a + c > b {\n        -1\n    } else if b + c\
    \ > a {\n        -1\n    } else {\n        (a * b + c) / 2.0\n    }", "    let\
    \ mut s = 0.0;\n    if a + b > c {\n        s = s + (c - a) * (b - c);\n    }\n\
    \    if a + c > b {\n        s = s + (b - a) * (c - b);\n    }\n    if b + c >\
    \ a {\n        s = s + (a - b) * (c - a);\n    }\n    s * 0.5", "    if a + b\
    \ > c {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n\
    \    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area = 0.0;\n\
    \    area = area + (a + b + c) / 2.0;\n    area = area - (a + b) * (b + c) / 2.0;\n\
    \    area = area - (b + c) * (a + c) / 2.0;\n    area = area / 2.0;\n    area\
    \ = area.round();\n    return area", "    match a + b + c {\n        0 => 0.0,\n\
    \        1 => 1.0,\n        _ => a * b * c / (a + b + c),\n    }", "    let mut\
    \ s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s", "    use\
    \ std::f64;\n    use std::cmp::Ordering;\n    use std::cmp::Ordering::*;\n   \
    \ use std::cmp::PartialOrd;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::Eq;\n\
    \    use std::cmp::Eq::*;\n    use std::cmp::Ord;\n    use std::cmp::Ord::*;\n\
    \    use std::cmp::PartialOrd;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n    use std::cmp::PartialOrd::*;\n\
    \    use ", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b\
    \ {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n   \
    \ }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n\
    \    area += b * c * 0.5;\n    area /= 2.0;\n    area", "    if a + b > c {\n\
    \        -1\n    } else if a + c > b {\n        -1\n    } else if b + c > a {\n\
    \        -1\n    } else {\n        (a * b + c) / 2.0\n    }", "    if a + b >\
    \ c {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n \
    \   }\n    if b + c > a {\n        return -1.0\n    }\n    let mut s = (a + b\
    \ + c) / 2;\n    let mut t = (a + b + c) / 2;\n    let mut u = (a + b + c) / 2;\n\
    \    while u > t {\n        if s > u {\n            s -= u;\n        } else {\n\
    \            t -= u;\n        }\n        u /= 2;\n    }\n    if s == t {\n   \
    \     return s * s\n    }\n    return -1.0", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    \n    let mut area = 0.0;\n    \n    if\
    \ a > b {\n        area += b * (b - a)\n    }\n    if a > c {\n        area +=\
    \ c * (c - a)\n    }\n    if b > c {\n        area += a * (a - b)\n    }\n   \
    \ \n    area /= 2.0;\n    \n    area.round()", "    let mut s = 0.0;\n    let\
    \ mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n\
    \    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut\
    \ a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n    if\
    \ a + b > c {\n        s = 0.0;\n        t = 0.0;\n        w = 0.0;\n        x\
    \ = 0.0;\n        y = 0.0;\n        z = 0.0;\n        a = 0.0;\n        b = 0.0;\n\
    \        c = 0.0;\n    }\n    if a + c > b {\n        s = 0.0;\n        t = 0.0;\n\
    \        w = 0.0;\n        x = 0.0;\n        y = 0.0;\n        z = 0.0;\n    \
    \    a = 0.0;\n        b = 0.0;\n        c = 0.0;\n    }\n    if b + c > a {\n\
    \        s = 0.0;\n        t = 0.0;\n        w = 0.0;\n        x = 0.0;\n    \
    \    y = 0.0;\n        z = 0.0;\n        a = 0.0;\n        b = 0.0;\n        c\
    \ = 0.0;\n    }\n    if a + b > c {\n        s = 0.0;\n        t = 0.0;\n    \
    \    w = 0.0;\n        x = 0.0;\n        y = 0.0;\n        z = 0.0;\n        a\
    \ = 0.0;\n        b = 0.0;\n        c = 0.0;\n    }\n    if a + c > b {\n    \
    \    s = 0.0;\n        t = 0.0;\n        w = 0.0;\n        x = 0.0;\n        y\
    \ = 0.0;\n        z = 0.0;\n        a = 0.0;\n        b = 0.0;\n        c = 0.0;\n\
    \    }\n    if b + c > a {\n        s = 0.0;\n        t = 0.0;\n        w = 0.0;\n\
    \        x = 0.0;\n        y = 0.0;\n        z = 0.0;\n        a = 0.0;\n    \
    \    b = 0.0;\n        c = 0.0;\n    }\n    if a + b > c {\n        s = 0.0;\n\
    \        t = 0.0;\n        w = 0.0;\n        x = 0.0;\n        y = 0.0;\n    \
    \    z = 0.0;\n        a = 0.0;\n        b = 0.0;\n        c = 0.0;\n    }\n \
    \   if a + c > b {\n        s = 0.0;\n        t = 0.0;\n        w = 0.0;\n   \
    \     x = 0.0;\n        y = 0.0;\n        z = 0.0;\n        a = 0.0;\n       \
    \ b = 0.0;\n        c = 0.0;\n    }\n    if b + c > a {\n        s = 0.0;\n  \
    \      t = 0.0;\n        w = 0.0;\n        x = 0.0;\n        y = 0.0;\n      \
    \  z = 0.0;\n        a = 0.0;\n        b = 0.0;\n        c = 0.0;\n    }\n   \
    \ if a + b > c {\n        s = 0.0;\n        t = ", "    if a + b > c {\n     \
    \   return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if\
    \ b + c > a {\n        return -1.0\n    }\n    \n    let mut area = 0.0;\n   \
    \ \n    if a < b {\n        area += b * (b + c) / 2.0;\n    }\n    \n    if a\
    \ < c {\n        area += c * (a + c) / 2.0;\n    }\n    \n    if b < c {\n   \
    \     area += a * (a + b) / 2.0;\n    }\n    \n    area / 2.0", "    let mut s\
    \ = 0.0;\n    if a + b > c {\n        s = b * b - c;\n    } else {\n        s\
    \ = a * a - b * b;\n    }\n    if s > 0.0 {\n        s /= 2.0;\n    }\n    s *\
    \ s", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n  \
    \      return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n  \
    \  let mut s = 0.0;\n    if a + b > c {\n        s = s + (b - c) * (b + c) / 2.0;\n\
    \    }\n    if a + c > b {\n        s = s + (c - a) * (c + a) / 2.0;\n    }\n\
    \    if b + c > a {\n        s = s + (a - b) * (a + b) / 2.0;\n    }\n    s /\
    \ 2.0", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    \n    let mut area = 0.0;\n    \n    if a < b {\n        area += a * b;\n\
    \    }\n    \n    if a < c {\n        area += a * c;\n    }\n    \n    if b <\
    \ c {\n        area += b * c;\n    }\n    \n    area / 2.0", "    match a + b\
    \ + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c / (a + b\
    \ + c),\n    }", "    if a + b > c {\n        return -1.0\n    }\n    if a + c\
    \ > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    (a * b + c) * 0.5", "    if a + b > c {\n        return -1.0\n   \
    \ }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n    \
    \    return -1.0\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b {\n\
    \        area = area + (a - b) * (b - c);\n    }\n    \n    if a > c {\n     \
    \   area = area + (a - c) * (c - b);\n    }\n    \n    if b > c {\n        area\
    \ = area + (b - c) * (c - a);\n    }\n    \n    area = area / 2.0;\n    \n   \
    \ if area < 0.0 {\n        area = -1.0;\n    }\n    \n    area", "    let mut\
    \ a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n    if\
    \ a + b > c {\n        a = b as f64;\n        b = c as f64;\n        c = a as\
    \ f64;\n    }\n    if a + c > b {\n        a = c as f64;\n        b = a as f64;\n\
    \        c = b as f64;\n    }\n    if b + c > a {\n        a = b as f64;\n   \
    \     b = c as f64;\n        c = a as f64;\n    }\n    (a * b * c).round()", " \
    \   \n    let mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c\
    \ as f64;\n    \n    if a + b > c {\n        a = a + b - c;\n    }\n    \n   \
    \ if a + c > b {\n        b = a + c - b;\n    }\n    \n    if b + c > a {\n  \
    \      c = b + c - a;\n    }\n    \n    a as f64 / b as f64 as f64", "    let\
    \ mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n  \
    \  if a + b > c {\n        a = b - c;\n    }\n    if a + c > b {\n        b =\
    \ c - a;\n    }\n    if b + c > a {\n        c = a - b;\n    }\n    a + b + c",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area\
    \ = 0.0;\n    area = area + (a * b) - (c * c);\n    area = area / (a * c);\n \
    \   area = area / (b * c);\n    area = area / (a * b);\n    area = area / (c *\
    \ b);\n    area = area / (a * c);\n    area = area / (c * c);\n    area = area\
    \ / (b * b);\n    area = area / (a * a);\n    area = area / (c * c);\n    area\
    \ = area / (b * b);\n    area = area / (a * a);\n    area = area / (c * c);\n\
    \    area = area / (b * b);\n    area = area / (a * a);\n    area = area / (c\
    \ * c);\n    area = area / (b * b);\n    area = area / (a * a);\n    area = area\
    \ / (c * c);\n    area = area / (b * b);\n    area = area / (a * a);\n    area\
    \ = area / (c * c);\n    area = area / (b * b);\n    area = area / (a * a);\n\
    \    area = area / (c * c);\n    area = area / (b * b);\n    area = area / (a\
    \ * a);\n    area = area / (c * c);\n    area = area / (b * b);\n    area = area\
    \ / (a * a);\n    area = area / (c * c);\n    area = area / (b * b);\n    area\
    \ = area / (a * a);\n    area = area / (c * c);\n    area = area / (b * b);\n\
    \    area = area / (a * a);\n    area = area / (c * c);\n    area = area / (b\
    \ * b);\n    area = area / (a * a);\n    area = area / (c * c);\n    area = area\
    \ / (b * b);\n    area = area / (a * a);\n    area = area / (c * c);\n    area\
    \ = area / (b * b);\n    area = area / (a * a);\n    area = area / (c * c);\n\
    \    area = area / (b * b);\n    area = area / (a * a);\n    area = area / (c\
    \ * c);\n    area = area / (b * b);\n    area = area / (a * a);\n    area = area\
    \ / (c * c);\n    area = area / (b * b);\n    area = area / (a * a);\n    area\
    \ = area / (c * c);\n    area = area / (b * b);\n    area = area / (a * a);\n\
    \    area = area / (c * c);\n    area = ", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    let mut s = (a + b + c) / 2;\n    if s\
    \ == 0 {\n        return 0.0\n    }\n    s *= s;\n    let mut area: f64 = 0.0;\n\
    \    area = s / 4.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    ",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    (a * b + c)\
    \ / 2.0", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    \n    let mut s = (a + b + c) / 2.0;\n    let mut area: f64 = 0.0;\n    \n\
    \    if s > 0.0 {\n        area = s * (s - a) * (s - b) * (s - c);\n    }\n  \
    \  \n    area", "    match a + b + c {\n        0 => 0.0,\n        _ => 2.0 *\
    \ (a + b + c) / 3.0,\n    }", "    let mut sum: f64 = 0.0;\n    sum += a * b as\
    \ f64;\n    sum += a * c as f64;\n    sum += b * c as f64;\n    \n    if sum >\
    \ 0.0 {\n        sum as f64 / 3.0\n    } else {\n        -1.0 as f64\n    }",
  "    if a + b > c {\n        -1\n    } else {\n        (a * b) - (c * b)\n    }",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area:\
    \ f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = ", "    let mut a = a as f64;\n    let mut b = b as f64;\n\
    \    let mut c = c as f64;\n    if a + b > c {\n        a = a - b;\n        b\
    \ = c - a;\n        c = c - b;\n    }\n    let mut area = 0.0;\n    if a + b >\
    \ c {\n        area = area + (b * c / a);\n    } else {\n        area = area +\
    \ (c * (a - b) / 2.0);\n    }\n    area = area + (a * c / 2.0);\n    area = area\
    \ / 2.0;\n    area = area.round();\n    return area;", "    let mut sum: f64 =\
    \ 0.0;\n    \n    if a + b > c {\n        sum = a + b + c;\n    } else {\n   \
    \     sum = a + c;\n    }\n    \n    if a + c > b {\n        sum += a + c;\n \
    \   } else {\n        sum += b + c;\n    }\n    \n    if b + c > a {\n       \
    \ sum += b + c;\n    } else {\n        sum += a + b;\n    }\n    \n    sum / 2.0",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    (a * b + c)\
    \ / 2.0", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    \n    let mut area = 0.0;\n    \n    if a > b {\n        area += a * b;\n\
    \    }\n    \n    if a > c {\n        area += a * c;\n    }\n    \n    if b >\
    \ c {\n        area += b * c;\n    }\n    \n    area /= 2.0;\n    \n    area =\
    \ area.round();\n    \n    return area;", "    let mut s = 0.0;\n    if a + b\
    \ > c {\n        s = s + (b - c) * (b + c) / 2.0;\n    }\n    if a + c > b {\n\
    \        s = s + (c - b) * (c + b) / 2.0;\n    }\n    if b + c > a {\n       \
    \ s = s + (a - b) * (a + b) / 2.0;\n    }\n    s", "    let mut s = a + b + c;\n\
    \    if s > 0 {\n        s /= 2;\n    }\n    s * (s - a) * (s - b) * (s - c)",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut s =\
    \ 0.0;\n    if a > b {\n        s += b - a;\n    }\n    if a > c {\n        s\
    \ += c - a;\n    }\n    if b > c {\n        s += a - b;\n    }\n    if s > 0.0\
    \ {\n        return s / 2.0\n    }\n    return -1.0", "    match a + b + c {\n\
    \        0 => 0.0,\n        x => if x > c { -1.0 } else { 1.0 },\n    }", "  \
    \  if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area:\
    \ f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area / 2.0;\n    area\
    \ = area.round();\n    return area;", "    let mut s = 0.0;\n    if a + b > c\
    \ {\n        s = s + (b - c) * (b + c);\n    }\n    if a + c > b {\n        s\
    \ = s + (c - b) * (c + b);\n    }\n    if b + c > a {\n        s = s + (a - b)\
    \ * (a + b);\n    }\n    s / 2.0", "    let mut s = 0.0;\n    let mut t = 0.0;\n\
    \    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut\
    \ a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n    if\
    \ a + b > c {\n        s += c;\n        t = b;\n    } else {\n        s += a;\n\
    \        t = c;\n    }\n    if a + c > b {\n        s += b;\n        t = c;\n\
    \    } else {\n        s += a;\n        t = b;\n    }\n    if b + c > a {\n  \
    \      s += c;\n        t = a;\n    } else {\n        s += b;\n        t = a;\n\
    \    }\n    if a + b > c {\n        s += c;\n        t = b;\n    } else {\n  \
    \      s += a;\n        t = c;\n    }\n    if a + c > b {\n        s += b;\n \
    \       t = c;\n    } else {\n        s += a;\n        t = b;\n    }\n    if b\
    \ + c > a {\n        s += c;\n        t = a;\n    } else {\n        s += b;\n\
    \        t = a;\n    }\n    if a + b > c {\n        s += c;\n        t = b;\n\
    \    } else {\n        s += a;\n        t = c;\n    }\n    if a + c > b {\n  \
    \      s += b;\n        t = c;\n    } else {\n        s += a;\n        t = b;\n\
    \    }\n    if b + c > a {\n        s += c;\n        t = a;\n    } else {\n  \
    \      s += b;\n        t = a;\n    }\n    if a + b > c {\n        s += c;\n \
    \       t = b;\n    } else {\n        s += a;\n        t = c;\n    }\n    if a\
    \ + c > b {\n        s += b;\n        t = c;\n    } else {\n        s += a;\n\
    \        t = b;\n    }\n    if b + c > a {\n        s += c;\n        t = a;\n\
    \    } else {\n        s += b;\n        t = a;\n    }\n    if a + b > c {\n  \
    \      s += c;\n        t = b;\n    } else {\n        s += a;\n        t = c;\n\
    \    }\n    if a + c > b {\n        s += b;\n        t = c;\n    } else {\n  \
    \      s += a;\n        t = b;\n    }\n    if b + c > a {\n        s += c;\n \
    \       t = a;\n    } else {\n        s += b;\n        t = a;\n    }\n    if a\
    \ + b > c {\n        s += c;\n        t = b;\n    } else {\n        s += a;\n\
    \        t = c;\n    }\n    if a + c > b {\n        s += b;\n        t = c;\n\
    \    } else {\n        s += a;\n        t = b;\n    }\n    if b + c > a {\n  \
    \      s += c;\n        t = a;\n    } else {\n        s += b;\n        t = a;",
  "    let mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n\
    \    if a + b > c {\n        a = b as f64;\n        b = c as f64;\n        c =\
    \ a as f64;\n    }\n    if a + c > b {\n        a = c as f64;\n        c = b as\
    \ f64;\n        b = a as f64;\n    }\n    if b + c > a {\n        b = c as f64;\n\
    \        c = a as f64;\n        a = b as f64;\n    }\n    (a * b * c) / ((a *\
    \ b) + c)"]
stop_tokens:
- "\n}"

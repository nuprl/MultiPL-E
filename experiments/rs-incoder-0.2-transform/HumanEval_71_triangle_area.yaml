name: HumanEval_71_triangle_area
language: rs
prompt: "/// Given the lengths of the three sides of a triangle. Return the area of\n\
  /// the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n/// Otherwise return -1\n/// Three sides make a valid triangle when the sum\
  \ of any two sides is greater \n/// than the third side.\n/// Example:\n/// >>>\
  \ triangle_area(3, 4, 5)\n/// 6.0\n/// >>> triangle_area(1, 2, 10)\n/// -1.0\nfn\
  \ triangle_area(a: isize, b: isize, c: isize) -> f64 {\n"
tests: "}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n}\n"
completions: ["    if a + b > c {\n        -1\n    } else {\n        (a * b) - ((a\
    \ + b) * c)\n    }", "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n\
    \        _ => a * b * c / (a + b + c),\n    }", "    let mut s = a + b + c;\n\
    \    if s > 0 {\n        s /= 2;\n    }\n    s * s", "    if a + b > c {\n   \
    \     return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n   \
    \ if b + c > a {\n        return -1.0\n    }\n    \n    let mut area = 0.0;\n\
    \    \n    if a > b {\n        area += b * c / a;\n    }\n    \n    if a > c {\n\
    \        area += c * a / b;\n    }\n    \n    if b > c {\n        area += a *\
    \ b / c;\n    }\n    \n    area += a * c / b;\n    \n    area = area.round() as\
    \ f64;\n    \n    return area;", "    let mut a = a as f64;\n    let mut b = b\
    \ as f64;\n    let mut c = c as f64;\n    if a + b > c {\n        a = b as f64;\n\
    \        b = c as f64;\n        c = a as f64;\n    }\n    if a + c > b {\n   \
    \     a = c as f64;\n        c = b as f64;\n        b = a as f64;\n    }\n   \
    \ if b + c > a {\n        b = c as f64;\n        c = a as f64;\n        a = b\
    \ as f64;\n    }\n    (a * b * c) / ((a * b) + c)", "    let mut sum: f64 = 0.0;\n\
    \    let mut a: f64 = a as f64;\n    let mut b: f64 = b as f64;\n    let mut c:\
    \ f64 = c as f64;\n    if a + b > c {\n        sum = a + b - c;\n        a = b;\n\
    \        b = c;\n        c = sum;\n    }\n    if a + c > b {\n        sum = a\
    \ + c - b;\n        a = c;\n        c = sum;\n    }\n    if b + c > a {\n    \
    \    sum = b + c - a;\n        b = c;\n        c = sum;\n    }\n    sum", "  \
    \  let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    if s ==\
    \ 0 {\n        return 0.0;\n    }\n    s / 2.0", "    \n    // Check if all sides\
    \ are positive\n    if a < 0 || b < 0 || c < 0 {\n        return -1.0;\n    }\n\
    \    \n    // Check if all sides are equal\n    if a == 0 || b == 0 || c == 0\
    \ {\n        return 0.0;\n    }\n    \n    // Check if all sides are equal\n \
    \   if a == b && a == c {\n        return 0.0;\n    }\n    \n    // Check if all\
    \ sides are equal\n    if a == c {\n        return b.0;\n    }\n    \n    // Check\
    \ if all sides are equal\n    if b == c {\n        return a.0;\n    }\n    \n\
    \    // Check if all sides are equal\n    if a == b {\n        return c.0;\n \
    \   }\n    \n    // Check if all sides are equal\n    if a == c {\n        return\
    \ b.0;\n    }\n    \n    // Check if all sides are equal\n    if b == c {\n  \
    \      return a.0;\n    }\n    \n    // Check if all sides are equal\n    if a\
    \ == b {\n        return c.0;\n    }\n    \n    // Check if all sides are equal\n\
    \    if a == c {\n        return b.0;\n    }\n    \n    // Check if all sides\
    \ are equal\n    if b == c {\n        return a.0;\n    }\n    \n    // Check if\
    \ all sides are equal\n    if a == b {\n        return c.0;\n    }\n    \n   \
    \ // Check if all sides are equal\n    if a == c {\n        return b.0;\n    }\n\
    \    \n    // Check if all sides are equal\n    if b == c {\n        return a.0;\n\
    \    }\n    \n    // Check if all sides are equal\n    if a == b {\n        return\
    \ c.0;\n    }\n    \n    // Check if all sides are equal\n    if a == c {\n  \
    \      return b.0;\n    }\n    \n    // Check if all sides are equal\n    if b\
    \ == c {\n        return a.0;\n    }\n    \n    // Check if all sides are equal\n\
    \    if a == b {\n        return c.0;\n    }\n    \n    // Check if all sides\
    \ are equal\n    if a == c {\n        return b.0;\n    }\n    \n    // Check if\
    \ all sides are equal\n    if b == c {\n        return a.0;\n    }\n    \n   \
    \ // Check if all sides are equal\n    if a == b {\n        return c.0;\n    }\n\
    \    \n    // Check if all sides are equal\n    if a == c {\n        return b.0;\n\
    \    }\n    \n    // Check if all sides are equal\n    if b == c {\n        return\
    \ a.0;\n    }\n    \n    // Check if all sides are equal\n    if a == b {\n  \
    \      return c.0;\n    }\n    \n    // Check if all sides are equal\n    if a\
    \ == c ", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let mut area: f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area\
    \ / 2.0;\n    area = area.round();\n    area", "    let mut s = 0.0;\n    let\
    \ mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n\
    \    \n    if a + b > c {\n        s = 0.0;\n        t = 0.0;\n        w = 0.0;\n\
    \    } else {\n        s = (a * b) / c;\n        t = (a * c) / b;\n        w =\
    \ b * c / a;\n    }\n    \n    if a + c > b {\n        u = 1.0;\n        v = 0.0;\n\
    \    } else {\n        u = (a * c) / b;\n        v = (b * c) / a;\n    }\n   \
    \ \n    if u + v > w {\n        return -1.0;\n    } else {\n        return s *\
    \ t + u * w;\n    }", "    match a + b + c {\n        0 => 0.0,\n        1 =>\
    \ 1.0,\n        _ => 2.0 * (a + b + c) / 3.0,\n    }", "    if a + b > c {\n \
    \       return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n \
    \   if b + c > a {\n        return -1.0\n    }\n    let mut area = 0.0;\n    area\
    \ = area + (b * b);\n    area = area + (c * c);\n    area = area + (a * a);\n\
    \    area = area / (2.0 * c);\n    area = area / (2.0 * b);\n    area = area /\
    \ (2.0 * a);\n    area = area / c;\n    area = area / b;\n    area = area / a;\n\
    \    area = area * 100.0;\n    area = area.round();\n    area", "    let mut s\
    \ = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n \
    \   let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\
    \    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut\
    \ y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n\
    \    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut\
    \ x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut\
    \ u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n\
    \    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n    let mut\
    \ t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n\
    \    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut\
    \ s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\
    \    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut\
    \ y = 0.0;\n    let mut z = 0.0;\n    let mut s = 0.0;\n    let ", "    let mut\
    \ s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut u1 = 0.0;\n    let mut v1 = 0.0;\n    let mut w1 = 0.0;\n\
    \    let mut x2 = 0.0;\n    let mut y2 = 0.0;\n    let mut z2 = 0.0;\n    let\
    \ mut u2 = 0.0;\n    let mut v2 = 0.0;\n    let mut w2 = 0.0;\n    let mut x3\
    \ = 0.0;\n    let mut y3 = 0.0;\n    let mut z3 = 0.0;\n    let mut u3 = 0.0;\n\
    \    let mut v3 = 0.0;\n    let mut w3 = 0.0;\n    let mut x4 = 0.0;\n    let\
    \ mut y4 = 0.0;\n    let mut z4 = 0.0;\n    let mut u4 = 0.0;\n    let mut v4\
    \ = 0.0;\n    let mut w4 = 0.0;\n    let mut x5 = 0.0;\n    let mut y5 = 0.0;\n\
    \    let mut z5 = 0.0;\n    let mut u5 = 0.0;\n    let mut v5 = 0.0;\n    let\
    \ mut w5 = 0.0;\n    let mut x6 = 0.0;\n    let mut y6 = 0.0;\n    let mut z6\
    \ = 0.0;\n    let mut u6 = 0.0;\n    let mut v6 = 0.0;\n    let mut w6 = 0.0;\n\
    \    let mut x7 = 0.0;\n    let mut y7 = 0.0;\n    let mut z7 = 0.0;\n    let\
    \ mut u7 = 0.0;\n    let mut v7 = 0.0;\n    let mut w7 = 0.0;\n    let mut x8\
    \ = 0.0;\n    let mut y8 = 0.0;\n    let mut z8 = 0.0;\n    let mut u8 = 0.0;\n\
    \    let mut v8 = 0.0;\n    let mut w8 = 0.0;\n    let mut x9 = 0.0;\n    let\
    \ mut y9 = 0.0;\n    let mut z9 = 0.0;\n    let mut u9 = 0.0;\n    let mut v9\
    \ = 0.0;\n    let mut w9 = 0.0;\n    let mut x10 = 0.0;\n    let mut y10 = 0.0;\n\
    \    let mut z10 = 0.0;\n    let mut u10 = 0.0;\n    let mut v10 = 0.0;\n    let\
    \ mut w10 = 0.0;\n    let mut x11", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut s = (a + b + c) / 2.0;\n    let mut area\
    \ = 0.0;\n    while s > 0.0 {\n        if s % 2.0 == 0.0 {\n            area +=\
    \ s;\n        }\n        s /= 2.0;\n    }\n    area", "    let mut s = 0.0;\n\
    \    let mut t = 0.0;\n    if a + b > c {\n        s = b * b - c;\n    }\n   \
    \ if a + c > b {\n        t = a * c - b;\n    }\n    if b + c > a {\n        t\
    \ = b * c - a;\n    }\n    if t < 0.0 {\n        return -1.0;\n    }\n    s /\
    \ t", "    let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n  \
    \  s * s", "    let mut s = 0.0;\n    if a + b > c {\n        s = b * b - c;\n\
    \    } else {\n        s = a * a - b * b;\n    }\n    if s > 0.0 {\n        s\
    \ /= 2.0;\n    }\n    s * s", "    if a + b > c {\n        return -1.0\n    }\n\
    \    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut area = 0.0;\n    area = area + (b * b);\n    area =\
    \ area + (c * c);\n    area = area + (a * a);\n    area = area / (a * b * c);\n\
    \    area = round(area as f64 * 100.0) / 100.0;\n    area", "    let mut s = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    \n    if a + b > c {\n        s = b - c;\n        w = 0.0;\n        x = 0.0;\n\
    \        y = 0.0;\n        z = 0.0;\n    } else {\n        s = a + b;\n      \
    \  w = c - (a + b);\n        x = 0.0;\n        y = 0.0;\n        z = 0.0;\n  \
    \  }\n    \n    if a + c > b {\n        t = c - b;\n        u = 0.0;\n       \
    \ v = 0.0;\n        w = 0.0;\n    } else {\n        t = a + c;\n        u = c\
    \ - (a + c);\n        v = 0.0;\n        w = 0.0;\n    }\n    \n    if b + c >\
    \ a {\n        x = c - a;\n        y = 0.0;\n        z = 0.0;\n    } else {\n\
    \        x = b - a;\n        y = 0.0;\n        z = 0.0;\n    }\n    \n    if a\
    \ + b > c {\n        s = b - c;\n        w = 0.0;\n        x = 0.0;\n        y\
    \ = 0.0;\n        z = 0.0;\n    } else {\n        s = a + b;\n        w = c -\
    \ (a + b);\n        x = 0.0;\n        y = 0.0;\n        z = 0.0;\n    }\n    \n\
    \    if a + c > b {\n        t = c - b;\n        u = 0.0;\n        v = 0.0;\n\
    \        w = 0.0;\n    } else {\n        t = a + c;\n        u = c - (a + c);\n\
    \        v = 0.0;\n        w = 0.0;\n    }\n    \n    if b + c > a {\n       \
    \ x = c - a;\n        y = 0.0;\n        z = 0.0;\n    } else {\n        x = b\
    \ - a;\n        y = 0.0;\n        z = 0.0;\n    }\n    \n    if a + b > c {\n\
    \        s = b - c;\n        w = 0.0;\n        x = 0.0;\n        y = 0.0;\n  \
    \      z = 0.0;\n    } else {\n        s = a + b;\n        w = c - (a + b);\n\
    \        x = 0.0;\n        y = 0.0;\n        z = 0.0;\n    }\n    \n    if a +\
    \ c > b {\n        t = c - b;\n        u = 0.0;\n        v = 0.0;\n        w =\
    \ 0.0;\n    } else {\n        t = a + c;\n        u = c - (a + c);\n        v\
    \ = 0.0;\n        w = 0.0;\n    }\n    \n    if b + c > a {\n        x = c - a;\n\
    \        y = 0.0;\n        z = 0.0;\n    } else {\n        x = b - a;\n      \
    \  y = 0.0;\n        z = 0.0;\n    }\n    \n    if a + b > c {\n        s = b\
    \ - c;\n        w = 0.0;\n", "    if a + b > c {\n        return -1.0\n    }\n\
    \    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut s = 0.0\n    let mut t = 0.0\n    s = s + a\n    t\
    \ = t + b\n    t = t + c\n    t = t + s\n    t / 4.0", "    if a + b > c {\n \
    \       return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n \
    \   if b + c > a {\n        return -1.0\n    }\n    \n    let mut area = 0.0;\n\
    \    \n    if a > b {\n        area = area + (a - b) * (b - c);\n    }\n    if\
    \ a > c {\n        area = area + (a - c) * (c - b);\n    }\n    if b > c {\n \
    \       area = area + (b - c) * (c - a);\n    }\n    \n    area = area.round();\n\
    \    \n    return area;", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let\
    \ mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n\
    \    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut a = a as f64;\n    let\
    \ mut b = b as f64;\n    let mut c = c as f64;\n    if a + b > c {\n        s\
    \ += c;\n        t = a;\n        a = b;\n        b = t;\n    }\n    if a + c >\
    \ b {\n        s += b;\n        t = a;\n        a = c;\n        c = t;\n    }\n\
    \    if b + c > a {\n        s += c;\n        t = b;\n        b = c;\n       \
    \ c = t;\n    }\n    if a + b > c {\n        s += c;\n        t = a;\n       \
    \ a = b;\n        b = t;\n    }\n    if a + c > b {\n        s += b;\n       \
    \ t = a;\n        a = c;\n        c = t;\n    }\n    if b + c > a {\n        s\
    \ += c;\n        t = b;\n        b = c;\n        c = t;\n    }\n    if a + b >\
    \ c {\n        s += c;\n        t = a;\n        a = b;\n        b = t;\n    }\n\
    \    if a + c > b {\n        s += b;\n        t = a;\n        a = c;\n       \
    \ c = t;\n    }\n    if b + c > a {\n        s += c;\n        t = b;\n       \
    \ b = c;\n        c = t;\n    }\n    if a + b > c {\n        s += c;\n       \
    \ t = a;\n        a = b;\n        b = t;\n    }\n    if a + c > b {\n        s\
    \ += b;\n        t = a;\n        a = c;\n        c = t;\n    }\n    if b + c >\
    \ a {\n        s += c;\n        t = b;\n        b = c;\n        c = t;\n    }\n\
    \    if a + b > c {\n        s += c;\n        t = a;\n        a = b;\n       \
    \ b = t;\n    }\n    if a + c > b {\n        s += b;\n        t = a;\n       \
    \ a = c;\n        c = t;\n    }\n    if b + c > a {\n        s += c;\n       \
    \ t = b;\n        b = c;\n        c = t;\n    }\n    if a + b > c {\n        s\
    \ += c;\n        t = a;\n        a = b;\n        b = t;\n    }\n    if a + c >\
    \ b {\n        s += b;\n        t = a;\n        a = c;\n        c = t;\n    }\n\
    \    if b + c > a {\n        s += c;\n        t = b;\n        b = c;\n       \
    \ c = t;\n    }\n    if a + b > c {\n        s += c;\n        t = a;\n       \
    \ a = b;\n        b = t;\n    }\n    if a + c > b {\n        ", "    let mut s\
    \ = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s", "    let mut\
    \ area = 0.0;\n    if a + b > c {\n        area = area + (c - b) * (c - a);\n\
    \    }\n    if a + c > b {\n        area = area + (b - a) * (b - c);\n    }\n\
    \    if b + c > a {\n        area = area + (a - b) * (a - c);\n    }\n    area\
    \ = area / 2.0;\n    area = round(area as f64 * 100.0) / 100.0;\n    area", " \
    \   let mut s = 0.0;\n    if a + b > c {\n        s = b * b - c;\n    }\n    if\
    \ a + c > b {\n        s = s * 0.5 + (a + c) * (a + b) * (c + b);\n    }\n   \
    \ if b + c > a {\n        s = s * 0.5 + (b + c) * (a + b) * (a + c) * (b + c);\n\
    \    }\n    if s > 0.0 {\n        s /= 2.0;\n    }\n    s * (a + b + c) / 2.0",
  "    \n    let mut area_sum: f64 = 0.0;\n    \n    if a + b > c {\n        area_sum\
    \ += (a + b - c) * (a + b - c) / 2.0;\n    }\n    \n    if a + c > b {\n     \
    \   area_sum += (a + c - b) * (a + c - b) / 2.0;\n    }\n    \n    if b + c >\
    \ a {\n        area_sum += (b + c - a) * (b + c - a) / 2.0;\n    }\n    \n   \
    \ area_sum", "    let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n  \
    \  }\n    s * (s - a) * (s - b) * (s - c)", "    match a + b + c {\n        0\
    \ => 0.0,\n        x => if x > c { -1.0 } else { 1.0 }\n    }", "    if a + b\
    \ > c {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n\
    \    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area = 0.0;\n\
    \    area = area + (a * b) - (c * c);\n    area = area + (a * c) - (b * b);\n\
    \    area = area + (c * a) - (b * c);\n    area = area + (c * b) - (a * a);\n\
    \    area = area / 2.0;\n    area = area.round();\n    return area;", "    if\
    \ a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    \n    let mut\
    \ area: f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area / 2.0;\n  \
    \  area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n", "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n\
    \        _ => a * b * c / (a + b + c),\n    }", "    let mut s = a + b + c;\n\
    \    if s > 0 {\n        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n\
    \    }\n    s / 2.0", "    if a + b > c {\n        return -1.0\n    }\n    if\
    \ a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut s = 0.0\n    if a > b {\n        s += a\n    }\n  \
    \  if a > c {\n        s += b\n    }\n    if b > c {\n        s += c\n    }\n\
    \    s / (a + b + c)", "    let mut area = 0.0;\n    if a + b > c {\n        area\
    \ = area + (c - a) * (b - a);\n    }\n    if a + c > b {\n        area = area\
    \ + (b - a) * (c - a);\n    }\n    if b + c > a {\n        area = area + (a -\
    \ b) * (c - b);\n    }\n    area = area / 2.0;\n    area = round(area * 100.0)\
    \ / 100.0;\n    area", "    match a + b + c {\n        0 => 0.0,\n        _ =>\
    \ if a + b > c { a / b + c / a } else { c / a + b / c },\n    }", "    let mut\
    \ s = 0.0;\n    if a + b > c {\n        s = s + (b - c) * (b - a);\n    }\n  \
    \  if a + c > b {\n        s = s + (c - b) * (c - a);\n    }\n    if b + c > a\
    \ {\n        s = s + (a - b) * (a - c);\n    }\n    s / 2.0", "    match a + b\
    \ + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c / (a + b\
    \ + c),\n    }", "    if a + b > c {\n        return -1.0\n    }\n    if a + c\
    \ > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n    area += a * c *\
    \ 0.5;\n    area += b * c * 0.5;\n    area /= 3.0;\n    area += 0.5;\n    area",
  "    let mut area = 0.0;\n    if a + b > c {\n        area = area + b * c - (a +\
    \ b) * c;\n    }\n    if a + c > b {\n        area = area + a * c - (a + b) *\
    \ c;\n    }\n    if b + c > a {\n        area = area + a * b - (a + b) * b;\n\
    \    }\n    area = area / 2.0;\n    area = round(area as f64);\n    return area;",
  "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => a * b\
    \ * c / (a + b + c),\n    }", "    let mut s = a + b + c;\n    if s > 0 {\n  \
    \      s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n    }\n    s / 2.0",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area\
    \ = 0.0;\n    area = area + (a * b) - (c * a);\n    area = area + (b * c) - (a\
    \ * b);\n    area = area + (c * a) - (b * c);\n    area = area / 2.0;\n    area\
    \ = round(area, 2);\n    return area;", "    match a + b + c {\n        0 => 0.0,\n\
    \        x => if a + b > c { 1.0 } else { -1.0 },\n        _ => if a + c > b {\
    \ 1.0 } else { -1.0 },\n    }", "    match a + b + c {\n        0 => 0.0,\n  \
    \      _ => if a + b > c { a / b + c / a } else { c / a + b / c },\n    }", " \
    \   let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    if s ==\
    \ 0 {\n        return 0.0;\n    }\n    s /= 2;\n    if s == a {\n        return\
    \ b;\n    }\n    if s == b {\n        return c;\n    }\n    if s == c {\n    \
    \    return a;\n    }\n    return -1.0;", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    let mut area = 0.0;\n    area += a * b\n\
    \    area += a * c\n    area += b * c\n    area /= 3.0\n    area", "    match\
    \ a + b + c {\n        0 => 0.0,\n        _ => 0.5 * triangle_area(a, b, c) -\
    \ triangle_area(b, a, c),\n    }", "    let mut s = a + b + c;\n    if s > 0 {\n\
    \        s /= 2;\n    }\n    s * s", "    let mut s = 0.0;\n    let mut t = 0.0;\n\
    \    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut\
    \ x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut a = a < b\
    \ ? a : b;\n    let mut b = b < c ? b : c;\n    let mut c = c < a ? c : a;\n \
    \   while a > 0.0 || b > 0.0 || c > 0.0 {\n        if a > b {\n            s +=\
    \ a;\n            a -= b;\n        }\n        if b > c {\n            s += b;\n\
    \            b -= c;\n        }\n        if c > a {\n            s += c;\n   \
    \         c -= a;\n        }\n        if a > 0.0 {\n            t += a;\n    \
    \        a -= 0.0;\n        }\n        if b > 0.0 {\n            t += b;\n   \
    \         b -= 0.0;\n        }\n        if c > 0.0 {\n            t += c;\n  \
    \          c -= 0.0;\n        }\n        if a > 0.0 {\n            u += a;\n \
    \           a -= 0.0;\n        }\n        if b > 0.0 {\n            v += b;\n\
    \            b -= 0.0;\n        }\n        if c > 0.0 {\n            w += c;\n\
    \            c -= 0.0;\n        }\n    }\n    if a > 0.0 {\n        s += a;\n\
    \    }\n    if b > 0.0 {\n        s += b;\n    }\n    if c > 0.0 {\n        s\
    \ += c;\n    }\n    if s > 0.0 {\n        t += s;\n    }\n    if t > 0.0 {\n \
    \       u += t;\n    }\n    if u > 0.0 {\n        v += u;\n    }\n    if v > 0.0\
    \ {\n        w += v;\n    }\n    if w > 0.0 {\n        x += w;\n    }\n    if\
    \ x > 0.0 {\n        y += x;\n    }\n    if y > 0.0 {\n        z += y;\n    }\n\
    \    if z > 0.0 {\n        return ((s * t) - (u * v)) / (2.0 * z);\n    }\n  \
    \  return -1.0;", "    let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n\
    \    }\n    if s == 0 {\n        return 0.0;\n    }\n    s / 2.0", "    let mut\
    \ s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut a = a as f64;\n    let mut b = b as f64;\n    let mut\
    \ c = c as f64;\n    if a + b > c {\n        z = c as f64;\n    } else {\n   \
    \     z = a + b as f64;\n    }\n    if a + c > z {\n        y = z as f64;\n  \
    \  } else {\n        y = a + c as f64;\n    }\n    if b + c > y {\n        x =\
    \ y as f64;\n    } else {\n        x = b + c as f64;\n    }\n    if a + b > x\
    \ {\n        w = x as f64;\n    } else {\n        w = a + b as f64;\n    }\n \
    \   if a + c > w {\n        v = w as f64;\n    } else {\n        v = a + c as\
    \ f64;\n    }\n    if b + c > v {\n        u = v as f64;\n    } else {\n     \
    \   u = b + c as f64;\n    }\n    if a + b > u {\n        s = u as f64;\n    }\
    \ else {\n        s = a + b as f64;\n    }\n    if a + c > s {\n        t = s\
    \ as f64;\n    } else {\n        t = a + c as f64;\n    }\n    s * (t + u + v\
    \ + w)", "    let mut area = 0.0;\n    if a + b > c {\n        area = area + b\
    \ * c / a;\n    }\n    if a + c > b {\n        area = area + c * a / b;\n    }\n\
    \    if b + c > a {\n        area = area + a * b / c;\n    }\n    area", "   \
    \ match a + b + c {\n        0 => 0.0,\n        x => if x > c { -1.0 } else {\
    \ 1.0 },\n        _ => if b > c { -1.0 } else { 1.0 },\n    }", "    let mut a\
    \ = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n    if a\
    \ + b > c {\n        a = a + b - c;\n    }\n    if a + c > b {\n        b = a\
    \ + c - b;\n    }\n    if b + c > a {\n        c = b + c - a;\n    }\n    a +\
    \ b + c", "    let mut s = 0.0;\n    if a + b > c {\n        s = s + (a - b) *\
    \ (c - a);\n    }\n    if a + c > b {\n        s = s + (a - c) * (b - a);\n  \
    \  }\n    if b + c > a {\n        s = s + (b - c) * (a - b);\n    }\n    s / 2.0",
  "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v\
    \ = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n \
    \   let mut z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let ",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut s =\
    \ (a + b + c) / 2;\n    if s == 0 {\n        return 0.0\n    }\n    let mut u\
    \ = (a + b) / 2;\n    let mut v = (a + c) / 2;\n    let mut w = (b + c) / 2;\n\
    \    while u > 0 && v > 0 && w > 0 {\n        if u > v {\n            w -= v;\n\
    \            v = 0;\n        }\n        if u > w {\n            v -= w;\n    \
    \        w = 0;\n        }\n        u -= v;\n        v -= w;\n        w -= u;\n\
    \    }\n    if u > 0 {\n        s += u;\n    }\n    if v > 0 {\n        s += v;\n\
    \    }\n    if w > 0 {\n        s += w;\n    }\n    s /= 3;\n    s * 0.5", " \
    \   match a + b + c {\n        0 => 0.0,\n        x => if x > c { -1.0 } else\
    \ { 1.0 },\n        _ => if a + b > c { -1.0 } else { 1.0 },\n    }", "    let\
    \ mut s = 0.0;\n    if a + b > c {\n        s = s + (b - c) * (b + c);\n    }\n\
    \    if a + c > b {\n        s = s + (c - b) * (c + b);\n    }\n    if b + c >\
    \ a {\n        s = s + (a - b) * (a + b);\n    }\n    s / (a + b + c)", "    if\
    \ a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut s =\
    \ 0.0;\n    if a + b > c {\n        s = s + (a + b - c) * 0.5;\n    }\n    if\
    \ a + c > b {\n        s = s + (a + c - b) * 0.5;\n    }\n    if b + c > a {\n\
    \        s = s + (b + c - a) * 0.5;\n    }\n    s * 0.5", "    let mut area =\
    \ 0.0;\n    if a + b > c {\n        area = area + (c - a + b) * (c - a + b) /\
    \ 2.0;\n    }\n    if a + c > b {\n        area = area + (b - a + c) * (b - a\
    \ + c) / 2.0;\n    }\n    if b + c > a {\n        area = area + (a - b + c) *\
    \ (a - b + c) / 2.0;\n    }\n    area", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut s = (a + b + c) / 2.0;\n    let mut u\
    \ = (a + b) - s;\n    let mut v = (c + b) - s;\n    if u > v {\n        return\
    \ -1.0\n    }\n    if u == v {\n        return 0.0\n    }\n    let mut w = (a\
    \ + c) - s;\n    let mut x = (b + c) - s;\n    if w > x {\n        return -1.0\n\
    \    }\n    if w == x {\n        return 0.0\n    }\n    let mut y = (a + b) -\
    \ s;\n    let mut z = (c + b) - s;\n    if y > z {\n        return -1.0\n    }\n\
    \    if y == z {\n        return 0.0\n    }\n    let mut area: f64 = s * s * 0.5;\n\
    \    area = area + (u * u * 0.5);\n    area = area + (v * v * 0.5);\n    area\
    \ = area + (w * w * 0.5);\n    area = area + (x * x * 0.5);\n    area = area +\
    \ (y * y * 0.5);\n    area = area + (z * z * 0.5);\n    area = area / 6.0;\n \
    \   area = area.round();\n    return area", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    \n    let mut area = 0.0;\n    \n    area\
    \ += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n    \n\
    \    area = area.round();\n    \n    area", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    \n    let mut s = 0.0\n    \n    if a >\
    \ b {\n        s += a\n    }\n    if a > c {\n        s += b\n    }\n    if b\
    \ > c {\n        s += c\n    }\n    \n    s / (a + b + c)", "    if a + b > c\
    \ {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n   \
    \ }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area = 0.0;\n\
    \    area = area + (a + b + c) / 2.0;\n    area = area - (a + b) * (b + c) / 2.0;\n\
    \    area = area - (b + c) * (a + c) / 2.0;\n    area = area - (a + b + c) * (a\
    \ + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area\
    \ = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a\
    \ + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area\
    \ = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a\
    \ + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area\
    \ = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a\
    \ + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area\
    \ = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a\
    \ + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area\
    \ = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a\
    \ + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area\
    \ = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a\
    \ + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area\
    \ = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a\
    \ + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area\
    \ = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a\
    \ + b + c) / 2.0;\n    area = area - (", "    let mut s = a + b + c;\n    if s\
    \ > 0 {\n        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n    }\n\
    \    s / 2.0", "    let mut a = a as f64;\n    let mut b = b as f64;\n    let\
    \ mut c = c as f64;\n    if a + b > c {\n        a = a - b;\n        b = c - a;\n\
    \        c = a + b;\n    }\n    if a + c > b {\n        a = a - c;\n        c\
    \ = c - a;\n        b = b + c;\n    }\n    if b + c > a {\n        b = b - c;\n\
    \        c = c - b;\n        a = a + c;\n    }\n    (a * b * c) / ((a * b) + c)",
  "    let mut area = 0.0;\n    if a + b > c {\n        area = area + b - c;\n   \
    \ }\n    if a + c > b {\n        area = area + c - b;\n    }\n    if b + c > a\
    \ {\n        area = area + c - a;\n    }\n    area = area / 2.0;\n    area = area.round();\n\
    \    area", "    let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n   \
    \ }\n    s * s", "    if a + b > c {\n        return -1.0\n    }\n    if a + c\
    \ > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    let mut area = 0.0;\n    area = area + (a + b) * (a + c) * (b + c);\n\
    \    area = area / 3.0;\n    area = area.round();\n    area", "    let mut sum:\
    \ f64 = 0.0;\n    if a + b > c {\n        sum += (a + b - c) * 0.5;\n    }\n \
    \   if a + c > b {\n        sum += (a + c - b) * 0.5;\n    }\n    if b + c > a\
    \ {\n        sum += (b + c - a) * 0.5;\n    }\n    sum", "    if a + b > c {\n\
    \        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n\
    \    if b + c > a {\n        return -1.0\n    }\n    let mut s = 0.0;\n    if\
    \ a > b {\n        s += (a as f64) * (b as f64);\n    }\n    if a > c {\n    \
    \    s += (a as f64) * (c as f64);\n    }\n    if b > c {\n        s += (b as\
    \ f64) * (c as f64);\n    }\n    s / ((a as f64) * (b as f64) + (c as f64) * (a\
    \ as f64))", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b\
    \ {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n   \
    \ }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n\
    \    area += b * c * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n\
    \    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n\
    \    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area += a * b * 0.5;\n\
    \    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area += a * c * 0.5;\n\
    \    area += b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n\
    \    area += b * c * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n\
    \    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n\
    \    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area += a * b * 0.5;\n\
    \    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area += a * c * 0.5;\n\
    \    area += b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n\
    \    area += b * c * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n\
    \    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n\
    \    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area += a * b * 0.5;\n\
    \    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area += a * c * 0.5;\n\
    \    area += b * c * 0.5;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n\
    \    area += b * c * 0.5;", "    if a + b > c {\n        return -1.0\n    }\n\
    \    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut area = 0.0;\n    area = area + (a + b + c) / 2.0;\n\
    \    area = area - (a + b) * (b + c) / 2.0;\n    area = area - (b + c) * (a +\
    \ c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area\
    \ - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b +\
    \ c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area\
    \ - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b +\
    \ c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area\
    \ - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b +\
    \ c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area\
    \ - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b +\
    \ c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area\
    \ - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b +\
    \ c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area\
    \ - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b +\
    \ c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area\
    \ - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b +\
    \ c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area\
    \ - (a + b + c) * (a + b + c) / 2.0;\n    area = area - (a + b + c) * (a + b +\
    \ c) / 2.0;\n    area = area - (a + b + c) * (a + b + c) / 2.0;\n    area = area\
    \ - (", "    let mut area_sum = 0.0;\n    if a + b > c {\n        area_sum +=\
    \ (a + b - c) * 0.5;\n    }\n    if a + c > b {\n        area_sum += (a + c -\
    \ b) * 0.5;\n    }\n    if b + c > a {\n        area_sum += (b + c - a) * 0.5;\n\
    \    }\n    area_sum", "    if a + b > c {\n        return -1.0\n    }\n    if\
    \ a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b {\n        area\
    \ += b * b - c * c;\n    }\n    \n    if a > c {\n        area += a * c - b *\
    \ b;\n    }\n    \n    if b > c {\n        area += a * c - b * b;\n    }\n   \
    \ \n    area /= 2.0;\n    \n    area = area.round();\n    \n    area", "    let\
    \ mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n  \
    \  if a + b > c {\n        a = a + b - c;\n    }\n    if a + c > b {\n       \
    \ b = a + c - b;\n    }\n    if b + c > a {\n        c = b + c - a;\n    }\n \
    \   (a * b * c) / ((a * b) + (c * c))", "    match a + b + c {\n        0 => 0.0,\n\
    \        1 => 1.0,\n        _ => a * b * c / 3.0,\n    }", "    if a + b > c {\n\
    \        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n\
    \    if b + c > a {\n        return -1.0\n    }\n    let mut area = 0.0;\n   \
    \ area += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n \
    \   area /= 3.0;\n    area", "    let mut s = 0.0;\n    if a + b > c {\n     \
    \   s = b * b - c;\n    }\n    if a + c > b {\n        s = s * 0.5 - (a + c) *\
    \ (a + c) - (b + c) * (b + c);\n    }\n    if b + c > a {\n        s = s * 0.5\
    \ - (b + c) * (b + c) - (a + c) * (a + c);\n    }\n    if s > 0.0 {\n        s\
    \ /= 2.0;\n    }\n    return s;", "    let mut s = a + b + c;\n    if s > 0 {\n\
    \        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n    }\n    s /\
    \ 2.0", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut\
    \ v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n\
    \    let mut z = 0.0;\n    let mut a = 0.0;\n    let mut b = 0.0;\n    let mut\
    \ c = 0.0;\n    let mut d = 0.0;\n    let mut e = 0.0;\n    let mut f = 0.0;\n\
    \    let mut g = 0.0;\n    let mut h = 0.0;\n    let mut i = 0.0;\n    let mut\
    \ j = 0.0;\n    let mut k = 0.0;\n    let mut l = 0.0;\n    let mut m = 0.0;\n\
    \    let mut n = 0.0;\n    let mut o = 0.0;\n    let mut p = 0.0;\n    let mut\
    \ q = 0.0;\n    let mut r = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n\
    \    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut\
    \ x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut a = 0.0;\n\
    \    let mut b = 0.0;\n    let mut c = 0.0;\n    let mut d = 0.0;\n    let mut\
    \ e = 0.0;\n    let mut f = 0.0;\n    let mut g = 0.0;\n    let mut h = 0.0;\n\
    \    let mut i = 0.0;\n    let mut j = 0.0;\n    let mut k = 0.0;\n    let mut\
    \ l = 0.0;\n    let mut m = 0.0;\n    let mut n = 0.0;\n    let mut o = 0.0;\n\
    \    let mut p = 0.0;\n    let mut q = 0.0;\n    let mut r = 0.0;\n    let mut\
    \ s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut a = 0.0;\n    let mut b = 0.0;\n    let mut c = 0.0;\n\
    \    let mut d = 0.0;\n    let mut e = 0.0;\n    let mut f = 0.0;\n    let mut\
    \ g = 0.0;\n    let mut h = 0.0;\n", "    match a + b + c {\n        0 => 0.0,\n\
    \        1 => 1.0,\n        _ => a * b * c / 3.0,\n    }", "    if a + b > c {\n\
    \        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n\
    \    if b + c > a {\n        return -1.0\n    }\n    (a * b + c) / 2.0", "   \
    \ let mut s = 0.0;\n    let mut t = 0.0;\n    if a + b > c {\n        s = 0.0;\n\
    \    } else {\n        s = (a * b) / (c + b);\n    }\n    if a + c > b {\n   \
    \     t = 0.0;\n    } else {\n        t = (a * c) / (b + c);\n    }\n    if s\
    \ + t > 1.0 {\n        return -1.0;\n    }\n    return s * t;", "    let mut s\
    \ = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s", "    match\
    \ a + b + c {\n        c => c / 2.0,\n        _ => -1.0,\n    }", "    match a\
    \ + b + c {\n        c => a,\n        b => b,\n        a => c,\n        _ => -1.0,\n\
    \    }", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let mut area = 0.0;\n    area = area + (a * b) - (c * c);\n    area = area\
    \ + (a * c) - (b * b);\n    area = area + (c * a) - (b * c);\n    area = area\
    \ + (c * b) - (a * a);\n    area = area / 2.0;\n    area = round(area, 2);\n \
    \   area", "    let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n\
    \    if s == 0 {\n        return 0.0;\n    }\n    if s == 1 {\n        return\
    \ 1.0;\n    }\n    if s == 2 {\n        return 2.0;\n    }\n    if s == 3 {\n\
    \        return 3.0;\n    }\n    if s == 4 {\n        return 4.0;\n    }\n   \
    \ if s == 5 {\n        return 5.0;\n    }\n    if s == 6 {\n        return 6.0;\n\
    \    }\n    if s == 7 {\n        return 7.0;\n    }\n    if s == 8 {\n       \
    \ return 8.0;\n    }\n    if s == 9 {\n        return 9.0;\n    }\n    if s ==\
    \ 10 {\n        return 10.0;\n    }\n    if s == 11 {\n        return 11.0;\n\
    \    }\n    if s == 12 {\n        return 12.0;\n    }\n    if s == 13 {\n    \
    \    return 13.0;\n    }\n    if s == 14 {\n        return 14.0;\n    }\n    if\
    \ s == 15 {\n        return 15.0;\n    }\n    if s == 16 {\n        return 16.0;\n\
    \    }\n    if s == 17 {\n        return 17.0;\n    }\n    if s == 18 {\n    \
    \    return 18.0;\n    }\n    if s == 19 {\n        return 19.0;\n    }\n    if\
    \ s == 20 {\n        return 20.0;\n    }\n    if s == 21 {\n        return 21.0;\n\
    \    }\n    if s == 22 {\n        return 22.0;\n    }\n    if s == 23 {\n    \
    \    return 23.0;\n    }\n    if s == 24 {\n        return 24.0;\n    }\n    if\
    \ s == 25 {\n        return 25.0;\n    }\n    if s == 26 {\n        return 26.0;\n\
    \    }\n    if s == 27 {\n        return 27.0;\n    }\n    if s == 28 {\n    \
    \    return 28.0;\n    }\n    if s == 29 {\n        return 29.0;\n    }\n    if\
    \ s == 30 {\n        return 30.0;\n    }\n    if s == 31 {\n        return 31.0;\n\
    \    }\n    if s == 32 {\n        return 32.0;\n    }\n    if s == 33 {\n    \
    \    return 33.0;\n    }\n    if s == 34 {\n        return 34.0;\n    }\n    if\
    \ s == 35 {\n        return 35.0;\n    }\n    if s == 36 {\n        return 36.0;\n\
    \    }\n    if s == 37 {\n        return 37.0;\n    }\n    if s == 38 {\n    \
    \    return 38.0;\n    }\n    if s == 39 {\n        return 39.0;\n    }\n    if\
    \ s == 40 {\n        return 40.0;\n    }\n    if s == 41 {\n        return 41.0;\n\
    \    }\n    if s == 42 {\n        return 42.0;\n    }\n    if s == 43 {\n    \
    \    return 43.0;\n    }\n    if s == 44 {\n        return 44.0;\n", "    let\
    \ mut s = 0.0;\n    if a + b > c {\n        s = s + b - c;\n    }\n    if a +\
    \ c > b {\n        s = s + c - b;\n    }\n    if b + c > a {\n        s = s +\
    \ c - a;\n    }\n    s * 0.5", "    if a + b > c {\n        return -1.0\n    }\n\
    \    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n    area +=\
    \ a * c * 0.5;\n    area += b * c * 0.5;\n    area /= (a * b + a * c + b * c);\n\
    \    area", "    if a + b > c {\n        -1\n    } else {\n        a + b + c\n\
    \    }", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let mut s = (a + b + c) / 2;\n    let mut t = (a + b) * (b + c) / 2;\n  \
    \  if t > s {\n        return -1.0\n    }\n    s / t", "    use std::f64;\n  \
    \  use std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n    use std::cmp::PartialEq;\n\
    \n    if a > b + c || b > a + c || c > a + b {\n        return -1.0;\n    }\n\n\
    \    let mut area = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n\n    for\
    \ x in 0..a {\n        for y in 0..b {\n            for z in 0..c {\n        \
    \        let mut product = x * y * z;\n                let mut sum = 0.0;\n\n\
    \                for i in 0..3 {\n                    sum += product;\n      \
    \              product *= x;\n                }\n\n                if sum > t\
    \ {\n                    s = sum;\n                    t = product;\n        \
    \        }\n            }\n        }\n    }\n\n    area = s / t;\n    area = area.round()\
    \ as f64;\n    area", "    if a + b > c {\n        return -1.0\n    }\n    if\
    \ a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n    area +=\
    \ a * c * 0.5;\n    area += b * c * 0.5;\n    area /= 3.0;\n    area", "    let\
    \ mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n  \
    \  if a + b > c {\n        a = b as f64;\n        b = c as f64;\n        c = a\
    \ as f64;\n    }\n    if a + c > b {\n        a = c as f64;\n        b = a as\
    \ f64;\n        c = b as f64;\n    }\n    if b + c > a {\n        a = b as f64;\n\
    \        b = c as f64;\n        c = a as f64;\n    }\n    (a * b * c) / ((a *\
    \ b) + c)", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b\
    \ {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n   \
    \ }\n    let mut area: f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = ", "    \n    if a + b > c {\n        return\
    \ -1.0\n    }\n    \n    if a + c > b {\n        return -1.0\n    }\n    \n  \
    \  if b + c > a {\n        return -1.0\n    }\n    \n    let mut area = 0.0;\n\
    \    \n    if a + b > c {\n        area = (a * b) / c;\n    }\n    \n    if a\
    \ + c > b {\n        area = (a * c) / b;\n    }\n    \n    if b + c > a {\n  \
    \      area = (b * c) / a;\n    }\n    \n    area = area.round();\n    \n    return\
    \ area;", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let mut area = 0.0;\n    area = area + (a * b) - (c * c);\n    area = area\
    \ + (a * c) - (b * b);\n    area = area + (c * a) - (b * c);\n    area = area\
    \ + (b * a) - (c * a);\n    area = area / 2.0;\n    area = round(area, 2);\n \
    \   return area;", "    if a + b > c {\n        return -1.0\n    }\n    if a +\
    \ c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    let mut s = 0.0\n    let mut t = 0.0\n    if a + b > c {\n       \
    \ s = (a * b) / c\n    }\n    if a + c > b {\n        t = (a * c) / b\n    }\n\
    \    if b + c > a {\n        t = (a * b) / c\n    }\n    if s > 0.0 {\n      \
    \  return s.round()\n    }\n    if t > 0.0 {\n        return t.round()\n    }\n\
    \    return -1.0", "    let mut area = 0.0;\n    if a + b > c {\n        area\
    \ = area + (c - a) * (b - c);\n    }\n    if a + c > b {\n        area = area\
    \ + (b - a) * (c - b);\n    }\n    if b + c > a {\n        area = area + (c -\
    \ b) * (a - c);\n    }\n    area = area.round();\n    if area < 0.0 {\n      \
    \  area = 0.0;\n    }\n    area", "    let mut s = a + b + c;\n    if s > 0 {\n\
    \        s /= 2;\n    }\n    s * s", "    let mut a = a as f64;\n    let mut b\
    \ = b as f64;\n    let mut c = c as f64;\n    if a + b > c {\n        a = b as\
    \ f64;\n        b = c as f64;\n        c = a as f64;\n    }\n    if a + c > b\
    \ {\n        a = c as f64;\n        c = b as f64;\n        b = a as f64;\n   \
    \ }\n    if b + c > a {\n        b = c as f64;\n        c = a as f64;\n      \
    \  a = b as f64;\n    }\n    (a * b * c) / ((a * b) + (c * c))", "    let mut\
    \ s = 0.0;\n    if a + b > c {\n        s = s + b - c;\n    }\n    if a + c >\
    \ b {\n        s = s + c - b;\n    }\n    if b + c > a {\n        s = s + c -\
    \ a;\n    }\n    s * 0.5", "    match a + b + c {\n        0 => 0.0,\n       \
    \ 1 => 1.0,\n        _ => a * b * c / (a + b + c),\n    }", "    let mut s = a\
    \ + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s", "    let mut s\
    \ = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n \
    \   let mut w = 0.0;\n    if a + b > c {\n        s = b * b - c;\n        t =\
    \ b * c - a;\n        w = b * b + c;\n    } else {\n        s = a * a;\n     \
    \   t = b * b;\n        w = a * c;\n    }\n    if t > 0.0 {\n        u = s / t;\n\
    \        v = t / w;\n    } else {\n        u = s / w;\n        v = t / w;\n  \
    \  }\n    if u > 0.0 {\n        return u * u;\n    } else {\n        return -1.0\n\
    \    }", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let mut area = 0.0;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n\
    \    area += b * c * 0.5;\n    area /= 3.0;\n    area += 0.5;\n    area /= 2.0;\n\
    \    area", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b\
    \ {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n   \
    \ }\n    \n    let mut area = 0.0;\n    \n    if a + b > c {\n        area = area\
    \ + (b - c) * 0.5;\n    }\n    if a + c > b {\n        area = area + (c - a) *\
    \ 0.5;\n    }\n    if b + c > a {\n        area = area + (a - b) * 0.5;\n    }\n\
    \    \n    area = area.round();\n    \n    return area;", "    let mut s = 0.0;\n\
    \    if a + b > c {\n        s += (a + b - c) * (a + b - c) / 2.0;\n    }\n  \
    \  if a + c > b {\n        s += (a + c - b) * (a + c - b) / 2.0;\n    }\n    if\
    \ b + c > a {\n        s += (b + c - a) * (b + c - a) / 2.0;\n    }\n    s", " \
    \   let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    if s ==\
    \ 0 {\n        return -1.0;\n    }\n    s / 2.0", "    let mut a = a as f64;\n\
    \    let mut b = b as f64;\n    let mut c = c as f64;\n    if a + b > c {\n  \
    \      a = b as f64;\n        b = c as f64;\n        c = a as f64;\n    }\n  \
    \  if a + c > b {\n        a = c as f64;\n        c = b as f64;\n        b = a\
    \ as f64;\n    }\n    if b + c > a {\n        b = c as f64;\n        c = a as\
    \ f64;\n        a = b as f64;\n    }\n    (a * b * c) / ((a * b) + (c * c))",
  "    let mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    \n    let mut\
    \ area = 0.0;\n    \n    if a > b {\n        area += a * c;\n    }\n    \n   \
    \ if b > c {\n        area += b * c;\n    }\n    \n    if c > a {\n        area\
    \ += c * a;\n    }\n    \n    area /= 2.0;\n    \n    area = round(area, 2);\n\
    \    \n    area", "    if a + b > c {\n        return -1.0\n    }\n    if a +\
    \ c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    let mut s = 0.0\n    if a > b {\n        s += a\n    }\n    if a >\
    \ c {\n        s += b\n    }\n    if b > c {\n        s += c\n    }\n    s / 3.0",
  "    let mut area_sum = 0.0;\n    let mut area_product = 0.0;\n    let mut area_product2\
    \ = 0.0;\n    let mut area_product3 = 0.0;\n    let mut area_product4 = 0.0;\n\
    \    let mut area_product5 = 0.0;\n    let mut area_product6 = 0.0;\n    let mut\
    \ area_product7 = 0.0;\n    let mut area_product8 = 0.0;\n    let mut area_product9\
    \ = 0.0;\n    let mut area_product10 = 0.0;\n    let mut area_product11 = 0.0;\n\
    \    let mut area_product12 = 0.0;\n    let mut area_product13 = 0.0;\n    let\
    \ mut area_product14 = 0.0;\n    let mut area_product15 = 0.0;\n    let mut area_product16\
    \ = 0.0;\n    let mut area_product17 = 0.0;\n    let mut area_product18 = 0.0;\n\
    \    let mut area_product19 = 0.0;\n    let mut area_product20 = 0.0;\n    let\
    \ mut area_product21 = 0.0;\n    let mut area_product22 = 0.0;\n    let mut area_product23\
    \ = 0.0;\n    let mut area_product24 = 0.0;\n    let mut area_product25 = 0.0;\n\
    \    let mut area_product26 = 0.0;\n    let mut area_product27 = 0.0;\n    let\
    \ mut area_product28 = 0.0;\n    let mut area_product29 = 0.0;\n    let mut area_product30\
    \ = 0.0;\n    let mut area_product31 = 0.0;\n    let mut area_product32 = 0.0;\n\
    \    let mut area_product33 = 0.0;\n    let mut area_product34 = 0.0;\n    let\
    \ mut area_product35 = 0.0;\n    let mut area_product36 = 0.0;\n    let mut area_product37\
    \ = 0.0;\n    let mut area_product38 = 0.0;\n    let mut area_product39 = 0.0;\n\
    \    let mut area_product40 = 0.0;\n    let mut area_product41 = 0.0;\n    let\
    \ mut area_product42 = 0.0;\n    let mut area_product43 = 0.0;\n    let mut area_product44\
    \ = 0.0;\n    let mut area_product45 = 0.0;\n    let mut area_product46 = 0.0;\n\
    \    let mut area_product47 = 0.0;\n    let mut area_product48 = 0.0;\n    let\
    \ mut area_product49 = 0.0;\n    let mut area_product50 = 0.0;\n    let mut area_product51\
    \ = 0.0;\n    let mut area_product52 = 0.0;\n    let mut area_product53 = 0.0;\n\
    \    let mut area_product54 = 0.0;\n    let mut area_product55 = 0.0;\n    let ",
  "    let mut sum: f64 = 0.0;\n    if a + b > c {\n        sum = a + b - c;\n   \
    \ } else {\n        sum = a + c;\n    }\n    if a + c > b {\n        sum += c;\n\
    \    }\n    if b + c > a {\n        sum += b;\n    }\n    sum", "    if a + b\
    \ > c {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n\
    \    }\n    if b + c > a {\n        return -1.0\n    }\n    \n    let mut area:\
    \ f64 = 0.0;\n    area = (a * b) - (c * a);\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n\
    \    area = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area\
    \ = area / 2.0;\n    area = area / 2.0;\n    area = area / 2.0;\n    area = area\
    \ / 2.0;\n", "    let mut a = a as f64;\n    let mut b = b as f64;\n    let mut\
    \ c = c as f64;\n    if a + b > c {\n        a = a + b as f64;\n    }\n    if\
    \ a + c > b {\n        b = a + c as f64;\n    }\n    if b + c > a {\n        c\
    \ = b + c as f64;\n    }\n    (a * b * c) / ((a * b) as f64 + c) as f64", "  \
    \  if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area\
    \ = 0.0;\n    area = area + (a * b) - (c * c);\n    area = area / (a * b + c *\
    \ c);\n    area = area.round();\n    area = area.to_f64();\n    area", "    if\
    \ a + b > c {\n        -1\n    } else {\n        (b * b) - ((a * c) - (b * a))\n\
    \    }", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let mut area = 0.0;\n    area = area + (a * b) - (c * c);\n    area = area\
    \ + (a * c) - (b * b);\n    area = area + (c * a) - (b * c);\n    area = area\
    \ + (c * b) - (a * a);\n    area = area / 2.0;\n    area = area.round();\n   \
    \ return area;", "    let mut s = 0.0;\n    if a + b > c {\n        s = s + (a\
    \ - b) * (c - b);\n    }\n    if a + c > b {\n        s = s + (a - c) * (b - c);\n\
    \    }\n    if b + c > a {\n        s = s + (b - c) * (a - c);\n    }\n    s /\
    \ (a + b + c)", "    let mut a = a as f64;\n    let mut b = b as f64;\n    let\
    \ mut c = c as f64;\n    if a + b > c {\n        a = b as f64;\n        b = c\
    \ as f64;\n        c = a as f64;\n    }\n    if a + c > b {\n        a = c as\
    \ f64;\n        c = b as f64;\n        b = a as f64;\n    }\n    if b + c > a\
    \ {\n        b = c as f64;\n        c = a as f64;\n        a = b as f64;\n   \
    \ }\n    (a * b * c) / ((a * b) + c)", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n\
    \    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area /= 3.0;\n    area",
  "    match a < b + c && b < c + a {\n        true => a + b + c,\n        false =>\
    \ -1,\n    }", "    if a + b > c {\n        return -1.0\n    }\n    if a + c >\
    \ b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n \
    \   }\n    \n    let mut area = 0.0;\n    \n    area = area + (a * b) - (c * c);\n\
    \    area = area + (a * c) - (b * b);\n    area = area + (c * a) - (b * c);\n\
    \    area = area + (c * b) - (a * a);\n    \n    area = area / 2.0;\n    \n  \
    \  area = round(area, 2);\n    \n    return area;", "    match a + b + c {\n \
    \       0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c / (a + b + c),\n\
    \    }", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let mut s = (a + b + c) / 2;\n    if s == 0 {\n        return 0.0\n    }\n\
    \    let mut area = 0.0;\n    for _ in 0..3 {\n        area += s;\n        s /=\
    \ 2.0;\n    }\n    area", "    match a + b + c {\n        0 => 0.0,\n        x\
    \ => if b > c { 1.0 } else { -1.0 },\n        y => if c > a { 1.0 } else { -1.0\
    \ },\n    }", "    if a + b > c {\n        return -1.0\n    }\n    if a + c >\
    \ b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n \
    \   }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n    area += a * c *\
    \ 0.5;\n    area += b * c * 0.5;\n    area /= 3.0;\n    area", "    let mut s\
    \ = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n \
    \   let mut w = 0.0;\n    if a + b > c {\n        s = b - c;\n        t = a -\
    \ c;\n        w = a + c;\n    } else {\n        s = a - c;\n        t = b - c;\n\
    \        w = b + c;\n    }\n    if t > 0.0 {\n        u = s / t;\n        v =\
    \ t / w;\n    } else {\n        u = s / w;\n        v = t / w;\n    }\n    s *\
    \ v", "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n  \
    \      return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n  \
    \  let mut area = 0.0;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n \
    \   area += b * c * 0.5;\n    area /= 3.0;\n    area", "    let mut sum: f64 =\
    \ 0.0;\n    \n    if a + b > c {\n        sum = a + b + c;\n    } else {\n   \
    \     sum = a + b + c;\n    }\n    \n    if sum > c {\n        sum = sum - c;\n\
    \    }\n    \n    if sum > b {\n        sum = sum - b;\n    }\n    \n    if sum\
    \ > a {\n        sum = sum - a;\n    }\n    \n    sum", "    match a + b + c {\n\
    \        0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c / 3.0,\n    }",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut s =\
    \ (a + b + c) / 2.0;\n    let mut area = 0.0;\n    while s > 0.0 {\n        area\
    \ += s;\n        s /= 2.0;\n    }\n    area", "    match a + b + c {\n       \
    \ 0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c / 3.0,\n    }", "    let\
    \ mut sum: f64 = 0.0;\n    if a + b > c {\n        sum = a + b + c;\n    } else\
    \ {\n        sum = a + b + c;\n    }\n    if sum > b {\n        sum = sum - b;\n\
    \    }\n    if sum > a {\n        sum = sum - a;\n    }\n    if sum > c {\n  \
    \      sum = sum - c;\n    }\n    sum", "    if a + b > c {\n        -1\n    }\
    \ else if a + c > b {\n        -1\n    } else if b + c > a {\n        -1\n   \
    \ } else {\n        (a * b + c) / 2.0\n    }", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    let mut area = 0.0;\n    area = area +\
    \ ((a + b) * (b + c));\n    area = area + ((a * b) * (c + a));\n    area = area\
    \ + ((a * c) * (b + c));\n    area = area / ((a + b) * (c + a));\n    area = area\
    \ / ((b + c) * (a + b));\n    area = area / ((c + a) * (a + c));\n    area = area\
    \ / ((a + c) * (b + c));\n    area = area / ((b + a) * (c + a));\n    area = area\
    \ / ((a + b) * (a + c));\n    area = area / ((b + c) * (a + b));\n    area = area\
    \ / ((a + c) * (c + b));\n    area = area / ((a + b) * (b + a));\n    area = area\
    \ / ((b + a) * (c + a));\n    area = area / ((b + c) * (a + b));\n    area = area\
    \ / ((a + c) * (c + b));\n    area = area / ((a + b) * (a + c));\n    area = area\
    \ / ((b + a) * (a + b));\n    area = area / ((b + c) * (a + c));\n    area = area\
    \ / ((a + c) * (b + a));\n    area = area / ((c + a) * (a + b));\n    area = area\
    \ / ((a + b) * (a + c));\n    area = area / ((b + a) * (a + b));\n    area = area\
    \ / ((b + c) * (a + c));\n    area = area / ((a + c) * (b + a));\n    area = area\
    \ / ((c + a) * (a + b));\n    area = area / ((a + b) * (a + c));\n    area = area\
    \ / ((b + a) * (a + b));\n    area = area / ((b + c) * (a + c));\n    area = area\
    \ / ((a + c) * (b + a));\n    area = area / ((c + a) * (a + b));\n    area = area\
    \ / ((a + b) * (a + c));\n    area = area / ((b + a) * (a + b));\n    area = area\
    \ / ((b + c) * (a + c));\n    area = area / ((a + c) * (b + a));\n    area = area\
    \ / ((c + a) * (a + b));\n    area = area / ((a + b) * (a + c));\n    area = area\
    \ / ((b + a) * (a + b));\n    area = area / ((b + c) * (a + c));\n    area = area\
    \ / ((a + ", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\
    \    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut\
    \ y = 0.0;\n    let mut z = 0.0;\n    let mut a = a < b ? a : b;\n    let mut\
    \ b = b < c ? b : c;\n    let mut c = c < a ? c : a;\n    while a > 0 && b > 0\
    \ && c > 0 {\n        if a > b {\n            s += a;\n            a -= b;\n \
    \       }\n        if b > c {\n            s += b;\n            b -= c;\n    \
    \    }\n        if c > a {\n            s += c;\n            c -= a;\n       \
    \ }\n    }\n    if a > b {\n        s += a;\n    }\n    if b > c {\n        s\
    \ += b;\n    }\n    if c > a {\n        s += c;\n    }\n    if s == 0.0 {\n  \
    \      return -1.0;\n    }\n    w = s / 3.0;\n    z = w / 2.0;\n    y = z * z;\n\
    \    x = y * z;\n    t = x * w;\n    u = t * w;\n    v = u * w;\n    s = u * v;\n\
    \    t = v * v;\n    if t < 0.0 {\n        return -1.0;\n    }\n    return s;",
  "    let mut area_sum = 0.0;\n    let mut area_product = 0.0;\n    let mut area_product2\
    \ = 0.0;\n    let mut area_product3 = 0.0;\n    let mut area_product4 = 0.0;\n\
    \    let mut area_product5 = 0.0;\n    let mut area_product6 = 0.0;\n    let mut\
    \ area_product7 = 0.0;\n    let mut area_product8 = 0.0;\n    let mut area_product9\
    \ = 0.0;\n    let mut area_product10 = 0.0;\n    let mut area_product11 = 0.0;\n\
    \    let mut area_product12 = 0.0;\n    let mut area_product13 = 0.0;\n    let\
    \ mut area_product14 = 0.0;\n    let mut area_product15 = 0.0;\n    let mut area_product16\
    \ = 0.0;\n    let mut area_product17 = 0.0;\n    let mut area_product18 = 0.0;\n\
    \    let mut area_product19 = 0.0;\n    let mut area_product20 = 0.0;\n    let\
    \ mut area_product21 = 0.0;\n    let mut area_product22 = 0.0;\n    let mut area_product23\
    \ = 0.0;\n    let mut area_product24 = 0.0;\n    let mut area_product25 = 0.0;\n\
    \    let mut area_product26 = 0.0;\n    let mut area_product27 = 0.0;\n    let\
    \ mut area_product28 = 0.0;\n    let mut area_product29 = 0.0;\n    let mut area_product30\
    \ = 0.0;\n    let mut area_product31 = 0.0;\n    let mut area_product32 = 0.0;\n\
    \    let mut area_product33 = 0.0;\n    let mut area_product34 = 0.0;\n    let\
    \ mut area_product35 = 0.0;\n    let mut area_product36 = 0.0;\n    let mut area_product37\
    \ = 0.0;\n    let mut area_product38 = 0.0;\n    let mut area_product39 = 0.0;\n\
    \    let mut area_product40 = 0.0;\n    let mut area_product41 = 0.0;\n    let\
    \ mut area_product42 = 0.0;\n    let mut area_product43 = 0.0;\n    let mut area_product44\
    \ = 0.0;\n    let mut area_product45 = 0.0;\n    let mut area_product46 = 0.0;\n\
    \    let mut area_product47 = 0.0;\n    let mut area_product48 = 0.0;\n    let\
    \ mut area_product49 = 0.0;\n    let mut area_product50 = 0.0;\n    let mut area_product51\
    \ = 0.0;\n    let mut area_product52 = 0.0;\n    let mut area_product53 = 0.0;\n\
    \    let mut area_product54 = 0.0;\n    let mut area_product55 = 0.0;\n    let ",
  "    let mut sum: f64 = 0.0;\n    if a + b > c {\n        sum += (a + b - c) * (a\
    \ + b - c) / 2.0;\n    }\n    if a + c > b {\n        sum += (a + c - b) * (a\
    \ + c - b) / 2.0;\n    }\n    if b + c > a {\n        sum += (b + c - a) * (b\
    \ + c - a) / 2.0;\n    }\n    sum", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut area = 0.0;\n    area = area + (b * c);\n\
    \    area = area + (a * c);\n    area = area + (a * b) - (a * c);\n    area =\
    \ area + (b * a) - (b * c);\n    area = area + (c * a) - (b * a);\n    area =\
    \ area + (c * b) - (c * a);\n    area = area + (a * b) - (b * a);\n    area =\
    \ area + (b * a) - (a * a);\n    area = area + (a * a) - (a * a);\n    area =\
    \ area / 6.0;\n    area = round(area, 2);\n    area", "    if a + b > c {\n  \
    \      return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n  \
    \  if b + c > a {\n        return -1.0\n    }\n    let mut area: f64 = 0.0;\n\
    \    area = (a * b) - (c * a);\n    area = area / 2.0;\n    area = area.round();\n\
    \    return area;", "    if a + b > c {\n        return -1.0\n    }\n    if a\
    \ + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n\
    \    }\n    let mut area = 0.0;\n    area = area + (a * b) - (c * c);\n    area\
    \ = area + (a * c) - (b * b);\n    area = area + (c * a) - (b * c);\n    area\
    \ = area + (c * b) - (a * a);\n    area = area / 2.0;\n    area = area.round();\n\
    \    area", "    if a + b > c {\n        -1\n    } else {\n        (b * b) - ((a\
    \ * a) - (c * c))\n    }", "    if a + b > c {\n        return -1.0\n    }\n \
    \   if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    \n    let mut area_sum: f64 = 0.0;\n    \n    if a > b {\n\
    \        area_sum += (a + b) * (a + b + c) / 2.0;\n    } else {\n        area_sum\
    \ += (b + c) * (a + b + c) / 2.0;\n    }\n    \n    if a > c {\n        area_sum\
    \ += (a + c) * (a + b + c) / 2.0;\n    } else {\n        area_sum += (c + b) *\
    \ (a + b + c) / 2.0;\n    }\n    \n    if b > c {\n        area_sum += (b + c)\
    \ * (a + b + c) / 2.0;\n    } else {\n        area_sum += (c + b) * (a + b + c)\
    \ / 2.0;\n    }\n    \n    area_sum", "    let mut s = 0.0;\n    if a + b > c\
    \ {\n        s = b * b - c;\n    }\n    if a + c > b {\n        s += a * c - b\
    \ * b;\n    }\n    if b + c > a {\n        s += a * b - b * c;\n    }\n    if\
    \ s > 0.0 {\n        s /= 2.0;\n    }\n    return s;", "    let mut s = a + b\
    \ + c;\n    if s > 0 {\n        s /= 2;\n    }\n    s * s", "    let mut a = a\
    \ as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n    if a + b\
    \ > c {\n        a = a - b;\n        b = c - a;\n        c = a + b;\n    }\n \
    \   if a + c > b {\n        a = a - c;\n        c = c - a;\n        b = b + c;\n\
    \    }\n    if b + c > a {\n        b = b - c;\n        c = c - b;\n        a\
    \ = a + c;\n    }\n    (a * b * c) / ((a * b) + c)", "    let mut a = a as f64;\n\
    \    let mut b = b as f64;\n    let mut c = c as f64;\n    if a + b > c {\n  \
    \      a = a + b - c;\n    }\n    if a + c > b {\n        b = a + c - b;\n   \
    \ }\n    if b + c > a {\n        c = b + c - a;\n    }\n    (a * b * c) / ((a\
    \ * b) + (c * c))", "    use std::f64::consts::PI;\n    use std::f64::consts::E;\n\
    \n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\n    if a\
    \ + b > c {\n        return -1.0;\n    }\n\n    if a + c > b {\n        return\
    \ -1.0;\n    }\n\n    if b + c > a {\n        return -1.0;\n    }\n\n    s = a\
    \ + b + c;\n    t = b - a;\n    u = c - b;\n\n    if s > t {\n        return -1.0;\n\
    \    }\n\n    if u > t {\n        return -1.0;\n    }\n\n    if u > s {\n    \
    \    return s / u;\n    }\n\n    if t > s {\n        return t / u;\n    }\n\n\
    \    if t > t {\n        return s / t;\n    }\n\n    if s > s {\n        return\
    \ -1.0;\n    }\n\n    if u > u {\n        return -1.0;\n    }\n\n    if t > t\
    \ {\n        return -1.0;\n    }\n\n    if t > u {\n        return -1.0;\n   \
    \ }\n\n    if u > u {\n        return -1.0;\n    }\n\n    if t > t {\n       \
    \ return -1.0;\n    }\n\n    if u > u {\n        return -1.0;\n    }\n\n    if\
    \ t > t {\n        return -1.0;\n    }\n\n    if u > u {\n        return -1.0;\n\
    \    }\n\n    if t > t {\n        return -1.0;\n    }\n\n    if u > u {\n    \
    \    return -1.0;\n    }\n\n    if t > t {\n        return -1.0;\n    }\n\n  \
    \  if u > u {\n        return -1.0;\n    }\n\n    if t > t {\n        return -1.0;\n\
    \    }\n\n    if u > u {\n        return -1.0;\n    }\n\n    if t > t {\n    \
    \    return -1.0;\n    }\n\n    if u > u {\n        return -1.0;\n    }\n\n  \
    \  if t > t {\n        return -1.0;\n    }\n\n    if u > u {\n        return -1.0;\n\
    \    }\n\n    if t > t {\n        return -1.0;\n    }\n\n    if u > u {\n    \
    \    return -1.0;\n    }\n\n    if t > t {\n        return -1.0;\n    }\n\n  \
    \  if u > u {\n        return -1.0;\n    }\n\n    if t > t {\n        return -1.0;\n\
    \    }\n\n    if u > u {\n        return -1.0;\n    }\n\n    if t > t {\n    \
    \    return -1.0;\n    }\n\n    if u > u {\n        return -1.0;\n    }\n\n  \
    \  if t > t {\n        return -1.0;\n    }\n\n    if u > u {\n        return -1.0;\n\
    \    }\n\n    if t > t {\n        return -1.", "    match a + b + c {\n      \
    \  0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c / 3.0,\n    }", "    if\
    \ a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut s =\
    \ 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n   \
    \ let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z\
    \ = 0.0;\n    let mut a = 0.0;\n    let mut b = 0.0;\n    let mut c = 0.0;\n \
    \   let mut d = 0.0;\n    let mut e = 0.0;\n    let mut f = 0.0;\n    let mut\
    \ g = 0.0;\n    let mut h = 0.0;\n    let mut i = 0.0;\n    let mut j = 0.0;\n\
    \    let mut k = 0.0;\n    let mut l = 0.0;\n    let mut m = 0.0;\n    let mut\
    \ n = 0.0;\n    let mut o = 0.0;\n    let mut p = 0.0;\n    let mut q = 0.0;\n\
    \    let mut r = 0.0;\n    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut\
    \ u = 0.0;\n    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n\
    \    let mut y = 0.0;\n    let mut z = 0.0;\n    let mut a = 0.0;\n    let mut\
    \ b = 0.0;\n    let mut c = 0.0;\n    let mut d = 0.0;\n    let mut e = 0.0;\n\
    \    let mut f = 0.0;\n    let mut g = 0.0;\n    let mut h = 0.0;\n    let mut\
    \ i = 0.0;\n    let mut j = 0.0;\n    let mut k = 0.0;\n    let mut l = 0.0;\n\
    \    let mut m = 0.0;\n    let mut n = 0.0;\n    let mut o = 0.0;\n    let mut\
    \ p = 0.0;\n    let mut q = 0.0;\n    let mut r = 0.0;\n    let mut s = 0.0;\n\
    \    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n    let mut\
    \ w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut z = 0.0;\n\
    \    let mut a = 0.0;\n    let mut b = 0.0;\n    let mut c = 0.0;\n    let mut\
    \ d = 0.0;\n    let mut e = 0.0;\n    let mut f = 0.0;\n    let mut g = 0.0;\n\
    \    let mut h = 0.0;\n", "    let mut a = a as f64;\n    let mut b = b as f64;\n\
    \    let mut c = c as f64;\n    if a + b > c {\n        a = b - c;\n    }\n  \
    \  if a + c > b {\n        b = c - a;\n    }\n    if b + c > a {\n        c =\
    \ a - b;\n    }\n    (a * b * c).round()", "    let mut area = 0.0;\n    if a\
    \ + b > c {\n        area = area + (c - b) * (c - a);\n    }\n    if a + c > b\
    \ {\n        area = area + (b - a) * (b - c);\n    }\n    if a + b > c {\n   \
    \     area = area + (c - a) * (c - b);\n    }\n    area", "    if a + b > c {\n\
    \        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n\
    \    if b + c > a {\n        return -1.0\n    }\n    \n    let mut area = 0.0;\n\
    \    \n    if a > b {\n        area += a * b\n    }\n    if a > c {\n        area\
    \ += a * c\n    }\n    if b > c {\n        area += b * c\n    }\n    \n    area\
    \ /= (a+b+c) * 2.0\n    \n    area.round(2)", "    let mut s = a + b + c;\n  \
    \  if s > 0 {\n        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n\
    \    }\n    if s == 1 {\n        return 1.0;\n    }\n    let mut area = 0.0;\n\
    \    if a > b {\n        area = area + (b - c) * (b - a);\n    } else {\n    \
    \    area = area + (c - a) * (c - b);\n    }\n    area = area / s;\n    area =\
    \ area.round() as f64;\n    area", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    \n    let mut area = 0.0;\n    \n    if a > b\
    \ {\n        area += b * c / a;\n    }\n    if a > c {\n        area += c * a\
    \ / b;\n    }\n    if b > c {\n        area += a * b / c;\n    }\n    \n    area\
    \ /= 2.0;\n    \n    area", "    if a + b > c {\n        return -1.0\n    }\n\
    \    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n        return\
    \ -1.0\n    }\n    let mut s = 0.0;\n    s += a * b\n    s += b * c\n    s +=\
    \ c * a\n    s /= 2.0;\n    s * (s - a)", "    let mut s = a + b + c;\n    if\
    \ s > 0 {\n        s /= 2;\n    }\n    s * s", "    match a + b + c {\n      \
    \  0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c / 3.0,\n    }", "    let\
    \ mut sum: f64 = 0.0;\n    let mut a: f64 = a as f64;\n    let mut b: f64 = b\
    \ as f64;\n    let mut c: f64 = c as f64;\n    if a + b > c {\n        sum = a\
    \ + b - c;\n        a = b;\n        b = c;\n        c = sum;\n    }\n    if a\
    \ + c > b {\n        sum = a + c - b;\n        a = c;\n        c = sum;\n    }\n\
    \    if b + c > a {\n        sum = b + c - a;\n        b = c;\n        c = sum;\n\
    \    }\n    sum", "    let mut area_sum = 0.0;\n    if a + b > c {\n        area_sum\
    \ += (a + b - c) * 0.5;\n    }\n    if a + c > b {\n        area_sum += (a + c\
    \ - b) * 0.5;\n    }\n    if b + c > a {\n        area_sum += (b + c - a) * 0.5;\n\
    \    }\n    area_sum", "    let mut s = a + b + c;\n    if s > 0 {\n        s\
    \ /= 2;\n    }\n    s * s", "    let mut a = a as f64;\n    let mut b = b as f64;\n\
    \    let mut c = c as f64;\n    if a + b > c {\n        a = b as f64;\n      \
    \  b = c as f64;\n        c = a as f64;\n    }\n    if a + c > b {\n        a\
    \ = c as f64;\n        c = b as f64;\n        b = a as f64;\n    }\n    if b +\
    \ c > a {\n        b = c as f64;\n        c = a as f64;\n        a = b as f64;\n\
    \    }\n    (a * b * c) / ((a * b) + c)", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    \n    let mut area = 0.0;\n    \n    if\
    \ a > b {\n        area += a * c / b;\n    }\n    if a > c {\n        area +=\
    \ b * c / a;\n    }\n    if b > c {\n        area += a * c / b;\n    }\n    \n\
    \    area += b * c / a;\n    \n    area += a * c / b;\n    \n    area += b * c\
    \ / a;\n    \n    area += a * c / b;\n    \n    area += b * c / a;\n    \n   \
    \ area += a * c / b;\n    \n    area += b * c / a;\n    \n    area += a * c /\
    \ b;\n    \n    area += b * c / a;\n    \n    area += a * c / b;\n    \n    area\
    \ += b * c / a;\n    \n    area += a * c / b;\n    \n    area += b * c / a;\n\
    \    \n    area += a * c / b;\n    \n    area += b * c / a;\n    \n    area +=\
    \ a * c / b;\n    \n    area += b * c / a;\n    \n    area += a * c / b;\n   \
    \ \n    area += b * c / a;\n    \n    area += a * c / b;\n    \n    area += b\
    \ * c / a;\n    \n    area += a * c / b;\n    \n    area += b * c / a;\n    \n\
    \    area += a * c / b;\n    \n    area += b * c / a;\n    \n    area += a * c\
    \ / b;\n    \n    area += b * c / a;\n    \n    area += a * c / b;\n    \n   \
    \ area += b * c / a;\n    \n    area += a * c / b;\n    \n    area += b * c /\
    \ a;\n    \n    area += a * c / b;\n    \n    area += b * c / a;\n    \n    area\
    \ += a * c / b;\n    \n    area += b * c / a;\n    \n    area += a * c / b;\n\
    \    \n    area += b * c / a;\n    \n    area += a * ", "    if a + b > c {\n\
    \        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n\
    \    if b + c > a {\n        return -1.0\n    }\n    \n    let mut s = (a + b\
    \ + c) / 2;\n    \n    if s == 0 {\n        return 0.0\n    }\n    \n    let mut\
    \ area = 0.0;\n    \n    while s > 0 {\n        area += s / 2.0;\n        s -=\
    \ 1.0;\n    }\n    \n    area", "    let mut area_sum: f64 = 0.0;\n    let mut\
    \ area_product: f64 = 0.0;\n    if a + b > c {\n        area_sum += (a + b - c)\
    \ * 0.5;\n        area_product += a * b * 0.5;\n    } else {\n        area_sum\
    \ += (a - b + c) * 0.5;\n        area_product += a * b * 0.5;\n    }\n    if a\
    \ + c > b {\n        area_sum += (a + c - b) * 0.5;\n        area_product += a\
    \ * c * 0.5;\n    } else {\n        area_sum += (a - c + b) * 0.5;\n        area_product\
    \ += a * c * 0.5;\n    }\n    if b + c > a {\n        area_sum += (b + c - a)\
    \ * 0.5;\n        area_product += b * c * 0.5;\n    } else {\n        area_sum\
    \ += (b - c + a) * 0.5;\n        area_product += b * c * 0.5;\n    }\n    if area_sum\
    \ > area_product {\n        area_sum -= area_product;\n    } else {\n        area_sum\
    \ -= area_sum;\n    }\n    area_sum", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    \n    let mut s = 0.0;\n    let mut t = 0.0;\n\
    \    let mut u = 0.0;\n    let mut v = 0.0;\n    \n    if a > b {\n        s +=\
    \ a;\n        t += b;\n        u += c;\n        v += a;\n    }\n    else {\n \
    \       s += b;\n        t += a;\n        u += c;\n        v += b;\n    }\n  \
    \  \n    if u > v {\n        s += u;\n        t += v;\n        u += t;\n     \
    \   v += u;\n    }\n    else {\n        s += v;\n        t += u;\n        u +=\
    \ t;\n        v += v;\n    }\n    \n    if u > v {\n        s += u;\n        t\
    \ += v;\n        u += t;\n        v += u;\n    }\n    else {\n        s += v;\n\
    \        t += u;\n        u += t;\n        v += v;\n    }\n    \n    if u > v\
    \ {\n        s += u;\n        t += v;\n        u += t;\n        v += u;\n    }\n\
    \    else {\n        s += v;\n        t += u;\n        u += t;\n        v += v;\n\
    \    }\n    \n    if u > v {\n        s += u;\n        t += v;\n        u += t;\n\
    \        v += u;\n    }\n    else {\n        s += v;\n        t += u;\n      \
    \  u += t;\n        v += v;\n    }\n    \n    if u > v {\n        s += u;\n  \
    \      t += v;\n        u += t;\n        v += u;\n    }\n    else {\n        s\
    \ += v;\n        t += u;\n        u += t;\n        v += v;\n    }\n    \n    if\
    \ u > v {\n        s += u;\n        t += v;\n        u += t;\n        v += u;\n\
    \    }\n    else {\n        s += v;\n        t += u;\n        u += t;\n      \
    \  v += v;\n    }\n    \n    if u > v {\n        s += u;\n        t += v;\n  \
    \      u += t;\n        v += u;\n    }\n    else {\n        s += v;\n        t\
    \ += u;\n        u += t;\n        v += v;\n    }\n    \n    if u > v {\n     \
    \   s += u;\n        t += v;\n        u += t;\n        v += u;\n    }\n    else\
    \ {\n        s += v;\n        t += u;\n", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    let mut area = 0.0;\n    area += a * b\
    \ * 0.5;\n    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area /= 2.0;\n\
    \    area", "    match a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n   \
    \     _ => a * b * c / (a + b + c),\n    }", "    let mut s = 0.0;\n    let mut\
    \ t = 0.0;\n    if a + b > c {\n        s = b - c;\n        t = a;\n    } else\
    \ {\n        s = a - c;\n        t = b;\n    }\n    s / t", "    if a + b > c\
    \ {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n   \
    \ }\n    if b + c > a {\n        return -1.0\n    }\n    let mut s = (a + b +\
    \ c) / 2.0;\n    if s == 0.0 {\n        return 0.0\n    }\n    let mut area =\
    \ 0.0;\n    area = area + (a * s);\n    area = area + (b * s);\n    area = area\
    \ + (c * s);\n    area = area / s;\n    area = area as f64;\n    return area;",
  "    let mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n\
    \    if a + b > c {\n        a = b;\n        b = c;\n        c = a;\n    }\n \
    \   if a + c > b {\n        a = c;\n        c = b;\n        b = a;\n    }\n  \
    \  if b + c > a {\n        b = c;\n        c = a;\n        a = b;\n    }\n   \
    \ a + b + c", "    if a + b > c {\n        return -1.0\n    }\n    if a + c >\
    \ b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n \
    \   }\n    let mut s = (a + b + c) * 0.5;\n    if a > b {\n        s += b - a;\n\
    \    }\n    if a > c {\n        s += c - a;\n    }\n    if b > c {\n        s\
    \ += c - b;\n    }\n    s / (a + b + c)", "    let mut s = a + b + c;\n    if\
    \ s > 0 {\n        s /= 2;\n    }\n    if s == 0 {\n        return 0.0;\n    }\n\
    \    s / 2.0", "    if a + b > c {\n        return -1.0\n    }\n    if a + c >\
    \ b {\n        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n \
    \   }\n    let mut s = 0.0;\n    s += a * b\n    s += a * c\n    s += b * c\n\
    \    s /= 2.0\n    s * (s - a)", "    let mut s = a + b + c;\n    if s > 0 {\n\
    \        s /= 2;\n    }\n    s", "    let mut sum: f64 = 0.0;\n    let mut a:\
    \ f64 = a as f64;\n    let mut b: f64 = b as f64;\n    let mut c: f64 = c as f64;\n\
    \    if a + b > c {\n        a = b;\n        b = c;\n        c = a;\n    }\n \
    \   if a + c > b {\n        a = c;\n        c = b;\n        b = a;\n    }\n  \
    \  if b + c > a {\n        b = c;\n        c = a;\n        a = b;\n    }\n   \
    \ sum = a + b + c;\n    if sum > 1.0 {\n        sum = sum - 1.0;\n    }\n    sum\
    \ as f64", "    let mut a = a as f64;\n    let mut b = b as f64;\n    let mut\
    \ c = c as f64;\n    if a + b > c {\n        a = a + b - c;\n    }\n    if a +\
    \ c > b {\n        b = a + c - b;\n    }\n    if b + c > a {\n        c = b +\
    \ c - a;\n    }\n    (a * b * c) / ((a * b) + c * c)", "    let mut a = a as f64;\n\
    \    let mut b = b as f64;\n    let mut c = c as f64;\n    if a + b > c {\n  \
    \      a = a - b;\n        b = c - a;\n        c = c - b;\n    }\n    if a + c\
    \ > b {\n        a = a - c;\n        c = c - a;\n        b = b - c;\n    }\n \
    \   if b + c > a {\n        b = b - c;\n        c = c - b;\n        a = a - c;\n\
    \    }\n    (a * b * c) / ((a * b) + c)", "    if a + b > c {\n        return\
    \ -1.0\n    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c >\
    \ a {\n        return -1.0\n    }\n    (a * b + c) / 2.0", "    let mut sum: f64\
    \ = 0.0;\n    let mut a: f64 = a as f64;\n    let mut b: f64 = b as f64;\n   \
    \ let mut c: f64 = c as f64;\n    if a + b > c {\n        sum = a + b - c;\n \
    \       a = b;\n        b = c;\n        c = sum;\n    }\n    if a + c > b {\n\
    \        sum = a + c - b;\n        a = c;\n        c = sum;\n    }\n    if b +\
    \ c > a {\n        sum = b + c - a;\n        b = c;\n        c = sum;\n    }\n\
    \    sum", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n\
    \    let mut v = 0.0;\n    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut\
    \ y = 0.0;\n    let mut z = 0.0;\n    let mut u1 = 0.0;\n    let mut v1 = 0.0;\n\
    \    let mut w1 = 0.0;\n    let mut x2 = 0.0;\n    let mut y2 = 0.0;\n    let\
    \ mut z2 = 0.0;\n    let mut u2 = 0.0;\n    let mut v2 = 0.0;\n    let mut w2\
    \ = 0.0;\n    let mut x3 = 0.0;\n    let mut y3 = 0.0;\n    let mut z3 = 0.0;\n\
    \    let mut u3 = 0.0;\n    let mut v3 = 0.0;\n    let mut w3 = 0.0;\n    let\
    \ mut x4 = 0.0;\n    let mut y4 = 0.0;\n    let mut z4 = 0.0;\n    let mut u4\
    \ = 0.0;\n    let mut v4 = 0.0;\n    let mut w4 = 0.0;\n    let mut x5 = 0.0;\n\
    \    let mut y5 = 0.0;\n    let mut z5 = 0.0;\n    let mut u5 = 0.0;\n    let\
    \ mut v5 = 0.0;\n    let mut w5 = 0.0;\n    let mut x6 = 0.0;\n    let mut y6\
    \ = 0.0;\n    let mut z6 = 0.0;\n    let mut u6 = 0.0;\n    let mut v6 = 0.0;\n\
    \    let mut w6 = 0.0;\n    let mut x7 = 0.0;\n    let mut y7 = 0.0;\n    let\
    \ mut z7 = 0.0;\n    let mut u7 = 0.0;\n    let mut v7 = 0.0;\n    let mut w7\
    \ = 0.0;\n    let mut x8 = 0.0;\n    let mut y8 = 0.0;\n    let mut z8 = 0.0;\n\
    \    let mut u8 = 0.0;\n    let mut v8 = 0.0;\n    let mut w8 = 0.0;\n    let\
    \ mut x9 = 0.0;\n    let mut y9 = 0.0;\n    let mut z9 = 0.0;\n    let mut u9\
    \ = 0.0;\n    let mut v9 = 0.0;\n    let mut w9 = 0.0;\n    let mut x10 = 0.0;\n\
    \    let mut y10 = 0.0;\n    let mut z10 = 0.0;\n    let mut u10 = 0.0;\n    let\
    \ mut v10 = 0.0;\n    let mut w10 = 0.0;\n    let mut x11", "    let mut s = 0.0;\n\
    \    if a + b > c {\n        s = s + (c - a) * (b - a);\n    }\n    if a + c >\
    \ b {\n        s = s + (b - a) * (c - a);\n    }\n    if b + c > a {\n       \
    \ s = s + (a - b) * (c - b);\n    }\n    s / 2.0", "    match a + b + c {\n  \
    \      0 => 0.0,\n        1 => 1.0,\n        _ => a * b * c / 3.0,\n    }", " \
    \   if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    \n    let mut\
    \ area = 0.0;\n    \n    if a + b > c {\n        area = area + (b - c) * (b +\
    \ c) / 2.0;\n    }\n    \n    if a + c > b {\n        area = area + (c - a) *\
    \ (c + a) / 2.0;\n    }\n    \n    if b + c > a {\n        area = area + (a -\
    \ b) * (a + b) / 2.0;\n    }\n    \n    area = area / 2.0;\n    \n    area = area.round();\n\
    \    \n    return area;", "    let mut area_sum = 0.0;\n    if a + b > c {\n \
    \       area_sum += (a + b - c) * 0.5;\n    }\n    if a + c > b {\n        area_sum\
    \ += (a + c - b) * 0.5;\n    }\n    if b + c > a {\n        area_sum += (b + c\
    \ - a) * 0.5;\n    }\n    area_sum", "    if a + b > c {\n        return -1.0\n\
    \    }\n    if a + c > b {\n        return -1.0\n    }\n    if b + c > a {\n \
    \       return -1.0\n    }\n    let mut area = 0.0;\n    area += a * b * 0.5;\n\
    \    area += a * c * 0.5;\n    area += b * c * 0.5;\n    area /= 3.0;\n    area",
  "    let mut s = 0.0;\n    if a + b > c {\n        s = s + (a - b) * (c - b);\n\
    \    }\n    if a + c > b {\n        s = s + (a - c) * (b - c);\n    }\n    if\
    \ b + c > a {\n        s = s + (b - c) * (a - c);\n    }\n    s", "    if a +\
    \ b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return -1.0\n\
    \    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area: f64\
    \ = 0.0;\n    area = (a * b) - (c * a);\n    area = area / 2.0;\n    area = area.round();\n\
    \    return area;", "    use std::f64::consts::PI;\n    use std::f64::consts::E;\n\
    \    use std::f64::consts::NAN;\n    use std::f64::consts::INFINITY;\n    \n \
    \   let mut a = a as f64;\n    let mut b = b as f64;\n    let mut c = c as f64;\n\
    \    \n    if a + b > c {\n        a = a - b;\n        b = c - a;\n        c =\
    \ a + b;\n    }\n    \n    if a + c > b {\n        a = a - c;\n        c = c -\
    \ a;\n        b = b + c;\n    }\n    \n    if b + c > a {\n        b = b - c;\n\
    \        c = c - b;\n        a = a + c;\n    }\n    \n    if a + b + c > INFINITY\
    \ {\n        return NAN;\n    }\n    \n    let area = a * b * c / 6.0;\n    \n\
    \    if area < 0.0 {\n        return NAN;\n    }\n    \n    area", "    let mut\
    \ s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n    let mut v = 0.0;\n\
    \    let mut w = 0.0;\n    let mut x = 0.0;\n    let mut y = 0.0;\n    let mut\
    \ z = 0.0;\n    let mut u1 = 0.0;\n    let mut v1 = 0.0;\n    let mut w1 = 0.0;\n\
    \    let mut x1 = 0.0;\n    let mut y1 = 0.0;\n    let mut z1 = 0.0;\n    let\
    \ mut u2 = 0.0;\n    let mut v2 = 0.0;\n    let mut w2 = 0.0;\n    let mut x2\
    \ = 0.0;\n    let mut y2 = 0.0;\n    let mut z2 = 0.0;\n    let mut u3 = 0.0;\n\
    \    let mut v3 = 0.0;\n    let mut w3 = 0.0;\n    let mut x3 = 0.0;\n    let\
    \ mut y3 = 0.0;\n    let mut z3 = 0.0;\n    let mut u4 = 0.0;\n    let mut v4\
    \ = 0.0;\n    let mut w4 = 0.0;\n    let mut x4 = 0.0;\n    let mut y4 = 0.0;\n\
    \    let mut z4 = 0.0;\n    let mut u5 = 0.0;\n    let mut v5 = 0.0;\n    let\
    \ mut w5 = 0.0;\n    let mut x5 = 0.0;\n    let mut y5 = 0.0;\n    let mut z5\
    \ = 0.0;\n    let mut u6 = 0.0;\n    let mut v6 = 0.0;\n    let mut w6 = 0.0;\n\
    \    let mut x6 = 0.0;\n    let mut y6 = 0.0;\n    let mut z6 = 0.0;\n    let\
    \ mut u7 = 0.0;\n    let mut v7 = 0.0;\n    let mut w7 = 0.0;\n    let mut x7\
    \ = 0.0;\n    let mut y7 = 0.0;\n    let mut z7 = 0.0;\n    let mut u8 = 0.0;\n\
    \    let mut v8 = 0.0;\n    let mut w8 = 0.0;\n    let mut x8 = 0.0;\n    let\
    \ mut y8 = 0.0;\n    let mut z8 = 0.0;\n    let mut u9 = 0.0;\n    let mut v9\
    \ = 0.0;\n    let mut w9 = 0.0;\n    let mut x9 = 0.0;\n    let mut y9 = 0.0;\n\
    \    let mut z9 = 0.0;\n    let mut u10 = 0.0;\n    let mut v10 = 0.0;\n    let\
    \ mut w10 = 0.0;\n    let mut x10 = 0.", "    match a + b + c {\n        0 =>\
    \ 0.0,\n        1 => 1.0,\n        _ => a * b * c / (a + b + c),\n    }", "  \
    \  if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area\
    \ = 0.0;\n    area = area + (a * b) - (c * c);\n    area = area + (a * c) - (b\
    \ * b);\n    area = area + (c * a) - (b * c);\n    area = area + (c * b) - (a\
    \ * a);\n    area = area / 2.0;\n    area = round(area, 2);\n    return area;",
  "    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n        return\
    \ -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n    let mut area\
    \ = 0.0;\n    area += a * b * 0.5;\n    area += a * c * 0.5;\n    area += b *\
    \ c * 0.5;\n    area /= 3.0;\n    area"]
stop_tokens:
- "\n}"

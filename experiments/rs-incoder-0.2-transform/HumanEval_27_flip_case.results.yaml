language: rs
name: HumanEval_27_flip_case
results:
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 42 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpsxza0ndz.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpsxza0ndz.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 42 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpsxza0ndz.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 42 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n        c @ b'a' ..\
    \ b'z' => c @ b'A' .. b'Z',\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp1xur5dj8.rs:6:31\n  |\n6 |         c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                          --   ^ expected one of 8\
    \ possible tokens\n  |                          |\n  |                       \
    \   while parsing the `match` arm starting here\n\nerror[E0277]: a value of type\
    \ `String` cannot be built from an iterator over elements of type `()`\n    -->\
    \ /tmp/tmp1xur5dj8.rs:9:8\n     |\n9    |     }).collect()\n     |        ^^^^^^^\
    \ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n  \
    \          c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp0518k_g5.rs:7:35\n  |\n7 |             c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmp0518k_g5.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n  \
    \          c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp0518k_g5.rs:7:35\n  |\n7 |             c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmp0518k_g5.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 42 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpsxza0ndz.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpsxza0ndz.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 42 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpsxza0ndz.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 42 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n  \
    \          c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp0518k_g5.rs:7:35\n  |\n7 |             c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmp0518k_g5.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 42 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpsxza0ndz.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpsxza0ndz.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 42 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpsxza0ndz.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 42 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 65 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpdmvgp1o3.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpdmvgp1o3.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 65 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpdmvgp1o3.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 65 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | ('A' as u8) as u8,\n        'A' ..\
    \ 'Z' => c as u8 | ('a' as u8) as u8,\n        _ => c,\n    }).collect()\n}\n\n\
    fn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpuafph4e_.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | ('A' as u8) as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpuafph4e_.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | ('a' as\
    \ u8) as u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpuafph4e_.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ ('A' as u8) as u8,\n  | |                       ---------------------------\
    \ this is found to be of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | ('a'\
    \ as u8) as u8,\n  | |                       --------------------------- this\
    \ is found to be of type `u8`\n8 | |         _ => c,\n  | |              ^ expected\
    \ `u8`, found `char`\n9 | |     }).collect()\n  | |_____- `match` arms have incompatible\
    \ types\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0658.\nFor more information about an error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n  \
    \          c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp0518k_g5.rs:7:35\n  |\n7 |             c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmp0518k_g5.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x21,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp3jxze8r7.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp3jxze8r7.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp3jxze8r7.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            'a' .. 'z' => c as char + 'A' as char,\n \
    \           'A' .. 'Z' => c as char + 'a' as char,\n            _ => c,\n    \
    \    })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp4ax4llum.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp4ax4llum.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp4ax4llum.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmp4ax4llum.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 42 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpsxza0ndz.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpsxza0ndz.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 42 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpsxza0ndz.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 42 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n  \
    \          c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp0518k_g5.rs:7:35\n  |\n7 |             c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmp0518k_g5.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'a' => b'A'..b'Z' as u8,\n        c @ b'A'..b'Z' =>\
    \ b'a'..b'z' as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n   \
    \ let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpz7i4wwz0.rs:7:13\n\
    \  |\n7 |         c @ b'A'..b'Z' => b'a'..b'z' as u8,\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: mismatched types\n --> /tmp/tmpz7i4wwz0.rs:6:13\n\
    \  |\n5 |     string.chars().map(|c| match c {\n  |                          \
    \        - this expression has type `char`\n6 |         c @ b'a' => b'A'..b'Z'\
    \ as u8,\n  |             ^^^^ expected `char`, found `u8`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpz7i4wwz0.rs:7:13\n  |\n5 |     string.chars().map(|c| match\
    \ c {\n  |                                  - this expression has type `char`\n\
    6 |         c @ b'a' => b'A'..b'Z' as u8,\n7 |         c @ b'A'..b'Z' => b'a'..b'z'\
    \ as u8,\n  |             ^^^^  ---- this is of type `u8`\n  |             |\n\
    \  |             expected `char`, found `u8`\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpz7i4wwz0.rs:7:19\n  |\n5 |     string.chars().map(|c| match c {\n\
    \  |                                  - this expression has type `char`\n6 | \
    \        c @ b'a' => b'A'..b'Z' as u8,\n7 |         c @ b'A'..b'Z' => b'a'..b'z'\
    \ as u8,\n  |             ----  ^^^^ expected `char`, found `u8`\n  |        \
    \     |\n  |             this is of type `u8`\n\nerror[E0308]: `match` arms have\
    \ incompatible types\n --> /tmp/tmpz7i4wwz0.rs:8:14\n  |\n5 |       string.chars().map(|c|\
    \ match c {\n  |  ____________________________-\n6 | |         c @ b'a' => b'A'..b'Z'\
    \ as u8,\n  | |                     ---------------- this is found to be of type\
    \ `std::ops::Range<u8>`\n7 | |         c @ b'A'..b'Z' => b'a'..b'z' as u8,\n \
    \ | |                           ---------------- this is found to be of type `std::ops::Range<u8>`\n\
    8 | |         _ => c,\n  | |              ^ expected struct `std::ops::Range`,\
    \ found `char`\n9 | |     }).collect()\n  | |_____- `match` arms have incompatible\
    \ types\n  |\n  = note: expected struct `std::ops::Range<u8>`\n              \
    \ found type `char`\n\nerror: aborting due to 5 previous errors\n\nSome errors"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n        c @ b'a' ..\
    \ b'z' => c @ b'A' .. b'Z',\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp1xur5dj8.rs:6:31\n  |\n6 |         c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                          --   ^ expected one of 8\
    \ possible tokens\n  |                          |\n  |                       \
    \   while parsing the `match` arm starting here\n\nerror[E0277]: a value of type\
    \ `String` cannot be built from an iterator over elements of type `()`\n    -->\
    \ /tmp/tmp1xur5dj8.rs:9:8\n     |\n9    |     }).collect()\n     |        ^^^^^^^\
    \ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 42 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpsxza0ndz.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpsxza0ndz.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 42 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpsxza0ndz.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 42 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n        c @ b'a' ..\
    \ b'z' => c @ b'A' .. b'Z',\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp1xur5dj8.rs:6:31\n  |\n6 |         c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                          --   ^ expected one of 8\
    \ possible tokens\n  |                          |\n  |                       \
    \   while parsing the `match` arm starting here\n\nerror[E0277]: a value of type\
    \ `String` cannot be built from an iterator over elements of type `()`\n    -->\
    \ /tmp/tmp1xur5dj8.rs:9:8\n     |\n9    |     }).collect()\n     |        ^^^^^^^\
    \ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' => b'a',\n            c @ b'a' =>\
    \ b'A',\n            _ => c,\n        })\n        .collect()\n}\n\nfn main() {\n\
    \    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvi8j4q66.rs:7:17\n  |\n6 |\
    \         .map(|c| match c {\n  |                        - this expression has\
    \ type `char`\n7 |             c @ b'A' => b'a',\n  |                 ^^^^ expected\
    \ `char`, found `u8`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpvi8j4q66.rs:8:17\n\
    \  |\n6 |         .map(|c| match c {\n  |                        - this expression\
    \ has type `char`\n7 |             c @ b'A' => b'a',\n8 |             c @ b'a'\
    \ => b'A',\n  |                 ^^^^ expected `char`, found `u8`\n\nerror[E0308]:\
    \ `match` arms have incompatible types\n  --> /tmp/tmpvi8j4q66.rs:9:18\n   |\n\
    6  |           .map(|c| match c {\n   |  __________________-\n7  | |         \
    \    c @ b'A' => b'a',\n   | |                         ---- this is found to be\
    \ of type `u8`\n8  | |             c @ b'a' => b'A',\n   | |                 \
    \        ---- this is found to be of type `u8`\n9  | |             _ => c,\n \
    \  | |                  ^ expected `u8`, found `char`\n10 | |         })\n   |\
    \ |_________- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            'a' .. 'z' => c as u8 | 32 as u8,\n      \
    \      'A' .. 'Z' => c as u8 | 65 as u8,\n            _ => c,\n        })\n  \
    \      .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpomxto5ia.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as u8 | 32 as u8,\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpomxto5ia.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as u8 | 65\
    \ as u8,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \  --> /tmp/tmpomxto5ia.rs:9:18\n   |\n6  |           .map(|c| match c {\n   |\
    \  __________________-\n7  | |             'a' .. 'z' => c as u8 | 32 as u8,\n\
    \   | |                           ------------------ this is found to be of type\
    \ `u8`\n8  | |             'A' .. 'Z' => c as u8 | 65 as u8,\n   | |         \
    \                  ------------------ this is found to be of type `u8`\n9  | |\
    \             _ => c,\n   | |                  ^ expected `u8`, found `char`\n\
    10 | |         })\n   | |_________- `match` arms have incompatible types\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0658.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 42 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpsxza0ndz.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpsxza0ndz.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 42 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpsxza0ndz.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 42 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n  \
    \          c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp0518k_g5.rs:7:35\n  |\n7 |             c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmp0518k_g5.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' => c @ b'a',\n        c @ b'a' => c @ b'A',\n  \
    \      _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmpa33qo9ao.rs:6:23\n  |\n6 |         c @ b'A' => c @ b'a',\n\
    \  |                  --   ^ expected one of 8 possible tokens\n  |          \
    \        |\n  |                  while parsing the `match` arm starting here\n\
    \nerror[E0277]: a value of type `String` cannot be built from an iterator over\
    \ elements of type `()`\n    --> /tmp/tmpa33qo9ao.rs:9:8\n     |\n9    |     }).collect()\n\
    \     |        ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' as b'a' => b'a' as b'A',\n      \
    \      c @ b'a' as b'A' => b'A' as b'a',\n            _ => c,\n        })\n  \
    \      .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`, found keyword\
    \ `as`\n --> /tmp/tmpis1mkn2k.rs:7:22\n  |\n7 |             c @ b'A' as b'a' =>\
    \ b'a' as b'A',\n  |                      ^^ expected one of `...`, `..=`, `..`,\
    \ `=>`, `if`, or `|`\n\nerror[E0277]: a value of type `String` cannot be built\
    \ from an iterator over elements of type `()`\n    --> /tmp/tmpis1mkn2k.rs:11:10\n\
    \     |\n11   |         .collect()\n     |          ^^^^^^^ value of type `String`\
    \ cannot be built from `std::iter::Iterator<Item=()>`\n     |\n     = help: the\
    \ trait `FromIterator<()>` is not implemented for `String`\n     = help: the following\
    \ other types implement trait `FromIterator<A>`:\n               <String as FromIterator<&'a\
    \ char>>\n               <String as FromIterator<&'a str>>\n               <String\
    \ as FromIterator<Box<str>>>\n               <String as FromIterator<Cow<'a, str>>>\n\
    \               <String as FromIterator<String>>\n               <String as FromIterator<char>>\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            'a' .. 'z' => c as u8 | 32 as u8,\n      \
    \      'A' .. 'Z' => c as u8 | 42 as u8,\n            _ => c,\n        })\n  \
    \      .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpobt8d1cx.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as u8 | 32 as u8,\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpobt8d1cx.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as u8 | 42\
    \ as u8,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \  --> /tmp/tmpobt8d1cx.rs:9:18\n   |\n6  |           .map(|c| match c {\n   |\
    \  __________________-\n7  | |             'a' .. 'z' => c as u8 | 32 as u8,\n\
    \   | |                           ------------------ this is found to be of type\
    \ `u8`\n8  | |             'A' .. 'Z' => c as u8 | 42 as u8,\n   | |         \
    \                  ------------------ this is found to be of type `u8`\n9  | |\
    \             _ => c,\n   | |                  ^ expected `u8`, found `char`\n\
    10 | |         })\n   | |_________- `match` arms have incompatible types\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0658.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n  \
    \          c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp0518k_g5.rs:7:35\n  |\n7 |             c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmp0518k_g5.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 32 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpkxtf6uqq.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpkxtf6uqq.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 32 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpkxtf6uqq.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 32 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' => b'a',\n            c @ b'a' =>\
    \ b'A',\n            _ => c,\n        })\n        .collect()\n}\n\nfn main() {\n\
    \    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvi8j4q66.rs:7:17\n  |\n6 |\
    \         .map(|c| match c {\n  |                        - this expression has\
    \ type `char`\n7 |             c @ b'A' => b'a',\n  |                 ^^^^ expected\
    \ `char`, found `u8`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpvi8j4q66.rs:8:17\n\
    \  |\n6 |         .map(|c| match c {\n  |                        - this expression\
    \ has type `char`\n7 |             c @ b'A' => b'a',\n8 |             c @ b'a'\
    \ => b'A',\n  |                 ^^^^ expected `char`, found `u8`\n\nerror[E0308]:\
    \ `match` arms have incompatible types\n  --> /tmp/tmpvi8j4q66.rs:9:18\n   |\n\
    6  |           .map(|c| match c {\n   |  __________________-\n7  | |         \
    \    c @ b'A' => b'a',\n   | |                         ---- this is found to be\
    \ of type `u8`\n8  | |             c @ b'a' => b'A',\n   | |                 \
    \        ---- this is found to be of type `u8`\n9  | |             _ => c,\n \
    \  | |                  ^ expected `u8`, found `char`\n10 | |         })\n   |\
    \ |_________- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' as b'a' => b'a' as b'A',\n        c @ b'a' as b'A'\
    \ => b'A' as b'a',\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let\
    \ candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`, found keyword\
    \ `as`\n --> /tmp/tmpyedrj7r_.rs:6:18\n  |\n6 |         c @ b'A' as b'a' => b'a'\
    \ as b'A',\n  |                  ^^ expected one of `...`, `..=`, `..`, `=>`,\
    \ `if`, or `|`\n\nerror[E0277]: a value of type `String` cannot be built from\
    \ an iterator over elements of type `()`\n    --> /tmp/tmpyedrj7r_.rs:9:8\n  \
    \   |\n9    |     }).collect()\n     |        ^^^^^^^ value of type `String` cannot\
    \ be built from `std::iter::Iterator<Item=()>`\n     |\n     = help: the trait\
    \ `FromIterator<()>` is not implemented for `String`\n     = help: the following\
    \ other types implement trait `FromIterator<A>`:\n               <String as FromIterator<&'a\
    \ char>>\n               <String as FromIterator<&'a str>>\n               <String\
    \ as FromIterator<Box<str>>>\n               <String as FromIterator<Cow<'a, str>>>\n\
    \               <String as FromIterator<String>>\n               <String as FromIterator<char>>\n\
    note: required by a bound in `collect`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' => c @ b'a',\n        c @ b'a' => c @ b'A',\n  \
    \      _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmpa33qo9ao.rs:6:23\n  |\n6 |         c @ b'A' => c @ b'a',\n\
    \  |                  --   ^ expected one of 8 possible tokens\n  |          \
    \        |\n  |                  while parsing the `match` arm starting here\n\
    \nerror[E0277]: a value of type `String` cannot be built from an iterator over\
    \ elements of type `()`\n    --> /tmp/tmpa33qo9ao.rs:9:8\n     |\n9    |     }).collect()\n\
    \     |        ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n  \
    \          c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp0518k_g5.rs:7:35\n  |\n7 |             c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmp0518k_g5.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 65 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpdmvgp1o3.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpdmvgp1o3.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 65 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpdmvgp1o3.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 65 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n  \
    \          c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmpb0_i9p4d.rs:7:35\n  |\n7 |             c @ b'a' .. b'z'\
    \ => c @ b'A' .. b'Z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmpb0_i9p4d.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n  \
    \          c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp0518k_g5.rs:7:35\n  |\n7 |             c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmp0518k_g5.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 42 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpsxza0ndz.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpsxza0ndz.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 42 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpsxza0ndz.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 42 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x21,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp3jxze8r7.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp3jxze8r7.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp3jxze8r7.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n        c @ b'a' ..\
    \ b'z' => c @ b'A' .. b'Z',\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp1xur5dj8.rs:6:31\n  |\n6 |         c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                          --   ^ expected one of 8\
    \ possible tokens\n  |                          |\n  |                       \
    \   while parsing the `match` arm starting here\n\nerror[E0277]: a value of type\
    \ `String` cannot be built from an iterator over elements of type `()`\n    -->\
    \ /tmp/tmp1xur5dj8.rs:9:8\n     |\n9    |     }).collect()\n     |        ^^^^^^^\
    \ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n  \
    \          c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp0518k_g5.rs:7:35\n  |\n7 |             c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmp0518k_g5.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 65 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpdmvgp1o3.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpdmvgp1o3.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 65 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpdmvgp1o3.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 65 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x21,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp3jxze8r7.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp3jxze8r7.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp3jxze8r7.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => b'a' .. b'z' + b'A' ..\
    \ b'Z',\n            c => c,\n        })\n        .collect::<String>()\n}\n\n\
    fn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `,`, `.`, `?`, `}`, or an operator, found `..`\n\
    \ --> /tmp/tmpeazah_qu.rs:7:53\n  |\n7 |             c @ b'A' .. b'Z' => b'a'\
    \ .. b'z' + b'A' .. b'Z',\n  |                              --               \
    \      ^^ expected one of `,`, `.`, `?`, `}`, or an operator\n  |            \
    \                  |\n  |                              while parsing the `match`\
    \ arm starting here\n\nerror[E0277]: a value of type `String` cannot be built\
    \ from an iterator over elements of type `()`\n    --> /tmp/tmpeazah_qu.rs:10:10\n\
    \     |\n10   |         .collect::<String>()\n     |          ^^^^^^^ value of\
    \ type `String` cannot be built from `std::iter::Iterator<Item=()>`\n     |\n\
    \     = help: the trait `FromIterator<()>` is not implemented for `String`\n \
    \    = help: the following other types implement trait `FromIterator<A>`:\n  \
    \             <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x21,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp3jxze8r7.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp3jxze8r7.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp3jxze8r7.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x21,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp3jxze8r7.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp3jxze8r7.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp3jxze8r7.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 101
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            'a' => { 'A' }\n            'b' => { 'B' }\n\
    \            'c' => { 'C' }\n            'd' => { 'D' }\n            'e' => {\
    \ 'E' }\n            'f' => { 'F' }\n            'g' => { 'G' }\n            'h'\
    \ => { 'H' }\n            'i' => { 'I' }\n            'j' => { 'J' }\n       \
    \     'k' => { 'K' }\n            'l' => { 'L' }\n            'm' => { 'M' }\n\
    \            'n' => { 'N' }\n            'o' => { 'O' }\n            'p' => {\
    \ 'P' }\n            'q' => { 'Q' }\n            'r' => { 'R' }\n            's'\
    \ => { 'S' }\n            't' => { 'T' }\n            'u' => { 'U' }\n       \
    \     'v' => { 'V' }\n            'w' => { 'W' }\n            'x' => { 'X' }\n\
    \            'y' => { 'Y' }\n            'z' => { 'Z' }\n            _ => c,\n\
    \        })\n        .collect::<String>()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"HELLO!\"`,\n right: `\"hELLO!\"`', /tmp/tmpdn31awzn.rs:41:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 65 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpdmvgp1o3.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpdmvgp1o3.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 65 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpdmvgp1o3.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 65 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n        c @ b'a' ..\
    \ b'z' => c @ b'A' .. b'Z',\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp1xur5dj8.rs:6:31\n  |\n6 |         c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                          --   ^ expected one of 8\
    \ possible tokens\n  |                          |\n  |                       \
    \   while parsing the `match` arm starting here\n\nerror[E0277]: a value of type\
    \ `String` cannot be built from an iterator over elements of type `()`\n    -->\
    \ /tmp/tmp1xur5dj8.rs:9:8\n     |\n9    |     }).collect()\n     |        ^^^^^^^\
    \ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 32 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpkxtf6uqq.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpkxtf6uqq.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 32 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpkxtf6uqq.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 32 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'a' => c @ b'A',\n        c @ b'A' => c @ b'a',\n  \
    \      _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmppr6qre_i.rs:6:23\n  |\n6 |         c @ b'a' => c @ b'A',\n\
    \  |                  --   ^ expected one of 8 possible tokens\n  |          \
    \        |\n  |                  while parsing the `match` arm starting here\n\
    \nerror[E0277]: a value of type `String` cannot be built from an iterator over\
    \ elements of type `()`\n    --> /tmp/tmppr6qre_i.rs:9:8\n     |\n9    |     }).collect()\n\
    \     |        ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n        c @ b'a' ..\
    \ b'z' => c @ b'A' .. b'Z',\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp1xur5dj8.rs:6:31\n  |\n6 |         c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                          --   ^ expected one of 8\
    \ possible tokens\n  |                          |\n  |                       \
    \   while parsing the `match` arm starting here\n\nerror[E0277]: a value of type\
    \ `String` cannot be built from an iterator over elements of type `()`\n    -->\
    \ /tmp/tmp1xur5dj8.rs:9:8\n     |\n9    |     }).collect()\n     |        ^^^^^^^\
    \ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 42 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpsxza0ndz.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpsxza0ndz.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 42 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpsxza0ndz.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 42 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n        c @ b'a' ..\
    \ b'z' => c @ b'A' .. b'Z',\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp1xur5dj8.rs:6:31\n  |\n6 |         c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                          --   ^ expected one of 8\
    \ possible tokens\n  |                          |\n  |                       \
    \   while parsing the `match` arm starting here\n\nerror[E0277]: a value of type\
    \ `String` cannot be built from an iterator over elements of type `()`\n    -->\
    \ /tmp/tmp1xur5dj8.rs:9:8\n     |\n9    |     }).collect()\n     |        ^^^^^^^\
    \ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n  \
    \          c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp0518k_g5.rs:7:35\n  |\n7 |             c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmp0518k_g5.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A'..='Z' => c as char + 'a' - 'A' as char,\n        'a'..='z'\
    \ => c as char + 'A' - 'a' as char,\n        _ => c,\n    }).collect()\n}\n\n\
    fn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmp4dr1cd60.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp4dr1cd60.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | ('A' as u8) as u8,\n        'A' ..\
    \ 'Z' => c as u8 | ('a' as u8) as u8,\n        _ => c,\n    }).collect()\n}\n\n\
    fn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpuafph4e_.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | ('A' as u8) as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpuafph4e_.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | ('a' as\
    \ u8) as u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpuafph4e_.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ ('A' as u8) as u8,\n  | |                       ---------------------------\
    \ this is found to be of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | ('a'\
    \ as u8) as u8,\n  | |                       --------------------------- this\
    \ is found to be of type `u8`\n8 | |         _ => c,\n  | |              ^ expected\
    \ `u8`, found `char`\n9 | |     }).collect()\n  | |_____- `match` arms have incompatible\
    \ types\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0658.\nFor more information about an error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n        c @ b'a' ..\
    \ b'z' => c @ b'A' .. b'Z',\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp1xur5dj8.rs:6:31\n  |\n6 |         c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                          --   ^ expected one of 8\
    \ possible tokens\n  |                          |\n  |                       \
    \   while parsing the `match` arm starting here\n\nerror[E0277]: a value of type\
    \ `String` cannot be built from an iterator over elements of type `()`\n    -->\
    \ /tmp/tmp1xur5dj8.rs:9:8\n     |\n9    |     }).collect()\n     |        ^^^^^^^\
    \ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n  \
    \          c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n            _ => c,\n      \
    \  })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp0518k_g5.rs:7:35\n  |\n7 |             c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                              --   ^ expected one of\
    \ 8 possible tokens\n  |                              |\n  |                 \
    \             while parsing the `match` arm starting here\n\nerror[E0277]: a value\
    \ of type `String` cannot be built from an iterator over elements of type `()`\n\
    \    --> /tmp/tmp0518k_g5.rs:11:10\n     |\n11   |         .collect()\n     |\
    \          ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x21,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp3jxze8r7.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp3jxze8r7.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp3jxze8r7.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x21,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp3jxze8r7.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp3jxze8r7.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp3jxze8r7.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'a' .. b'z' => c @ b'A' .. b'Z',\n        c @ b'A' ..\
    \ b'Z' => c @ b'a' .. b'z',\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmpwv836n26.rs:6:31\n  |\n6 |         c @ b'a' .. b'z'\
    \ => c @ b'A' .. b'Z',\n  |                          --   ^ expected one of 8\
    \ possible tokens\n  |                          |\n  |                       \
    \   while parsing the `match` arm starting here\n\nerror[E0277]: a value of type\
    \ `String` cannot be built from an iterator over elements of type `()`\n    -->\
    \ /tmp/tmpwv836n26.rs:9:8\n     |\n9    |     }).collect()\n     |        ^^^^^^^\
    \ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'A' .. 'Z' => c as u8 | 0x20,\n        'a' .. 'z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp7l9eeemu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp7l9eeemu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp7l9eeemu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as char + 'A' as char,\n        'A' .. 'Z'\
    \ => c as char + 'a' as char,\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf2xg1qpr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf2xg1qpr.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf2xg1qpr.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n        c @ b'a' ..\
    \ b'z' => c @ b'A' .. b'Z',\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp1xur5dj8.rs:6:31\n  |\n6 |         c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                          --   ^ expected one of 8\
    \ possible tokens\n  |                          |\n  |                       \
    \   while parsing the `match` arm starting here\n\nerror[E0277]: a value of type\
    \ `String` cannot be built from an iterator over elements of type `()`\n    -->\
    \ /tmp/tmp1xur5dj8.rs:9:8\n     |\n9    |     }).collect()\n     |        ^^^^^^^\
    \ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' => c @ b'a',\n        c @ b'a' => c @ b'A',\n  \
    \      _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmpa33qo9ao.rs:6:23\n  |\n6 |         c @ b'A' => c @ b'a',\n\
    \  |                  --   ^ expected one of 8 possible tokens\n  |          \
    \        |\n  |                  while parsing the `match` arm starting here\n\
    \nerror[E0277]: a value of type `String` cannot be built from an iterator over\
    \ elements of type `()`\n    --> /tmp/tmpa33qo9ao.rs:9:8\n     |\n9    |     }).collect()\n\
    \     |        ^^^^^^^ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n        c @ b'a' ..\
    \ b'z' => c @ b'A' .. b'Z',\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp1xur5dj8.rs:6:31\n  |\n6 |         c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                          --   ^ expected one of 8\
    \ possible tokens\n  |                          |\n  |                       \
    \   while parsing the `match` arm starting here\n\nerror[E0277]: a value of type\
    \ `String` cannot be built from an iterator over elements of type `()`\n    -->\
    \ /tmp/tmp1xur5dj8.rs:9:8\n     |\n9    |     }).collect()\n     |        ^^^^^^^\
    \ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' => b'a',\n        c @ b'a' => b'A',\n        _ =>\
    \ c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n   \
    \ assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo3z7f2pn.rs:6:13\n  |\n5 |\
    \     string.chars().map(|c| match c {\n  |                                  -\
    \ this expression has type `char`\n6 |         c @ b'A' => b'a',\n  |        \
    \     ^^^^ expected `char`, found `u8`\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpo3z7f2pn.rs:7:13\n  |\n5 |     string.chars().map(|c| match c {\n  |\
    \                                  - this expression has type `char`\n6 |    \
    \     c @ b'A' => b'a',\n7 |         c @ b'a' => b'A',\n  |             ^^^^ expected\
    \ `char`, found `u8`\n\nerror[E0308]: `match` arms have incompatible types\n -->\
    \ /tmp/tmpo3z7f2pn.rs:8:14\n  |\n5 |       string.chars().map(|c| match c {\n\
    \  |  ____________________________-\n6 | |         c @ b'A' => b'a',\n  | |  \
    \                   ---- this is found to be of type `u8`\n7 | |         c @ b'a'\
    \ => b'A',\n  | |                     ---- this is found to be of type `u8`\n\
    8 | |         _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |\
    \     }).collect()\n  | |_____- `match` arms have incompatible types\n\nerror:\
    \ aborting due to 3 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c if c.is_lowercase() => c.to_uppercase(),\n        c if\
    \ c.is_uppercase() => c.to_lowercase(),\n        _ => c,\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmppghp4gzc.rs:7:34\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         c if c.is_lowercase() => c.to_uppercase(),\n  | |              \
    \                    ---------------- this is found to be of type `ToUppercase`\n\
    7 | |         c if c.is_uppercase() => c.to_lowercase(),\n  | |              \
    \                    ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`, found struct\
    \ `ToLowercase`\n8 | |         _ => c,\n9 | |     }).collect()\n  | |_____- `match`\
    \ arms have incompatible types\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 0x20,\n        'A' .. 'Z' => c as\
    \ u8 | 0x20,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu7udtddk.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu7udtddk.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu7udtddk.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        c @ b'A' .. b'Z' => c @ b'a' .. b'z',\n        c @ b'a' ..\
    \ b'z' => c @ b'A' .. b'Z',\n        _ => c,\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, `}`, or an operator,\
    \ found `@`\n --> /tmp/tmp1xur5dj8.rs:6:31\n  |\n6 |         c @ b'A' .. b'Z'\
    \ => c @ b'a' .. b'z',\n  |                          --   ^ expected one of 8\
    \ possible tokens\n  |                          |\n  |                       \
    \   while parsing the `match` arm starting here\n\nerror[E0277]: a value of type\
    \ `String` cannot be built from an iterator over elements of type `()`\n    -->\
    \ /tmp/tmp1xur5dj8.rs:9:8\n     |\n9    |     }).collect()\n     |        ^^^^^^^\
    \ value of type `String` cannot be built from `std::iter::Iterator<Item=()>`\n\
    \     |\n     = help: the trait `FromIterator<()>` is not implemented for `String`\n\
    \     = help: the following other types implement trait `FromIterator<A>`:\n \
    \              <String as FromIterator<&'a char>>\n               <String as FromIterator<&'a\
    \ str>>\n               <String as FromIterator<Box<str>>>\n               <String\
    \ as FromIterator<Cow<'a, str>>>\n               <String as FromIterator<String>>\n\
    \               <String as FromIterator<char>>\nnote: required by a bound in `collect`\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c if c.is_lowercase() => c.to_uppercase(),\n\
    \            c if c.is_uppercase() => c.to_lowercase(),\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpwkb9rm0q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | ('A' as u8) as u8,\n        'A' ..\
    \ 'Z' => c as u8 | ('a' as u8) as u8,\n        _ => c,\n    }).collect()\n}\n\n\
    fn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpuafph4e_.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | ('A' as u8) as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpuafph4e_.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | ('a' as\
    \ u8) as u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpuafph4e_.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ ('A' as u8) as u8,\n  | |                       ---------------------------\
    \ this is found to be of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | ('a'\
    \ as u8) as u8,\n  | |                       --------------------------- this\
    \ is found to be of type `u8`\n8 | |         _ => c,\n  | |              ^ expected\
    \ `u8`, found `char`\n9 | |     }).collect()\n  | |_____- `match` arms have incompatible\
    \ types\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0658.\nFor more information about an error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 42 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpsxza0ndz.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpsxza0ndz.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 42 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpsxza0ndz.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 42 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars().map(|c|\
    \ match c {\n        'a' .. 'z' => c as u8 | 32 as u8,\n        'A' .. 'Z' =>\
    \ c as u8 | 32 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpkxtf6uqq.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpkxtf6uqq.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 32 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpkxtf6uqq.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 32 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010173
- exit_code: 1
  program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(String::from(\"Hello\"))\n/// String::from(\"\
    hELLO\")\nfn flip_case(string: String) -> String {\n    string.chars()\n     \
    \   .map(|c| match c {\n            c @ b'A' => b'Z',\n            c @ b'a' =>\
    \ b'z',\n            _ => c,\n        })\n        .collect()\n}\n\nfn main() {\n\
    \    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpccfs1ov3.rs:7:17\n  |\n6 |\
    \         .map(|c| match c {\n  |                        - this expression has\
    \ type `char`\n7 |             c @ b'A' => b'Z',\n  |                 ^^^^ expected\
    \ `char`, found `u8`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpccfs1ov3.rs:8:17\n\
    \  |\n6 |         .map(|c| match c {\n  |                        - this expression\
    \ has type `char`\n7 |             c @ b'A' => b'Z',\n8 |             c @ b'a'\
    \ => b'z',\n  |                 ^^^^ expected `char`, found `u8`\n\nerror[E0308]:\
    \ `match` arms have incompatible types\n  --> /tmp/tmpccfs1ov3.rs:9:18\n   |\n\
    6  |           .map(|c| match c {\n   |  __________________-\n7  | |         \
    \    c @ b'A' => b'Z',\n   | |                         ---- this is found to be\
    \ of type `u8`\n8  | |             c @ b'a' => b'z',\n   | |                 \
    \        ---- this is found to be of type `u8`\n9  | |             _ => c,\n \
    \  | |                  ^ expected `u8`, found `char`\n10 | |         })\n   |\
    \ |_________- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660010173

name: HumanEval_81_numerical_letter_grade
language: rs
prompt: "/// It is the last week of the semester and the teacher has to give the grades\n\
  /// to students. The teacher has been making her own algorithm for grading.\n///\
  \ The only problem is, she has lost the code she used for grading.\n/// She has\
  \ given you a list of GPAs for some students and you have to write \n/// a function\
  \ that can output a list of letter grades using the following table:\n/// GPA  \
  \     |    Letter grade\n/// 4.0                A+\n/// > 3.7                A \n\
  /// > 3.3                A- \n/// > 3.0                B+\n/// > 2.7           \
  \     B \n/// > 2.3                B-\n/// > 2.0                C+\n/// > 1.7  \
  \              C\n/// > 1.3                C-\n/// > 1.0                D+ \n///\
  \ > 0.7                D \n/// > 0.0                D-\n/// 0.0                E\n\
  /// Example:\n/// >>> grade_equation(vec![4.0, 3, 1.7, 2, 3.5])\n/// vec![String::from(\"\
  A+\"), String::from(\"B\"), String::from(\"C-\"), String::from(\"C\"), String::from(\"\
  A-\")]\nfn numerical_letter_grade(grades: Vec<f64>) -> Vec<String> {\n"
tests: "}\n\nfn main() {\n    let candidate = numerical_letter_grade;\n    assert_eq!(candidate(vec![4.0,\
  \ 3.0, 1.7, 2.0, 3.5]), vec![String::from(\"A+\"), String::from(\"B\"), String::from(\"\
  C-\"), String::from(\"C\"), String::from(\"A-\")]);\n    assert_eq!(candidate(vec![1.2]),\
  \ vec![String::from(\"D+\")]);\n    assert_eq!(candidate(vec![0.5]), vec![String::from(\"\
  D-\")]);\n    assert_eq!(candidate(vec![0.0]), vec![String::from(\"E\")]);\n   \
  \ assert_eq!(candidate(vec![1.0, 0.3, 1.5, 2.8, 3.3]), vec![String::from(\"D\"),\
  \ String::from(\"D-\"), String::from(\"C-\"), String::from(\"B\"), String::from(\"\
  B+\")]);\n    assert_eq!(candidate(vec![0.0, 0.7]), vec![String::from(\"E\"), String::from(\"\
  D-\")]);\n}\n"
completions: ["    let mut grades_sorted = grades.clone();\n    grades_sorted.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_sorted[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_sorted\
    \ {\n        if grade < current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        }\n        if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        }\n        if grade > current_grade {\n   \
    \         current_letter_grade += String::from(\"-\");\n        }\n    }\n   \
    \ letter_grades.push(current_letter_grade);\n    letter_grades", "    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades.first();\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    for grade in grades.iter().skip(1)\
    \ {\n        if grade > current_grade {\n            current_letter_grade = String::from(\"\
    E\");\n            current_grade = grade;\n        }\n        if grade < current_grade\
    \ {\n            current_letter_grade = String::from(\"D-\");\n            current_grade\
    \ = grade;\n        }\n        if grade == current_grade {\n            current_letter_grade\
    \ = String::from(\"D+\");\n            current_grade = grade;\n        }\n   \
    \     letter_grades.push(current_letter_grade);\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_iter = grades.iter();\n    let mut letter_grades\
    \ = Vec::new();\n    let mut current_grade = grades_iter.next();\n    let mut\
    \ current_letter = String::from(\"E\");\n    while let Some(grade) = current_grade\
    \ {\n        if grade > 3.0 {\n            current_letter = String::from(\"D+\"\
    );\n        } else if grade > 2.0 {\n            current_letter = String::from(\"\
    D\");\n        } else if grade > 1.0 {\n            current_letter = String::from(\"\
    C+\");\n        } else if grade > 0.7 {\n            current_letter = String::from(\"\
    C\");\n        } else if grade > 0.3 {\n            current_letter = String::from(\"\
    B-\");\n        } else if grade > 0.1 {\n            current_letter = String::from(\"\
    B\");\n        } else if grade > 0.0 {\n            current_letter = String::from(\"\
    A-\");\n        } else if grade > -0.1 {\n            current_letter = String::from(\"\
    A\");\n        } else if grade > -0.3 {\n            current_letter = String::from(\"\
    A-\");\n        } else if grade > -0.7 {\n            current_letter = String::from(\"\
    A\");\n        } else if grade > -1.0 {\n            current_letter = String::from(\"\
    A+\");\n        } else {\n            current_letter = String::from(\"A\");\n\
    \        }\n        letter_grades.push(current_letter);\n        current_grade\
    \ = grades_iter.next();\n    }\n    letter_grades", "    let mut grades_sorted\
    \ = grades.clone();\n    grades_sorted.sort();\n    let mut grades_reversed =\
    \ grades_sorted.clone();\n    grades_reversed.reverse();\n    let mut grades_sum:\
    \ f64 = grades_sorted.iter().sum();\n    let mut grades_average: f64 = grades_sum\
    \ / grades_sorted.len();\n    let mut grades_letter_grade: Vec<String> = vec![];\n\
    \    for grade in grades_sorted {\n        let mut letter_grade: String = \"\"\
    ;\n        if grade >= grades_average {\n            letter_grade = String::from(\"\
    A+\");\n        } else if grade >= grades_average - 0.3 {\n            letter_grade\
    \ = String::from(\"A-\");\n        } else if grade >= grades_average - 0.2 {\n\
    \            letter_grade = String::from(\"B+\");\n        } else if grade >=\
    \ grades_average - 0.1 {\n            letter_grade = String::from(\"B\");\n  \
    \      } else if grade >= grades_average - 0.05 {\n            letter_grade =\
    \ String::from(\"B-\");\n        } else if grade >= grades_average - 0.01 {\n\
    \            letter_grade = String::from(\"C+\");\n        } else if grade >=\
    \ grades_average - 0.005 {\n            letter_grade = String::from(\"C\");\n\
    \        } else if grade >= grades_average - 0.001 {\n            letter_grade\
    \ = String::from(\"C-\");\n        } else if grade >= grades_average - 0.0005\
    \ {\n            letter_grade = String::from(\"D+\");\n        } else if grade\
    \ >= grades_average - 0.0001 {\n            letter_grade = String::from(\"D\"\
    );\n        } else if grade >= grades_average - 0.00005 {\n            letter_grade\
    \ = String::from(\"D-\");\n        } else {\n            letter_grade = String::from(\"\
    E\");\n        }\n        grades_letter_grade.push(letter_grade);\n        grades_sum\
    \ += grade;\n        grades_average += grade;\n    }\n    grades_letter_grade.reverse();\n\
    \    grades_letter_grade", "    let mut grades_copy = grades.clone();\n    grades_copy.sort_unstable();\n\
    \    let mut grades_sorted = grades_copy.clone();\n    grades_sorted.reverse();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_sorted[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_sorted\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut max_grade\
    \ = grades.iter().max().unwrap();\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut current_grade = max_grade;\n    let mut current_letter_grade = String::from(\"\
    E\");\n    for grade in grades {\n        if grade > current_grade {\n       \
    \     current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ = String::from(current_letter_grade + \"+\");\n        } else if grade < current_grade\
    \ {\n            current_letter_grade = String::from(current_letter_grade + \"\
    -\");\n        } else {\n            current_letter_grade = String::from(current_letter_grade\
    \ + \"=\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter = String::from(\"E\");\n    let mut current_gp = 0;\n\
    \    let mut current_gpa = 0;\n    for grade in grades_copy {\n        if grade\
    \ > current_gpa {\n            current_gpa = grade;\n            current_letter\
    \ = String::from(\"E\");\n        }\n        if grade < current_gp {\n       \
    \     current_gp = grade;\n            current_letter = String::from(\"E\");\n\
    \        }\n        if grade == current_gp {\n            current_letter = String::from(\n\
    \                match current_grade {\n                    4.0 => \"A+\",\n \
    \                   3.7 => \"A\",\n                    3.3 => \"A-\",\n      \
    \              3.0 => \"B+\",\n                    2.7 => \"B\",\n           \
    \         2.3 => \"B-\",\n                    2.0 => \"C+\",\n               \
    \     1.7 => \"C\",\n                    1.3 => \"C-\",\n                    1.0\
    \ => \"D+\",\n                    0.7 => \"D\",\n                    0.0 => \"\
    D-\",\n                    _ => \"E\",\n                },\n            );\n \
    \       }\n        letter_grades.push(current_letter);\n        current_grade\
    \ = grade;\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        let mut letter_grade = String::new();\n  \
    \      if grade >= 4.0 {\n            letter_grade += String::from(\"A+\");\n\
    \        } else if grade > 3.7 {\n            letter_grade += String::from(\"\
    A\");\n        } else if grade > 3.3 {\n            letter_grade += String::from(\"\
    A-\");\n        } else if grade > 3.0 {\n            letter_grade += String::from(\"\
    B+\");\n        } else if grade > 2.7 {\n            letter_grade += String::from(\"\
    B\");\n        } else if grade > 2.3 {\n            letter_grade += String::from(\"\
    B-\");\n        } else if grade > 2.0 {\n            letter_grade += String::from(\"\
    C+\");\n        } else if grade > 1.7 {\n            letter_grade += String::from(\"\
    C\");\n        } else if grade > 1.3 {\n            letter_grade += String::from(\"\
    C-\");\n        } else if grade > 1.0 {\n            letter_grade += String::from(\"\
    D+\");\n        } else if grade > 0.7 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade > 0.0 {\n            letter_grade += String::from(\"\
    D-\");\n        } else {\n            letter_grade += String::from(\"E\");\n \
    \       }\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::from(\"\");\n        if grade < 3.0 {\n            letter_grade\
    \ += \"A+\";\n        } else if grade < 3.3 {\n            letter_grade += \"\
    A-\";\n        } else if grade < 3.7 {\n            letter_grade += \"B+\";\n\
    \        } else if grade < 4.0 {\n            letter_grade += \"B\";\n       \
    \ } else if grade < 4.3 {\n            letter_grade += \"B-\";\n        } else\
    \ if grade < 4.7 {\n            letter_grade += \"C+\";\n        } else if grade\
    \ < 5.0 {\n            letter_grade += \"C\";\n        } else if grade < 5.3 {\n\
    \            letter_grade += \"C-\";\n        } else if grade < 5.7 {\n      \
    \      letter_grade += \"D+\";\n        } else if grade < 6.0 {\n            letter_grade\
    \ += \"D\";\n        } else if grade < 6.3 {\n            letter_grade += \"D-\"\
    ;\n        } else if grade < 6.7 {\n            letter_grade += \"E\";\n     \
    \   } else {\n            letter_grade += \"F\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n \
    \   let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            current_letter_grade = String::from(\"\
    E\");\n            current_grade = grade;\n        } else if grade == current_grade\
    \ {\n            current_letter_grade = String::from(current_letter_grade + \"\
    +\");\n        } else {\n            current_letter_grade = String::from(current_letter_grade\
    \ + \"-\");\n            current_grade = grade;\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut grades_sum: f64 = grades.iter().sum();\n\
    \    let mut grades_count: usize = 0;\n    let mut grades_average: f64 = grades_sum\
    \ / grades_count;\n    let mut grades_max_index: usize = 0;\n    let mut grades_max_value:\
    \ f64 = grades_copy[0];\n    for grade in grades_copy {\n        if grade > grades_max_value\
    \ {\n            grades_max_value = grade;\n            grades_max_index = grades_count;\n\
    \        }\n        grades_count += 1;\n        grades_sum += grade;\n    }\n\
    \    for grade in grades_copy {\n        if grade == grades_max_value {\n    \
    \        letter_grades.push(String::from(\n                format!(\"{}+\", grade\
    \ / grades_average)\n            ));\n        } else {\n            letter_grades.push(String::from(\n\
    \                format!(\"{}\", grade / grades_average)\n            ));\n  \
    \      }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n  \
    \  for grade in grades {\n        let mut letter_grade = String::new();\n    \
    \    if grade > 3.0 {\n            letter_grade += \"A\";\n        } else if grade\
    \ > 2.7 {\n            letter_grade += \"B\";\n        } else if grade > 2.3 {\n\
    \            letter_grade += \"B-\";\n        } else if grade > 1.3 {\n      \
    \      letter_grade += \"C\";\n        } else if grade > 1.0 {\n            letter_grade\
    \ += \"C+\";\n        } else if grade > 0.7 {\n            letter_grade += \"\
    D\";\n        } else if grade > 0.3 {\n            letter_grade += \"D-\";\n \
    \       } else if grade > 0.0 {\n            letter_grade += \"D\";\n        }\
    \ else {\n            letter_grade += \"E\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ gpa = grades.iter().sum();\n    let mut min_gpa = grades.iter().min().unwrap();\n\
    \    let mut max_gpa = grades.iter().max().unwrap();\n    let mut gpa_diff = max_gpa\
    \ - min_gpa;\n    let mut gpa_diff_percent = max_gpa - min_gpa;\n    let mut gpa_percent\
    \ = max_gpa - min_gpa;\n    let mut gpa_percent = max_gpa - min_gpa;\n    let\
    \ mut gpa_percent = max_gpa - min_gpa;\n    let mut gpa_percent = max_gpa - min_gpa;\n\
    \    let mut gpa_percent = max_gpa - min_gpa;\n    let mut gpa_percent = max_gpa\
    \ - min_gpa;\n    let mut gpa_percent = max_gpa - min_gpa;\n    let mut gpa_percent\
    \ = max_gpa - min_gpa;\n    let mut gpa_percent = max_gpa - min_gpa;\n    let\
    \ mut gpa_percent = max_gpa - min_gpa;\n    let mut gpa_percent = max_gpa - min_gpa;\n\
    \    let mut gpa_percent = max_gpa - min_gpa;\n    let mut gpa_percent = max_gpa\
    \ - min_gpa;\n    let mut gpa_percent = max_gpa - min_gpa;\n    let mut gpa_percent\
    \ = max_gpa - min_gpa;\n    let mut gpa_percent = max_gpa - min_gpa;\n    let\
    \ mut gpa_percent = max_gpa - min_gpa;\n    let mut gpa_percent = max_gpa - min_gpa;\n\
    \    let mut gpa_percent = max_gpa - min_gpa;\n    let mut gpa_percent = max_gpa\
    \ - min_gpa;\n    let mut gpa_percent = max_gpa - min_gpa;\n    let mut gpa_percent\
    \ = max_gpa - min_gpa;\n    let mut gpa_percent = max_gpa - min_gpa;\n    let\
    \ mut gpa_percent = max_gpa - min_gpa;\n    let mut gpa_percent = max_gpa - min_gpa;\n\
    \    let mut gpa_percent = max_gpa - min_gpa;\n    let mut gpa_percent = max_gpa\
    \ - min_gpa;\n    let mut gpa_percent = max_gpa - min_gpa;\n    let mut gpa_percent\
    \ = ", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n \
    \   let mut grades_length = grades_copy.len();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    let mut current_index = grades_length - 1;\n   \
    \ while current_index < grades_length {\n        if current_grade > grades_copy[current_index]\
    \ {\n            grades_copy[current_index] -= current_grade;\n            current_letter_grade\
    \ = String::from(\"D\");\n            current_index -= 1;\n        } else if current_grade\
    \ == grades_copy[current_index] {\n            current_letter_grade = String::from(\"\
    D\");\n            current_index -= 1;\n        } else {\n            grades_copy[current_index]\
    \ -= current_grade;\n            current_letter_grade = String::from(\"C\");\n\
    \            current_index -= 1;\n        }\n        letter_grades.push(current_letter_grade);\n\
    \        current_grade = grades_copy[current_index];\n    }\n    letter_grades.push(String::from(\"\
    E\"));\n    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n \
    \   for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.0 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 0.7 { \n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 0.3 { \n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 { \n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 { \n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 { \n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 { \n            grades_vec.push(String::from(\"\
    D-\"));\n        } else if grade > 0.0 { \n            grades_vec.push(String::from(\"\
    E\"));\n        } else {\n            grades_vec.push(String::from(\"A\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut grades_len = grades.len();\n    let mut grades_sum: f64 = 0.0;\n\
    \    let mut grades_average: f64 = 0.0;\n    let mut grades_min_average: f64 =\
    \ 0.0;\n    let mut grades_max_average: f64 = 0.0;\n    let mut grades_min_grade:\
    \ f64 = 0.0;\n    let mut grades_max_grade: f64 = 0.0;\n    let mut grades_min_grade_index:\
    \ usize = 0;\n    let mut grades_max_grade_index: usize = 0;\n    let mut grades_min_grade_index2:\
    \ usize = 0;\n    let mut grades_max_grade_index2: usize = 0;\n    let mut grades_min_grade_index3:\
    \ usize = 0;\n    let mut grades_max_grade_index3: usize = 0;\n    let mut grades_min_grade_index4:\
    \ usize = 0;\n    let mut grades_max_grade_index4: usize = 0;\n    let mut grades_min_grade_index5:\
    \ usize = 0;\n    let mut grades_max_grade_index5: usize = 0;\n    let mut grades_min_grade_index6:\
    \ usize = 0;\n    let mut grades_max_grade_index6: usize = 0;\n    let mut grades_min_grade_index7:\
    \ usize = 0;\n    let mut grades_max_grade_index7: usize = 0;\n    let mut grades_min_grade_index8:\
    \ usize = 0;\n    let mut grades_max_grade_index8: usize = 0;\n    let mut grades_min_grade_index9:\
    \ usize = 0;\n    let mut grades_max_grade_index9: usize = 0;\n    let mut grades_min_grade_index10:\
    \ usize = 0;\n    let mut grades_max_grade_index10: usize = 0;\n    let mut grades_min_grade_index11:\
    \ usize = 0;\n    let mut grades_max_grade_index11: usize = 0;\n    let mut grades_min_grade_index12:\
    \ usize = 0;\n    let mut grades_max_grade_index12: usize = 0;\n    let mut grades_min_grade_index13:\
    \ usize = 0;\n    let mut grades_max_grade_index13: usize = 0;\n    let mut grades_min_grade_index14:\
    \ usize = 0;\n    let mut grades_max_grade_index14: usize = 0;\n    let mut grades_min_grade_index15:\
    \ usize = 0;\n    let mut grades_max_grade_index15: usize = 0;\n    let mut grades_",
  "    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n", "    let mut grades_string = vec![];\n    for grade in grades {\n\
    \        if grade > 3.0 {\n            grades_string.push(String::from(\"B+\"\
    ));\n        } else if grade > 2.7 {\n            grades_string.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_string.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            grades_string.push(String::from(\"\
    C+\"));\n        } else if grade > 0.7 {\n            grades_string.push(String::from(\"\
    C\"));\n        } else if grade > 0.3 {\n            grades_string.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 {\n            grades_string.push(String::from(\"\
    D+\"));\n        } else if grade > -0.3 {\n            grades_string.push(String::from(\"\
    D\"));\n        } else if grade > -0.7 {\n            grades_string.push(String::from(\"\
    D-\"));\n        } else {\n            grades_string.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_string", "    let mut letter_grades = vec![];\n\
    \    let mut max_grade = grades.iter().max().unwrap();\n    let mut min_grade\
    \ = grades.iter().min().unwrap();\n    for grade in grades {\n        if grade\
    \ > max_grade {\n            max_grade = grade;\n        }\n        if grade <\
    \ min_grade {\n            min_grade = grade;\n        }\n    }\n    for grade\
    \ in grades {\n        let grade = grade - min_grade;\n        if grade >= 4.0\
    \ {\n            letter_grades.push(String::from(\"A+\"));\n        }\n      \
    \  if grade > 3.7 {\n            letter_grades.push(String::from(\"A\"));\n  \
    \      }\n        if grade > 3.3 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        }\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        }\n        if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        }\n        if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        }\n        if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        }\n        if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        }\n        if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        }\n        if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        }\n        if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        }\n        if grade == 0.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        }\n    }\n    letter_grades", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n", "    let mut letter_grades\
    \ = vec![];\n    for grade in grades {\n        let mut letter_grade = String::new();\n\
    \        if grade < 3.0 {\n            letter_grade += String::from(\"A+\");\n\
    \        } else if grade < 3.3 {\n            letter_grade += String::from(\"\
    A\");\n        } else if grade < 3.7 {\n            letter_grade += String::from(\"\
    A-\");\n        } else if grade < 4.0 {\n            letter_grade += String::from(\"\
    B+\");\n        } else if grade < 4.3 {\n            letter_grade += String::from(\"\
    B\");\n        } else if grade < 4.7 {\n            letter_grade += String::from(\"\
    B-\");\n        } else if grade < 5.0 {\n            letter_grade += String::from(\"\
    C+\");\n        } else if grade < 5.3 {\n            letter_grade += String::from(\"\
    C\");\n        } else if grade < 5.7 {\n            letter_grade += String::from(\"\
    C-\");\n        } else if grade < 6.0 {\n            letter_grade += String::from(\"\
    D+\");\n        } else if grade < 6.3 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade < 6.7 {\n            letter_grade += String::from(\"\
    D-\");\n        } else if grade < 7.0 {\n            letter_grade += String::from(\"\
    E\");\n        } else {\n            letter_grade += String::from(\"F\");\n  \
    \      }\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut grades_iter = grades.iter();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_iter.next().unwrap();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    let mut current_gp = 0;\n    while let Some(grade)\
    \ = grades_iter.next() {\n        current_gp += grade;\n        if current_gp\
    \ >= 3.0 {\n            current_letter_grade = current_letter_grade.chars().next().unwrap();\n\
    \            current_gp = 0;\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades.push(current_letter_grade);\n    letter_grades", " \
    \   let mut grades_string = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            grades_string.push(\"B+\");\n        } else if grade >\
    \ 2.7 {\n            grades_string.push(\"B\");\n        } else if grade > 2.3\
    \ {\n            grades_string.push(\"B-\");\n        } else if grade > 2.0 {\n\
    \            grades_string.push(\"C+\");\n        } else if grade > 1.7 {\n  \
    \          grades_string.push(\"C\");\n        } else if grade > 1.3 {\n     \
    \       grades_string.push(\"C-\");\n        } else if grade > 1.0 {\n       \
    \     grades_string.push(\"D+\");\n        } else if grade > 0.7 {\n         \
    \   grades_string.push(\"D\");\n        } else if grade > 0.0 {\n            grades_string.push(\"\
    D-\");\n        } else {\n            grades_string.push(\"E\");\n        }\n\
    \    }\n    grades_string", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_sorted = grades.iter().cloned().collect::<Vec<_>>();\n\
    \    grades_sorted.sort_unstable();\n    let mut grades_sorted_iter = grades_sorted.iter();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_sorted_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_sorted_iter\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else {\n            current_letter_grade = current_letter_grade.chars().next().unwrap().to_string();\n\
    \        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_sorted = grades.iter().cloned().collect::<Vec<f64>>();\n\
    \    grades_sorted.sort_unstable();\n    let mut grades_reversed = grades_sorted.rev();\n\
    \    let mut grades_reversed_iter = grades_reversed.iter().cloned().collect::<Vec<f64>>();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().rev();\n\
    \    let mut grades_reversed_iter = grades_reversed_iter.into_iter().", "    let\
    \ mut grades_copy = grades.clone();\n    let mut grades_sorted = grades_copy.clone();\n\
    \    grades_sorted.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_sorted[0];\n    let mut current_grade_index = 0;\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    let mut current_letter_grade_index = 0;\n    while\
    \ current_grade > 0.0 {\n        if current_grade > grades_sorted[current_grade_index\
    \ + 1] {\n            current_grade = grades_sorted[current_grade_index];\n  \
    \          current_grade_index += 1;\n        } else {\n            current_grade\
    \ = grades_sorted[current_grade_index];\n            current_grade_index += 1;\n\
    \        }\n        if current_grade_index == grades_sorted.len() {\n        \
    \    letter_grades.push(current_letter_grade);\n            current_letter_grade\
    \ = String::from(\"E\");\n            current_letter_grade_index = 0;\n      \
    \  } else {\n            current_letter_grade = String::from(\n              \
    \  &grades_sorted[current_grade_index]\n                    .to_string()[current_letter_grade_index..]\n\
    \                    .to_string()\n            );\n            current_letter_grade_index\
    \ += 1;\n        }\n    }\n    letter_grades.push(current_letter_grade);\n   \
    \ letter_grades", "    let mut grades_copy = grades.clone();\n    let mut grades_len\
    \ = grades_copy.len();\n    let mut grades_sum: f64 = grades_copy[0];\n    let\
    \ mut grades_min_value: f64 = grades_copy[0];\n    let mut grades_max_value: f64\
    \ = grades_copy[0];\n    let mut grades_min_idx = 0;\n    let mut grades_max_idx\
    \ = 0;\n    let mut grades_min_idx2 = 0;\n    let mut grades_max_idx2 = 0;\n \
    \   let mut grades_min_idx3 = 0;\n    let mut grades_max_idx3 = 0;\n    let mut\
    \ grades_min_idx4 = 0;\n    let mut grades_max_idx4 = 0;\n    let mut grades_min_idx5\
    \ = 0;\n    let mut grades_max_idx5 = 0;\n    let mut grades_min_idx6 = 0;\n \
    \   let mut grades_max_idx6 = 0;\n    let mut grades_min_idx7 = 0;\n    let mut\
    \ grades_max_idx7 = 0;\n    let mut grades_min_idx8 = 0;\n    let mut grades_max_idx8\
    \ = 0;\n    let mut grades_min_idx9 = 0;\n    let mut grades_max_idx9 = 0;\n \
    \   let mut grades_min_idx10 = 0;\n    let mut grades_max_idx10 = 0;\n    let\
    \ mut grades_min_idx11 = 0;\n    let mut grades_max_idx11 = 0;\n    let mut grades_min_idx12\
    \ = 0;\n    let mut grades_max_idx12 = 0;\n    let mut grades_min_idx13 = 0;\n\
    \    let mut grades_max_idx13 = 0;\n    let mut grades_min_idx14 = 0;\n    let\
    \ mut grades_max_idx14 = 0;\n    let mut grades_min_idx15 = 0;\n    let mut grades_max_idx15\
    \ = 0;\n    let mut grades_min_idx16 = 0;\n    let mut grades_max_idx16 = 0;\n\
    \    let mut grades_min_idx17 = 0;\n    let mut grades_max_idx17 = 0;\n    let\
    \ mut grades_min_idx18 = 0;\n    let mut grades_max_idx18 = 0;\n    let mut grades_min_idx19\
    \ = 0;\n    let mut grades_max_idx19 = 0;\n    let mut grades_min_idx20 = 0;\n\
    \    let mut grades_max_idx20 = 0;\n    let mut grades_min_idx21 = 0;\n    let\
    \ mut grades_max_idx21 = 0;\n    let mut grades_min_idx22 = 0;\n    let mut grades_max_idx22\
    \ = 0;\n    let mut grades_min_idx23 = 0;\n    let mut grades_", "    let mut\
    \ grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n    let\
    \ mut current_grade = grades_copy[0];\n    let mut current_letter_grade = String::from(\"\
    E\");\n    for grade in grades_copy {\n        if grade > current_grade {\n  \
    \          letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else {\n            current_letter_grade += String::from(\"-\"\
    );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut grades_len = grades.len();\n\
    \    let mut letter_grades = vec![];\n    while grades_len > 0 {\n        let\
    \ mut grade = grades_copy.pop().unwrap();\n        let mut letter_grade = String::from(\"\
    E\");\n        if grade > 3.0 {\n            letter_grade = String::from(\"D-\"\
    );\n        } else if grade > 2.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 1.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.7 && grade < 1.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.3 && grade < 0.7 {\n  \
    \          letter_grade = String::from(\"B-\");\n        } else if grade > 0.0\
    \ && grade < 0.3 {\n            letter_grade = String::from(\"B-\");\n       \
    \ } else if grade > 0.0 && grade < 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -1.0 && grade < 0.3 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > -1.0 && grade < 0.0 {\n \
    \           letter_grade = String::from(\"B-\");\n        } else if grade > -2.0\
    \ && grade < 0.3 {\n            letter_grade = String::from(\"B-\");\n       \
    \ } else if grade > -2.0 && grade < 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -3.0 && grade < 0.3 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > -3.0 && grade < 0.0 {\n \
    \           letter_grade = String::from(\"B-\");\n        } else if grade > -4.0\
    \ && grade < 0.3 {\n            letter_grade = String::from(\"B-\");\n       \
    \ } else if grade > -4.0 && grade < 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -5.0 && grade < 0.3 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > -5.0 && grade < 0.0 {\n \
    \           letter_grade = String::from(\"B-\");\n        } else if grade > -6.0\
    \ && grade < 0.3 {\n            letter_grade = String::from(\"B-\");\n       \
    \ } else if grade > -6.0 && grade < 0.0 ", "    let mut grades_iter = grades.iter();\n\
    \    let mut letter_grades = vec![];\n    let mut grade = grades_iter.next();\n\
    \    while grade != Some(0.0) {\n        let mut letter_grade = String::from(\"\
    E\");\n        if grade < 3.0 {\n            letter_grade = String::from(\"D-\"\
    );\n        } else if grade < 3.3 {\n            letter_grade = String::from(\"\
    C-\");\n        } else if grade < 3.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 4.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 4.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 4.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 5.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 5.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 5.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 6.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 6.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 6.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 7.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 7.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 7.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 8.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 8.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 8.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 9.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 9.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 9.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 10.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 10.3 {\n            letter_grade = ", "    let\
    \ mut grades_string = grades.iter().map(|x| x.to_string()).collect();\n    grades_string.sort();\n\
    \    let mut grades_string = grades_string.iter().cloned().collect();\n    let\
    \ mut grades_string = grades_string.iter().cloned().collect();\n    let mut grades_string\
    \ = grades_string.iter().cloned().collect();\n    let mut grades_string = grades_string.iter().cloned().collect();\n\
    \    let mut grades_string = grades_string.iter().cloned().collect();\n    let\
    \ mut grades_string = grades_string.iter().cloned().collect();\n    let mut grades_string\
    \ = grades_string.iter().cloned().collect();\n    let mut grades_string = grades_string.iter().cloned().collect();\n\
    \    let mut grades_string = grades_string.iter().cloned().collect();\n    let\
    \ mut grades_string = grades_string.iter().cloned().collect();\n    let mut grades_string\
    \ = grades_string.iter().cloned().collect();\n    let mut grades_string = grades_string.iter().cloned().collect();\n\
    \    let mut grades_string = grades_string.iter().cloned().collect();\n    let\
    \ mut grades_string = grades_string.iter().cloned().collect();\n    let mut grades_string\
    \ = grades_string.iter().cloned().collect();\n    let mut grades_string = grades_string.iter().cloned().collect();\n\
    \    let mut grades_string = grades_string.iter().cloned().collect();\n    let\
    \ mut grades_string = grades_string.iter().cloned().collect();\n    let mut grades_string\
    \ = grades_string.iter().cloned().collect();\n    let mut grades_string = grades_string.iter().cloned().collect();\n\
    \    let mut grades_string = grades_string.iter().cloned().collect();\n    let\
    \ mut grades_string = grades_string.iter().cloned().collect();\n    let mut grades_string\
    \ = grades_string.iter().cloned().collect();\n    let mut grades_string = grades_string.iter().cloned().collect();\n\
    \    let mut grades_string = grades_string.iter().cloned().collect();\n    let\
    \ mut grades_string = grades_string.iter().cloned().collect();\n    let mut grades_string\
    \ = grades_string.iter().cloned().collect();\n    let mut grades_string = grades_string.iter().cloned().collect();\n\
    \    let mut grades_string = grades_string.", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    \n    while current_grade > 0.0 {\n        if current_grade > grades_copy[current_letter_grade_index]\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_letter_grade_index\
    \ += 1;\n            current_grade = grades_copy[current_letter_grade_index];\n\
    \            current_letter_grade = String::from(\"E\");\n        } else {\n \
    \           current_letter_grade = String::from(\n                match current_letter_grade_index\
    \ {\n                    0 => \"A+\",\n                    1 => \"A\",\n     \
    \               2 => \"A-\",\n                    3 => \"B+\",\n             \
    \       4 => \"B\",\n                    5 => \"B-\",\n                    6 =>\
    \ \"C+\",\n                    7 => \"C\",\n                    8 => \"C-\",\n\
    \                    9 => \"D+\",\n                    10 => \"D\",\n        \
    \            11 => \"D-\",\n                    12 => \"E\",\n               \
    \     13 => \"F\",\n                    14 => \"F\",\n                    15 =>\
    \ \"F\",\n                    16 => \"F\",\n                    17 => \"F\",\n\
    \                    18 => \"F\",\n                    19 => \"F\",\n        \
    \            20 => \"F\",\n                    21 => \"F\",\n                \
    \    22 => \"F\",\n                    23 => \"F\",\n                    24 =>\
    \ \"F\",\n                    25 => \"F\",\n                    26 => \"F\",\n\
    \                    27 => \"F\",\n                    28 => \"F\",\n        \
    \            29 => \"F\",\n                    30 => \"F\",\n                \
    \    31 => \"F\",\n                    32 => \"F\",\n                    33 =>\
    \ \"F\",\n                    34 => \"F\",\n                    35 => \"F\",\n\
    \                    36 => \"F\",\n                    37 => \"F\",\n        \
    \            38 => \"F\",\n                    39 => \"F\",\n                \
    \    40 => \"F\",\n                    41 => \"F\",\n                    42 =>\
    \ \"F\",\n                    43 => \"F\",\n                    44 => \"F\",\n\
    \                    45 => \"F\",\n                    46 => \"F\",\n        \
    \            47 => \"F\",\n                    48 => \"F\",\n                \
    \    49 => \"F\",\n                    50 => \"F\",\n                    51 =>\
    \ \"F\",\n                    52 => \"F\",\n                    53 => \"F\",\n\
    \                    54 => \"F\",\n                    55 => \"F\",\n        \
    \            56 => \"F\",\n                    57 => \"F\",\n                \
    \    58 => \"F\",", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut max_grade = grades_copy[0];\n    let mut min_grade =\
    \ grades_copy[0];\n    for grade in grades_copy {\n        if grade > max_grade\
    \ {\n            max_grade = grade;\n        }\n        if grade < min_grade {\n\
    \            min_grade = grade;\n        }\n    }\n    for grade in grades_copy\
    \ {\n        if grade == 0.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n            continue;\n        }\n        let mut grade = grade - min_grade;\n\
    \        let mut letter_grade = String::from(\"D-\");\n        if grade < 0.0\
    \ {\n            grade = grade + 5.0;\n            letter_grade = String::from(\"\
    D+\");\n        }\n        if grade < 3.0 {\n            grade = grade + 2.0;\n\
    \            letter_grade = String::from(\"B+\");\n        }\n        if grade\
    \ < 3.3 {\n            grade = grade + 1.7;\n            letter_grade = String::from(\"\
    B\");\n        }\n        if grade < 3.7 {\n            grade = grade + 1.3;\n\
    \            letter_grade = String::from(\"B-\");\n        }\n        if grade\
    \ < 4.0 {\n            grade = grade + 0.7;\n            letter_grade = String::from(\"\
    C+\");\n        }\n        if grade < 4.3 {\n            grade = grade + 1.0;\n\
    \            letter_grade = String::from(\"C\");\n        }\n        if grade\
    \ < 4.7 {\n            grade = grade + 1.3;\n            letter_grade = String::from(\"\
    C-\");\n        }\n        if grade < 5.0 {\n            grade = grade + 0.7;\n\
    \            letter_grade = String::from(\"A+\");\n        }\n        if grade\
    \ < 5.3 {\n            grade = grade + 1.0;\n            letter_grade = String::from(\"\
    A\");\n        }\n        if grade < 5.7 {\n            grade = grade + 1.3;\n\
    \            letter_grade = String::from(\"A-\");\n        }\n        if grade\
    \ < 6.0 {\n            grade = grade + 0.7;\n            letter_grade = String::from(\"\
    A\");\n        }\n        if grade < 6.3 {\n            grade = grade + 1.0;\n\
    \            letter_grade = String::from(\"A\");\n        }\n        if grade\
    \ < 6.7 {\n            grade = gra", "    let mut grades_iter = grades.iter();\n\
    \    let mut grades_vec: Vec<String> = vec![];\n    let mut grade = grades_iter.next().unwrap();\n\
    \    let mut grades_vec: Vec<String> = vec![];\n    while grade > 0.0 {\n    \
    \    let mut grades_vec: Vec<String> = vec![];\n        if grade < 3.0 {\n   \
    \         grades_vec.push(String::from(\"A+\"));\n        }\n        if grade\
    \ < 3.3 {\n            grades_vec.push(String::from(\"A\"));\n        }\n    \
    \    if grade < 3.7 {\n            grades_vec.push(String::from(\"A-\"));\n  \
    \      }\n        if grade < 4.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        }\n        if grade < 4.3 {\n            grades_vec.push(String::from(\"\
    B\"));\n        }\n        if grade < 4.7 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        }\n        if grade < 5.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        }\n        if grade < 5.3 {\n            grades_vec.push(String::from(\"\
    C\"));\n        }\n        if grade < 5.7 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        }\n        if grade < 6.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        }\n        if grade < 6.3 {\n            grades_vec.push(String::from(\"\
    D\"));\n        }\n        if grade < 6.7 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        }\n        if grade < 7.0 {\n            grades_vec.push(String::from(\"\
    E\"));\n        }\n        grades_vec.push(String::from(\"F\"));\n        grades_vec.push(String::from(\"\
    F\"));\n        grades_vec.push(String::from(\"F\"));\n        grades_vec.push(String::from(\"\
    F\"));\n        grades_vec.push(String::from(\"F\"));\n        grades_vec.push(String::from(\"\
    F\"));\n        grades_vec.push(String::from(\"F\"));\n        grades_vec.push(String::from(\"\
    F\"));\n        grades_vec.push(String::from(\"F\"));\n        grades_vec.push(String::from(\"\
    F\"));\n        grades_vec.push(String::from(\"F\"));\n        grades_vec.push(String::from(\"\
    F\"));\n        grades_vec.push(String::from", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut min_grade = grades_copy.iter().min().unwrap();\n\
    \    let mut max_grade = grades_copy.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|&x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|&x| x == max_grade).unwrap();\n    let mut current_grade\
    \ = grades_copy[min_grade_index];\n    \n    while current_grade < max_grade {\n\
    \        letter_grades.push(String::from(current_grade + \"+\"));\n        current_grade\
    \ = current_grade + 1;\n    }\n    \n    while current_grade > min_grade {\n \
    \       letter_grades.push(String::from(current_grade + \"-\"));\n        current_grade\
    \ = current_grade - 1;\n    }\n    \n    letter_grades.push(String::from(\"E\"\
    ));\n    \n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ total_grade = grades.iter().sum();\n    let mut total_letter_grade = String::new();\n\
    \    for grade in grades {\n        let letter_grade = if grade > total_grade\
    \ {\n            String::from(\"D-\")\n        } else if grade < total_grade {\n\
    \            String::from(\"D+\")\n        } else {\n            String::from(\"\
    D\")\n        };\n        total_grade -= grade;\n        total_letter_grade +=\
    \ letter_grade;\n        letter_grades.push(letter_grade);\n    }\n    letter_grades.push(total_letter_grade);\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    let mut current_letter_grade_index = grades_copy.len()\
    \ - 1;\n    while current_grade != 0.0 {\n        if current_grade > grades_copy[current_letter_grade_index]\
    \ {\n            current_letter_grade = String::from(\"E\");\n            current_letter_grade_index\
    \ = grades_copy.len() - 1;\n        } else if current_grade < grades_copy[current_letter_grade_index]\
    \ {\n            current_letter_grade = String::from(\"D\");\n            current_letter_grade_index\
    \ = grades_copy.len() - 1;\n        } else {\n            current_letter_grade\
    \ = String::from(\"C\");\n            current_letter_grade_index = grades_copy.len()\
    \ - 1;\n        }\n        letter_grades.push(current_letter_grade);\n       \
    \ current_grade = grades_copy[current_letter_grade_index];\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_copy.iter().min().unwrap();\n    let mut max_grade\
    \ = grades_copy.iter().max().unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ *x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ *x == max_grade).unwrap();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy[min_grade_index] = grades_copy[min_grade_index] - min_grade;\n\
    \    grades_copy[max_grade_index] = grades_copy[max_grade_index] - max_grade;\n\
    \    while grades_copy.len() > 0 {\n        let mut grade = grades_copy.iter().next().unwrap();\n\
    \        let mut index = grades_copy.iter().position(|x| *x == grade).unwrap();\n\
    \        if index == 0 {\n            letter_grades.push(String::from(\"E\"));\n\
    \        } else {\n            letter_grades.push(String::from(grades_copy[index\
    \ - 1].to_string()));\n        }\n        grades_copy.remove(&grade);\n    }\n\
    \    letter_grades", "    let mut grades_iter = grades.iter();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = -1;\n    let mut current_letter_grade_indexes: Vec<usize> = vec![];\n    \n\
    \    while current_grade > 0.0 {\n        let mut current_letter_grade = String::from(\"\
    E\");\n        let mut current_letter_grade_index = -1;\n        let mut current_letter_grade_indexes:\
    \ Vec<usize> = vec![];\n        \n        for current_grade in grades_iter {\n\
    \            if current_grade > current_grade {\n                let mut current_letter_grade\
    \ = String::from(\"E\");\n                let mut current_letter_grade_index =\
    \ -1;\n                let mut current_letter_grade_indexes: Vec<usize> = vec![];\n\
    \                \n                for current_grade in grades_iter {\n      \
    \              if current_grade > current_grade {\n                        current_letter_grade\
    \ = String::from(\"E\");\n                        current_letter_grade_index =\
    \ -1;\n                        current_letter_grade_indexes = vec![];\n      \
    \                  break;\n                    }\n                    \n     \
    \               if current_grade == current_grade {\n                        current_letter_grade\
    \ = String::from(\"E\");\n                        current_letter_grade_index =\
    \ -1;\n                        current_letter_grade_indexes = vec![];\n      \
    \                  break;\n                    }\n                    \n     \
    \               if current_grade < current_grade {\n                        current_letter_grade\
    \ = String::from(\"E\");\n                        current_letter_grade_index =\
    \ -1;\n                        current_letter_grade_indexes = vec![];\n      \
    \                  break;\n                    }\n                    \n     \
    \               if current_grade == 0.0 {\n                        current_letter_grade\
    \ = String::from(\"E\");\n                        current_letter_grade_index =\
    \ -1;\n                        current_letter_grade_indexes = vec![];\n      \
    \                  break;\n                    }\n                    \n     \
    \               if current_grade < 0.0 {\n                        current_letter_grade\
    \ = String::from(\"E\");\n                        current_letter_grade_index =\
    \ -1;\n                        current_letter_grade_indexes = vec![];\n      \
    \                  break;\n                    }\n                    \n     \
    \               if current_grade > 0.0 {\n                        current_letter_grade\
    \ = String::from(\"E\");\n                        current_letter_grade_index =\
    \ -1;\n                        current_letter_grade_indexes = vec![];\n      \
    \                  break;\n                    }\n                    \n     \
    \               if current_grade < current_grade {\n                        current_letter_grade\
    \ = String::from(\"E\");\n                        current_letter_grade_index =\
    \ -1;\n                        current_letter_grade_indexes = ", "    let mut\
    \ letter_grades = vec![];\n    for grade in grades {\n        if grade > 3.0 {\n\
    \            letter_grades.push(String::from(\"B+\"));\n        } else if grade\
    \ > 2.7 {\n            letter_grades.push(String::from(\"B\"));\n        } else\
    \ if grade > 2.3 {\n            letter_grades.push(String::from(\"B-\"));\n  \
    \      } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > -0.3 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade > -0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_vec: Vec<String> =\
    \ vec![];\n    for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.iter().max().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    while current_grade\
    \ > 0.0 {\n        let mut current_letter_grade = String::from(\"\");\n      \
    \  for grade in grades_copy {\n            if grade > current_grade {\n      \
    \          let letter_grade = grade - current_grade;\n                current_letter_grade\
    \ += &letter_grade + \"+\";\n                current_grade = grade;\n        \
    \    } else {\n                current_letter_grade += &grade + \"-\";\n     \
    \       }\n        }\n        letter_grades.push(current_letter_grade);\n    }\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade > 3.7 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade > 3.3 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_iter = grades.iter();\n\
    \    let mut letter_grades = vec![];\n    let mut prev_grade = grades_iter.next().unwrap();\n\
    \    let mut prev_letter_grade = String::from(\"E\");\n    let mut current_grade\
    \ = grades_iter.next().unwrap();\n    let mut current_letter_grade = String::from(\"\
    E\");\n    while current_grade != 0.0 {\n        if current_grade < prev_grade\
    \ {\n            letter_grades.push(String::from(\"A-\"));\n            current_letter_grade\
    \ = String::from(\"E\");\n        }\n        if current_grade > prev_grade {\n\
    \            letter_grades.push(String::from(\"B-\"));\n            current_letter_grade\
    \ = String::from(\"E\");\n        }\n        if current_grade == prev_grade {\n\
    \            letter_grades.push(String::from(\"B-\"));\n            current_letter_grade\
    \ = String::from(\"E\");\n        }\n        prev_grade = current_grade;\n   \
    \     prev_letter_grade = current_letter_grade;\n        current_grade = grades_iter.next().unwrap();\n\
    \        current_letter_grade = String::from(\"E\");\n    }\n    letter_grades.push(String::from(\"\
    D-\"));\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy.pop().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    while grades_copy.len()\
    \ > 0 {\n        let mut current_grade = grades_copy.pop().unwrap();\n       \
    \ if current_grade < current_grade {\n            current_letter_grade = String::from(\"\
    E\");\n        }\n        if current_grade < current_grade {\n            current_letter_grade\
    \ = String::from(\"D-\");\n        }\n        if current_grade < current_grade\
    \ {\n            current_letter_grade = String::from(\"C-\");\n        }\n   \
    \     if current_grade < current_grade {\n            current_letter_grade = String::from(\"\
    B-\");\n        }\n        if current_grade < current_grade {\n            current_letter_grade\
    \ = String::from(\"B-\");\n        }\n        if current_grade < current_grade\
    \ {\n            current_letter_grade = String::from(\"A-\");\n        }\n   \
    \     if current_grade < current_grade {\n            current_letter_grade = String::from(\"\
    A+\");\n        }\n        if current_grade < current_grade {\n            current_letter_grade\
    \ = String::from(\"A\");\n        }\n        if current_grade < current_grade\
    \ {\n            current_letter_grade = String::from(\"B\");\n        }\n    \
    \    if current_grade < current_grade {\n            current_letter_grade = String::from(\"\
    C\");\n        }\n        if current_grade < current_grade {\n            current_letter_grade\
    \ = String::from(\"D\");\n        }\n        if current_grade < current_grade\
    \ {\n            current_letter_grade = String::from(\"E\");\n        }\n    \
    \    letter_grades.push(current_letter_grade);\n    }\n    letter_grades", " \
    \   let mut letter_grades = vec![];\n    let mut grades_sum = grades.iter().sum();\n\
    \    let mut grades_count = grades.iter().count();\n    let mut grades_average\
    \ = grades_sum / grades_count;\n    let mut grades_min_value = grades.iter().min();\n\
    \    let mut grades_max_value = grades.iter().max();\n    let mut grades_min_value\
    \ = grades.iter().min();\n    let mut grades_max_value = grades.iter().max();\n\
    \    let mut grades_min_value = grades.iter().min();\n    let mut grades_max_value\
    \ = grades.iter().max();\n    let mut grades_min_value = grades.iter().min();\n\
    \    let mut grades_max_value = grades.iter().max();\n    let mut grades_min_value\
    \ = grades.iter().min();\n    let mut grades_max_value = grades.iter().max();\n\
    \    let mut grades_min_value = grades.iter().min();\n    let mut grades_max_value\
    \ = grades.iter().max();\n    let mut grades_min_value = grades.iter().min();\n\
    \    let mut grades_max_value = grades.iter().max();\n    let mut grades_min_value\
    \ = grades.iter().min();\n    let mut grades_max_value = grades.iter().max();\n\
    \    let mut grades_min_value = grades.iter().min();\n    let mut grades_max_value\
    \ = grades.iter().max();\n    let mut grades_min_value = grades.iter().min();\n\
    \    let mut grades_max_value = grades.iter().max();\n    let mut grades_min_value\
    \ = grades.iter().min();\n    let mut grades_max_value = grades.iter().max();\n\
    \    let mut grades_min_value = grades.iter().min();\n    let mut grades_max_value\
    \ = grades.iter().max();\n    let mut grades_min_value = grades.iter().min();\n\
    \    let mut grades_max_value = grades.iter().max();\n    let mut grades_min_value\
    \ = grades.iter().min();\n    let mut grades_max_value = grades.iter().max();\n\
    \    let mut grades_min_value = grades.iter().min();\n    let mut grades_max_value\
    \ = grades.iter().max();\n    let mut grades_min_value = grades.iter().min();\n\
    \    let mut grades_max_value = grades.iter().max();\n    let mut grades_min_value\
    \ = grades.iter().min();", "    let mut grades_string = grades.iter().map(|x|\
    \ x.to_string()).collect::<Vec<String>>();\n    grades_string.sort_unstable();\n\
    \    let mut letter_grades = grades_string.iter().map(|x| {\n        if x <= 3.0\
    \ {\n            String::from(\"A+\")\n        } else if x <= 3.3 {\n        \
    \    String::from(\"A\")\n        } else if x <= 3.7 {\n            String::from(\"\
    A-\")\n        } else if x <= 4.0 {\n            String::from(\"B+\")\n      \
    \  } else if x <= 4.3 {\n            String::from(\"B\")\n        } else if x\
    \ <= 4.7 {\n            String::from(\"B-\")\n        } else if x <= 5.0 {\n \
    \           String::from(\"C+\")\n        } else if x <= 5.3 {\n            String::from(\"\
    C\")\n        } else if x <= 5.7 {\n            String::from(\"C-\")\n       \
    \ } else if x <= 6.0 {\n            String::from(\"D+\")\n        } else if x\
    \ <= 6.3 {\n            String::from(\"D\")\n        } else if x <= 6.7 {\n  \
    \          String::from(\"D-\")\n        } else if x <= 7.0 {\n            String::from(\"\
    E\")\n        } else {\n            String::from(\"D-\")\n        }\n    }).collect::<Vec<String>>();\n\
    \    letter_grades.sort_unstable();\n    letter_grades", "    let mut grades_copy\
    \ = grades.clone();\n    grades_copy.sort();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else {\n            current_letter_grade += String::from(\"-\"\
    );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_vec: Vec<String> = vec![];\n    let mut total_grade: f64 = 0.0;\n\
    \    for grade in grades {\n        total_grade += grade;\n        if total_grade\
    \ >= 4.0 {\n            grades_vec.push(String::from(\"A+\"));\n            total_grade\
    \ -= 4.0;\n        } else if total_grade >= 3.7 {\n            grades_vec.push(String::from(\"\
    A\"));\n            total_grade -= 3.7;\n        } else if total_grade >= 3.3\
    \ {\n            grades_vec.push(String::from(\"A-\"));\n            total_grade\
    \ -= 3.3;\n        } else if total_grade >= 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n            total_grade -= 3.0;\n        } else if total_grade >= 2.7\
    \ {\n            grades_vec.push(String::from(\"B\"));\n            total_grade\
    \ -= 2.7;\n        } else if total_grade >= 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n            total_grade -= 2.3;\n        } else if total_grade >= 2.0\
    \ {\n            grades_vec.push(String::from(\"C+\"));\n            total_grade\
    \ -= 2.0;\n        } else if total_grade >= 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n            total_grade -= 1.7;\n        } else if total_grade >= 1.3\
    \ {\n            grades_vec.push(String::from(\"C-\"));\n            total_grade\
    \ -= 1.3;\n        } else if total_grade >= 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n            total_grade -= 1.0;\n        } else if total_grade >= 0.7\
    \ {\n            grades_vec.push(String::from(\"D\"));\n            total_grade\
    \ -= 0.7;\n        } else if total_grade >= 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n            total_grade -= 0.0;\n        } else {\n            grades_vec.push(String::from(\"\
    E\"));\n        }\n    }\n    grades_vec", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        if grade < 3.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade < 3.3 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade < 3.7 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade < 7.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            letter_grades.push(String::from(\"F\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else if grade < current_grade {\n       \
    \     current_letter_grade += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    let mut gpa_sum = 0;\n    let mut gpa_sum2 = 0;\n    let mut gpa_sum3 = 0;\n\
    \    let mut gpa_sum4 = 0;\n    let mut gpa_sum5 = 0;\n    let mut gpa_sum6 =\
    \ 0;\n    let mut gpa_sum7 = 0;\n    let mut gpa_sum8 = 0;\n    let mut gpa_sum9\
    \ = 0;\n    let mut gpa_sum10 = 0;\n    let mut gpa_sum11 = 0;\n    let mut gpa_sum12\
    \ = 0;\n    let mut gpa_sum13 = 0;\n    let mut gpa_sum14 = 0;\n    let mut gpa_sum15\
    \ = 0;\n    let mut gpa_sum16 = 0;\n    let mut gpa_sum17 = 0;\n    let mut gpa_sum18\
    \ = 0;\n    let mut gpa_sum19 = 0;\n    let mut gpa_sum20 = 0;\n    let mut gpa_sum21\
    \ = 0;\n    let mut gpa_sum22 = 0;\n    let mut gpa_sum23 = 0;\n    let mut gpa_sum24\
    \ = 0;\n    let mut gpa_sum25 = 0;\n    let mut gpa_sum26 = 0;\n    let mut gpa_sum27\
    \ = 0;\n    let mut gpa_sum28 = 0;\n    let mut gpa_sum29 = 0;\n    let mut gpa_sum30\
    \ = 0;\n    let mut gpa_sum31 = 0;\n    let mut gpa_sum32 = 0;\n    let mut gpa_sum33\
    \ = 0;\n    let mut gpa_sum34 = 0;\n    let mut gpa_sum35 = 0;\n    let mut gpa_sum36\
    \ = 0;\n    let mut gpa_sum37 = 0;\n    let mut gpa_sum38 = 0;\n    let mut gpa_sum39\
    \ = 0;\n    let mut gpa_sum40 = 0;\n    let mut gpa_sum41 = 0;\n    let mut gpa_sum42\
    \ = 0;\n    let mut gpa_sum43 = 0;\n    let mut gpa_sum44 = 0;\n    let mut gpa_sum45\
    \ = 0;\n    let mut gpa_sum46 = 0;\n    let mut gpa_sum47 = 0;\n    let mut gpa_sum48\
    \ = 0;\n    let mut gpa_sum49 = 0;\n    let mut gpa_sum50 = 0;\n    let mut gpa_sum51\
    \ = 0;\n    let mut gpa_sum52 = 0;\n    let mut gpa_sum53 = 0;\n    let mut gpa_sum54\
    \ = 0;\n    let mut gpa_sum55 = 0;", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_copy = grades_copy.clone();\n\
    \    grade", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut min_grade = grades_copy.iter().min();\n    let mut max_grade\
    \ = grades_copy.iter().max();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    \n    while min_grade < max_grade {\n       \
    \ if min_grade < grades_copy[min_grade_index] {\n            min_grade_index +=\
    \ 1;\n        }\n        if max_grade < grades_copy[max_grade_index] {\n     \
    \       max_grade_index -= 1;\n        }\n        \n        if min_grade == grades_copy[min_grade_index]\
    \ {\n            letter_grades.push(String::from(\"A+\"));\n            min_grade_index\
    \ += 1;\n        }\n        if max_grade == grades_copy[max_grade_index] {\n \
    \           letter_grades.push(String::from(\"A-\"));\n            max_grade_index\
    \ -= 1;\n        }\n        \n        if min_grade > grades_copy[min_grade_index]\
    \ {\n            letter_grades.push(String::from(\"B+\"));\n            min_grade_index\
    \ += 1;\n        }\n        if max_grade > grades_copy[max_grade_index] {\n  \
    \          letter_grades.push(String::from(\"B-\"));\n            max_grade_index\
    \ -= 1;\n        }\n        \n        if min_grade == grades_copy[min_grade_index]\
    \ {\n            letter_grades.push(String::from(\"C+\"));\n            min_grade_index\
    \ += 1;\n        }\n        if max_grade == grades_copy[max_grade_index] {\n \
    \           letter_grades.push(String::from(\"C-\"));\n            max_grade_index\
    \ -= 1;\n        }\n        \n        if min_grade > grades_copy[min_grade_index]\
    \ {\n            letter_grades.push(String::from(\"D+\"));\n            min_grade_index\
    \ += 1;\n        }\n        if max_grade > grades_copy[max_grade_index] {\n  \
    \          letter_grades.push(String::from(\"D-\"));\n            max_grade_index\
    \ -= 1;\n        }\n        \n        if min_grade == grades_copy[min_grade_index]\
    \ {\n            letter_grades.push(String::from(\"D\"));\n            min_grade_index\
    \ += 1;\n        }\n        if max_grade == grades_copy[max_grade_index] {\n \
    \           letter_grades.push(String::from(\"E\"));\n            max_grade_index\
    \ -= 1;\n        }\n    }\n    \n    letter_grades", "    let mut letter_grades\
    \ = vec![];\n    let mut gpa = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut letter_grade = String::from(\"E\");\n    while grade > 0.0 {\n  \
    \      if grade < gpa {\n            letter_grade += String::from(\"D-\");\n \
    \           grade -= gpa;\n        } else {\n            letter_grade += String::from(\"\
    D\");\n            grade -= gpa;\n        }\n        gpa -= grade;\n        grade\
    \ = grades.iter().sum();\n    }\n    letter_grades.push(letter_grade);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_copy.iter().min().unwrap();\n    let mut max_grade\
    \ = grades_copy.iter().max().unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|&x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|&x|\
    \ x == max_grade).unwrap();\n    \n    while min_grade < max_grade {\n       \
    \ if min_grade < grades_copy[min_grade_index] {\n            min_grade_index +=\
    \ 1;\n        }\n        if max_grade > grades_copy[max_grade_index] {\n     \
    \       max_grade_index -= 1;\n        }\n        \n        if min_grade == grades_copy[min_grade_index]\
    \ {\n            letter_grades.push(String::from(\"A+\"));\n        }\n      \
    \  if min_grade == grades_copy[max_grade_index] {\n            letter_grades.push(String::from(\"\
    A-\"));\n        }\n        if max_grade == grades_copy[min_grade_index] {\n \
    \           letter_grades.push(String::from(\"B+\"));\n        }\n        if max_grade\
    \ == grades_copy[max_grade_index] {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if min_grade == grades_copy[min_grade_index] && max_grade\
    \ == grades_copy[max_grade_index] {\n            letter_grades.push(String::from(\"\
    C+\"));\n        }\n        if min_grade == grades_copy[min_grade_index] && max_grade\
    \ != grades_copy[max_grade_index] {\n            letter_grades.push(String::from(\"\
    C\"));\n        }\n        if min_grade != grades_copy[min_grade_index] && max_grade\
    \ == grades_copy[max_grade_index] {\n            letter_grades.push(String::from(\"\
    D+\"));\n        }\n        if min_grade != grades_copy[min_grade_index] && max_grade\
    \ != grades_copy[max_grade_index] {\n            letter_grades.push(String::from(\"\
    D\"));\n        }\n        if min_grade != grades_copy[min_grade_index] && max_grade\
    \ != grades_copy[max_grade_index] {\n            letter_grades.push(String::from(\"\
    E\"));\n        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade > 3.7 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade > 3.3 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec_len: usize = grades.len();\n    let mut total_grade:\
    \ f64 = 0.0;\n    let mut total_grade_index: usize = 0;\n    let mut total_grade_index2:\
    \ usize = 0;\n    let mut total_grade_index3: usize = 0;\n    let mut total_grade_index4:\
    \ usize = 0;\n    let mut total_grade_index5: usize = 0;\n    let mut total_grade_index6:\
    \ usize = 0;\n    let mut total_grade_index7: usize = 0;\n    let mut total_grade_index8:\
    \ usize = 0;\n    let mut total_grade_index9: usize = 0;\n    let mut total_grade_index10:\
    \ usize = 0;\n    let mut total_grade_index11: usize = 0;\n    let mut total_grade_index12:\
    \ usize = 0;\n    let mut total_grade_index13: usize = 0;\n    let mut total_grade_index14:\
    \ usize = 0;\n    let mut total_grade_index15: usize = 0;\n    let mut total_grade_index16:\
    \ usize = 0;\n    let mut total_grade_index17: usize = 0;\n    let mut total_grade_index18:\
    \ usize = 0;\n    let mut total_grade_index19: usize = 0;\n    let mut total_grade_index20:\
    \ usize = 0;\n    let mut total_grade_index21: usize = 0;\n    let mut total_grade_index22:\
    \ usize = 0;\n    let mut total_grade_index23: usize = 0;\n    let mut total_grade_index24:\
    \ usize = 0;\n    let mut total_grade_index25: usize = 0;\n    let mut total_grade_index26:\
    \ usize = 0;\n    let mut total_grade_index27: usize = 0;\n    let mut total_grade_index28:\
    \ usize = 0;\n    let mut total_grade_index29: usize = 0;\n    let mut total_grade_index30:\
    \ usize = 0;\n    let mut total_grade_index31: usize = 0;\n    let mut total_grade_index32:\
    \ usize = 0;\n    let mut total_grade_index33: usize = 0;\n    let mut total_grade_index34:\
    \ usize = 0;\n    let mut total_grade_index35: usize = 0;\n    let mut total_grade_index36:\
    \ usize = 0;\n    let mut total_grade_index37: usize = 0;\n    let mut total_grade_index38:\
    \ usize = 0;\n    let mut total_grade_index39: usize = 0;\n    let mut total_grade_index40",
  "    let mut grades_iter = grades.iter();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_iter.next().unwrap();\n    let mut current_letter\
    \ = String::from(\"E\");\n    while current_grade > 0.0 {\n        if current_grade\
    \ >= 3.0 {\n            current_letter = String::from(\"C\");\n        } else\
    \ if current_grade >= 2.0 {\n            current_letter = String::from(\"B\");\n\
    \        } else if current_grade >= 1.0 {\n            current_letter = String::from(\"\
    A\");\n        } else if current_grade >= 0.7 {\n            current_letter =\
    \ String::from(\"D\");\n        } else if current_grade >= 0.3 {\n           \
    \ current_letter = String::from(\"C\");\n        } else if current_grade >= 0.1\
    \ {\n            current_letter = String::from(\"B\");\n        } else if current_grade\
    \ >= 0.0 {\n            current_letter = String::from(\"A\");\n        } else\
    \ {\n            current_letter = String::from(\"E\");\n        }\n        letter_grades.push(current_letter);\n\
    \        current_grade = grades_iter.next().unwrap();\n    }\n    letter_grades",
  "    let mut grades_string = grades.iter().map(|x| x.to_string()).collect::<Vec<String>>();\n\
    \    grades_string.sort_unstable();\n    grades_string.dedup();\n    let mut letter_grades\
    \ = grades_string.iter().cloned().map(|x| {\n        match x {\n            x\
    \ if x > 0.0 => String::from(\"D+\"),\n            x if x < 0.0 => String::from(\"\
    D-\"),\n            x if x == 0.0 => String::from(\"D\"),\n            x if x\
    \ < 3.0 => String::from(\"C\"),\n            x if x < 3.3 => String::from(\"C+\"\
    ),\n            x if x < 3.7 => String::from(\"B\"),\n            x if x < 4.0\
    \ => String::from(\"B+\"),\n            x if x < 4.3 => String::from(\"A-\"),\n\
    \            x if x < 4.7 => String::from(\"A+\"),\n            x if x < 5.0 =>\
    \ String::from(\"A\"),\n            x if x < 5.3 => String::from(\"A-\"),\n  \
    \          x if x < 5.7 => String::from(\"A+\"),\n            x if x < 6.0 =>\
    \ String::from(\"A\"),\n            x if x < 6.3 => String::from(\"A-\"),\n  \
    \          x if x < 6.7 => String::from(\"A+\"),\n            x if x < 7.0 =>\
    \ String::from(\"A\"),\n            x if x < 7.3 => String::from(\"A-\"),\n  \
    \          x if x < 7.7 => String::from(\"A+\"),\n            x if x < 8.0 =>\
    \ String::from(\"A\"),\n            x if x < 8.3 => String::from(\"A-\"),\n  \
    \          x if x < 8.7 => String::from(\"A+\"),\n            x if x < 9.0 =>\
    \ String::from(\"A\"),\n            x if x < 9.3 => String::from(\"A-\"),\n  \
    \          x if x < 9.7 => String::from(\"A+\"),\n            x if x < 10.0 =>\
    \ String::from(\"A\"),\n            x if x < 10.3 => String::from(\"A-\"),\n \
    \           x if x < 10.7 => String::from(\"A+\"),\n            x if x < 11.0\
    \ => String::from(\"A\"),\n            x if x < 11.3 => String::from(\"A-\"),\n\
    \            x if x < 11.7 => String::from(\"A+\"),\n            x if x < 12.0\
    \ => String::from(\"A\"),\n            ", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    for grade in grades {\n        if grade > 3.0 {\n           \
    \ grades_vec.push(String::from(\"B+\"));\n        } else if grade > 2.7 {\n  \
    \          grades_vec.push(String::from(\"B\"));\n        } else if grade > 2.3\
    \ {\n            grades_vec.push(String::from(\"B-\"));\n        } else if grade\
    \ > 2.0 {\n            grades_vec.push(String::from(\"C+\"));\n        } else\
    \ if grade > 1.7 {\n            grades_vec.push(String::from(\"C\"));\n      \
    \  } else if grade > 1.3 {\n            grades_vec.push(String::from(\"C-\"));\n\
    \        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else if grade < current_grade {\n       \
    \     current_letter_grade += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"E\");\n            current_grade\
    \ = grade;\n        } else if grade == current_grade {\n            current_letter_grade\
    \ = String::from(current_letter_grade + \"+\");\n        } else {\n          \
    \  current_letter_grade = String::from(current_letter_grade + \"-\");\n      \
    \      current_grade = grade;\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n \
    \   for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_letter_grade_index\
    \ = 0;\n    \n    while current_grade.len() > 0 {\n        let mut current_grade\
    \ = grades_copy.clone();\n        let mut current_letter_grade = String::new();\n\
    \        let mut current_letter_grade_index = 0;\n        \n        while current_grade.len()\
    \ > 0 {\n            let mut current_grade = grades_copy.clone();\n          \
    \  let mut current_letter_grade = String::new();\n            let mut current_letter_grade_index\
    \ = 0;\n            \n            while current_grade.len() > 0 {\n          \
    \      let mut current_grade = grades_copy.clone();\n                let mut current_letter_grade\
    \ = String::new();\n                let mut current_letter_grade_index = 0;\n\
    \                \n                while current_grade.len() > 0 {\n         \
    \           let mut current_grade = grades_copy.clone();\n                   \
    \ let mut current_letter_grade = String::new();\n                    let mut current_letter_grade_index\
    \ = 0;\n                    \n                    while current_grade.len() >\
    \ 0 {\n                        let mut current_grade = grades_copy.clone();\n\
    \                        let mut current_letter_grade = String::new();\n     \
    \                   let mut current_letter_grade_index = 0;\n                \
    \        \n                        while current_grade.len() > 0 {\n         \
    \                   let mut current_grade = grades_copy.clone();\n           \
    \                 let mut current_letter_grade = String::new();\n            \
    \                let mut current_letter_grade_index = 0;\n                   \
    \         \n                            while current_grade.len() > 0 {\n    \
    \                            let mut current_grade = grades_copy.clone();\n  \
    \                              let mut current_letter_grade = String::new();\n\
    \                                let mut current_letter_grade_index = 0;\n   \
    \                             \n                                while current_grade.len()\
    \ > 0 {\n                                    let mut current_grade = grades_copy.clone();\n\
    \                                    let mut current_letter_grade = String::new();\n\
    \                                    let mut current_letter_grade_index = 0;\n\
    \                                    \n                                    while\
    \ current_grade.len() > 0 {\n                                        let mut current_grade\
    \ = grades_copy.clone();\n                                        let mut current_letter_grade\
    \ = String::new();\n                                        let mut current_letter_grade_index\
    \ = 0;\n                                        \n                           \
    \             while current_grade.len() > 0 {\n                              \
    \              let mut current_grade = grades_copy.clone();\n                \
    \                            let mut current_letter_grade = String::new();\n \
    \                                           let mut current_letter_grade_index\
    \ = 0;\n                                            \n                       \
    \                     while current_grade.len() > 0 {", "    let mut letter_grades\
    \ = vec![];\n    for grade in grades {\n        if grade > 3.0 {\n           \
    \ letter_grades.push(String::from(\"B+\"));\n        } else if grade > 2.7 {\n\
    \            letter_grades.push(String::from(\"B\"));\n        } else if grade\
    \ > 2.3 {\n            letter_grades.push(String::from(\"B-\"));\n        } else\
    \ if grade > 1.3 {\n            letter_grades.push(String::from(\"C+\"));\n  \
    \      } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_string = vec![];\n\
    \    for grade in grades {\n        let mut grade_string = String::new();\n  \
    \      if grade < 3.0 {\n            grade_string.push_str(\"A+\");\n        }\
    \ else if grade < 3.3 {\n            grade_string.push_str(\"A-\");\n        }\
    \ else if grade < 3.7 {\n            grade_string.push_str(\"B+\");\n        }\
    \ else if grade < 4.0 {\n            grade_string.push_str(\"B\");\n        }\
    \ else if grade < 4.3 {\n            grade_string.push_str(\"B-\");\n        }\
    \ else if grade < 4.7 {\n            grade_string.push_str(\"C+\");\n        }\
    \ else if grade < 5.0 {\n            grade_string.push_str(\"C\");\n        }\
    \ else if grade < 5.3 {\n            grade_string.push_str(\"C-\");\n        }\
    \ else if grade < 5.7 {\n            grade_string.push_str(\"D+\");\n        }\
    \ else if grade < 6.0 {\n            grade_string.push_str(\"D\");\n        }\
    \ else if grade < 6.3 {\n            grade_string.push_str(\"D-\");\n        }\
    \ else if grade < 6.7 {\n            grade_string.push_str(\"E\");\n        }\
    \ else {\n            grade_string.push_str(\"F\");\n        }\n        grades_string.push(grade_string);\n\
    \    }\n    grades_string", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n \
    \   let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else if grade < current_grade {\n       \
    \     current_letter_grade += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"E\");\n            current_grade\
    \ = grade;\n        }\n        if grade < current_grade {\n            current_letter_grade\
    \ = String::from(\"E\");\n            current_grade = grade;\n        }\n    \
    \    if grade == current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_letter_grade = String::from(\"E\");\n            current_grade\
    \ = grade;\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_index\
    \ = grades_copy.len() - 1;\n    while current_index >= 0 {\n        if current_grade\
    \ > grades_copy[current_index] {\n            current_grade -= grades_copy[current_index];\n\
    \            current_letter_grade = String::from(\"D-\");\n        } else if current_grade\
    \ == grades_copy[current_index] {\n            current_letter_grade = String::from(\"\
    D\");\n            current_index -= 1;\n        } else {\n            current_grade\
    \ -= grades_copy[current_index];\n            current_letter_grade = String::from(\"\
    D+\");\n        }\n        letter_grades.push(current_letter_grade);\n    }\n\
    \    letter_grades.push(String::from(\"E\"));\n    letter_grades", "    let mut\
    \ grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n    let\
    \ mut current_grade = grades_copy[0];\n    let mut current_letter_grade = String::from(\"\
    E\");\n    for grade in grades_copy {\n        if grade < current_grade {\n  \
    \          letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else {\n            current_letter_grade = current_letter_grade.chars().nth(grade\
    \ - current_grade).unwrap().to_string();\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut total_grade\
    \ = grades.iter().sum();\n    for grade in grades {\n        let letter_grade\
    \ = if grade > total_grade {\n            \"D-\"\n        } else if grade < total_grade\
    \ {\n            \"D+\"\n        } else if grade == total_grade {\n          \
    \  \"D\"\n        } else {\n            \"E\"\n        };\n        letter_grades.push(letter_grade);\n\
    \        total_grade -= grade;\n    }\n    letter_grades", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy.first().unwrap();\n    let mut current_letter_grade = String::from(\"\
    E\");\n    let mut current_letter_grade_index = -1;\n    let mut current_gp =\
    \ 0;\n    let mut current_gpa = grades_copy.first().unwrap();\n    for grade in\
    \ grades_copy {\n        if grade > current_gpa {\n            current_gpa = grade;\n\
    \            current_letter_grade = String::from(\"E\");\n            current_letter_grade_index\
    \ = -1;\n        }\n        if grade < current_gp {\n            current_gp =\
    \ grade;\n            current_letter_grade = String::from(\"E\");\n          \
    \  current_letter_grade_index = -1;\n        }\n        if grade == current_gp\
    \ {\n            current_letter_grade_index += 1;\n            current_letter_grade\
    \ = String::from(\n                &grades_copy[grade_index as usize].to_string()[current_letter_grade_index\
    \ as usize..].to_uppercase()\n            );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut total_grade\
    \ = grades.iter().sum();\n    let mut total_gpa = grades.iter().sum();\n    let\
    \ mut total_gpa_sum = 0;\n    let mut total_gpa_sum2 = 0;\n    let mut total_gpa_sum3\
    \ = 0;\n    let mut total_gpa_sum4 = 0;\n    let mut total_gpa_sum5 = 0;\n   \
    \ let mut total_gpa_sum6 = 0;\n    let mut total_gpa_sum7 = 0;\n    let mut total_gpa_sum8\
    \ = 0;\n    let mut total_gpa_sum9 = 0;\n    let mut total_gpa_sum10 = 0;\n  \
    \  let mut total_gpa_sum11 = 0;\n    let mut total_gpa_sum12 = 0;\n    let mut\
    \ total_gpa_sum13 = 0;\n    let mut total_gpa_sum14 = 0;\n    let mut total_gpa_sum15\
    \ = 0;\n    let mut total_gpa_sum16 = 0;\n    let mut total_gpa_sum17 = 0;\n \
    \   let mut total_gpa_sum18 = 0;\n    let mut total_gpa_sum19 = 0;\n    let mut\
    \ total_gpa_sum20 = 0;\n    let mut total_gpa_sum21 = 0;\n    let mut total_gpa_sum22\
    \ = 0;\n    let mut total_gpa_sum23 = 0;\n    let mut total_gpa_sum24 = 0;\n \
    \   let mut total_gpa_sum25 = 0;\n    let mut total_gpa_sum26 = 0;\n    let mut\
    \ total_gpa_sum27 = 0;\n    let mut total_gpa_sum28 = 0;\n    let mut total_gpa_sum29\
    \ = 0;\n    let mut total_gpa_sum30 = 0;\n    let mut total_gpa_sum31 = 0;\n \
    \   let mut total_gpa_sum32 = 0;\n    let mut total_gpa_sum33 = 0;\n    let mut\
    \ total_gpa_sum34 = 0;\n    let mut total_gpa_sum35 = 0;\n    let mut total_gpa_sum36\
    \ = 0;\n    let mut total_gpa_sum37 = 0;\n    let mut total_gpa_sum38 = 0;\n \
    \   let mut total_gpa_sum39 = 0;\n    let mut total_gpa_sum40 = 0;\n    let mut\
    \ total_gpa_sum41 = 0;\n    let mut total_gpa_sum42 = 0;\n    let mut total_gpa_sum43\
    \ = 0;\n    let mut total_gpa_sum44 = 0;\n    let mut total_gpa_sum45 = 0;\n \
    \   let mut total_gpa_sum46 = 0;\n    let mut total_gpa_sum47 = 0;\n    let mut\
    \ total_gpa_sum48 = 0;\n", "    let mut grades_vec: Vec<String> = vec![];\n  \
    \  let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n", "    let mut grades_copy = grades.clone();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec", "    let\
    \ mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut grades_copy\
    \ = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n   \
    \ let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n", "    let mut grades_copy =\
    \ grades.clone();\n    let mut letter_grades = vec![];\n    grades_copy.sort_unstable();\n\
    \    let mut previous_grade = grades_copy[0];\n    let mut current_grade = grades_copy[0];\n\
    \    for grade in grades_copy {\n        if grade > previous_grade {\n       \
    \     letter_grades.push(String::from(\"A+\"));\n        } else if grade > current_grade\
    \ {\n            letter_grades.push(String::from(\"A\"));\n        } else if grade\
    \ < previous_grade {\n            letter_grades.push(String::from(\"A-\"));\n\
    \        } else if grade < current_grade {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade == previous_grade {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade == current_grade {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else {\n            letter_grades.push(String::from(\"C+\"\
    ));\n        }\n        previous_grade = grade;\n        current_grade = grade;\n\
    \    }\n    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n \
    \   for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade_index46 = 0;\n    let mut current_letter_grade_index47\
    \ = 0;\n    let mu", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut min_grade = grades_copy[0];\n    let mut max_grade =\
    \ grades_copy[0];\n    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    let mut current_letter_grade_index = -1;\n    let\
    \ mut current_letter_grade_index2 = -1;\n    let mut current_letter_grade_index3\
    \ = -1;\n    let mut current_letter_grade_index4 = -1;\n    let mut current_letter_grade_index5\
    \ = -1;\n    let mut current_letter_grade_index6 = -1;\n    let mut current_letter_grade_index7\
    \ = -1;\n    let mut current_letter_grade_index8 = -1;\n    let mut current_letter_grade_index9\
    \ = -1;\n    let mut current_letter_grade_index10 = -1;\n    let mut current_letter_grade_index11\
    \ = -1;\n    let mut current_letter_grade_index12 = -1;\n    let mut current_letter_grade_index13\
    \ = -1;\n    let mut current_letter_grade_index14 = -1;\n    let mut current_letter_grade_index15\
    \ = -1;\n    let mut current_letter_grade_index16 = -1;\n    let mut current_letter_grade_index17\
    \ = -1;\n    let mut current_letter_grade_index18 = -1;\n    let mut current_letter_grade_index19\
    \ = -1;\n    let mut current_letter_grade_index20 = -1;\n    let mut current_letter_grade_index21\
    \ = -1;\n    let mut current_letter_grade_index22 = -1;\n    let mut current_letter_grade_index23\
    \ = -1;\n    let mut current_letter_grade_index24 = -1;\n    let mut current_letter_grade_index25\
    \ = -1;\n    let mut current_letter_grade_index26 = -1;\n    let mut current_letter_grade_index27\
    \ = -1;\n    let mut current_letter_grade_index28 = -1;\n    let mut current_letter_grade_index29\
    \ = -1;\n    let mut current_letter_grade_index30 = -1;\n    let mut current_letter_grade_index31\
    \ = -1;\n    let mut current_letter_grade_index32 = -1;\n    let mut current_letter_grade_index33\
    \ = -1;\n    let mut current_letter_grade_index34 = -1;\n    let mut current_letter_grade_index35\
    \ = -1;\n    let mut current_letter_grade_index36 = -1;\n    let mut current_letter_grade_index37\
    \ = -1;\n    let mut current_letter_grade_index38 = -1;\n    let mut current_letter_grade_index39\
    \ = -1;\n    let mut current_letter_grade_index40 = -1;\n    let mut current_letter_grade_index41\
    \ = -1;\n    let mut current_letter_grade_index", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade < current_grade {\n            current_letter_grade\
    \ = String::from(current_letter_grade.chars().nth(1).unwrap());\n        }\n \
    \       current_grade -= grade;\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_string = vec![];\n    for grade in grades\
    \ {\n        if grade > 3.0 {\n            grades_string.push(String::from(\"\
    B+\"));\n        } else if grade > 2.0 {\n            grades_string.push(String::from(\"\
    B\"));\n        } else if grade > 1.0 {\n            grades_string.push(String::from(\"\
    B-\"));\n        } else if grade > 0.0 && grade < 3.0 {\n            grades_string.push(String::from(\"\
    C+\"));\n        } else if grade > 0.0 && grade < 2.0 {\n            grades_string.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 && grade < 1.0 {\n            grades_string.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 {\n            grades_string.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 && grade < 0.7 {\n            grades_string.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_string.push(String::from(\"\
    D-\"));\n        } else {\n            grades_string.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_string", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade < current_grade {\n            letter_grades.push(current_letter);\n\
    \            current_letter = String::from(\"E\");\n            current_grade\
    \ = grade;\n        } else if grade == current_grade {\n            current_letter\
    \ += String::from(\"+\");\n        } else {\n            current_letter += String::from(\"\
    -\");\n        }\n    }\n    letter_grades.push(current_letter);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut grades_len = grades.len();\n\
    \    let mut grades_grades = vec![];\n    let mut grades_grades_len = grades_len.clone();\n\
    \    let mut grades_grades_grades = vec![];\n    let mut grades_grades_grades_len\
    \ = grades_len.clone();\n    let mut grades_grades_grades_grades = vec![];\n \
    \   let mut grades_grades_grades_grades_len = grades_len.clone();\n    let mut\
    \ grades_grades_grades_grades_grades = vec![];\n    let mut grades_grades_grades_grades_grades_len\
    \ = grades_len.clone();\n    let mut grades_grades_grades_grades_grades_grades\
    \ = vec![];\n    let mut grades_grades_grades_grades_grades_grades_len = grades_len.clone();\n\
    \    let mut grades_grades_grades_grades_grades_grades_grades = vec![];\n    let\
    \ mut grades_grades_grades_grades_grades_grades_grades_len = grades_len.clone();\n\
    \    let mut grades_grades_grades_grades_grades_grades_grades_grades = vec![];\n\
    \    let mut grades_grades_grades_grades_grades_grades_grades_grades_len = grades_len.clone();\n\
    \    let mut grades_grades_grades_grades_grades_grades_grades_grades_grades_len\
    \ = grades_len.clone();\n    let mut grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_len\
    \ = grades_len.clone();\n    let mut grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_len\
    \ = grades_len.clone();\n    let mut grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grade",
  "    let mut grades_vec: Vec<String> = vec![];\n    for grade in grades {\n    \
    \    if grade < 3.0 {\n            grades_vec.push(String::from(\"A+\"));\n  \
    \      } else if grade < 3.3 {\n            grades_vec.push(String::from(\"A\"\
    ));\n        } else if grade < 3.7 {\n            grades_vec.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_sorted = grades.clone();\n\
    \    grades_sorted.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_sorted[0];\n    let mut current_grade_index = 0;\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_sorted {\n        if grade >\
    \ current_grade {\n            current_grade = grade;\n            current_grade_index\
    \ = 0;\n            current_letter_grade = String::from(\"E\");\n        }\n \
    \       if grade == current_grade {\n            current_grade_index += 1;\n \
    \           current_letter_grade = String::from(\n                format!(\"{}+\"\
    , current_grade_index),\n            );\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ current_grade = grades.first();\n    for grade in grades.iter().skip(1) {\n\
    \        if grade > current_grade {\n            letter_grades.push(String::from(\"\
    A+\"));\n            current_grade = grade;\n        } else if grade < current_grade\
    \ {\n            letter_grades.push(String::from(\"A-\"));\n            current_grade\
    \ = grade;\n        } else {\n            letter_grades.push(String::from(\"A\"\
    ));\n            current_grade = grade;\n        }\n    }\n    letter_grades.push(String::from(\"\
    E\"));\n    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n \
    \   for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut letter_grades = vec![];\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade >= 3.7 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade >= 3.3 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade >= 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade >= 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade >= 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade >= 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade >= 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade >= 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade >= 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade >= 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade >= 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut total_grade = grades.iter().sum();\n\
    \    let mut total_letter_grade = grades_copy.iter().sum();\n    let mut current_grade\
    \ = grades_copy.iter().sum();\n    let mut current_letter_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = grades_copy.iter().sum();\n    let mut current_letter_grade\
    \ = grades_copy.iter().sum();\n    let mut current_letter_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = grades_copy.iter().sum();\n    let mut current_letter_grade\
    \ = grades_copy.iter().sum();\n    let mut current_letter_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = grades_copy.iter().sum();\n    let mut current_letter_grade\
    \ = grades_copy.iter().sum();\n    let mut current_letter_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = grades_copy.iter().sum();\n    let mut current_letter_grade\
    \ = grades_copy.iter().sum();\n    let mut current_letter_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = grades_copy.iter().sum();\n    let mut current_letter_grade\
    \ = grades_copy.iter().sum();\n    let mut current_letter_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = grades_copy.iter().sum();\n    let mut current_letter_grade\
    \ = grades_copy.iter().sum();\n    let mut current_letter_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = grades_copy.iter().sum();\n    let mut current_letter_grade\
    \ = grades_copy.iter().sum();\n    let mut current_letter_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = grades_copy.iter().sum();\n    let mut current_letter_grade\
    \ = grades_copy.iter().sum();\n    let mut current_letter_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = grades_copy.iter().sum();\n    let mut current_letter_grade\
    \ = grades_copy.iter().sum();\n    let mut current_letter_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = grades_copy.iter().sum();\n    let mut current_letter_grade\
    \ = grades_copy.iter().sum();\n", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade < current_grade {\n            current_letter_grade = String::from(\"\
    E\");\n            current_grade = grade;\n        } else if grade == current_grade\
    \ {\n            current_letter_grade = String::from(\n                match grade\
    \ {\n                    4.0 => \"A+\",\n                    3.7 => \"A\",\n \
    \                   3.3 => \"A-\",\n                    3.0 => \"B+\",\n     \
    \               2.7 => \"B\",\n                    2.3 => \"B-\",\n          \
    \          2.0 => \"C+\",\n                    1.7 => \"C\",\n               \
    \     1.3 => \"C-\",\n                    1.0 => \"D+\",\n                   \
    \ 0.7 => \"D\",\n                    0.0 => \"D-\",\n                    0.0 =>\
    \ \"E\",\n                }\n            );\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade < current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_sorted = grades.iter().cloned().collect::<Vec<f64>>();\n\
    \    grades_sorted.sort_unstable();\n    let mut letter_grades = vec![];\n   \
    \ let mut current_grade = grades_sorted[0];\n    for grade in grades_sorted {\n\
    \        if grade > current_grade {\n            letter_grades.push(String::from(\"\
    A+\"));\n            current_grade = grade;\n        } else if grade < current_grade\
    \ {\n            letter_grades.push(String::from(\"A-\"));\n            current_grade\
    \ = grade;\n        } else {\n            letter_grades.push(String::from(\"B+\"\
    ));\n            current_grade = grade;\n        }\n    }\n    letter_grades.push(String::from(\"\
    E\"));\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut grades_len = grades_copy.len();\n    let mut grades_sum = 0.0;\n    let\
    \ mut grades_average = 0.0;\n    let mut grades_letter_grades = Vec::new();\n\
    \    let mut grades_letter_grades_len = grades_letter_grades.len();\n    let mut\
    \ grades_letter_grades_sum = 0.0;\n    let mut grades_letter_grades_average =\
    \ 0.0;\n    let mut grades_letter_grades_letter_grades = Vec::new();\n    let\
    \ mut grades_letter_grades_letter_grades_len = grades_letter_grades_letter_grades.len();\n\
    \    let mut grades_letter_grades_letter_grades_sum = 0.0;\n    let mut grades_letter_grades_letter_grades_average\
    \ = 0.0;\n    let mut grades_letter_grades_letter_grades_letter_grades = Vec::new();\n\
    \    let mut grades_letter_grades_letter_grades_letter_grades_len = grades_letter_grades_letter_grades_letter_grades.len();\n\
    \    let mut grades_letter_grades_letter_grades_letter_grades_sum = 0.0;\n   \
    \ let mut grades_letter_grades_letter_grades_letter_grades_average = 0.0;\n  \
    \  let mut grades_letter_grades_letter_grades_letter_grades_letter_grades = Vec::new();\n\
    \    let mut grades_letter_grades_letter_grades_letter_grades_letter_grades_len\
    \ = grades_letter_grades_letter_grades_letter_grades_letter_grades.len();\n  \
    \  let mut grades_letter_grades_letter_grades_letter_grades_letter_grades_sum\
    \ = 0.0;\n    let mut grades_letter_grades_letter_grades_letter_grades_letter_grades_average\
    \ = 0.0;\n    let mut grades_letter_grades_letter_grades_letter_grades_letter_grades_letter_grades\
    \ = Vec::new();\n    let mut grades_letter_grades_letter_grades_letter_grades_letter_grades_letter_grades_len\
    \ = grades_letter_grades_letter_grades_letter_grades_letter_grades_letter_grades.len();\n\
    \    let mut grades_letter_grades_letter_grades_letter_grades_letter_grades_letter_grades_sum\
    \ = 0.0;\n    let mut grades_letter_grades_letter_grades_letter_grades_letter_grades_letter_grades_average\
    \ = 0.0;\n    let mut grades_letter_grades_letter_grades_letter_grades_letter_grades_letter_grades_letter_grades\
    \ = Vec::new();\n    let mut grades_letter_grades_letter_grades_letter_grades_letter_grades_letter_grades_letter_grades_len\
    \ = ", "    let mut grades_copy = grades.clone();\n    let mut grades_sorted =\
    \ grades_copy.clone();\n    grades_sorted.sort();\n    let mut grades_grades =\
    \ grades_sorted.iter().cloned().map(|x| {\n        if x < 3.0 {\n            String::from(\"\
    A+\")\n        } else if x < 3.3 {\n            String::from(\"A\")\n        }\
    \ else if x < 3.7 {\n            String::from(\"A-\")\n        } else if x < 4.0\
    \ {\n            String::from(\"B+\")\n        } else if x < 4.3 {\n         \
    \   String::from(\"B\")\n        } else if x < 4.7 {\n            String::from(\"\
    B-\")\n        } else if x < 5.0 {\n            String::from(\"C+\")\n       \
    \ } else if x < 5.3 {\n            String::from(\"C\")\n        } else if x <\
    \ 5.7 {\n            String::from(\"C-\")\n        } else if x < 6.0 {\n     \
    \       String::from(\"D+\")\n        } else if x < 6.3 {\n            String::from(\"\
    D\")\n        } else if x < 6.7 {\n            String::from(\"D-\")\n        }\
    \ else if x < 7.0 {\n            String::from(\"E\")\n        } else {\n     \
    \       String::from(\"E\")\n        }\n    }).collect::<Vec<String>>();\n   \
    \ grades_grades.push(String::from(\"E\"));\n    grades_grades", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut grade =\
    \ grades_copy.iter().sum();\n    let mut i = 0;\n    while grade > 0.0 {\n   \
    \     if grade < 3.0 {\n            letter_grades.push(String::from(\"D-\"));\n\
    \            i += 1;\n            grade -= 3.0;\n        } else {\n          \
    \  letter_grades.push(String::from(\"D+\"));\n            i += 1;\n          \
    \  grade -= 2.0;\n        }\n    }\n    while grade < 0.0 {\n        if grade\
    \ < 2.0 {\n            letter_grades.push(String::from(\"C-\"));\n           \
    \ i += 1;\n            grade += 2.0;\n        } else {\n            letter_grades.push(String::from(\"\
    C\"));\n            i += 1;\n            grade += 1.0;\n        }\n    }\n   \
    \ while grade < 2.0 {\n        if grade < 1.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n            i += 1;\n            grade += 1.0;\n        } else {\n  \
    \          letter_grades.push(String::from(\"B\"));\n            i += 1;\n   \
    \         grade += 0.7;\n        }\n    }\n    while grade < 3.0 {\n        if\
    \ grade < 0.7 {\n            letter_grades.push(String::from(\"B-\"));\n     \
    \       i += 1;\n            grade += 0.7;\n        } else {\n            letter_grades.push(String::from(\"\
    B\"));\n            i += 1;\n            grade += 0.3;\n        }\n    }\n   \
    \ while grade < 4.0 {\n        if grade < 0.3 {\n            letter_grades.push(String::from(\"\
    A-\"));\n            i += 1;\n            grade += 0.3;\n        } else {\n  \
    \          letter_grades.push(String::from(\"A\"));\n            i += 1;\n   \
    \         grade += 0.0;\n        }\n    }\n    while grade < 5.0 {\n        letter_grades.push(String::from(\"\
    A+\"));\n        i += 1;\n        grade += 0.0;\n    }\n    while grade < 6.0\
    \ {\n        letter_grades.push(String::from(\"A\"));\n        i += 1;\n     \
    \   grade += 0.0;\n    }\n    while grade < 7.0 {\n        letter_grades.push(String::from(\"\
    A+\"));\n        i += 1;\n        grade += 0.0;\n    }\n    while grade < 8.0\
    \ {\n        letter_grades.push(String::from(\"A\"));\n        i += 1;\n     \
    \   grade += 0.0;\n    }\n    while grade < 9.0 {\n        letter_grades.push(String::from(\"\
    A+\"));\n        i += 1;\n        grade ", "    let mut grades_iter = grades.iter();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next();\n\
    \    let mut current_letter = String::from(\"E\");\n    loop {\n        if current_grade\
    \ == Some(0.0) {\n            break;\n        }\n        let mut current_letter_grade\
    \ = String::from(\"E\");\n        loop {\n            if current_grade == Some(0.0)\
    \ {\n                break;\n            }\n            let mut current_letter_grade\
    \ = current_letter_grade.chars().next().unwrap();\n            if current_grade\
    \ == Some(current_grade.unwrap()) {\n                let mut current_letter =\
    \ current_letter.chars().next().unwrap();\n            } else {\n            \
    \    let mut current_letter = String::from(\"E\");\n            }\n        }\n\
    \        letter_grades.push(current_letter_grade);\n        current_grade = grades_iter.next();\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut grades_len = grades_copy.len();\n    let mut grades_grade = grades_copy[0];\n\
    \    let mut grades_grades_len = grades_grade as usize;\n    let mut grades_grades_grade\
    \ = grades_grade as f64;\n    let mut grades_grades_grades_len = grades_grades_grade\
    \ as usize;\n    let mut grades_grades_grades_grade = grades_grades_grade as f64;\n\
    \    let mut grades_grades_grades_grades_len = grades_grades_grades_grade as usize;\n\
    \    let mut grades_grades_grades_grades_grades_len = grades_grades_grades_grades_grade\
    \ as usize;\n    let mut grades_grades_grades_grades_grades_len = grades_grades_grades_grades_grade\
    \ as usize;\n    let mut grades_grades_grades_grades_grades_grades_len = grades_grades_grades_grades_grades_grade\
    \ as usize;\n    let mut grades_grades_grades_grades_grades_grades_len = grades_grades_grades_grades_grades_grades_grade\
    \ as usize;\n    let mut grades_grades_grades_grades_grades_grades_grades_len\
    \ = grades_grades_grades_grades_grades_grades_grades_grade as usize;\n    let\
    \ mut grades_grades_grades_grades_grades_grades_grades_grades_len = grades_grades_grades_grades_grades_grades_grades_grades_grade\
    \ as usize;\n    let mut grades_grades_grades_grades_grades_grades_grades_grades_len\
    \ = grades_grades_grades_grades_grades_grades_grades_grades_grade as usize;\n\
    \    let mut grades_grades_grades_grades_grades_grades_grades_grades_grades_len\
    \ = grades_grades_grades_grades_grades_grades_grades_grades_grades_grade as usize;\n\
    \    let mut grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_len\
    \ = grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grade\
    \ as usize;\n    let mut grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_len\
    \ = grades_grades_grades_grades_", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    grades_copy.sort_unstable();\n    let\
    \ mut previous_grade = grades_copy[0];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > previous_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_letter_grade = String::from(\"E\");\n            current_grade\
    \ = grade;\n        } else {\n            current_letter_grade = match grade {\n\
    \                0..=1 => String::from(\"D-\"),\n                1..=2 => String::from(\"\
    D\"),\n                2..=3 => String::from(\"C-\"),\n                3..=4 =>\
    \ String::from(\"C\"),\n                4..=5 => String::from(\"B-\"),\n     \
    \           5..=6 => String::from(\"B\"),\n                6..=7 => String::from(\"\
    A-\"),\n                7..=8 => String::from(\"A\"),\n                8..=9 =>\
    \ String::from(\"A+\"),\n                _ => String::from(\"E\"),\n         \
    \   };\n            current_grade = grade;\n        }\n        previous_grade\
    \ = grade;\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_copy[0];\n    let mut max_grade = grades_copy[0];\n\
    \    let mut min_grade_index = -1;\n    let mut max_grade_index = -1;\n    let\
    \ mut current_grade = grades_copy[0];\n    let mut current_index = -1;\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    \n    while current_index\
    \ < grades_copy.len() {\n        if current_grade > max_grade {\n            max_grade\
    \ = current_grade;\n            max_grade_index = current_index;\n        }\n\
    \        if current_grade < min_grade {\n            min_grade = current_grade;\n\
    \            min_grade_index = current_index;\n        }\n        if current_grade\
    \ == min_grade {\n            current_letter_grade = String::from(\"A\");\n  \
    \      }\n        if current_grade == max_grade {\n            current_letter_grade\
    \ = String::from(\"D\");\n        }\n        if current_grade < min_grade {\n\
    \            current_letter_grade = String::from(\"A-\");\n        }\n       \
    \ if current_grade > max_grade {\n            current_letter_grade = String::from(\"\
    D-\");\n        }\n        \n        letter_grades.push(current_letter_grade);\n\
    \        \n        current_grade = grades_copy[current_index];\n        current_index\
    \ += 1;\n    }\n    \n    letter_grades.push(String::from(\"E\"));\n    \n   \
    \ letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut prev_grade = grades_copy[0];\n    let mut prev_grade_index\
    \ = grades_copy.len() - 1;\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_grade_index = grades_copy.len() - 1;\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    while current_grade_index > 0 {\n        if current_grade\
    \ < prev_grade {\n            letter_grades.push(String::from(\"D-\"));\n    \
    \        current_grade_index = current_grade_index - 1;\n            current_grade\
    \ = grades_copy[current_grade_index];\n            current_letter_grade = String::from(\"\
    D-\");\n        } else if current_grade > prev_grade {\n            letter_grades.push(String::from(\"\
    D+\"));\n            current_grade_index = current_grade_index - 1;\n        \
    \    current_grade = grades_copy[current_grade_index];\n            current_letter_grade\
    \ = String::from(\"D+\");\n        } else {\n            letter_grades.push(String::from(\"\
    D\"));\n            current_grade_index = current_grade_index - 1;\n         \
    \   current_grade = grades_copy[current_grade_index];\n            current_letter_grade\
    \ = String::from(\"D\");\n        }\n        prev_grade = current_grade;\n   \
    \     prev_grade_index = current_grade_index;\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n    for grade\
    \ in grades {\n        if grade < 3.0 {\n            grades_vec.push(String::from(\"\
    A+\"));\n        } else if grade < 3.3 {\n            grades_vec.push(String::from(\"\
    A\"));\n        } else if grade < 3.7 {\n            grades_vec.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else if grade < 7.0 {\n            grades_vec.push(String::from(\"\
    E\"));\n        } else {\n            grades_vec.push(String::from(\"F\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut prev_grade = grades_copy[0];\n\
    \    let mut prev_letter_grade = String::from(\"E\");\n    let mut prev_letter_grade_index\
    \ = 0;\n    let mut prev_letter_grade_index2 = 0;\n    let mut prev_letter_grade_index3\
    \ = 0;\n    let mut prev_letter_grade_index4 = 0;\n    let mut prev_letter_grade_index5\
    \ = 0;\n    let mut prev_letter_grade_index6 = 0;\n    let mut prev_letter_grade_index7\
    \ = 0;\n    let mut prev_letter_grade_index8 = 0;\n    let mut prev_letter_grade_index9\
    \ = 0;\n    let mut prev_letter_grade_index10 = 0;\n    let mut prev_letter_grade_index11\
    \ = 0;\n    let mut prev_letter_grade_index12 = 0;\n    let mut prev_letter_grade_index13\
    \ = 0;\n    let mut prev_letter_grade_index14 = 0;\n    let mut prev_letter_grade_index15\
    \ = 0;\n    let mut prev_letter_grade_index16 = 0;\n    let mut prev_letter_grade_index17\
    \ = 0;\n    let mut prev_letter_grade_index18 = 0;\n    let mut prev_letter_grade_index19\
    \ = 0;\n    let mut prev_letter_grade_index20 = 0;\n    let mut prev_letter_grade_index21\
    \ = 0;\n    let mut prev_letter_grade_index22 = 0;\n    let mut prev_letter_grade_index23\
    \ = 0;\n    let mut prev_letter_grade_index24 = 0;\n    let mut prev_letter_grade_index25\
    \ = 0;\n    let mut prev_letter_grade_index26 = 0;\n    let mut prev_letter_grade_index27\
    \ = 0;\n    let mut prev_letter_grade_index28 = 0;\n    let mut prev_letter_grade_index29\
    \ = 0;\n    let mut prev_letter_grade_index30 = 0;\n    let mut prev_letter_grade_index31\
    \ = 0;\n    let mut prev_letter_grade_index32 = 0;\n    let mut prev_letter_grade_index33\
    \ = 0;\n    let mut prev_letter_grade_index34 = 0;\n    let mut prev_letter_grade_index35\
    \ = 0;\n    let mut prev_letter_grade_index36 = 0;\n    let mut prev_letter_grade_index37\
    \ = 0;\n    let mut prev_letter_grade_index38 = 0;\n    let mut prev_letter_grade_index39\
    \ = 0;\n    let mut prev_letter_grade_index40 = 0;\n    let mut prev_letter_grade_index41\
    \ = 0;\n    let mut prev_letter_grade_index42 = 0;\n    let mut prev_letter_grade_index43\
    \ = 0;\n    let mut prev_letter_grade_index44 = 0;\n    let mut prev_letter_grade_index45\
    \ = 0;\n    let mut prev_letter_grade_index46 = 0;\n    let mut prev_letter_grade_index47\
    \ = 0;\n    let mu", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > -0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > -0.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    let mut letter_grade = String::from(\"\
    E\");\n    while gpa > 0.0 {\n        let grade = if gpa < 3.0 { String::from(\"\
    D-\") } else { String::from(\"D\") };\n        letter_grades.push(grade);\n  \
    \      gpa -= 3.0;\n    }\n    while gpa > 2.0 {\n        let grade = if gpa <\
    \ 2.7 { String::from(\"B-\") } else { String::from(\"B\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 2.7;\n    }\n    while gpa > 1.7 {\n        let grade = if gpa\
    \ < 1.3 { String::from(\"B-\") } else { String::from(\"B\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 1.3;\n    }\n    while gpa > 1.0 {\n        let grade = if gpa\
    \ < 0.7 { String::from(\"B-\") } else { String::from(\"B\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 1.0;\n    }\n    while gpa > 0.3 {\n        let grade = if gpa\
    \ < 0.0 { String::from(\"B-\") } else { String::from(\"B\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 0.3;\n    }\n    while gpa > 0.0 {\n        let grade = if gpa\
    \ < 0.0 { String::from(\"B-\") } else { String::from(\"B\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 0.0;\n    }\n    while gpa > 0.0 {\n        let grade = if gpa\
    \ < 0.0 { String::from(\"B-\") } else { String::from(\"B\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 0.0;\n    }\n    while gpa > 0.0 {\n        let grade = if gpa\
    \ < 0.0 { String::from(\"B-\") } else { String::from(\"B\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 0.0;\n    }\n    while gpa > 0.0 {\n        let grade = if gpa\
    \ < 0.0 { String::from(\"B-\") } else { String::from(\"B\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 0.0;\n    }\n    while gpa > 0.0 {\n        let grade = if gpa\
    \ < 0.0 { String::from(\"B-\") } else { String::from(\"B\") };\n        letter_grades.push(grade);\n",
  "    let mut grades_iter = grades.iter();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_iter.next().unwrap();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    while current_grade > 0.0 {\n        let mut current_letter_grade\
    \ = current_letter_grade.clone();\n        if current_grade < 3.0 {\n        \
    \    current_letter_grade += String::from(\"+\");\n        } else if current_grade\
    \ < 3.3 {\n            current_letter_grade += String::from(\"-\");\n        }\n\
    \        if current_grade < 3.7 {\n            current_letter_grade += String::from(\"\
    A\");\n        } else if current_grade < 3.3 {\n            current_letter_grade\
    \ += String::from(\"B\");\n        } else if current_grade < 3.0 {\n         \
    \   current_letter_grade += String::from(\"C\");\n        } else if current_grade\
    \ < 2.7 {\n            current_letter_grade += String::from(\"D\");\n        }\
    \ else if current_grade < 2.3 {\n            current_letter_grade += String::from(\"\
    E\");\n        }\n        letter_grades.push(current_letter_grade);\n        current_grade\
    \ = grades_iter.next().unwrap();\n    }\n    letter_grades", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut min_grade\
    \ = grades_copy[0];\n    let mut max_grade = grades_copy[0];\n    let mut min_grade_index\
    \ = 0;\n    let mut max_grade_index = 0;\n    let mut min_grade_index2 = 0;\n\
    \    let mut max_grade_index2 = 0;\n    let mut min_grade_index3 = 0;\n    let\
    \ mut max_grade_index3 = 0;\n    let mut min_grade_index4 = 0;\n    let mut max_grade_index4\
    \ = 0;\n    let mut min_grade_index5 = 0;\n    let mut max_grade_index5 = 0;\n\
    \    let mut min_grade_index6 = 0;\n    let mut max_grade_index6 = 0;\n    let\
    \ mut min_grade_index7 = 0;\n    let mut max_grade_index7 = 0;\n    let mut min_grade_index8\
    \ = 0;\n    let mut max_grade_index8 = 0;\n    let mut min_grade_index9 = 0;\n\
    \    let mut max_grade_index9 = 0;\n    let mut min_grade_index10 = 0;\n    let\
    \ mut max_grade_index10 = 0;\n    let mut min_grade_index11 = 0;\n    let mut\
    \ max_grade_index11 = 0;\n    let mut min_grade_index12 = 0;\n    let mut max_grade_index12\
    \ = 0;\n    let mut min_grade_index13 = 0;\n    let mut max_grade_index13 = 0;\n\
    \    let mut min_grade_index14 = 0;\n    let mut max_grade_index14 = 0;\n    let\
    \ mut min_grade_index15 = 0;\n    let mut max_grade_index15 = 0;\n    let mut\
    \ min_grade_index16 = 0;\n    let mut max_grade_index16 = 0;\n    let mut min_grade_index17\
    \ = 0;\n    let mut max_grade_index17 = 0;\n    let mut min_grade_index18 = 0;\n\
    \    let mut max_grade_index18 = 0;\n    let mut min_grade_index19 = 0;\n    let\
    \ mut max_grade_index19 = 0;\n    let mut min_grade_index20 = 0;\n    let mut\
    \ max_grade_index20 = 0;\n    let mut min_grade_index21 = 0;\n    let mut max_grade_index21\
    \ = 0;\n    let mut min_grade_index22 = 0;\n    let mut max_grade_index22 = 0;\n\
    \    let mut min_grade_index23 = 0;\n    let mut max_grade_index23 = 0;\n    let\
    \ mut min_grade_index24 = 0;\n    let mut max_grade_index24 = 0;\n    let mut\
    \ min_grade_index25 = 0;\n    let mut max_grade_index25 = 0;\n    let mut min_grade_index26\
    \ = 0;\n    let mut max_grade_index26 = 0;\n    let mut min_grade_index27 = 0;\n\
    \    let mut ", "    let mut letter_grades = vec![];\n    let mut max_grade =\
    \ grades.iter().max().unwrap();\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut current_grade = max_grade;\n    let mut current_letter_grade = String::from(\"\
    E\");\n    for grade in grades {\n        if grade > current_grade {\n       \
    \     current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade < min_grade {\n            current_grade = grade;\n\
    \            current_letter_grade = String::from(\"E\");\n        } else {\n \
    \           if grade == current_grade {\n                let letter_grade = match\
    \ current_grade {\n                    4.0 => \"A+\",\n                    _ =>\
    \ \"A\",\n                };\n                letter_grades.push(letter_grade);\n\
    \            } else {\n                let letter_grade = match current_grade\
    \ {\n                    _ => \"A\",\n                    3.7 => \"A\",\n    \
    \                _ => \"A\",\n                };\n                letter_grades.push(letter_grade);\n\
    \            }\n        }\n    }\n    letter_grades", "    let mut letter_grades\
    \ = vec![];\n    for grade in grades {\n        if grade > 3.0 {\n           \
    \ letter_grades.push(String::from(\"B+\"));\n        } else if grade > 2.7 {\n\
    \            letter_grades.push(String::from(\"B\"));\n        } else if grade\
    \ > 2.3 {\n            letter_grades.push(String::from(\"B-\"));\n        } else\
    \ if grade > 1.3 {\n            letter_grades.push(String::from(\"C+\"));\n  \
    \      } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    while grades_copy.len()\
    \ > 0 {\n        if grades_copy.len() == 1 {\n            letter_grades.push(current_letter_grade);\n\
    \            break;\n        }\n        let mut current_grade = grades_copy.first();\n\
    \        let mut current_letter_grade = String::from(\"E\");\n        for grade\
    \ in grades_copy {\n            if grade < current_grade {\n                current_grade\
    \ = grade;\n                current_letter_grade = String::from(\"E\");\n    \
    \            break;\n            }\n            if grade == current_grade {\n\
    \                current_letter_grade += String::from(\"+\");\n            }\n\
    \            if grade > current_grade {\n                current_letter_grade\
    \ += String::from(\"-\");\n            }\n        }\n        letter_grades.push(current_letter_grade);\n\
    \        grades_copy.pop();\n    }\n    letter_grades", "    let mut grades_copy\
    \ = grades.clone();\n    grades_copy.sort_unstable();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy[0];\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(String::from(\"\
    A+\"));\n            current_grade = grade;\n        } else if grade < current_grade\
    \ {\n            letter_grades.push(String::from(\"A-\"));\n            current_grade\
    \ = grade;\n        } else {\n            letter_grades.push(String::from(\"B+\"\
    ));\n            current_grade = grade;\n        }\n    }\n    letter_grades.push(String::from(\"\
    E\"));\n    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n \
    \   for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut grades_sorted = grades_copy.clone();\n    grades_sorted.sort();\n\
    \    let mut grades_reversed = grades_sorted.clone();\n    grades_reversed.reverse();\n\
    \    let mut grades_reversed_sorted = grades_reversed.clone();\n    grades_reversed_sorted.sort();\n\
    \    let mut grades_reversed_sorted_copy = grades_reversed_sorted.clone();\n \
    \   grades_reversed_sorted_copy.sort();\n    let mut grades_reversed_sorted_copy_copy\
    \ = grades_reversed_sorted_copy.clone();\n    grades_reversed_sorted_copy_copy.pop();\n\
    \    let mut grades_reversed_sorted_copy_copy_copy = grades_reversed_sorted_copy_copy.clone();\n\
    \    grades_reversed_sorted_copy_copy_copy.pop();\n    let mut grades_reversed_sorted_copy_copy_copy_copy\
    \ = grades_reversed_sorted_copy_copy_copy.clone();\n    grades_reversed_sorted_copy_copy_copy_copy.pop();\n\
    \    let mut grades_reversed_sorted_copy_copy_copy_copy_copy = grades_reversed_sorted_copy_copy_copy_copy.clone();\n\
    \    grades_reversed_sorted_copy_copy_copy_copy_copy_copy.pop();\n    let mut\
    \ grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy = grades_reversed_sorted_copy_copy_copy_copy_copy_copy.clone();\n\
    \    grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy.pop();\n    let\
    \ mut grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy_copy = grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy.pop();\n\
    \    let mut grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.pop();\n\
    \    let mut grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.pop();\n\
    \    let mut grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \    grades_reversed_sorted_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.pop();\n\
    \    let mut grades_reversed_sorted_copy_copy_copy_copy_copy_copy_", "    let\
    \ mut letter_grades = vec![];\n    let mut max_grade = grades.iter().max().unwrap();\n\
    \    let mut min_grade = grades.iter().min().unwrap();\n    let mut current_grade\
    \ = grades.iter().sum().unwrap();\n    let mut current_letter_grade = String::from(\"\
    E\");\n    while current_grade > 0.0 {\n        if current_grade >= max_grade\
    \ {\n            current_letter_grade = String::from(\"D-\");\n        } else\
    \ if current_grade >= min_grade {\n            current_letter_grade = String::from(\"\
    D\");\n        } else if current_grade >= 3.0 {\n            current_letter_grade\
    \ = String::from(\"C-\");\n        } else if current_grade >= 2.0 {\n        \
    \    current_letter_grade = String::from(\"C\");\n        } else if current_grade\
    \ >= 1.7 {\n            current_letter_grade = String::from(\"B-\");\n       \
    \ } else if current_grade >= 1.0 {\n            current_letter_grade = String::from(\"\
    B\");\n        } else if current_grade >= 0.7 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n        } else if current_grade >= 0.3 {\n        \
    \    current_letter_grade = String::from(\"B\");\n        } else if current_grade\
    \ >= 0.0 {\n            current_letter_grade = String::from(\"B+\");\n       \
    \ } else if current_grade < 0.0 {\n            current_letter_grade = String::from(\"\
    A\");\n        } else {\n            current_letter_grade = String::from(\"A+\"\
    );\n        }\n        letter_grades.push(current_letter_grade);\n        current_grade\
    \ -= max_grade;\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut min_grade = grades_copy[0];\n\
    \    let mut max_grade = grades_copy[0];\n    for i in grades_copy.iter() {\n\
    \        if i < min_grade {\n            min_grade = i;\n        }\n        if\
    \ i > max_grade {\n            max_grade = i;\n        }\n    }\n    let mut grades_range\
    \ = max_grade - min_grade;\n    for i in grades_copy.iter() {\n        let mut\
    \ grade = i - min_grade;\n        if grade >= grades_range {\n            grade\
    \ -= grades_range;\n            letter_grades.push(String::from(\"D-\"));\n  \
    \      }\n        if grade < grades_range / 2 {\n            grade += grades_range;\n\
    \            letter_grades.push(String::from(\"D+\"));\n        }\n        if\
    \ grade < grades_range / 3 {\n            grade += grades_range;\n           \
    \ letter_grades.push(String::from(\"D\"));\n        }\n        if grade < grades_range\
    \ / 4 {\n            grade += grades_range;\n            letter_grades.push(String::from(\"\
    D+\"));\n        }\n        if grade < grades_range / 5 {\n            grade +=\
    \ grades_range;\n            letter_grades.push(String::from(\"D-\"));\n     \
    \   }\n        if grade < grades_range / 6 {\n            grade += grades_range;\n\
    \            letter_grades.push(String::from(\"D\"));\n        }\n        if grade\
    \ < grades_range / 7 {\n            grade += grades_range;\n            letter_grades.push(String::from(\"\
    D+\"));\n        }\n        if grade < grades_range / 8 {\n            grade +=\
    \ grades_range;\n            letter_grades.push(String::from(\"D-\"));\n     \
    \   }\n        if grade < grades_range / 9 {\n            grade += grades_range;\n\
    \            letter_grades.push(String::from(\"D\"));\n        }\n        if grade\
    \ < grades_range / 10 {\n            grade += grades_range;\n            letter_grades.push(String::from(\"\
    D+\"));\n        }\n        if grade < grades_range / 11 {\n            grade\
    \ += grades_range;\n            letter_grades.push(String::from(\"D-\"));\n  \
    \      }\n        if grade < grades_range / 12 {\n            grade += grades_range;\n\
    \            letter_grades.push(String::from(\"D\"));\n        }\n        if grade ",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            letter_grades.push(String::from(\"B+\"));\n        } else\
    \ if grade > 2.7 {\n            letter_grades.push(String::from(\"B\"));\n   \
    \     } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > -0.3 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade > -0.7 {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut total_grade = grades.iter().sum();\n    let mut total_letter_grade\
    \ = String::new();\n    for grade in grades {\n        let letter_grade = if grade\
    \ >= total_grade {\n            String::from(\"D+\")\n        } else if grade\
    \ <= total_grade {\n            String::from(\"D-\")\n        } else {\n     \
    \       String::from(\"C\")\n        };\n        total_grade -= grade;\n     \
    \   total_letter_grade += letter_grade;\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades.push(total_letter_grade);\n    letter_grades", "   \
    \ let mut grades_string = grades.iter().map(|x| x.to_string()).collect::<Vec<String>>();\n\
    \    grades_string.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_string[0];\n    for grade in grades_string {\n        if grade > current_grade\
    \ {\n            letter_grades.push(String::from(\"B-\"));\n            current_grade\
    \ = grade;\n        } else if grade < current_grade {\n            letter_grades.push(String::from(\"\
    B-\"));\n            current_grade = grade;\n        } else if grade == current_grade\
    \ {\n            letter_grades.push(String::from(\"B-\"));\n            current_grade\
    \ = grade;\n        } else {\n            letter_grades.push(String::from(\"B-\"\
    ));\n            current_grade = grade;\n        }\n    }\n    letter_grades.push(String::from(\"\
    B-\"));\n    letter_grades", "    let mut grades_iter = grades.iter();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    while let Some(grade)\
    \ = grades_iter.next() {\n        if grade > current_grade {\n            current_letter_grade\
    \ = String::from(\"D-\");\n        } else if grade < current_grade {\n       \
    \     current_letter_grade = String::from(\"D+\");\n        } else {\n       \
    \     current_letter_grade = String::from(\"D\");\n        }\n        current_grade\
    \ = grade;\n        letter_grades.push(current_letter_grade);\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec", "    let\
    \ mut letter_grades = vec![];\n    for grade in grades {\n        if grade > 3.0\
    \ {\n            letter_grades.push(String::from(\"B+\"));\n        } else if\
    \ grade > 2.7 {\n            letter_grades.push(String::from(\"B\"));\n      \
    \  } else if grade > 2.3 {\n            letter_grades.push(String::from(\"B-\"\
    ));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_iter = grades.iter();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    \n    while current_grade\
    \ != 0.0 {\n        let mut current_letter_grade = String::from(\"E\");\n    \
    \    \n        if current_grade < 3.0 {\n            if current_grade < current_letter_grade\
    \ {\n                current_letter_grade = String::from(\"A+\");\n          \
    \  }\n        }\n        \n        if current_grade < 3.3 {\n            if current_grade\
    \ < current_letter_grade {\n                current_letter_grade = String::from(\"\
    A\");\n            }\n        }\n        \n        if current_grade < 3.7 {\n\
    \            if current_grade < current_letter_grade {\n                current_letter_grade\
    \ = String::from(\"A-\");\n            }\n        }\n        \n        if current_grade\
    \ < 4.0 {\n            if current_grade < current_letter_grade {\n           \
    \     current_letter_grade = String::from(\"B+\");\n            }\n        }\n\
    \        \n        if current_grade < 4.3 {\n            if current_grade < current_letter_grade\
    \ {\n                current_letter_grade = String::from(\"B\");\n           \
    \ }\n        }\n        \n        if current_grade < 4.7 {\n            if current_grade\
    \ < current_letter_grade {\n                current_letter_grade = String::from(\"\
    B-\");\n            }\n        }\n        \n        if current_grade < 5.0 {\n\
    \            if current_grade < current_letter_grade {\n                current_letter_grade\
    \ = String::from(\"C+\");\n            }\n        }\n        \n        if current_grade\
    \ < 5.3 {\n            if current_grade < current_letter_grade {\n           \
    \     current_letter_grade = String::from(\"C\");\n            }\n        }\n\
    \        \n        if current_grade < 5.7 {\n            if current_grade < current_letter_grade\
    \ {\n                current_letter_grade = String::from(\"C-\");\n          \
    \  }\n        }\n        \n        if current_grade < 6.0 {\n            if current_grade\
    \ < current_letter_grade {\n                current_letter_grade = String::from(\"\
    D+\");\n            }\n        }\n        \n        if current_grade < 6.3 {\n\
    \            if current_grade < current_letter_grade {\n                current_letter_grade\
    \ = String::from(\"D\");\n            }\n        }\n        \n        if current_grade\
    \ < 6.7 {\n            if current_grade < current_letter_grade {\n           \
    \     current_letter_grade = String::from(\"D-\");\n            }\n        }",
  "    let mut grades_copy = grades.clone();\n    let mut grades_len = grades_copy.len();\n\
    \    let mut grades_sorted = grades_copy.clone();\n    grades_sorted.sort();\n\
    \    let mut grades_sorted_len = grades_sorted.len();\n    let mut grades_sorted_copy\
    \ = grades_sorted.clone();\n    let mut grades_sorted_copy_len = grades_sorted_copy.len();\n\
    \    let mut grades_sorted_copy_len2 = grades_sorted_copy_len.clone();\n    let\
    \ mut grades_sorted_copy_len3 = grades_sorted_copy_len2.clone();\n    let mut\
    \ grades_sorted_copy_len4 = grades_sorted_copy_len3.clone();\n    let mut grades_sorted_copy_len5\
    \ = grades_sorted_copy_len4.clone();\n    let mut grades_sorted_copy_len6 = grades_sorted_copy_len5.clone();\n\
    \    let mut grades_sorted_copy_len7 = grades_sorted_copy_len6.clone();\n    let\
    \ mut grades_sorted_copy_len8 = grades_sorted_copy_len7.clone();\n    let mut\
    \ grades_sorted_copy_len9 = grades_sorted_copy_len8.clone();\n    let mut grades_sorted_copy_len10\
    \ = grades_sorted_copy_len9.clone();\n    let mut grades_sorted_copy_len11 = grades_sorted_copy_len10.clone();\n\
    \    let mut grades_sorted_copy_len12 = grades_sorted_copy_len11.clone();\n  \
    \  let mut grades_sorted_copy_len13 = grades_sorted_copy_len12.clone();\n    let\
    \ mut grades_sorted_copy_len14 = grades_sorted_copy_len13.clone();\n    let mut\
    \ grades_sorted_copy_len15 = grades_sorted_copy_len14.clone();\n    let mut grades_sorted_copy_len16\
    \ = grades_sorted_copy_len15.clone();\n    let mut grades_sorted_copy_len17 =\
    \ grades_sorted_copy_len16.clone();\n    let mut grades_sorted_copy_len18 = grades_sorted_copy_len17.clone();\n\
    \    let mut grades_sorted_copy_len19 = grades_sorted_copy_len18.clone();\n  \
    \  let mut grades_sorted_copy_len20 = grades_sorted_copy_len19.clone();\n    let\
    \ mut grades_sorted_copy_len21 = grades_sorted_copy_len20.clone();\n    let mut\
    \ grades_sorted_copy_len22 = grades_sorted_copy_len21.clone();\n    let mut grades_sorted_copy_len23\
    \ = grades_sorted_copy_len22.clone();\n    let mut grades_sorted_copy_len24 =\
    \ grades_sorted_copy_len23.clone();\n    let mut grades_sorted_copy_len25 = grades_sorted_copy_len24.clone();\n\
    \    let mut grades_sorted_copy_", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_len = grades_copy.len();\n\
    \    let mut grades_index = 0;\n    let mut grades_sum = 0.0;\n    let mut grades_average\
    \ = 0.0;\n    let mut grades_letter_grades = Vec::new();\n    while grades_index\
    \ < grades_len {\n        let grade = grades_copy[grades_index];\n        grades_sum\
    \ += grade;\n        grades_average += grade;\n        grades_letter_grades.push(String::from(\n\
    \            match grade {\n                0.0 => \"E\",\n                1.0\
    \ => \"D+\",\n                2.0 => \"D\",\n                3.0 => \"D-\",\n\
    \                4.0 => \"C+\",\n                5.0 => \"C\",\n             \
    \   6.0 => \"C-\",\n                7.0 => \"B+\",\n                8.0 => \"\
    B\",\n                9.0 => \"B-\",\n                10.0 => \"A+\",\n      \
    \          11.0 => \"A\",\n                12.0 => \"A-\",\n                _\
    \ => \"\".to_string(),\n            },\n        ));\n        grades_index += 1;\n\
    \    }\n    grades_average /= grades_len;\n    grades_letter_grades.push(String::from(\n\
    \        match grades_average {\n            0.0 => \"E\",\n            1.0 =>\
    \ \"D+\",\n            2.0 => \"D\",\n            3.0 => \"D-\",\n           \
    \ 4.0 => \"C+\",\n            5.0 => \"C\",\n            6.0 => \"C-\",\n    \
    \        7.0 => \"B+\",\n            8.0 => \"B\",\n            9.0 => \"B-\"\
    ,\n            10.0 => \"A+\",\n            11.0 => \"A\",\n            12.0 =>\
    \ \"A-\",\n            _ => \"\".to_string(),\n        },\n    ));\n    grades_letter_grades",
  "    let mut grades_iter = grades.iter();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_iter.next().unwrap();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    loop {\n        if current_grade > 0.0 {\n     \
    \       letter_grades.push(current_letter_grade);\n            current_grade =\
    \ grades_iter.next().unwrap();\n            current_letter_grade = String::from(\"\
    E\");\n        }\n        if current_grade < 0.0 {\n            current_grade\
    \ = grades_iter.next().unwrap();\n            current_letter_grade = String::from(\"\
    E\");\n        }\n        if current_grade == 0.0 {\n            current_letter_grade\
    \ = String::from(\"D\");\n        }\n        if current_grade < 3.0 {\n      \
    \      current_letter_grade = String::from(\"C\");\n        }\n        if current_grade\
    \ < 3.7 {\n            current_letter_grade = String::from(\"B\");\n        }\n\
    \        if current_grade < 4.0 {\n            current_letter_grade = String::from(\"\
    A\");\n        }\n        if current_grade < 4.3 {\n            current_letter_grade\
    \ = String::from(\"A\");\n        }\n        if current_grade < 4.7 {\n      \
    \      current_letter_grade = String::from(\"A\");\n        }\n        if current_grade\
    \ < 5.0 {\n            current_letter_grade = String::from(\"A\");\n        }\n\
    \        if current_grade < 5.3 {\n            current_letter_grade = String::from(\"\
    A\");\n        }\n        if current_grade < 5.7 {\n            current_letter_grade\
    \ = String::from(\"A\");\n        }\n        if current_grade < 6.0 {\n      \
    \      current_letter_grade = String::from(\"A\");\n        }\n        if current_grade\
    \ < 6.3 {\n            current_letter_grade = String::from(\"A\");\n        }\n\
    \        if current_grade < 6.7 {\n            current_letter_grade = String::from(\"\
    A\");\n        }\n        if current_grade < 7.0 {\n            current_letter_grade\
    \ = String::from(\"A\");\n        }\n        if current_grade < 7.3 {\n      \
    \      current_letter_grade = String::from(\"A\");\n        }\n        if current_grade\
    \ < 7.7 {\n            current_letter_grade = String::from(\"A\");\n        }\n\
    \        if current_grade < 8.0 {\n            current_letter_grade = String::from(\"\
    A\");\n        }\n        if current_grade < 8.3 {\n            current_letter_grade\
    \ = String::from(\"A\");\n        }\n        if current_grade < 8.7 {\n      \
    \      current_letter_grade = String::from(\"A\");\n        }\n        if current_grade\
    \ < ", "    let mut grades_sorted = grades.clone();\n    grades_sorted.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_sorted[0];\n\
    \    let mut current_letter = String::from(\"E\");\n    for grade in grades_sorted\
    \ {\n        if grade > current_grade {\n            current_letter = String::from(\"\
    E\");\n            current_grade = grade;\n        } else if grade == current_grade\
    \ {\n            current_letter = String::from(current_letter.chars().next().unwrap().to_string());\n\
    \        }\n        letter_grades.push(current_letter);\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    let mut max_grade = grades.iter().max().unwrap();\n\
    \    let mut min_grade = grades.iter().min().unwrap();\n    let mut current_grade\
    \ = max_grade;\n    let mut current_letter_grade = String::from(\"E\");\n    for\
    \ grade in grades {\n        if grade > current_grade {\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade < min_grade {\n            current_grade = grade;\n          \
    \  current_letter_grade = String::from(\"E\");\n        } else if grade == current_grade\
    \ {\n            current_letter_grade = String::from(\n                match current_grade\
    \ {\n                    4.0  => \"A+\",\n                    3.7  => \"A\",\n\
    \                    3.3  => \"A-\",\n                    3.0  => \"B+\",\n  \
    \                  2.7  => \"B\",\n                    2.3  => \"B-\",\n     \
    \               2.0  => \"C+\",\n                    1.7  => \"C\",\n        \
    \            1.3  => \"C-\",\n                    1.0  => \"D+\",\n          \
    \          0.7  => \"D\",\n                    0.0  => \"D-\",\n             \
    \       0.0  => \"E\",\n                }\n            );\n        }\n       \
    \ letter_grades.push(current_letter_grade);\n    }\n    letter_grades", "    let\
    \ mut grades_iter = grades.iter();\n    let mut grades_vec: Vec<String> = vec![];\n\
    \    let mut current_grade: f64 = grades_iter.next().unwrap();\n    let mut current_letter_grade:\
    \ String;\n    \n    while current_grade != 0.0 {\n        let mut current_letter_grade:\
    \ String;\n        \n        if current_grade < 3.0 {\n            current_letter_grade\
    \ = String::from(\"A+\");\n        } else if current_grade < 3.7 {\n         \
    \   current_letter_grade = String::from(\"A\");\n        } else if current_grade\
    \ < 4.0 {\n            current_letter_grade = String::from(\"A-\");\n        }\
    \ else if current_grade < 4.7 {\n            current_letter_grade = String::from(\"\
    B+\");\n        } else if current_grade < 5.0 {\n            current_letter_grade\
    \ = String::from(\"B\");\n        } else if current_grade < 5.7 {\n          \
    \  current_letter_grade = String::from(\"B-\");\n        } else if current_grade\
    \ < 6.0 {\n            current_letter_grade = String::from(\"C+\");\n        }\
    \ else if current_grade < 6.7 {\n            current_letter_grade = String::from(\"\
    C\");\n        } else if current_grade < 7.0 {\n            current_letter_grade\
    \ = String::from(\"C-\");\n        } else if current_grade < 7.7 {\n         \
    \   current_letter_grade = String::from(\"D+\");\n        } else if current_grade\
    \ < 8.0 {\n            current_letter_grade = String::from(\"D\");\n        }\
    \ else if current_grade < 8.7 {\n            current_letter_grade = String::from(\"\
    D-\");\n        } else if current_grade < 9.0 {\n            current_letter_grade\
    \ = String::from(\"E\");\n        } else {\n            current_letter_grade =\
    \ String::from(\"F\");\n        }\n        \n        grades_vec.push(current_letter_grade);\n\
    \        \n        current_grade = grades_iter.next().unwrap();\n    }\n    \n\
    \    grades_vec", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy.pop().unwrap();\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    while grades_copy.len()\
    \ > 0 {\n        let mut current_grade = grades_copy.pop().unwrap();\n       \
    \ let mut current_letter_grade = String::from(\"E\");\n        if current_grade\
    \ < current_grade {\n            current_letter_grade = String::from(\"E\");\n\
    \        } else if current_grade < current_grade + 0.3 {\n            current_letter_grade\
    \ = String::from(\"A-\");\n        } else if current_grade < current_grade + 0.4\
    \ {\n            current_letter_grade = String::from(\"A\");\n        } else if\
    \ current_grade < current_grade + 0.5 {\n            current_letter_grade = String::from(\"\
    B+\");\n        } else if current_grade < current_grade + 0.6 {\n            current_letter_grade\
    \ = String::from(\"B\");\n        } else if current_grade < current_grade + 0.7\
    \ {\n            current_letter_grade = String::from(\"B-\");\n        } else\
    \ if current_grade < current_grade + 0.8 {\n            current_letter_grade =\
    \ String::from(\"C+\");\n        } else if current_grade < current_grade + 0.9\
    \ {\n            current_letter_grade = String::from(\"C\");\n        } else if\
    \ current_grade < current_grade + 1.0 {\n            current_letter_grade = String::from(\"\
    C-\");\n        } else if current_grade < current_grade + 1.1 {\n            current_letter_grade\
    \ = String::from(\"D+\");\n        } else if current_grade < current_grade + 1.2\
    \ {\n            current_letter_grade = String::from(\"D\");\n        } else if\
    \ current_grade < current_grade + 1.3 {\n            current_letter_grade = String::from(\"\
    D-\");\n        } else if current_grade < current_grade + 1.4 {\n            current_letter_grade\
    \ = String::from(\"F\");\n        } else {\n            current_letter_grade =\
    \ String::from(\"F\");\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_letter = String::new();\n    \n\
    \    while current_grade.len() > 0 {\n        let mut current_gpa_copy = current_gpa.clone();\n\
    \        let mut current_letter_grade_copy = current_letter_grade.clone();\n \
    \       let mut current_gpa_letter_copy = current_gpa_letter.clone();\n      \
    \  \n        while current_gpa_copy.len() > 0 {\n            let mut current_gpa_copy_copy\
    \ = current_gpa_copy.clone();\n            let mut current_letter_grade_copy_copy\
    \ = current_letter_grade_copy.clone();\n            let mut current_gpa_letter_copy_copy\
    \ = current_gpa_letter_copy.clone();\n            \n            if current_gpa_copy_copy.len()\
    \ == 0 {\n                break;\n            }\n            \n            if\
    \ current_gpa_copy_copy.len() == 1 {\n                current_gpa_copy_copy.pop();\n\
    \                current_letter_grade_copy_copy.pop();\n                current_gpa_letter_copy_copy.pop();\n\
    \            }\n            \n            if current_gpa_copy_copy.len() > 1 {\n\
    \                let mut current_gpa_copy_copy_copy = current_gpa_copy_copy.clone();\n\
    \                let mut current_letter_grade_copy_copy_copy = current_letter_grade_copy_copy.clone();\n\
    \                let mut current_gpa_letter_copy_copy_copy = current_gpa_letter_copy_copy.clone();\n\
    \                \n                let mut current_gpa_copy_copy_copy_copy = current_gpa_copy_copy_copy.clone();\n\
    \                let mut current_letter_grade_copy_copy_copy_copy = current_letter_grade_copy_copy_copy.clone();\n\
    \                let mut current_gpa_letter_copy_copy_copy_copy = current_gpa_letter_copy_copy_copy.clone();\n\
    \                \n                let mut current_gpa_copy_copy_copy_copy_copy_copy\
    \ = current_gpa_copy_copy_copy_copy.clone();\n                let mut current_letter_grade_copy_copy_copy_copy_copy\
    \ = current_letter_grade_copy_copy_copy_copy.clone();\n                let mut\
    \ current_gpa_letter_copy_copy_copy_copy_copy = current_gpa_letter_copy_copy_copy_copy.clone();\n\
    \                \n                let mut current_gpa_copy_copy_copy_copy_copy_copy\
    \ = current_gpa_copy_copy_copy_copy_copy.clone();\n                let mut current_letter_grade_copy_copy_copy_copy_copy_copy\
    \ = current_letter_grade_copy_copy_copy_copy_copy_copy.clone();\n            \
    \    let mut current_gpa_letter_copy_copy_copy_copy_copy_copy_copy = current_gpa_letter_copy_copy_copy_copy_copy_copy_copy.clone();\n\
    \                ", "    let mut grades_vec: Vec<String> = vec![];\n    let mut\
    \ total_grade: f64 = 0.0;\n    for grade in grades {\n        total_grade += grade;\n\
    \    }\n    let mut total_grade_div: f64 = total_grade / grades.len();\n    let\
    \ mut total_grade_div_pow: f64 = total_grade_div;\n    for grade in grades {\n\
    \        let mut grade_div: f64 = grade / total_grade_div_pow;\n        let mut\
    \ grade_div_pow: f64 = grade_div;\n        for _ in 0..grades.len() {\n      \
    \      grade_div_pow *= grade_div;\n        }\n        if grade < total_grade\
    \ {\n            grades_vec.push(String::from(\"E\"));\n        } else {\n   \
    \         let mut grade_div_pow_div: f64 = grade_div_pow;\n            for _ in\
    \ 0..grades.len() {\n                grade_div_pow_div *= grade_div_pow;\n   \
    \         }\n            let mut grade_div_pow_div_pow: f64 = grade_div_pow_div;\n\
    \            for _ in 0..grades.len() {\n                grade_div_pow_div_pow\
    \ *= grade_div_pow_div;\n            }\n            let mut grade_div_pow_div_pow_pow:\
    \ f64 = grade_div_pow_div_pow;\n            for _ in 0..grades.len() {\n     \
    \           grade_div_pow_div_pow_pow *= grade_div_pow_div_pow;\n            }\n\
    \            let mut grade_div_pow_div_pow_pow_pow: f64 = grade_div_pow_div_pow_pow;\n\
    \            for _ in 0..grades.len() {\n                grade_div_pow_div_pow_pow_pow\
    \ *= grade_div_pow_div_pow_pow;\n            }\n            let mut grade_div_pow_div_pow_pow_pow_pow:\
    \ f64 = grade_div_pow_div_pow_pow_pow;\n            for _ in 0..grades.len() {\n\
    \                grade_div_pow_div_pow_pow_pow_pow *= grade_div_pow_div_pow_pow_pow;\n\
    \            }\n            let mut grade_div_pow_div_pow_pow_pow_pow_pow: f64\
    \ = grade_div_pow_div_pow_pow_pow_pow;\n            for _ in 0..grades.len() {\n\
    \                grade_div_pow_div_pow_pow_pow_pow_pow *= grade_div_pow_div_pow_pow_pow_pow;\n\
    \            }\n            let mut grade_div_pow_div_pow_pow_pow_pow_pow_pow_pow:\
    \ f64 = grade_div_pow_div_pow_pow_pow_pow_pow;\n", "    let mut grades_sorted\
    \ = grades.clone();\n    grades_sorted.sort_unstable();\n    let mut grades_sorted_copy\
    \ = grades_sorted.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut prev_grade = grades_copy[0];\n    let mut prev_letter_grade = String::from(\"\
    E\");\n    let mut prev_letter_grade_index = 0;\n    let mut prev_gpa = grades_copy[0];\n\
    \    let mut prev_gpa_letter = String::from(\"E\");\n    let mut prev_gpa_letter_index\
    \ = 0;\n    let mut prev_gpa_letter_grade = String::from(\"E\");\n    let mut\
    \ prev_gpa_letter_grade_index = 0;\n    let mut prev_gpa_letter_grade_index2 =\
    \ 0;\n    let mut prev_gpa_letter_grade_index3 = 0;\n    let mut prev_gpa_letter_grade_index4\
    \ = 0;\n    let mut prev_gpa_letter_grade_index5 = 0;\n    let mut prev_gpa_letter_grade_index6\
    \ = 0;\n    let mut prev_gpa_letter_grade_index7 = 0;\n    let mut prev_gpa_letter_grade_index8\
    \ = 0;\n    let mut prev_gpa_letter_grade_index9 = 0;\n    let mut prev_gpa_letter_grade_index10\
    \ = 0;\n    let mut prev_gpa_letter_grade_index11 = 0;\n    let mut prev_gpa_letter_grade_index12\
    \ = 0;\n    let mut prev_gpa_letter_grade_index13 = 0;\n    let mut prev_gpa_letter_grade_index14\
    \ = 0;\n    let mut prev_gpa_letter_grade_index15 = 0;\n    let mut prev_gpa_letter_grade_index16\
    \ = 0;\n    let mut prev_gpa_letter_grade_index17 = 0;\n    let mut prev_gpa_letter_grade_index18\
    \ = 0;\n    let mut prev_gpa_letter_grade_index19 = 0;\n    let mut prev_gpa_letter_grade_index20\
    \ = 0;\n    let mut prev_gpa_letter_grade_index21 = 0;\n    let mut prev_gpa_letter_grade_index22\
    \ = 0;\n    let mut prev_gpa_letter_grade_index23 = 0;\n    let mut prev_gpa_letter_grade_index24\
    \ = 0;\n    let mut prev_gpa_letter_grade_index25 = 0;\n    let mut prev_gpa_letter_grade_index26\
    \ = 0;\n    let mut prev_gpa_letter_grade_index27 = 0;\n    let mut prev_gpa_letter_grade_index28\
    \ = 0;\n    let mut prev_gpa_letter_grade_index29 = 0;\n    let mut prev_gpa_letter_grade_index30\
    \ = 0;\n    let mut prev_gpa_letter_grade_index31 = 0;\n    let mut prev_gpa_letter_grade_index32\
    \ = 0;\n    let mut prev_gpa_letter_grade_index33 = 0;\n    let mut prev_gpa_letter_grade_index34\
    \ = 0;\n    let mu", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_string = vec![];\n\
    \    let mut grades_counter = vec![];\n    for grade in grades {\n        if grade\
    \ < 3.0 {\n            grades_string.push(String::from(\"A+\"));\n           \
    \ grades_counter.push(1);\n        } else if grade < 4.0 {\n            grades_string.push(String::from(\"\
    A\"));\n            grades_counter.push(1);\n        } else if grade < 5.0 {\n\
    \            grades_string.push(String::from(\"A-\"));\n            grades_counter.push(1);\n\
    \        } else if grade < 6.0 {\n            grades_string.push(String::from(\"\
    B+\"));\n            grades_counter.push(1);\n        } else if grade < 7.0 {\n\
    \            grades_string.push(String::from(\"B\"));\n            grades_counter.push(1);\n\
    \        } else if grade < 8.0 {\n            grades_string.push(String::from(\"\
    B-\"));\n            grades_counter.push(1);\n        } else if grade < 9.0 {\n\
    \            grades_string.push(String::from(\"C+\"));\n            grades_counter.push(1);\n\
    \        } else if grade < 10.0 {\n            grades_string.push(String::from(\"\
    C\"));\n            grades_counter.push(1);\n        } else if grade < 11.0 {\n\
    \            grades_string.push(String::from(\"C-\"));\n            grades_counter.push(1);\n\
    \        } else if grade < 12.0 {\n            grades_string.push(String::from(\"\
    D+\"));\n            grades_counter.push(1);\n        } else if grade < 13.0 {\n\
    \            grades_string.push(String::from(\"D\"));\n            grades_counter.push(1);\n\
    \        } else if grade < 14.0 {\n            grades_string.push(String::from(\"\
    D-\"));\n            grades_counter.push(1);\n        } else if grade < 15.0 {\n\
    \            grades_string.push(String::from(\"E\"));\n            grades_counter.push(1);\n\
    \        } else {\n            grades_string.push(String::from(\"F\"));\n    \
    \        grades_counter.push(0);\n        }\n    }\n    grades_string.push(String::from(\"\
    F\"));\n    grades_counter.push(0);\n    grades_counter", "    let mut letter_grades\
    \ = vec![];\n    let mut gpa = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    let mut grade = grades.iter().",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::from(\"\");\n        if grade < 3.0 {\n            letter_grade\
    \ += \"A\";\n        } else if grade < 3.3 {\n            letter_grade += \"A-\"\
    ;\n        } else if grade < 3.7 {\n            letter_grade += \"B+\";\n    \
    \    } else if grade < 4.0 {\n            letter_grade += \"B\";\n        } else\
    \ if grade < 4.3 {\n            letter_grade += \"B-\";\n        } else if grade\
    \ < 4.7 {\n            letter_grade += \"C+\";\n        } else if grade < 5.0\
    \ {\n            letter_grade += \"C\";\n        } else if grade < 5.3 {\n   \
    \         letter_grade += \"C-\";\n        } else if grade < 5.7 {\n         \
    \   letter_grade += \"D+\";\n        } else if grade < 6.0 {\n            letter_grade\
    \ += \"D\";\n        } else if grade < 6.3 {\n            letter_grade += \"D-\"\
    ;\n        } else if grade < 6.7 {\n            letter_grade += \"E\";\n     \
    \   } else {\n            letter_grade += \"F\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut grades_sorted = grades_copy.clone();\n    grades_sorted.sort();\n    let\
    \ mut grades_sorted_copy = grades_sorted.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let mut grades_sorted_copy\
    \ = grades_sorted_copy.clone();\n    let mut grades_sorted_copy = grades_sorted_copy.clone();\n\
    \    let mut grades_sorted_copy = grades_sorted_copy.clone();\n    let ", "  \
    \  let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut grades_sum = 0.0;\n    let mut grades_index = 0;\n    let mut grades_index2\
    \ = 0;\n    let mut grades_index3 = 0;\n    let mut grades_index4 = 0;\n    let\
    \ mut grades_index5 = 0;\n    let mut grades_index6 = 0;\n    let mut grades_index7\
    \ = 0;\n    let mut grades_index8 = 0;\n    let mut grades_index9 = 0;\n    let\
    \ mut grades_index10 = 0;\n    let mut grades_index11 = 0;\n    let mut grades_index12\
    \ = 0;\n    let mut grades_index13 = 0;\n    let mut grades_index14 = 0;\n   \
    \ let mut grades_index15 = 0;\n    let mut grades_index16 = 0;\n    let mut grades_index17\
    \ = 0;\n    let mut grades_index18 = 0;\n    let mut grades_index19 = 0;\n   \
    \ let mut grades_index20 = 0;\n    let mut grades_index21 = 0;\n    let mut grades_index22\
    \ = 0;\n    let mut grades_index23 = 0;\n    let mut grades_index24 = 0;\n   \
    \ let mut grades_index25 = 0;\n    let mut grades_index26 = 0;\n    let mut grades_index27\
    \ = 0;\n    let mut grades_index28 = 0;\n    let mut grades_index29 = 0;\n   \
    \ let mut grades_index30 = 0;\n    let mut grades_index31 = 0;\n    let mut grades_index32\
    \ = 0;\n    let mut grades_index33 = 0;\n    let mut grades_index34 = 0;\n   \
    \ let mut grades_index35 = 0;\n    let mut grades_index36 = 0;\n    let mut grades_index37\
    \ = 0;\n    let mut grades_index38 = 0;\n    let mut grades_index39 = 0;\n   \
    \ let mut grades_index40 = 0;\n    let mut grades_index41 = 0;\n    let mut grades_index42\
    \ = 0;\n    let mut grades_index43 = 0;\n    let mut grades_index44 = 0;\n   \
    \ let mut grades_index45 = 0;\n    let mut grades_index46 = 0;\n    let mut grades_index47\
    \ = 0;\n    let mut grades_index48 = 0;\n    let mut grades_index49 = 0;\n   \
    \ let mut grades_index50 = 0;\n    let mut grades_index51 = 0;\n    let mut grades_index52\
    \ = 0;\n    let mut grades_index53 = 0;\n    let mut grades_index54 = 0;\n   \
    \ let mu", "    let mut grades_copy = grades.clone();\n    let mut grades_len\
    \ = grades_copy.len();\n    let mut letter_grades = vec![];\n    while grades_len\
    \ > 0 {\n        let mut grade = grades_copy.pop();\n        if grade > 3.0 {\n\
    \            grades_len -= 1;\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade > 2.0 {\n            grades_len -= 1;\n     \
    \       letter_grades.push(String::from(\"A\"));\n        } else if grade > 1.0\
    \ {\n            grades_len -= 1;\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade > 0.7 { \n            grades_len -= 1;\n    \
    \        letter_grades.push(String::from(\"B+\"));\n        } else if grade >\
    \ 0.3 { \n            grades_len -= 1;\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 0.0 { \n            grades_len -= 1;\n     \
    \       letter_grades.push(String::from(\"B-\"));\n        } else if grade > 0.0\
    \ { \n            grades_len -= 1;\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.0 { \n            grades_len -= 1;\n    \
    \        letter_grades.push(String::from(\"C\"));\n        } else if grade > 0.0\
    \ { \n            grades_len -= 1;\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 { \n            grades_len -= 1;\n    \
    \        letter_grades.push(String::from(\"D+\"));\n        } else if grade >\
    \ 0.0 { \n            grades_len -= 1;\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 { \n            grades_len -= 1;\n     \
    \       letter_grades.push(String::from(\"D-\"));\n        } else if grade > 0.0\
    \ { \n            grades_len -= 1;\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            grades_len -= 1;\n            letter_grades.push(String::from(\"\
    F\"));\n        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    while current_grade > 0.0 {\n        if current_grade < 3.0 {\n  \
    \          current_letter_grade = String::from(\"D-\");\n            current_letter_grade_index\
    \ = 0;\n            current_letter_grade_index2 = 0;\n            current_letter_grade_index3\
    \ = 0;\n        }\n        if current_grade < 3.3 {\n            current_letter_grade\
    \ = String::from(\"C-\");\n            current_letter_grade_index = 1;\n     \
    \       current_letter_grade_index2 = 0;\n            current_letter_grade_index3\
    \ = 0;\n        }\n        if current_grade < 3.7 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            current_letter_grade_index = 2;\n     \
    \       current_letter_grade_index2 = 0;\n            current_letter_grade_index3\
    \ = 0;\n        }\n        if current_grade < 4.0 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            current_letter_grade_index = 2;\n     \
    \       current_letter_grade_index2 = 0;\n            current_letter_grade_index3\
    \ = 0;\n        }\n        if current_grade < 4.3 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            current_letter_grade_index = 2;\n     \
    \       current_letter_grade_index2 = 0;\n            current_letter_grade_index3\
    \ = 0;\n        }\n        if current_grade < 4.7 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            current_letter_grade_index = 2;\n     \
    \       current_letter_grade_index2 = 0;\n            current_letter_grade_index3\
    \ = 0;\n        }\n        if current_grade < 5.0 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            current_letter_grade_index = 2;\n     \
    \       current_letter_grade_index2 = 0;\n            current_letter_grade_index3\
    \ = 0;\n        }\n        if current_grade < 5.3 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            current_letter_grade_index = 2;\n     \
    \       current_letter_grade_index2 = 0;\n            current_letter_grade_index3\
    \ = 0;\n        }\n        if current_grade < 5.7 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            current_letter_grade_index = 2;\n     \
    \       current_letter_grade_index2 = 0;\n            current_letter_grade_index3\
    \ = 0;\n        }\n        if current_grade < 6.0 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            current_letter_grade_index = 2;\n     \
    \       current_letter_grade_index2 = 0;\n            current_letter_grade_index3\
    \ = 0;\n        }\n        if current_grade < 6.3 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n            current_letter_grade_index = 2;\n     \
    \       current_letter_grade_index2 = 0;\n            current_letter_grade_index3\
    \ = 0;\n        }", "    let mut grades_sorted = grades.iter().cloned().sorted();\n\
    \    let mut grades_reversed = grades_sorted.rev();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_sorted.first().unwrap();\n   \
    \ let mut current_letter = String::from(\"E\");\n    for grade in grades_sorted\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter);\n\
    \            current_letter = String::from(\"E\");\n            current_grade\
    \ = grade;\n        } else if grade == current_grade {\n            current_letter\
    \ += String::from(\"+\");\n        } else {\n            current_letter += String::from(\"\
    -\");\n        }\n    }\n    letter_grades.push(current_letter);\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::new();\n        if grade >= 4.0 {\n            letter_grade\
    \ += \"A+\";\n        } else if grade >= 3.7 {\n            letter_grade += \"\
    A\";\n        } else if grade >= 3.3 {\n            letter_grade += \"A-\";\n\
    \        } else if grade >= 3.0 {\n            letter_grade += \"B+\";\n     \
    \   } else if grade >= 2.7 {\n            letter_grade += \"B\";\n        } else\
    \ if grade >= 2.3 {\n            letter_grade += \"B-\";\n        } else if grade\
    \ >= 2.0 {\n            letter_grade += \"C+\";\n        } else if grade >= 1.7\
    \ {\n            letter_grade += \"C\";\n        } else if grade >= 1.3 {\n  \
    \          letter_grade += \"C-\";\n        } else if grade >= 1.0 {\n       \
    \     letter_grade += \"D+\";\n        } else if grade >= 0.7 {\n            letter_grade\
    \ += \"D\";\n        } else if grade >= 0.0 {\n            letter_grade += \"\
    D-\";\n        } else {\n            letter_grade += \"E\";\n        }\n     \
    \   letter_grades.push(letter_grade);\n    }\n    letter_grades", "    let mut\
    \ grades_copy = grades.clone();\n    let mut grades_sorted = grades_copy.clone();\n\
    \    grades_sorted.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_sorted[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    let mut current_letter_grade_index = grades_sorted.len() - 1;\n    while\
    \ current_grade > 0.0 {\n        if current_grade < grades_sorted[current_letter_grade_index]\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_letter_grade\
    \ = String::from(\"E\");\n            current_letter_grade_index = 0;\n      \
    \  } else {\n            current_letter_grade_index -= 1;\n        }\n       \
    \ current_grade -= grades_sorted[current_letter_grade_index];\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_iter = grades.iter();\n    let mut letter_grades\
    \ = vec![];\n    let mut grade = grades_iter.next().unwrap();\n    let mut letter_grade\
    \ = String::from(\"E\");\n    while grade != 0.0 {\n        if grade < 3.0 {\n\
    \            letter_grade += String::from(\"A\");\n        } else if grade < 3.3\
    \ {\n            letter_grade += String::from(\"A-\");\n        } else if grade\
    \ < 3.7 {\n            letter_grade += String::from(\"B+\");\n        } else if\
    \ grade < 4.0 {\n            letter_grade += String::from(\"B\");\n        } else\
    \ if grade < 4.3 {\n            letter_grade += String::from(\"B-\");\n      \
    \  } else if grade < 4.7 {\n            letter_grade += String::from(\"C+\");\n\
    \        } else if grade < 5.0 {\n            letter_grade += String::from(\"\
    C\");\n        } else if grade < 5.3 {\n            letter_grade += String::from(\"\
    C-\");\n        } else if grade < 5.7 {\n            letter_grade += String::from(\"\
    D+\");\n        } else if grade < 6.0 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade < 6.3 {\n            letter_grade += String::from(\"\
    D-\");\n        } else {\n            letter_grade += String::from(\"E\");\n \
    \       }\n        grade = grades_iter.next().unwrap();\n    }\n    letter_grades.push(letter_grade);\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut grades_len\
    \ = grades_copy.len();\n    let mut grades_sum: f64 = 0.0;\n    let mut grades_min_value:\
    \ f64 = grades_copy[0];\n    let mut grades_max_value: f64 = grades_copy[0];\n\
    \    let mut grades_min_index: usize = 0;\n    let mut grades_max_index: usize\
    \ = 0;\n    let mut grades_min_value: f64 = grades_copy[0];\n    let mut grades_max_value:\
    \ f64 = grades_copy[0];\n    let mut grades_min_index: usize = 0;\n    let mut\
    \ grades_max_index: usize = 0;\n    let mut grades_min_value: f64 = grades_copy[0];\n\
    \    let mut grades_max_value: f64 = grades_copy[0];\n    let mut grades_min_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_min_value:\
    \ f64 = grades_copy[0];\n    let mut grades_max_value: f64 = grades_copy[0];\n\
    \    let mut grades_min_index: usize = 0;\n    let mut grades_max_index: usize\
    \ = 0;\n    let mut grades_min_value: f64 = grades_copy[0];\n    let mut grades_max_value:\
    \ f64 = grades_copy[0];\n    let mut grades_min_index: usize = 0;\n    let mut\
    \ grades_max_index: usize = 0;\n    let mut grades_min_value: f64 = grades_copy[0];\n\
    \    let mut grades_max_value: f64 = grades_copy[0];\n    let mut grades_min_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_min_value:\
    \ f64 = grades_copy[0];\n    let mut grades_max_value: f64 = grades_copy[0];\n\
    \    let mut grades_min_index: usize = 0;\n    let mut grades_max_index: usize\
    \ = 0;\n    let mut grades_min_value: f64 = grades_copy[0];\n    let mut grades_max_value:\
    \ f64 = grades_copy[0];\n    let mut grades_min_index: usize = 0;\n    let mut\
    \ grades_max_index: usize = 0;\n    let mut grades_min_value: f64 = grades_copy[0];\n\
    \    let mut grades_max_value: f64 = grades_copy[0];\n    let mut grades_min_index:\
    \ usize = 0;\n    let mut grades_max_index: usize = 0;\n    let mut grades_min_value:\
    \ f64 = ", "    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n", "    let mut grades_iter = grades.iter();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next();\n\
    \    while let Some(current_grade) = current_grade {\n        let mut letter_grade\
    \ = String::from(\"\");\n        let mut current_letter_grade = String::from(\"\
    \");\n        \n        // Calculate the letter grade for the current grade\n\
    \        match current_grade {\n            4.0 => {\n                letter_grade\
    \ += \"A+\";\n            }\n            3.7 => {\n                letter_grade\
    \ += \"A\";\n            }\n            3.3 => {\n                letter_grade\
    \ += \"A-\";\n            }\n            3.0 => {\n                letter_grade\
    \ += \"B+\";\n            }\n            2.7 => {\n                letter_grade\
    \ += \"B\";\n            }\n            2.3 => {\n                letter_grade\
    \ += \"B-\";\n            }\n            2.0 => {\n                letter_grade\
    \ += \"C+\";\n            }\n            1.7 => {\n                letter_grade\
    \ += \"C\";\n            }\n            1.3 => {\n                letter_grade\
    \ += \"C-\";\n            }\n            1.0 => {\n                letter_grade\
    \ += \"D+\";\n            }\n            0.7 => {\n                letter_grade\
    \ += \"D\";\n            }\n            0.0 => {\n                letter_grade\
    \ += \"D-\";\n            }\n            _ => {\n                letter_grade\
    \ += \"E\";\n            }\n        }\n        \n        // Calculate the letter\
    \ grade for the current grade\n        match current_grade {\n            4.0\
    \ => {\n                current_letter_grade += \"A+\";\n            }\n     \
    \       3.7 => {\n                current_letter_grade += \"A\";\n           \
    \ }\n            3.3 => {\n                current_letter_grade += \"A-\";\n \
    \           }\n            3.0 => {\n                current_letter_grade += \"\
    B+\";\n            }\n            2.7 => {\n                current_letter_grade\
    \ += \"B\";\n            }\n            2.3 => {\n                current_letter_grade\
    \ += \"B-\";\n            }\n            2.0 => {\n                current_letter_grade\
    \ += \"C+\";\n            }\n            1.7 => {\n                current_letter_grade\
    \ += \"C\";\n            }\n            1.3 => {\n                current_letter_grade\
    \ += \"C-\";\n            }\n            1.0 => {\n                current_letter_grade\
    \ += \"D+\";\n            }\n            0.7 => {\n                current_letter_grade\
    \ += \"D\";\n            }\n            0.0 => {\n                current_letter_grade\
    \ += \"D-\";\n            }\n            _ => {\n                current_letter_grade\
    \ += \"E\";\n            }\n        }\n        \n        // Calculate the letter\
    \ grade for the current grade\n        match current_grade ", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut max_grade\
    \ = grades_copy[0];\n    let mut min_grade = grades_copy[0];\n    for grade in\
    \ grades_copy {\n        if grade > max_grade {\n            max_grade = grade;\n\
    \        }\n        if grade < min_grade {\n            min_grade = grade;\n \
    \       }\n    }\n    let mut grades_range = max_grade - min_grade;\n    let mut\
    \ grades_range_power = grades_range as f64;\n    let mut grades_range_power_power\
    \ = grades_range_power as f64;\n    let mut grades_range_power_power_power = grades_range_power_power\
    \ as f64;\n    let mut grades_range_power_power_power_power = grades_range_power_power_power\
    \ as f64;\n    let mut grades_range_power_power_power_power_power = grades_range_power_power_power_power\
    \ as f64;\n    let mut grades_range_power_power_power_power_power_power = grades_range_power_power_power_power_power\
    \ as f64;\n    let mut grades_range_power_power_power_power_power_power_power\
    \ = grades_range_power_power_power_power_power_power as f64;\n    let mut grades_range_power_power_power_power_power_power_power\
    \ = grades_range_power_power_power_power_power_power as f64;\n    let mut grades_range_power_power_power_power_power_power_power\
    \ = grades_range_power_power_power_power_power_power as f64;\n    let mut grades_range_power_power_power_power_power_power_power\
    \ = grades_range_power_power_power_power_power_power as f64;\n    let mut grades_range_power_power_power_power_power_power_power\
    \ = grades_range_power_power_power_power_power_power as f64;\n    let mut grades_range_power_power_power_power_power_power_power\
    \ = grades_range_power_power_power_power_power_power as f64;\n    let mut grades_range_power_power_power_power_power_power_power_power\
    \ = grades_range_power_power_power_power_power_power as f64;\n    let mut grades_range_power_power_power_power_power_power_power_power\
    \ = grades_range_power_power_power_power_power_power_power as f64;\n    let mut\
    \ grades_range_power_power_power_power_power_power_power_power = grades_range_power_power_power_power_power_power_power\
    \ as f64;\n    let mut grades_range_power_power_power_power_power_power_power_power\
    \ = grades_range_power_power_power_power_power_power as f64;", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut max_grade\
    \ = grades_copy[0];\n    let mut min_grade = grades_copy[0];\n    for grade in\
    \ grades_copy {\n        if grade > max_grade {\n            max_grade = grade;\n\
    \        }\n        if grade < min_grade {\n            min_grade = grade;\n \
    \       }\n    }\n    let mut min_grade_letter = String::from(\"D\");\n    let\
    \ mut max_grade_letter = String::from(\"E\");\n    if min_grade == max_grade {\n\
    \        min_grade_letter = String::from(\"D\");\n        max_grade_letter = String::from(\"\
    E\");\n    }\n    if min_grade == 0.0 {\n        min_grade_letter = String::from(\"\
    E\");\n    }\n    if max_grade == 0.0 {\n        max_grade_letter = String::from(\"\
    D\");\n    }\n    for grade in grades_copy {\n        if grade < 0.0 {\n     \
    \       letter_grades.push(String::from(\"D-\"));\n        }\n        if grade\
    \ > 0.0 {\n            letter_grades.push(String::from(\"D+\"));\n        }\n\
    \        if grade == 0.0 {\n            letter_grades.push(String::from(\"D\"\
    ));\n        }\n        if grade < min_grade {\n            letter_grades.push(String::from(\"\
    A-\"));\n        }\n        if grade > max_grade {\n            letter_grades.push(String::from(\"\
    A+\"));\n        }\n        if grade == min_grade {\n            letter_grades.push(String::from(\"\
    A\"));\n        }\n        if grade < max_grade {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > min_grade {\n            letter_grades.push(String::from(\"\
    B+\"));\n        }\n        if grade == max_grade {\n            letter_grades.push(String::from(\"\
    B\"));\n        }\n        if grade < min_grade {\n            letter_grades.push(String::from(\"\
    C-\"));\n        }\n        if grade > max_grade {\n            letter_grades.push(String::from(\"\
    C+\"));\n        }\n        if grade == min_grade {\n            letter_grades.push(String::from(\"\
    C\"));\n        }\n        if grade < max_grade {\n            letter_grades.push(String::from(\"\
    D-\"));\n        }\n        if grade > min_grade {\n            letter_grades.push(String::from(\"\
    D+\"));", "    let mut grades_vec: Vec<String> = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    let mut letter_grade = String::from(\"E\");\n    \n    while gpa > 0.0 {\n\
    \        let mut grade = String::from(\"E\");\n        let mut gpa = grades.iter().sum();\n\
    \        \n        if gpa > 3.0 {\n            grade = String::from(\"C\");\n\
    \            gpa = gpa - 3.0;\n        }\n        \n        if gpa > 2.7 {\n \
    \           grade = String::from(\"B\");\n            gpa = gpa - 2.7;\n     \
    \   }\n        \n        if gpa > 2.3 {\n            grade = String::from(\"B-\"\
    );\n            gpa = gpa - 2.3;\n        }\n        \n        if gpa > 1.7 {\n\
    \            grade = String::from(\"A\");\n            gpa = gpa - 1.7;\n    \
    \    }\n        \n        if gpa > 1.3 {\n            grade = String::from(\"\
    A-\");\n            gpa = gpa - 1.3;\n        }\n        \n        if gpa > 0.7\
    \ {\n            grade = String::from(\"A+\");\n            gpa = gpa - 0.7;\n\
    \        }\n        \n        if gpa > 0.3 {\n            grade = String::from(\"\
    B+\");\n            gpa = gpa - 0.3;\n        }\n        \n        if gpa > 0.0\
    \ {\n            grade = String::from(\"C+\");\n            gpa = gpa - 0.0;\n\
    \        }\n        \n        if gpa > -0.7 {\n            grade = String::from(\"\
    D+\");\n            gpa = gpa - -0.7;\n        }\n        \n        if gpa > -0.3\
    \ {\n            grade = String::from(\"D-\");\n            gpa = gpa - -0.3;\n\
    \        }\n        \n        if gpa > -0.0 {\n            grade = String::from(\"\
    D\");\n            gpa = gpa - -0.0;\n        }\n        \n        if gpa > -3.0\
    \ {\n            grade = String::from(\"C\");\n            gpa = gpa - -3.0;\n\
    \        }\n        \n        if gpa > -2.7 {\n            grade = String::from(\"\
    B\");\n            gpa = gpa - -2.7;\n        }\n        \n        if gpa > -2.3\
    \ {\n            grade = String::from(\"B-\");\n            gpa = gpa - -2.3;\n\
    \        }\n        \n        if gpa > -1.7 {\n            grade = String::from(\"\
    A\");\n            gpa", "    let mut grades_copy = grades.clone();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy.first().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade < current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_iter = grades.iter();\n    let mut letter_grades\
    \ = vec![];\n    let mut prev_grade = grades_iter.next().unwrap();\n    let mut\
    \ prev_letter_grade = String::from(\"E\");\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    while current_grade\
    \ != 0.0 {\n        if current_grade > prev_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_letter_grade = String::from(\"E\");\n        }\n        if\
    \ current_grade < prev_grade {\n            current_letter_grade = String::from(\"\
    E\");\n        }\n        if current_grade == prev_grade {\n            current_letter_grade\
    \ = String::from(prev_letter_grade);\n        }\n        prev_grade = current_grade;\n\
    \        prev_letter_grade = current_letter_grade;\n        current_grade = grades_iter.next().unwrap();\n\
    \        current_letter_grade = String::from(\"E\");\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_string = vec![];\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            grades_string.push(String::from(\"\
    A+\"));\n        } else if grade >= 3.7 {\n            grades_string.push(String::from(\"\
    A\"));\n        } else if grade >= 3.3 {\n            grades_string.push(String::from(\"\
    A-\"));\n        } else if grade >= 3.0 {\n            grades_string.push(String::from(\"\
    B+\"));\n        } else if grade >= 2.7 {\n            grades_string.push(String::from(\"\
    B\"));\n        } else if grade >= 2.3 {\n            grades_string.push(String::from(\"\
    B-\"));\n        } else if grade >= 2.0 {\n            grades_string.push(String::from(\"\
    C+\"));\n        } else if grade >= 1.7 {\n            grades_string.push(String::from(\"\
    C\"));\n        } else if grade >= 1.3 {\n            grades_string.push(String::from(\"\
    C-\"));\n        } else if grade >= 1.0 {\n            grades_string.push(String::from(\"\
    D+\"));\n        } else if grade >= 0.7 {\n            grades_string.push(String::from(\"\
    D\"));\n        } else if grade >= 0.0 {\n            grades_string.push(String::from(\"\
    D-\"));\n        } else {\n            grades_string.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_string", "    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    let mut gpa = gpa / 4.0;\n    let\
    \ mut gpa = gpa - 3.0;\n    let mut gpa = gpa + 3.0;\n    let mut gpa = gpa -\
    \ 2.0;\n    let mut gpa = gpa + 2.0;\n    let mut gpa = gpa - 1.0;\n    let mut\
    \ gpa = gpa + 1.0;\n    let mut gpa = gpa - 0.7;\n    let mut gpa = gpa + 0.7;\n\
    \    let mut gpa = gpa - 0.3;\n    let mut gpa = gpa + 0.3;\n    let mut gpa =\
    \ gpa - 0.0;\n    let mut gpa = gpa + 0.0;\n    let mut gpa = gpa - 0.0;\n   \
    \ let mut gpa = gpa + 0.0;\n    let mut gpa = gpa - 0.0;\n    let mut gpa = gpa\
    \ + 0.0;\n    let mut gpa = gpa - 0.0;\n    let mut gpa = gpa + 0.0;\n    let\
    \ mut gpa = gpa - 0.0;\n    let mut gpa = gpa + 0.0;\n    let mut gpa = gpa -\
    \ 0.0;\n    let mut gpa = gpa + 0.0;\n    let mut gpa = gpa - 0.0;\n    let mut\
    \ gpa = gpa + 0.0;\n    let mut gpa = gpa - 0.0;\n    let mut gpa = gpa + 0.0;\n\
    \    let mut gpa = gpa - 0.0;\n    let mut gpa = gpa + 0.0;\n    let mut gpa =\
    \ gpa - 0.0;\n    let mut gpa = gpa + 0.0;\n    let mut gpa = gpa - 0.0;\n   \
    \ let mut gpa = gpa + 0.0;\n    let mut gpa = gpa - 0.0;\n    let mut gpa = gpa\
    \ + 0.0;\n    let mut gpa = gpa - 0.0;\n    let mut gpa = gpa + 0.0;\n    let\
    \ mut gpa = gpa - 0.0;\n    let mut gpa = gpa + 0.0;\n    let mut gpa = gpa -\
    \ 0.0;\n    let mut gpa = gpa + 0.0;\n    let mut gpa = gpa - 0.0;\n    let mut\
    \ gpa = gpa + 0.0;\n    let mut gpa = gpa - 0.0;\n    let mut g", "    let mut\
    \ grades_copy = grades.clone();\n    grades_copy.sort_unstable();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else if grade < current_grade {\n       \
    \     current_letter_grade += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    while gpa > 0.0 {\n        let grade = if gpa >= 4.0 { \"+\" } else { \"\
    -\" };\n        letter_grades.push(grade + String::from(\"A\"));\n        gpa\
    \ -= 4.0;\n    }\n    while gpa < 0.0 {\n        let grade = if gpa >= 3.7 { \"\
    +\" } else { \"-\" };\n        letter_grades.push(grade + String::from(\"A\"));\n\
    \        gpa += 3.7;\n    }\n    while gpa > 3.0 {\n        let grade = if gpa\
    \ >= 3.3 { \"+\" } else { \"-\" };\n        letter_grades.push(grade + String::from(\"\
    B\"));\n        gpa -= 3.3;\n    }\n    while gpa < 3.0 {\n        let grade =\
    \ if gpa >= 2.7 { \"+\" } else { \"-\" };\n        letter_grades.push(grade +\
    \ String::from(\"B\"));\n        gpa += 2.7;\n    }\n    while gpa > 2.0 {\n \
    \       let grade = if gpa >= 2.3 { \"+\" } else { \"-\" };\n        letter_grades.push(grade\
    \ + String::from(\"C\"));\n        gpa -= 2.3;\n    }\n    while gpa < 2.0 {\n\
    \        let grade = if gpa >= 1.7 { \"+\" } else { \"-\" };\n        letter_grades.push(grade\
    \ + String::from(\"C\"));\n        gpa += 1.7;\n    }\n    while gpa > 1.0 {\n\
    \        let grade = if gpa >= 1.3 { \"+\" } else { \"-\" };\n        letter_grades.push(grade\
    \ + String::from(\"D\"));\n        gpa -= 1.3;\n    }\n    while gpa < 1.0 {\n\
    \        let grade = if gpa >= 0.7 { \"+\" } else { \"-\" };\n        letter_grades.push(grade\
    \ + String::from(\"D\"));\n        gpa += 0.7;\n    }\n    while gpa > 0.0 {\n\
    \        let grade = if gpa >= 0.0 { \"+\" } else { \"-\" };\n        letter_grades.push(grade\
    \ + String::from(\"E\"));\n        gpa -= 0.0;\n    }\n    letter_grades", " \
    \   let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut grades_sum = grades.iter().sum();\n    let mut grades_avg\
    \ = grades_sum / grades.len();\n    let mut grades_min = grades.iter().min();\n\
    \    let mut grades_max = grades.iter().max();\n    let mut grades_min_avg = grades_min.iter().sum()\
    \ / grades.len();\n    let mut grades_max_avg = grades_max.iter().sum() / grades.len();\n\
    \    let mut grades_min_max = grades_min.iter().max();\n    let mut grades_max_min\
    \ = grades_max.iter().min();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.iter().sum()\
    \ / grades.len();\n    let mut grades_min_max_avg = grades_min_max.", "    let\
    \ mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n   \
    \ let mut total_grade = 0.0;\n    let mut total_letter_grades = 0.0;\n    let\
    \ mut total_letter_grades_sum = 0.0;\n    let mut total_letter_grades_product\
    \ = 0.0;\n    let mut total_letter_grades_product2 = 0.0;\n    let mut total_letter_grades_product3\
    \ = 0.0;\n    let mut total_letter_grades_product4 = 0.0;\n    let mut total_letter_grades_product5\
    \ = 0.0;\n    let mut total_letter_grades_product6 = 0.0;\n    let mut total_letter_grades_product7\
    \ = 0.0;\n    let mut total_letter_grades_product8 = 0.0;\n    let mut total_letter_grades_product9\
    \ = 0.0;\n    let mut total_letter_grades_product10 = 0.0;\n    let mut total_letter_grades_product11\
    \ = 0.0;\n    let mut total_letter_grades_product12 = 0.0;\n    let mut total_letter_grades_product13\
    \ = 0.0;\n    let mut total_letter_grades_product14 = 0.0;\n    let mut total_letter_grades_product15\
    \ = 0.0;\n    let mut total_letter_grades_product16 = 0.0;\n    let mut total_letter_grades_product17\
    \ = 0.0;\n    let mut total_letter_grades_product18 = 0.0;\n    let mut total_letter_grades_product19\
    \ = 0.0;\n    let mut total_letter_grades_product20 = 0.0;\n    let mut total_letter_grades_product21\
    \ = 0.0;\n    let mut total_letter_grades_product22 = 0.0;\n    let mut total_letter_grades_product23\
    \ = 0.0;\n    let mut total_letter_grades_product24 = 0.0;\n    let mut total_letter_grades_product25\
    \ = 0.0;\n    let mut total_letter_grades_product26 = 0.0;\n    let mut total_letter_grades_product27\
    \ = 0.0;\n    let mut total_letter_grades_product28 = 0.0;\n    let mut total_letter_grades_product29\
    \ = 0.0;\n    let mut total_letter_grades_product30 = 0.0;\n    let mut total_letter_grades_product31\
    \ = 0.0;\n    let mut total_letter_grades_product32 = 0.0;\n    let mut total_letter_grades_product33\
    \ = 0.0;\n    let mut total_letter_grades_product34 = 0.0;\n    let mut total_letter_grades_product35\
    \ = 0.0;\n    let mut total_letter_grades_product36 = 0.0;\n    let mut total_letter_grades_product37\
    \ = 0.0;\n    let mut total_letter_grades_product38 = 0.0;\n    let mut total_letter_grade",
  "    let mut letter_grades = vec![];\n    let mut max_grade = grades.max();\n  \
    \  let mut min_grade = grades.min();\n    let mut total_grade = grades.iter().sum();\n\
    \    let mut total_letter_grade = String::new();\n    let mut total_letter_grades\
    \ = String::new();\n    let mut total_letter_grades_num = String::new();\n   \
    \ let mut total_letter_grades_denom = String::new();\n    let mut total_letter_grades_num_denom\
    \ = String::new();\n    let mut total_letter_grades_num_denom_denom = String::new();\n\
    \    let mut total_letter_grades_num_denom_denom_denom = String::new();\n    let\
    \ mut total_letter_grades_num_denom_denom_denom_denom = String::new();\n    let\
    \ mut total_letter_grades_num_denom_denom_denom_denom_denom = String::new();\n\
    \    let mut total_letter_grades_num_denom_denom_denom_denom_denom_denom = String::new();\n\
    \    let mut total_letter_grades_num_denom_denom_denom_denom_denom_denom_denom\
    \ = String::new();\n    let mut total_letter_grades_num_denom_denom_denom_denom_denom_denom_denom\
    \ = String::new();\n    let mut total_letter_grades_num_denom_denom_denom_denom_denom_denom_denom_denom\
    \ = String::new();\n    let mut total_letter_grades_num_denom_denom_denom_denom_denom_denom_denom_denom\
    \ = String::new();\n    let mut total_letter_grades_num_denom_denom_denom_denom_denom_denom_denom_denom_denom\
    \ = String::new();\n    let mut total_letter_grades_num_denom_denom_denom_denom_denom_denom_denom_denom_denom_denom\
    \ = String::new();\n    let mut total_letter_grades_num_denom_denom_denom_denom_denom_denom_denom_denom_denom_denom\
    \ = String::new();\n    let mut total_letter_grades_num_denom_denom_denom_denom_denom_denom_denom_denom_denom_denom\
    \ = String::new();\n    let mut total_letter_grades_num_denom_denom_denom_denom_denom_denom_denom_denom_denom_denom_denom\
    \ = String::new();\n    let mut total_letter_grades_num_denom_denom_denom_denom_denom_deno",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        }\n        if grade < current_grade {\n            current_letter_grade\
    \ = String::from(current_letter_grade.chars().nth(1).unwrap());\n        }\n \
    \       letter_grades.push(current_letter_grade);\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    let mut max_grade = grades.iter().max().unwrap();\n\
    \    let mut min_grade = grades.iter().min().unwrap();\n    let mut current_grade\
    \ = grades.iter().next().unwrap();\n    while current_grade < max_grade {\n  \
    \      let letter_grade = match current_grade {\n            0 => \"E\",\n   \
    \         1 => \"D-\", \n            2 => \"D\", \n            3 => \"C-\", \n\
    \            4 => \"C\", \n            5 => \"B-\", \n            6 => \"B\",\
    \ \n            7 => \"B-\", \n            8 => \"B\", \n            9 => \"B-\"\
    , \n            10 => \"B\", \n            11 => \"B-\", \n            12 => \"\
    B\", \n            13 => \"B-\", \n            14 => \"B\", \n            15 =>\
    \ \"B-\", \n            16 => \"B\", \n            17 => \"B-\", \n          \
    \  18 => \"B\", \n            19 => \"B-\", \n            20 => \"B\", \n    \
    \        21 => \"B-\", \n            22 => \"B\", \n            23 => \"B-\",\
    \ \n            24 => \"B\", \n            25 => \"B-\", \n            26 => \"\
    B\", \n            27 => \"B-\", \n            28 => \"B\", \n            29 =>\
    \ \"B-\", \n            30 => \"B\", \n            31 => \"B-\", \n          \
    \  32 => \"B\", \n            33 => \"B-\", \n            34 => \"B\", \n    \
    \        35 => \"B-\", \n            36 => \"B\", \n            37 => \"B-\",\
    \ \n            38 => \"B\", \n            39 => \"B-\", \n            40 => \"\
    B\", \n            41 => \"B-\", \n            42 => \"B\", \n            43 =>\
    \ \"B-\", \n            44 => \"B\", \n            45 => \"B-\", \n          \
    \  46 => \"B\", \n            47 => \"B-\", \n            48 => \"B\", \n    \
    \        49 => \"B-\", \n            50 => \"B\", \n            51 => \"B-\",\
    \ \n            52 => \"B\", \n            53 => \"B-\", \n            54 => \"\
    B\", \n            55 => \"B-\", \n            56 => \"B\", \n            57 =>\
    \ \"B-\", \n            58 => \"B\", \n            59 => \"B-\", \n          \
    \  60 => \"B\", \n            61 => \"B-\", \n            62 => \"B\", \n    \
    \        63 => \"B-\", \n            64 => \"B\", \n            65 => \"B-\",\
    \ \n            66 => \"B\", \n            67 => \"B-\", \n            68 => \"",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut prev_grade = grades_copy.clone();\n    let mut prev_grade_index =\
    \ 0;\n    let mut prev_gpa = grades_copy.clone();\n    let mut prev_gpa_index\
    \ = 0;\n    let mut current_grade = grades_copy.clone();\n    let mut current_grade_index\
    \ = 0;\n    let mut current_gpa = grades_copy.clone();\n    let mut current_gpa_index\
    \ = 0;\n    while current_grade_index < grades_copy.len() {\n        if current_grade[current_grade_index]\
    \ <= prev_grade[prev_grade_index] {\n            prev_grade[prev_grade_index]\
    \ = current_grade[current_grade_index];\n            prev_gpa[prev_gpa_index]\
    \ = current_gpa[current_gpa_index];\n            prev_grade_index += 1;\n    \
    \        prev_gpa_index += 1;\n            current_grade_index += 1;\n       \
    \     current_gpa_index += 1;\n        } else {\n            letter_grades.push(String::from(\n\
    \                format!(\"{}+\", prev_grade[prev_grade_index - 1])\n        \
    \    ));\n            letter_grades.push(String::from(\n                format!(\"\
    {}\", current_grade[current_grade_index - 1])\n            ));\n            prev_grade_index\
    \ += 1;\n            prev_gpa_index += 1;\n            current_grade_index +=\
    \ 1;\n            current_gpa_index += 1;\n        }\n    }\n    letter_grades.push(String::from(format!(\"\
    {}\", prev_grade[prev_grade_index - 1])));\n    letter_grades.push(String::from(format!(\"\
    {}\", current_grade[current_grade_index - 1])));\n    letter_grades", "    let\
    \ mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n   \
    \ let mut current_grade = grades_copy.first().unwrap();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else if grade < current_grade {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut grades_sum = 0.0;\n    let mut grades_min = grades_copy.iter().min().unwrap();\n\
    \    let mut grades_max = grades_copy.iter().max().unwrap();\n    let mut grades_average\
    \ = grades_sum / grades_copy.len();\n    let mut grades_standard_deviation = grades_average;\n\
    \    let mut grades_standard_deviation_squared = 0.0;\n    let mut grades_standard_deviation_cubed\
    \ = 0.0;\n    let mut grades_standard_deviation_cubified = 0.0;\n    let mut grades_standard_deviation_cubified_squared\
    \ = 0.0;\n    let mut grades_standard_deviation_cubified_cubed = 0.0;\n    let\
    \ mut grades_standard_deviation_cubified_cubed = grades_average;\n    let mut\
    \ grades_standard_deviation_cubified_cubed = grades_average;\n    let mut grades_standard_deviation_cubified_cubed\
    \ = grades_average;\n    let mut grades_standard_deviation_cubified_cubed = grades_average;\n\
    \    let mut grades_standard_deviation_cubified_cubed = grades_average;\n    let\
    \ mut grades_standard_deviation_cubified_cubed = grades_average;\n    let mut\
    \ grades_standard_deviation_cubified_cubed = grades_average;\n    let mut grades_standard_deviation_cubified_cubed\
    \ = grades_average;\n    let mut grades_standard_deviation_cubified_cubed = grades_average;\n\
    \    let mut grades_standard_deviation_cubified_cubed = grades_average;\n    let\
    \ mut grades_standard_deviation_cubified_cubed = grades_average;\n    let mut\
    \ grades_standard_deviation_cubified_cubed = grades_average;\n    let mut grades_standard_deviation_cubified_cubed\
    \ = grades_average;\n    let mut grades_standard_deviation_cubified_cubed = grades_average;\n\
    \    let mut grades_standard_deviation_cubified_cubed = grades_average;\n    let\
    \ mut grades_standard_deviation_cubified_cubed = grades_average;\n    let mut\
    \ grades_standard_deviation_cubified_cubed = grades_average;\n    let mut grades_standard_deviation_cubified_cubed\
    \ = grades_average;\n    let mut grade", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        let mut letter_grade = String::new();\n  \
    \      if grade < 3.0 {\n            letter_grade += String::from(\"A+\");\n \
    \       } else if grade < 3.3 {\n            letter_grade += String::from(\"A\"\
    );\n        } else if grade < 3.7 {\n            letter_grade += String::from(\"\
    A-\");\n        } else if grade < 4.0 {\n            letter_grade += String::from(\"\
    B+\");\n        } else if grade < 4.3 {\n            letter_grade += String::from(\"\
    B\");\n        } else if grade < 4.7 {\n            letter_grade += String::from(\"\
    B-\");\n        } else if grade < 5.0 {\n            letter_grade += String::from(\"\
    C+\");\n        } else if grade < 5.3 {\n            letter_grade += String::from(\"\
    C\");\n        } else if grade < 5.7 {\n            letter_grade += String::from(\"\
    C-\");\n        } else if grade < 6.0 {\n            letter_grade += String::from(\"\
    D+\");\n        } else if grade < 6.3 {\n            letter_grade += String::from(\"\
    D\");\n        } else if grade < 6.7 {\n            letter_grade += String::from(\"\
    D-\");\n        } else {\n            letter_grade += String::from(\"E\");\n \
    \       }\n        letter_grades.push(letter_grade);\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut grade = grades_copy.iter().sum();\n    let mut grade_index = 0;\n\
    \    while grade > 0.0 {\n        letter_grades.push(String::from(grades_copy[grade_index].to_string()));\n\
    \        grade_index += 1;\n        grade = grade - grades_copy[grade_index];\n\
    \    }\n    letter_grades.push(String::from(\"E\"));\n    letter_grades", "  \
    \  let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n", "    let mut grades_iter = grades.iter();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    \n    while current_grade\
    \ != 0.0 {\n        let mut current_letter_grade = String::from(current_letter_grade);\n\
    \        \n        if current_grade < 3.0 {\n            if current_grade < current_grade\
    \ {\n                current_letter_grade = String::from(\"A+\");\n          \
    \  } else {\n                current_letter_grade = String::from(\"A\");\n   \
    \         }\n        } else if current_grade < 3.3 {\n            if current_grade\
    \ < current_grade {\n                current_letter_grade = String::from(\"A-\"\
    );\n            } else {\n                current_letter_grade = String::from(\"\
    B+\");\n            }\n        } else if current_grade < 3.7 {\n            if\
    \ current_grade < current_grade {\n                current_letter_grade = String::from(\"\
    B\");\n            } else {\n                current_letter_grade = String::from(\"\
    B-\");\n            }\n        } else if current_grade < 4.0 {\n            if\
    \ current_grade < current_grade {\n                current_letter_grade = String::from(\"\
    C+\");\n            } else {\n                current_letter_grade = String::from(\"\
    C\");\n            }\n        } else if current_grade < 4.3 {\n            if\
    \ current_grade < current_grade {\n                current_letter_grade = String::from(\"\
    C-\");\n            } else {\n                current_letter_grade = String::from(\"\
    D+\");\n            }\n        } else if current_grade < 4.7 {\n            if\
    \ current_grade < current_grade {\n                current_letter_grade = String::from(\"\
    D\");\n            } else {\n                current_letter_grade = String::from(\"\
    D-\");\n            }\n        } else if current_grade < 5.0 {\n            if\
    \ current_grade < current_grade {\n                current_letter_grade = String::from(\"\
    E\");\n            } else {\n                current_letter_grade = String::from(\"\
    F\");\n            }\n        } else {\n            current_letter_grade = String::from(\"\
    F\");\n        }\n        \n        letter_grades.push(current_letter_grade);\n\
    \        \n        current_grade = grades_iter.next().unwrap();\n    }\n    \n\
    \    letter_grades", "    let mut grades_iter = grades.iter();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_iter.next();\n    while let Some(grade)\
    \ = current_grade {\n        let mut letter_grade = String::from(\"\");\n    \
    \    letter_grade += if grade >= 3.0 { String::from(\"A+\") } else { String::from(\"\
    A\") };\n        letter_grade += if grade >= 2.7 { String::from(\"B+\") } else\
    \ { String::from(\"B\") };\n        letter_grade += if grade >= 2.3 { String::from(\"\
    B-\") } else { String::from(\"B\") };\n        letter_grade += if grade >= 2.0\
    \ { String::from(\"C+\") } else { String::from(\"C\") };\n        letter_grade\
    \ += if grade >= 1.7 { String::from(\"C\") } else { String::from(\"C-\") };\n\
    \        letter_grade += if grade >= 1.3 { String::from(\"C-\") } else { String::from(\"\
    C\") };\n        letter_grade += if grade >= 1.0 { String::from(\"D+\") } else\
    \ { String::from(\"D\") };\n        letter_grade += if grade >= 0.7 { String::from(\"\
    D\") } else { String::from(\"D-\") };\n        letter_grade += if grade >= 0.0\
    \ { String::from(\"D-\") } else { String::from(\"D\") };\n        letter_grades.push(letter_grade);\n\
    \        current_grade = grades_iter.next();\n    }\n    letter_grades", "   \
    \ let mut letter_grades = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::new();\n        if grade > 3.0 {\n            letter_grade\
    \ += \"B+\";\n        } else if grade > 2.7 {\n            letter_grade += \"\
    B\";\n        } else if grade > 2.3 {\n            letter_grade += \"B-\";\n \
    \       } else if grade > 2.0 {\n            letter_grade += \"C+\";\n       \
    \ } else if grade > 1.7 {\n            letter_grade += \"C\";\n        } else\
    \ if grade > 1.3 {\n            letter_grade += \"C-\";\n        } else if grade\
    \ > 1.0 {\n            letter_grade += \"D+\";\n        } else if grade > 0.7\
    \ {\n            letter_grade += \"D\";\n        } else if grade > 0.0 {\n   \
    \         letter_grade += \"D-\";\n        } else {\n            letter_grade\
    \ += \"E\";\n        }\n        letter_grades.push(letter_grade);\n    }\n   \
    \ letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n    let mut\
    \ grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n\
    \    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n", "    let mut letter_grades = vec![];\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade > 3.7 && grade < 4.0 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade > 3.3 && grade < 3.7 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade > 3.0 && grade < 3.3 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 && grade < 3.0 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 && grade < 2.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 && grade < 2.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 && grade < 2.0 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 && grade < 1.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 && grade < 1.3 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 && grade < 1.0 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 && grade < 0.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut grades_sum = 0.0;\n    let mut\
    \ grades_sum_sq = 0.0;\n    let mut grades_sq_sum = 0.0;\n    let mut grades_sq_sum_sq\
    \ = 0.0;\n    let mut grades_sq_sum_sq_sum = 0.0;\n    let mut grades_sq_sum_sq_sum_sq\
    \ = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq\
    \ = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq\
    \ = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum = 0.0;\n    let\
    \ mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum\
    \ = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq = 0.0;\n\
    \    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum = 0.0;\n\
    \    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq = 0.0;\n\
    \    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum =\
    \ 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq\
    \ = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq\
    \ = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum\
    \ = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq\
    \ = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum\
    \ = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq\
    \ = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq\
    \ = 0.0;\n    let mut grades_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_sq_sum_",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::from(\"\");\n        if grade >= 4.0 {\n            letter_grade\
    \ += \"A+\";\n        } else if grade > 3.7 {\n            letter_grade += \"\
    A\";\n        } else if grade > 3.3 {\n            letter_grade += \"A-\";\n \
    \       } else if grade > 3.0 {\n            letter_grade += \"B+\";\n       \
    \ } else if grade > 2.7 {\n            letter_grade += \"B\";\n        } else\
    \ if grade > 2.3 {\n            letter_grade += \"B-\";\n        } else if grade\
    \ > 2.0 {\n            letter_grade += \"C+\";\n        } else if grade > 1.7\
    \ {\n            letter_grade += \"C\";\n        } else if grade > 1.3 {\n   \
    \         letter_grade += \"C-\";\n        } else if grade > 1.0 {\n         \
    \   letter_grade += \"D+\";\n        } else if grade > 0.7 {\n            letter_grade\
    \ += \"D\";\n        } else if grade > 0.0 {\n            letter_grade += \"D-\"\
    ;\n        } else {\n            letter_grade += \"E\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_sorted = grades.clone();\n   \
    \ grades_sorted.sort_unstable();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned",
  "    let mut grades_sorted = grades.iter().cloned().collect::<Vec<f64>>();\n   \
    \ grades_sorted.sort_unstable();\n    let mut letter_grades = vec![];\n    let\
    \ mut current_grade = grades_sorted[0];\n    let mut current_letter_grade = String::from(\"\
    E\");\n    for grade in grades_sorted {\n        if grade > current_grade {\n\
    \            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else {\n            current_letter_grade += String::from(\"-\"\
    );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut letter_grades = vec![];\n    let mut current_grade = grades.first().unwrap();\n\
    \    for grade in grades.iter().skip(1) {\n        let mut letter_grade = String::from(\"\
    \");\n        if grade > current_grade {\n            letter_grade += \"+\";\n\
    \        }\n        if grade < current_grade {\n            letter_grade += \"\
    -\";\n        }\n        if grade == current_grade {\n            letter_grade\
    \ += \"=\";\n        }\n        letter_grades.push(letter_grade);\n        current_grade\
    \ = grade;\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    for grade in grades_copy {\n        if grade > current_grade {\n        \
    \    letter_grades.push(current_letter_grade);\n            current_grade = grade;\n\
    \            current_letter_grade = String::from(\"E\");\n        } else if grade\
    \ == current_grade {\n            current_letter_grade += String::from(\"+\");\n\
    \        } else {\n            current_letter_grade += String::from(\"-\");\n\
    \        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy.first().unwrap();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    let mut current_letter_grade_index = 0;\n    \n\
    \    while current_grade != 0.0 {\n        if current_grade < current_grade.floor()\
    \ {\n            current_letter_grade = String::from(\"E\");\n            current_letter_grade_index\
    \ = 0;\n        }\n        \n        if current_grade < current_grade.floor()\
    \ + 0.3 {\n            current_letter_grade = String::from(\"D-\");\n        \
    \    current_letter_grade_index = 1;\n        }\n        \n        if current_grade\
    \ < current_grade.floor() + 0.6 {\n            current_letter_grade = String::from(\"\
    D+\");\n            current_letter_grade_index = 2;\n        }\n        \n   \
    \     if current_grade < current_grade.floor() + 0.9 {\n            current_letter_grade\
    \ = String::from(\"D\");\n            current_letter_grade_index = 3;\n      \
    \  }\n        \n        if current_grade < current_grade.floor() + 1.2 {\n   \
    \         current_letter_grade = String::from(\"C-\");\n            current_letter_grade_index\
    \ = 4;\n        }\n        \n        if current_grade < current_grade.floor()\
    \ + 1.5 {\n            current_letter_grade = String::from(\"C\");\n         \
    \   current_letter_grade_index = 5;\n        }\n        \n        if current_grade\
    \ < current_grade.floor() + 1.8 {\n            current_letter_grade = String::from(\"\
    B-\");\n            current_letter_grade_index = 6;\n        }\n        \n   \
    \     if current_grade < current_grade.floor() + 2.1 {\n            current_letter_grade\
    \ = String::from(\"B\");\n            current_letter_grade_index = 7;\n      \
    \  }\n        \n        if current_grade < current_grade.floor() + 2.4 {\n   \
    \         current_letter_grade = String::from(\"A-\");\n            current_letter_grade_index\
    \ = 8;\n        }\n        \n        if current_grade < current_grade.floor()\
    \ + 2.7 {\n            current_letter_grade = String::from(\"A\");\n         \
    \   current_letter_grade_index = 9;\n        }\n        \n        if current_grade\
    \ < current_grade.floor() + 3.0 {\n            current_letter_grade = String::from(\"\
    A+\");\n            current_letter_grade_index = 10;\n        }\n        \n  \
    \      if current_grade < current_grade.floor() + 3.3 {\n            current_letter_grade\
    \ = String::from(\"A\");\n            current_letter_grade_index = 11;\n     \
    \   }\n        \n        if current_grade < current_grade.floor() + 3.6 {\n  \
    \          current_letter_grade = String::from(\"A\");\n            current_letter_grade_index\
    \ = 12;\n        }\n        \n", "    let mut grades_vec: Vec<String> = vec![];\n\
    \    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut min_grade = grades_copy[0];\n\
    \    let mut max_grade = grades_copy[0];\n    let mut min_grade_index = -1;\n\
    \    let mut max_grade_index = -1;\n    \n    for grade in grades_copy {\n   \
    \     if grade < min_grade {\n            min_grade = grade;\n            min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n        }\n   \
    \     if grade > max_grade {\n            max_grade = grade;\n            max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n        }\n   \
    \ }\n    \n    for grade in grades_copy {\n        if grade == min_grade {\n \
    \           letter_grades.push(String::from(\"A+\"));\n        }\n        if grade\
    \ == max_grade {\n            letter_grades.push(String::from(\"D-\"));\n    \
    \    }\n        if grade < min_grade {\n            letter_grades.push(String::from(\"\
    A-\"));\n        }\n        if grade > max_grade {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade == 0.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        }\n        if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade < 0.0 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        }\n        if grade == min_grade {\n            letter_grades.push(String::from(\"\
    A+\"));\n        }\n        if grade == max_grade {\n            letter_grades.push(String::from(\"\
    D-\"));\n        }\n        if grade < min_grade {\n            letter_grades.push(String::from(\"\
    A-\"));\n        }\n        if grade > max_grade {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade < 0.0 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        }\n        if grade == 0.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        }\n        if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade < 0.0 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        }\n        if grade == min_grade {\n            letter_grades.push(String::from(\"\
    A+\"));\n        }\n        if grade == max_grade {\n            letter_grades.push(String::",
  "    let mut letter_grades = vec![];\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut max_grade = grades.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    \n    for grade\
    \ in grades {\n        if grade < min_grade {\n            letter_grades.push(String::from(\"\
    D-\"));\n            min_grade_index = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \            min_grade = grade;\n        } else if grade > max_grade {\n     \
    \       letter_grades.push(String::from(\"D+\"));\n            max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n            max_grade\
    \ = grade;\n        } else {\n            letter_grades.push(String::from(\n \
    \               match grades[min_grade_index..max_grade_index].iter().position(|x|\
    \ x == grade).unwrap() {\n                    0 => \"D-\",\n                 \
    \   1 => \"D\",\n                    2 => \"C-\",\n                    3 => \"\
    C\",\n                    4 => \"B-\",\n                    5 => \"B\",\n    \
    \                6 => \"A-\",\n                    7 => \"A\",\n             \
    \       _ => \"E\",\n                }\n            ));\n            min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n            max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n            min_grade\
    \ = grade;\n            max_grade = grade;\n        }\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort_unstable();\n \
    \   let mut letter_grades = vec![];\n    let mut grade = grades_copy[0];\n   \
    \ let mut grades_length = grades_copy.len();\n    let mut grades_index = 0;\n\
    \    while grade != 0.0 {\n        if grade < 3.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n            grades_index += 1;\n        } else if grade < 4.0 {\n   \
    \         letter_grades.push(String::from(\"A\"));\n            grades_index +=\
    \ 1;\n        } else if grade < 5.0 {\n            letter_grades.push(String::from(\"\
    A-\"));\n            grades_index += 1;\n        } else if grade < 6.0 {\n   \
    \         letter_grades.push(String::from(\"B+\"));\n            grades_index\
    \ += 1;\n        } else if grade < 7.0 {\n            letter_grades.push(String::from(\"\
    B\"));\n            grades_index += 1;\n        } else if grade < 8.0 {\n    \
    \        letter_grades.push(String::from(\"B-\"));\n            grades_index +=\
    \ 1;\n        } else if grade < 9.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n            grades_index += 1;\n        } else if grade < 10.0 {\n  \
    \          letter_grades.push(String::from(\"C\"));\n            grades_index\
    \ += 1;\n        } else if grade < 11.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n            grades_index += 1;\n        } else if grade < 12.0 {\n  \
    \          letter_grades.push(String::from(\"D+\"));\n            grades_index\
    \ += 1;\n        } else if grade < 13.0 {\n            letter_grades.push(String::from(\"\
    D\"));\n            grades_index += 1;\n        } else if grade < 14.0 {\n   \
    \         letter_grades.push(String::from(\"D-\"));\n            grades_index\
    \ += 1;\n        } else if grade < 15.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n            grades_index += 1;\n        } else {\n            letter_grades.push(String::from(\"\
    F\"));\n            grades_index += 1;\n        }\n        grade = grades_copy[grades_index];\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ total_grade = grades.iter().sum();\n    let mut total_points = 0;\n    for grade\
    \ in grades {\n        let points = grade * total_grade;\n        total_points\
    \ += points;\n        let letter_grade = if points > 0.0 {\n            if points\
    \ < total_points {\n                String::from(\"D-\")\n            } else if\
    \ points == total_points {\n                String::from(\"D\")\n            }\
    \ else {\n                String::from(\"D+\")\n            }\n        } else\
    \ {\n            String::from(\"E\")\n        };\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_iter = grades.iter();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    while current_grade\
    \ != 0.0 {\n        if current_grade < 3.0 {\n            current_letter_grade\
    \ = String::from(\"A\");\n        } else if current_grade < 4.0 {\n          \
    \  current_letter_grade = String::from(\"B\");\n        } else if current_grade\
    \ < 5.0 {\n            current_letter_grade = String::from(\"C\");\n        }\
    \ else if current_grade < 6.0 {\n            current_letter_grade = String::from(\"\
    D\");\n        } else if current_grade < 7.0 {\n            current_letter_grade\
    \ = String::from(\"E\");\n        } else {\n            current_letter_grade =\
    \ String::from(\"F\");\n        }\n        letter_grades.push(current_letter_grade);\n\
    \        current_grade = grades_iter.next().unwrap();\n    }\n    letter_grades",
  "    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n", "    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut grades_len = grades.len();\n    let\
    \ mut grades_sum: f64 = 0.0;\n    let mut grades_sum_square: f64 = 0.0;\n    let\
    \ mut grades_sq_sum: f64 = 0.0;\n    let mut grades_sq_sum_square: f64 = 0.0;\n\
    \    let mut grades_sq_sum_square_2: f64 = 0.0;\n    let mut grades_sq_sum_square_3:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_4: f64 = 0.0;\n    let mut grades_sq_sum_square_5:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_6: f64 = 0.0;\n    let mut grades_sq_sum_square_7:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_8: f64 = 0.0;\n    let mut grades_sq_sum_square_9:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_10: f64 = 0.0;\n    let mut grades_sq_sum_square_11:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_12: f64 = 0.0;\n    let mut grades_sq_sum_square_13:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_14: f64 = 0.0;\n    let mut grades_sq_sum_square_15:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_16: f64 = 0.0;\n    let mut grades_sq_sum_square_17:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_18: f64 = 0.0;\n    let mut grades_sq_sum_square_19:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_20: f64 = 0.0;\n    let mut grades_sq_sum_square_21:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_22: f64 = 0.0;\n    let mut grades_sq_sum_square_23:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_24: f64 = 0.0;\n    let mut grades_sq_sum_square_25:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_26: f64 = 0.0;\n    let mut grades_sq_sum_square_27:\
    \ f64 = 0.0;\n    let mut grades_sq_sum_square_28: f64 = 0.0;\n    let ", "  \
    \  let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut max_grade = grades_copy[0];\n    let mut min_grade = grades_copy[0];\n\
    \    let mut max_grade_index = 0;\n    let mut min_grade_index = 0;\n    let mut\
    \ current_grade = grades_copy[0];\n    let mut current_index = grades_copy.iter().enumerate().find(|&(_,\
    \ grade)| grade == current_grade).unwrap();\n    while current_index != grades_copy.len()\
    \ - 1 {\n        if grades_copy[current_index] > max_grade {\n            max_grade\
    \ = grades_copy[current_index];\n            max_grade_index = current_index;\n\
    \        }\n        if grades_copy[current_index] < min_grade {\n            min_grade\
    \ = grades_copy[current_index];\n            min_grade_index = current_index;\n\
    \        }\n        current_grade = grades_copy[current_index];\n        current_index\
    \ = grades_copy.iter().enumerate().find(|&(_, grade)| grade == current_grade).unwrap();\n\
    \    }\n    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_grade_index].to_string()));\n\
    \    letter_grades.push(String::from(grades_copy[max_", "    let mut grades_copy\
    \ = grades.clone();\n    grades_copy.sort();\n    let mut grades_length = grades_copy.len();\n\
    \    let mut grades_grades = vec![];\n    let mut grades_grades_length = grades_grades.len();\n\
    \    let mut grades_grades_grades = vec![];\n    let mut grades_grades_grades_length\
    \ = grades_grades_grades.len();\n    let mut grades_grades_grades_grades = vec![];\n\
    \    let mut grades_grades_grades_grades_length = grades_grades_grades_grades.len();\n\
    \    let mut grades_grades_grades_grades_grades = vec![];\n    let mut grades_grades_grades_grades_grades_length\
    \ = grades_grades_grades_grades_grades.len();\n    let mut grades_grades_grades_grades_grades_grades\
    \ = vec![];\n    let mut grades_grades_grades_grades_grades_grades_length = grades_grades_grades_grades_grades_grades.len();\n\
    \    let mut grades_grades_grades_grades_grades_grades_grades = vec![];\n    let\
    \ mut grades_grades_grades_grades_grades_grades_grades_length = grades_grades_grades_grades_grades_grades_grades.len();\n\
    \    let mut grades_grades_grades_grades_grades_grades_grades_grades = vec![];\n\
    \    let mut grades_grades_grades_grades_grades_grades_grades_grades_length =\
    \ grades_grades_grades_grades_grades_grades_grades_grades.len();\n    let mut\
    \ grades_grades_grades_grades_grades_grades_grades_grades_grades = vec![];\n \
    \   let mut grades_grades_grades_grades_grades_grades_grades_grades_grades_length\
    \ = grades_grades_grades_grades_grades_grades_grades_grades_grades.len();\n  \
    \  let mut grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_length\
    \ = grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades.len();\n\
    \    let mut grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_length\
    \ = grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades_grades.len();",
  "    let mut grades_iter = grades.iter();\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter\
    \ = grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n   \
    \ let mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter =\
    \ grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n    let\
    \ mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n\
    \    let mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter\
    \ = grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n   \
    \ let mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter =\
    \ grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n    let\
    \ mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n\
    \    let mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter\
    \ = grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n   \
    \ let mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter =\
    \ grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n    let\
    \ mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n\
    \    let mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter\
    \ = grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n   \
    \ let mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter =\
    \ grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n    let\
    \ mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n\
    \    let mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter\
    \ = grades_vec.iter();\n    let mut grades_vec_iter = grades_vec.iter();\n   \
    \ let mut grades_vec_iter = grades_vec.iter();\n    let mut grades_vec_iter =\
    \ grades_vec.iter();\n    let mut grade", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade > 3.7 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade > 3.3 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades"]
stop_tokens:
- "\n}"

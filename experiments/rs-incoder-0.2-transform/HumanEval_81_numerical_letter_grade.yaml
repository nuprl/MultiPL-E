name: HumanEval_81_numerical_letter_grade
language: rs
prompt: "/// It is the last week of the semester and the teacher has to give the grades\n\
  /// to students. The teacher has been making her own algorithm for grading.\n///\
  \ The only problem is, she has lost the code she used for grading.\n/// She has\
  \ given you a list of GPAs for some students and you have to write \n/// a function\
  \ that can output a list of letter grades using the following table:\n/// GPA  \
  \     |    Letter grade\n/// 4.0                A+\n/// > 3.7                A \n\
  /// > 3.3                A- \n/// > 3.0                B+\n/// > 2.7           \
  \     B \n/// > 2.3                B-\n/// > 2.0                C+\n/// > 1.7  \
  \              C\n/// > 1.3                C-\n/// > 1.0                D+ \n///\
  \ > 0.7                D \n/// > 0.0                D-\n/// 0.0                E\n\
  /// Example:\n/// >>> grade_equation(vec![4.0, 3, 1.7, 2, 3.5])\n/// vec![String::from(\"\
  A+\"), String::from(\"B\"), String::from(\"C-\"), String::from(\"C\"), String::from(\"\
  A-\")]\nfn numerical_letter_grade(grades: Vec<f64>) -> Vec<String> {\n"
tests: "}\n\nfn main() {\n    let candidate = numerical_letter_grade;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n}\n"
completions: ["    let mut grades_vec: Vec<String> = vec![];\n    let mut total_grade:\
    \ f64 = 0.0;\n    for grade in grades {\n        total_grade += grade;\n     \
    \   grades_vec.push(String::from(format!(\"{}+\", total_grade)));\n    }\n   \
    \ for grade in grades {\n        if grade > total_grade {\n            grades_vec.push(String::from(format!(\"\
    {}\", grade)));\n        } else {\n            grades_vec.push(String::from(format!(\"\
    {}-\", grade)));\n        }\n    }\n    grades_vec", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy.first();\n    let mut current_letter_grade = String::from(\"E\"\
    );\n    for grade in grades_copy {\n        if grade < current_grade {\n     \
    \       letter_grades.push(current_letter_grade);\n            current_letter_grade\
    \ = String::from(\"E\");\n            current_grade = grade;\n        } else if\
    \ grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else {\n            current_letter_grade += String::from(\"-\"\
    );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_iter = grades.iter();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_iter.next();\n    while let Some(grade) =\
    \ current_grade {\n        let mut letter_grade = String::from(\"\");\n      \
    \  if grade > 3.0 {\n            letter_grade += String::from(\"+\");\n      \
    \  }\n        if grade > 2.7 {\n            letter_grade += String::from(\"A\"\
    );\n        }\n        if grade > 2.3 {\n            letter_grade += String::from(\"\
    A-\");\n        }\n        if grade > 2.0 {\n            letter_grade += String::from(\"\
    B+\");\n        }\n        if grade > 1.7 {\n            letter_grade += String::from(\"\
    B\");\n        }\n        if grade > 1.3 {\n            letter_grade += String::from(\"\
    B-\");\n        }\n        if grade > 1.0 {\n            letter_grade += String::from(\"\
    C+\");\n        }\n        if grade > 0.7 {\n            letter_grade += String::from(\"\
    C\");\n        }\n        if grade > 0.3 {\n            letter_grade += String::from(\"\
    C-\");\n        }\n        if grade > 0.0 {\n            letter_grade += String::from(\"\
    D+\");\n        }\n        if grade > 0.0 {\n            letter_grade += String::from(\"\
    D\");\n        }\n        if grade > 0.0 {\n            letter_grade += String::from(\"\
    D-\");\n        }\n        if grade > 0.0 {\n            letter_grade += String::from(\"\
    E\");\n        }\n        letter_grades.push(letter_grade);\n        current_grade\
    \ = grades_iter.next();\n    }\n    letter_grades", "    let mut grades_copy =\
    \ grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    let mut current_letter_grade_index = -1;\n    let mut current_gpa : f64 =\
    \ grades_copy[0];\n    let mut current_gpa_numerator = grades_copy[0];\n    let\
    \ mut current_gpa_denominator = grades_copy[0];\n    let mut current_gpa_numerator_denominator\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mu", "    let mut grades_vec: Vec<String> = vec![];\n\
    \    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    for grade in grades {\n        let grade = grade as f64;\n  \
    \      if grade < 3.0 {\n            grades_vec.push(String::from(\"A+\"));\n\
    \        } else if grade < 3.3 {\n            grades_vec.push(String::from(\"\
    A\"));\n        } else if grade < 3.7 {\n            grades_vec.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else if grade < 7.0 {\n            grades_vec.push(String::from(\"\
    E\"));\n        } else {\n            grades_vec.push(String::from(\"F\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_iter = grades_copy.iter().cloned();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    loop {\n       \
    \ if current_grade < 0.0 {\n            break;\n        }\n        let mut current_letter_grade\
    \ = String::from(current_letter_grade);\n        if current_grade < 3.0 {\n  \
    \          current_letter_grade = String::from(\"A\");\n        } else if current_grade\
    \ < 4.0 {\n            current_letter_grade = String::from(\"B\");\n        }\
    \ else if current_grade < 5.0 {\n            current_letter_grade = String::from(\"\
    C\");\n        } else if current_grade < 6.0 {\n            current_letter_grade\
    \ = String::from(\"D\");\n        } else if current_grade < 7.0 {\n          \
    \  current_letter_grade = String::from(\"E\");\n        }\n        letter_grades.push(current_letter_grade);\n\
    \        current_grade = grades_iter.next().unwrap();\n    }\n    letter_grades",
  "    let mut grades_iter = grades.iter();\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grade: f64;\n    let mut grades_sum: f64 = 0.0;\n    let\
    \ mut grades_count: usize = 0;\n    loop {\n        grade = grades_iter.next().unwrap();\n\
    \        grades_sum += grade;\n        grades_count += 1;\n        if grades_count\
    \ == 5 {\n            grades_vec.push(String::from(\"D+\"));\n            grades_sum\
    \ -= 4.0;\n            grades_count = 0;\n        } else if grades_count == 4\
    \ {\n            grades_vec.push(String::from(\"D\"));\n            grades_sum\
    \ -= 3.7;\n            grades_count = 0;\n        } else if grades_count == 3\
    \ {\n            grades_vec.push(String::from(\"C\"));\n            grades_sum\
    \ -= 3.3;\n            grades_count = 0;\n        } else if grades_count == 2\
    \ {\n            grades_vec.push(String::from(\"B\"));\n            grades_sum\
    \ -= 2.7;\n            grades_count = 0;\n        } else if grades_count == 1\
    \ {\n            grades_vec.push(String::from(\"A\"));\n            grades_sum\
    \ -= 2.3;\n            grades_count = 0;\n        } else if grades_count == 0\
    \ {\n            grades_vec.push(String::from(\"E\"));\n            grades_sum\
    \ -= 1.0;\n            grades_count = 0;\n        }\n        if grades_sum < 0.0\
    \ {\n            break;\n        }\n    }\n    grades_vec", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut total_grade\
    \ = grades_copy[0];\n    for grade in grades_copy {\n        if grade > total_grade\
    \ {\n            total_grade = grade;\n        }\n    }\n    for grade in grades_copy\
    \ {\n        if grade == total_grade {\n            letter_grades.push(String::from(\"\
    D+\"));\n        }\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    D\"));\n        }\n        if grade > total_grade {\n            letter_grades.push(String::from(\"\
    D-\"));\n        }\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    C\"));\n        }\n        if grade > total_grade {\n            letter_grades.push(String::from(\"\
    C+\"));\n        }\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > total_grade {\n            letter_grades.push(String::from(\"\
    B\"));\n        }\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > total_grade {\n            letter_grades.push(String::from(\"\
    B+\"));\n        }\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    A-\"));\n        }\n        if grade > total_grade {\n            letter_grades.push(String::from(\"\
    A\"));\n        }\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    A+\"));\n        }\n    }\n    letter_grades", "    let mut grades_iter = grades.iter();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    while current_grade != 0.0 {\n        if current_grade < current_grade.floor()\
    \ {\n            current_letter_grade = String::from(&\"E\");\n            current_letter_grade_index\
    \ = 0;\n        }\n        let current_letter_grade_index = (current_letter_grade_index\
    \ + 1) % (26);\n        let current_letter_grade = String::from(&\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    .chars()\n            .filter(|c| c.to_ascii_lowercase() == current_letter_grade.to_ascii_lowercase())\n\
    \            .next().unwrap());\n        letter_grades.push(current_letter_grade);\n\
    \        current_grade = grades_iter.next().unwrap();\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy.pop().unwrap();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    while grades_copy.len() > 0 {\n        let mut current_grade\
    \ = grades_copy.pop().unwrap();\n        if current_grade < current_grade {\n\
    \            current_letter_grade = String::from(\"D-\");\n        } else if current_grade\
    \ > current_grade {\n            current_letter_grade = String::from(\"D+\");\n\
    \        } else {\n            current_letter_grade = String::from(\"D\");\n \
    \       }\n        letter_grades.push(current_letter_grade);\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"E\");\n            current_grade\
    \ = grade;\n        } else if grade == current_grade {\n            current_letter_grade\
    \ = String::from(\n                match grade {\n                    4.0 => \"\
    A+\",\n                    3.7 => \"A\",\n                    3.3 => \"A-\",\n\
    \                    3.0 => \"B+\",\n                    2.7 => \"B\",\n     \
    \               2.3 => \"B-\",\n                    2.0 => \"C+\",\n         \
    \           1.7 => \"C\",\n                    1.3 => \"C-\",\n              \
    \      1.0 => \"D+\",\n                    0.7 => \"D\",\n                   \
    \ 0.0 => \"D-\",\n                    0.0 => \"E\",\n                }\n     \
    \       );\n        }\n        letter_grades.push(current_letter_grade);\n   \
    \ }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy.pop().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    \n    while grades_copy.len()\
    \ > 0 {\n        let mut current_grade = grades_copy.pop().unwrap();\n       \
    \ let mut current_letter_grade = String::from(\"E\");\n        \n        if current_grade\
    \ < current_grade {\n            current_letter_grade = String::from(\"D-\");\n\
    \        } else if current_grade < current_grade + 0.3 {\n            current_letter_grade\
    \ = String::from(\"D+\");\n        } else if current_grade < current_grade + 0.5\
    \ {\n            current_letter_grade = String::from(\"D\");\n        } else if\
    \ current_grade < current_grade + 0.7 {\n            current_letter_grade = String::from(\"\
    C-\");\n        } else if current_grade < current_grade + 0.9 {\n            current_letter_grade\
    \ = String::from(\"C\");\n        } else if current_grade < current_grade + 1.1\
    \ {\n            current_letter_grade = String::from(\"B-\");\n        } else\
    \ if current_grade < current_grade + 1.3 {\n            current_letter_grade =\
    \ String::from(\"B\");\n        } else if current_grade < current_grade + 1.5\
    \ { \n            current_letter_grade = String::from(\"A-\");\n        } else\
    \ if current_grade < current_grade + 1.7 {\n            current_letter_grade =\
    \ String::from(\"A\");\n        } else if current_grade < current_grade + 1.9\
    \ {\n            current_letter_grade = String::from(\"A+\");\n        } else\
    \ {\n            current_letter_grade = String::from(\"A\");\n        }\n    \
    \    \n        letter_grades.push(current_letter_grade);\n    }\n    \n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort_unstable();\n \
    \   let mut grades_sorted = grades_copy.clone();\n    grades_sorted.reverse();\n\
    \    let mut grades_reversed = grades_sorted.clone();\n    grades_reversed.reverse();\n\
    \    let mut grades_reversed_copy = grades_reversed.clone();\n    grades_reversed_copy.pop();\n\
    \    let mut grades_reversed_sorted = grades_reversed_copy.clone();\n    grades_reversed_sorted.pop();\n\
    \    let mut grades_reversed_reversed = grades_reversed_sorted.clone();\n    grades_reversed_reversed.pop();\n\
    \    let mut grades_reversed_reversed_copy = grades_reversed_reversed.clone();\n\
    \    grades_reversed_reversed_copy.pop();\n    let mut grades_reversed_reversed_sorted\
    \ = grades_reversed_reversed_copy.clone();\n    grades_reversed_reversed_sorted.pop();\n\
    \    let mut grades_reversed_reversed_reversed = grades_reversed_reversed_sorted.clone();\n\
    \    grades_reversed_reversed_reversed.pop();\n    let mut grades_reversed_reversed_reversed_copy\
    \ = grades_reversed_reversed_reversed.clone();\n    grades_reversed_reversed_reversed_copy.pop();\n\
    \    let mut grades_reversed_reversed_reversed_sorted = grades_reversed_reversed_reversed_copy.clone();\n\
    \    grades_reversed_reversed_reversed_sorted.pop();\n    let mut grades_reversed_reversed_reversed_reversed\
    \ = grades_reversed_reversed_reversed_sorted.clone();\n    grades_reversed_reversed_reversed_reversed.pop();\n\
    \    let mut grades_reversed_reversed_reversed_reversed_copy = grades_reversed_reversed_reversed_reversed.clone();\n\
    \    grades_reversed_reversed_reversed_reversed_copy.pop();\n    let mut grades_reversed_reversed_reversed_reversed_sorted\
    \ = grades_reversed_reversed_reversed_reversed_copy.clone();\n    grades_reversed_reversed_reversed_reversed_sorted.pop();\n\
    \    let mut grades_reversed_reversed_reversed_reversed_reversed = grades_reversed_reversed_reversed_reversed_sorted.clone();\n\
    \    grades_reversed_reversed_reversed_reversed_reversed.pop();\n    let mut grades_reversed_reversed_reversed_reversed_reversed_copy\
    \ = grades_reversed_reversed_reversed_reversed_reversed.clone();\n    grades_reversed_reversed_reversed_reverse",
  "    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n", "    let mut letter_grades = vec![];\n    for grade in grades {\n\
    \        if grade > 3.0 {\n            letter_grades.push(String::from(\"B+\"\
    ));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut min_grade: f64 = grades.iter().min().unwrap();\n    let\
    \ mut max_grade: f64 = grades.iter().max().unwrap();\n    let mut min_grade_index:\
    \ usize = 0;\n    let mut max_grade_index: usize = 0;\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    for grade in grades {\n        if grade < min_grade\
    \ {\n            min_grade = grade;\n            min_grade_index = grades.iter().position(|x|\
    \ x == min_grade).unwrap();\n        }\n        if grade > max_grade {\n     \
    \       max_grade = grade;\n            max_grade_index = grades.iter().position(|x|\
    \ x == max_grade).unwrap();\n        }\n    }\n    grades_vec.push(String::from(grades[min_grade_index]));\n\
    \    for grade in grades.iter().skip(min_grade_index + 1) {\n        grades_vec.push(String::from(grades[grade]));\n\
    \    }\n    grades_vec.push(String::from(grades[max_grade_index]));\n    grades_vec",
  "    let mut letter_grades = vec![];\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut max_grade = grades.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().", "    let mut letter_grades = vec![];\n    let mut total_grade\
    \ = grades.iter().sum();\n    let mut total_letter_grade = String::from(\"E\"\
    );\n    let mut current_grade = grades.iter().sum();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades {\n        if grade > total_grade\
    \ {\n            total_grade = grade;\n            total_letter_grade = current_letter_grade;\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade < total_grade {\n            current_letter_grade\
    \ = current_letter_grade.chars().enumerate().filter(|&(i, _)| {\n            \
    \    i == 0 || grade < current_grade\n            }).map(|&(i, _)| {\n       \
    \         let grade = grade - current_grade;\n                let letter_grade\
    \ = if grade < 0.0 {\n                    \"D-\"\n                } else if grade\
    \ < 0.3 {\n                    \"C-\"\n                } else if grade < 0.6 {\n\
    \                    \"B-\"\n                } else if grade < 0.8 {\n       \
    \             \"B-\"\n                } else if grade < 1.0 {\n              \
    \      \"A-\"\n                } else if grade < 1.3 {\n                    \"\
    A-\"\n                } else if grade < 1.6 {\n                    \"A-\"\n  \
    \              } else if grade < 1.8 {\n                    \"A-\"\n         \
    \       } else if grade < 2.0 {\n                    \"A-\"\n                }\
    \ else if grade < 2.3 {\n                    \"A-\"\n                } else if\
    \ grade < 2.6 {\n                    \"A-\"\n                } else if grade <\
    \ 2.8 {\n                    \"A-\"\n                } else if grade < 3.0 {\n\
    \                    \"A-\"\n                } else if grade < 3.3 {\n       \
    \             \"A-\"\n                } else if grade < 3.6 {\n              \
    \      \"A-\"\n                } else if grade < 3.8 {\n                    \"\
    A-\"\n                } else if grade < 4.0 {\n                    \"A-\"\n  \
    \              } else if grade < 4.3 {\n                    \"A-\"\n         \
    \       } else if grade < 4.6 {\n                    \"A-\"\n                }\
    \ else if grade < 4.8 {\n                    \"A-\"\n                } else if\
    \ grade < 5.0 {\n                    \"A-\"\n                } else if grade <\
    \ 5.3 {\n                    \"A-\"\n                } else if grade < 5.6 {\n\
    \                    \"A-\"\n                } else if grade < 5.8 {\n       \
    \             \"A-\"\n                } else if grade < 6.0 {\n              \
    \      \"A-\"\n                ", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut grades_copy = grades_copy.clone();\n   \
    \ let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n",
  "    let mut grades_copy = grades.clone();\n    let mut grades_len = grades.len();\n\
    \    let mut grades_sorted = grades.clone();\n    grades_sorted.sort();\n    let\
    \ mut grades_sorted_len = grades_sorted.len();\n    let mut grades_sorted_sorted\
    \ = grades_sorted.clone();\n    grades_sorted_sorted.sort();\n    let mut grades_sorted_len_sorted\
    \ = grades_sorted_sorted.len();\n    let mut grades_sorted_sorted_sorted = grades_sorted_sorted.clone();\n\
    \    grades_sorted_sorted_sorted.sort();\n    let mut grades_sorted_sorted_len_sorted\
    \ = grades_sorted_sorted_sorted.len();\n    let mut grades_sorted_sorted_sorted_sorted\
    \ = grades_sorted_sorted_sorted.clone();\n    grades_sorted_sorted_sorted_sorted.sort();\n\
    \    let mut grades_sorted_sorted_sorted_len_sorted = grades_sorted_sorted_sorted_sorted.len();\n\
    \    let mut grades_sorted_sorted_sorted_sorted_sorted = grades_sorted_sorted_sorted_sorted.clone();\n\
    \    grades_sorted_sorted_sorted_sorted_sorted.sort();\n    let mut grades_sorted_sorted_sorted_sorted_len_sorted\
    \ = grades_sorted_sorted_sorted_sorted_sorted.len();\n    let mut grades_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = grades_sorted_sorted_sorted_sorted_sorted_sorted.clone();\n    grades_sorted_sorted_sorted_sorted_sorted_sorted.sort();\n\
    \    let mut grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted = grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted.clone();\n\
    \    grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted.sort();\n    let\
    \ mut grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted = grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted.clone();\n\
    \    grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted.sort();\n\
    \    let mut grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted.clone();\n\
    \    grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted.sort();\n\
    \    let mut grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted.clone();\n\
    \    grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted.sort();\n\
    \    let mut grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted.clone();\n\
    \    grades_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted.sort();\n\
    \    let ", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    let mut current_gp = 0;\n    let mut current_letter_grade_index\
    \ = 0;\n    while current_grade > 0.0 {\n        if current_grade < current_gp\
    \ {\n            current_letter_grade = String::from(\"E\");\n            current_gp\
    \ = 0;\n            current_letter_grade_index = 0;\n        }\n        if current_grade\
    \ < current_gp {\n            current_letter_grade = String::from(&grades_copy[current_letter_grade_index..current_letter_grade_index\
    \ + 2]);\n            current_gp = current_grade;\n            current_letter_grade_index\
    \ += 2;\n        }\n        if current_grade < current_gp {\n            current_letter_grade\
    \ = String::from(&grades_copy[current_letter_grade_index..current_letter_grade_index\
    \ + 1]);\n            current_gp = current_grade;\n            current_letter_grade_index\
    \ += 1;\n        }\n        if current_grade < current_gp {\n            current_letter_grade\
    \ = String::from(&grades_copy[current_letter_grade_index..current_letter_grade_index\
    \ + 1]);\n            current_gp = current_grade;\n            current_letter_grade_index\
    \ += 1;\n        }\n        if current_grade < current_gp {\n            current_letter_grade\
    \ = String::from(&grades_copy[current_letter_grade_index..current_letter_grade_index\
    \ + 2]);\n            current_gp = current_grade;\n            current_letter_grade_index\
    \ += 2;\n        }\n        if current_grade < current_gp {\n            current_letter_grade\
    \ = String::from(&grades_copy[current_letter_grade_index..current_letter_grade_index\
    \ + 2]);\n            current_gp = current_grade;\n            current_letter_grade_index\
    \ += 2;\n        }\n        if current_grade < current_gp {\n            current_letter_grade\
    \ = String::from(&grades_copy[current_letter_grade_index..current_letter_grade_index\
    \ + 2]);\n            current_gp = current_grade;\n            current_letter_grade_index\
    \ += 2;\n        }\n        if current_grade < current_gp {\n            current_letter_grade\
    \ = String::from(&grades_copy[current_letter_grade_index..current_letter_grade_index\
    \ + 2]);\n            current_gp = current_grade;\n            current_letter_grade_index\
    \ += 2;\n        }\n        if current_grade < current_gp {\n            current_letter_grade\
    \ = String::from(&grades_copy[current_letter_grade_index..current_letter_grade_index\
    \ + 2]);\n            current_gp = current_grade;\n            current_letter_grade_index\
    \ += 2;\n        }\n        if current_grade < current_gp {\n            current_letter_",
  "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n \
    \   let mut letter_grade = String::from(\"E\");\n    while gpa > 0.0 {\n     \
    \   let grade = if gpa < 3.0 { String::from(\"D\") } else { String::from(\"C\"\
    ) };\n        letter_grades.push(grade);\n        gpa -= 3.0;\n    }\n    letter_grades.push(letter_grade);\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy.iter().max().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    \n    while current_grade > 0.0 {\n        let current_letter_grade\
    \ = if current_grade < 3.0 {\n            String::from(\"D-\")\n        } else\
    \ if current_grade < 3.3 {\n            String::from(\"C-\")\n        } else if\
    \ current_grade < 3.7 {\n            String::from(\"B-\")\n        } else if current_grade\
    \ < 4.0 {\n            String::from(\"B-\")\n        } else if current_grade <\
    \ 4.3 {\n            String::from(\"B-\")\n        } else if current_grade < 4.7\
    \ {\n            String::from(\"B-\")\n        } else if current_grade < 5.0 {\n\
    \            String::from(\"B-\")\n        } else if current_grade < 5.3 {\n \
    \           String::from(\"B-\")\n        } else if current_grade < 5.7 {\n  \
    \          String::from(\"B-\")\n        } else if current_grade < 6.0 {\n   \
    \         String::from(\"B-\")\n        } else if current_grade < 6.3 {\n    \
    \        String::from(\"B-\")\n        } else if current_grade < 6.7 {\n     \
    \       String::from(\"B-\")\n        } else if current_grade < 7.0 {\n      \
    \      String::from(\"B-\")\n        } else if current_grade < 7.3 {\n       \
    \     String::from(\"B-\")\n        } else if current_grade < 7.7 {\n        \
    \    String::from(\"B-\")\n        } else if current_grade < 8.0 {\n         \
    \   String::from(\"B-\")\n        } else if current_grade < 8.3 {\n          \
    \  String::from(\"B-\")\n        } else if current_grade < 8.7 {\n           \
    \ String::from(\"B-\")\n        } else if current_grade < 9.0 {\n            String::from(\"\
    B-\")\n        } else if current_grade < 9.3 {\n            String::from(\"B-\"\
    )\n        } else if current_grade < 9.7 {\n            String::from(\"B-\")\n\
    \        } else if current_grade < 10.0 {\n            String::from(\"B-\")\n\
    \        } else if current_grade < 10.3 {\n            String::from(\"B-\")\n\
    \        } else if current_grade < 10.7 {\n            String::from(\"B-\")\n",
  "    let mut grades_string = vec![];\n    let mut grades_length = grades.len();\n\
    \    let mut grades_sum: f64 = 0.0;\n    let mut grades_average: f64 = 0.0;\n\
    \    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy.pop().unwrap();\n    let mut current_letter_grade = String::from(\"\
    E\");\n    while grades_copy.len() > 0 {\n        let mut new_grade = grades_copy.pop().unwrap();\n\
    \        let mut new_letter_grade = String::from(\"E\");\n        if current_grade\
    \ > new_grade {\n            new_letter_grade = String::from(\"A+\");\n      \
    \  } else if current_grade < new_grade {\n            new_letter_grade = String::from(\"\
    A-\");\n        } else if current_grade == new_grade {\n            new_letter_grade\
    \ = String::from(\"D\");\n        }\n        letter_grades.push(new_letter_grade);\n\
    \        current_grade = new_grade;\n        current_letter_grade = new_letter_grade;\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    for grade\
    \ in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 0.7 { \n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.3 { \n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D+\"));\n        } else { \n            letter_grades.push(String::from(\"D\"\
    ));\n        }\n    }\n    letter_grades", "    let mut grades_iter = grades.iter();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    \n    while current_grade\
    \ > 0.0 {\n        let mut current_letter_grade = String::from(current_letter_grade);\n\
    \        if current_grade < 3.0 {\n            current_letter_grade = String::from(\"\
    D-\");\n        } else if current_grade < 3.3 {\n            current_letter_grade\
    \ = String::from(\"C-\");\n        } else if current_grade < 3.7 {\n         \
    \   current_letter_grade = String::from(\"B-\");\n        } else if current_grade\
    \ < 4.0 {\n            current_letter_grade = String::from(\"B-\");\n        }\
    \ else if current_grade < 4.3 {\n            current_letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 4.7 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n        } else if current_grade < 5.0 {\n         \
    \   current_letter_grade = String::from(\"B-\");\n        } else if current_grade\
    \ < 5.3 {\n            current_letter_grade = String::from(\"B-\");\n        }\
    \ else if current_grade < 5.7 {\n            current_letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 6.0 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n        } else if current_grade < 6.3 {\n         \
    \   current_letter_grade = String::from(\"B-\");\n        } else if current_grade\
    \ < 6.7 {\n            current_letter_grade = String::from(\"B-\");\n        }\
    \ else if current_grade < 7.0 {\n            current_letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 7.3 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n        } else if current_grade < 7.7 {\n         \
    \   current_letter_grade = String::from(\"B-\");\n        } else if current_grade\
    \ < 8.0 {\n            current_letter_grade = String::from(\"B-\");\n        }\
    \ else if current_grade < 8.3 {\n            current_letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 8.7 {\n            current_letter_grade\
    \ = String::from(\"B-\");\n        } else if current_grade < 9.0 {\n         \
    \   current_letter_grade = String::from(\"B-\");\n        } else if current_grade\
    \ < 9.3 {\n            current_letter_grade = String::from(\"B-\");\n        }\
    \ else if current_grade < 9.7 {\n            current_letter_grade", "    let mut\
    \ letter_grades = vec![];\n    for grade in grades {\n        if grade > 3.0 {\n\
    \            letter_grades.push(String::from(\"B+\"));\n        } else if grade\
    \ > 2.7 {\n            letter_grades.push(String::from(\"B\"));\n        } else\
    \ if grade > 2.3 {\n            letter_grades.push(String::from(\"B-\"));\n  \
    \      } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade > 3.7 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade > 3.3 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        let mut letter_grade = String::new();\n  \
    \      if grade >= 4.0 {\n            letter_grade += \"A+\";\n        } else\
    \ if grade > 3.7 {\n            letter_grade += \"A\";\n        } else if grade\
    \ > 3.3 {\n            letter_grade += \"A-\";\n        } else if grade > 3.0\
    \ {\n            letter_grade += \"B+\";\n        } else if grade > 2.7 {\n  \
    \          letter_grade += \"B\";\n        } else if grade > 2.3 {\n         \
    \   letter_grade += \"B-\";\n        } else if grade > 2.0 {\n            letter_grade\
    \ += \"C+\";\n        } else if grade > 1.7 {\n            letter_grade += \"\
    C\";\n        } else if grade > 1.3 {\n            letter_grade += \"C-\";\n \
    \       } else if grade > 1.0 {\n            letter_grade += \"D+\";\n       \
    \ } else if grade > 0.7 {\n            letter_grade += \"D\";\n        } else\
    \ if grade > 0.0 {\n            letter_grade += \"D-\";\n        } else {\n  \
    \          letter_grade += \"E\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n \
    \   for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut letter_grades = vec![];\n    let\
    \ mut grade = grades_copy[0];\n    let mut grades_len = grades_copy.len();\n \
    \   while grade > 0.0 {\n        letter_grades.push(String::from(format!(\"{}+\"\
    , grade)));\n        grades_len -= 1;\n        if grades_len == 0 {\n        \
    \    break;\n        }\n        grade = grades_copy[grades_len];\n    }\n    letter_grades.push(String::from(\"\
    E\"));\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy.iter().sum();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    while current_grade\
    \ != 0.0 {\n        if current_grade < 3.0 {\n            current_letter_grade\
    \ = String::from(\"E\");\n            break;\n        }\n        let current_letter_grade\
    \ = match current_grade {\n            4.0 => \"A+\",\n            > 3.7 => \"\
    A\",\n            > 3.3 => \"A-\",\n            > 3.0 => \"B+\",\n           \
    \ > 2.7 => \"B\",\n            > 2.3 => \"B-\",\n            > 2.0 => \"C+\",\n\
    \            > 1.7 => \"C\",\n            > 1.3 => \"C-\",\n            > 1.0\
    \ => \"D+\",\n            > 0.7 => \"D\",\n            _ => \"D-\",\n        };\n\
    \        letter_grades.push(current_letter_grade);\n        current_grade -= 3.0;\n\
    \    }\n    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n \
    \   let mut gpa = grades.iter().sum();\n    let mut letter_grade: String;\n  \
    \  \n    while gpa > 0.0 {\n        letter_grade = match gpa % 10 {\n        \
    \    0 => \"A+\".to_string(),\n            1 => \"A\".to_string(),\n         \
    \   2 => \"A-\".to_string(),\n            3 => \"B+\".to_string(),\n         \
    \   4 => \"B\".to_string(),\n            5 => \"B-\".to_string(),\n          \
    \  6 => \"C+\".to_string(),\n            7 => \"C\".to_string(),\n           \
    \ 8 => \"C-\".to_string(),\n            9 => \"D+\".to_string(),\n           \
    \ 10 => \"D\".to_string(),\n            11 => \"D-\".to_string(),\n          \
    \  _ => \"\".to_string(),\n        };\n        gpa /= 10.0;\n        grades_vec.push(letter_grade);\n\
    \    }\n    grades_vec", "    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut max_grade: f64 = grades.iter().max().unwrap();\n    let mut min_grade: f64\
    \ = grades.iter().min().unwrap();\n    let mut total_grade: f64 = 0.0;\n    for\
    \ grade in grades {\n        total_grade += grade;\n        if total_grade > max_grade\
    \ {\n            max_grade = total_grade;\n        }\n        if total_grade <\
    \ min_grade {\n            min_grade = total_grade;\n        }\n    }\n    let\
    \ mut total_grade_percent: f64 = 0.0;\n    for grade in grades {\n        total_grade_percent\
    \ += grade * 100.0;\n    }\n    let mut total_grade_percent = total_grade_percent\
    \ / grades.len();\n    let mut total_grade_percent = total_grade_percent - total_grade\
    \ * 100.0;\n    let mut total_grade_percent = total_grade_percent / grades.len();\n\
    \    let mut total_grade_percent = total_grade_percent - total_grade * 100.0;\n\
    \    let mut total_grade_percent = total_grade_percent / grades.len();\n    let\
    \ mut total_grade_percent = total_grade_percent - total_grade * 100.0;\n    let\
    \ mut total_grade_percent = total_grade_percent / grades.len();\n    let mut total_grade_percent\
    \ = total_grade_percent - total_grade * 100.0;\n    let mut total_grade_percent\
    \ = total_grade_percent / grades.len();\n    let mut total_grade_percent = total_grade_percent\
    \ - total_grade * 100.0;\n    let mut total_grade_percent = total_grade_percent\
    \ / grades.len();\n    let mut total_grade_percent = total_grade_percent - total_grade\
    \ * 100.0;\n    let mut total_grade_percent = total_grade_percent / grades.len();\n\
    \    let mut total_grade_percent = total_grade_percent - total_grade * 100.0;\n\
    \    let mut total_grade_percent = total_grade_percent / grades.len();\n    let\
    \ mut total_grade_percent = total_grade_percent - total_grade * 100.0;\n    let\
    \ mut total_grade_percent = total_grade_percent / grades.len();\n    let mut total_grade_percent\
    \ = total_grade_percent - total_grade * 100.0;\n    let mut total_grade_percent\
    \ = total_grade_percent / grades.len();\n    let mu", "    let mut grades_iter\
    \ = grades.iter();\n    let mut letter_grades = vec![];\n    while let Some(grade)\
    \ = grades_iter.next() {\n        let mut letter_grade = String::from(\"\");\n\
    \        match grade {\n            4.0 => {\n                letter_grade +=\
    \ \"A+\";\n            }\n            3.7 => {\n                letter_grade +=\
    \ \"A\";\n            }\n            3.3 => {\n                letter_grade +=\
    \ \"A-\";\n            }\n            3.0 => {\n                letter_grade +=\
    \ \"B+\";\n            }\n            2.7 => {\n                letter_grade +=\
    \ \"B\";\n            }\n            2.3 => {\n                letter_grade +=\
    \ \"B-\";\n            }\n            2.0 => {\n                letter_grade +=\
    \ \"C+\";\n            }\n            1.7 => {\n                letter_grade +=\
    \ \"C\";\n            }\n            1.3 => {\n                letter_grade +=\
    \ \"C-\";\n            }\n            1.0 => {\n                letter_grade +=\
    \ \"D+\";\n            }\n            0.7 => {\n                letter_grade +=\
    \ \"D\";\n            }\n            0.0 => {\n                letter_grade +=\
    \ \"D-\";\n            }\n            _ => {\n                letter_grade +=\
    \ \"E\";\n            }\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n \
    \   let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade < current_grade {\n            current_letter_grade\
    \ = current_letter_grade.chars().nth(grade - current_grade).unwrap().to_string();\n\
    \        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ < 3.0 {\n            letter_grades.push(String::from(\"A+\"));\n        } else\
    \ if grade < 3.3 {\n            letter_grades.push(String::from(\"A\"));\n   \
    \     } else if grade < 3.7 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade < 7.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            letter_grades.push(String::from(\"F\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    let mut letter_grade = String::from(\"\
    E\");\n    while gpa > 0.0 {\n        let grade = if gpa >= 4.0 { String::from(\"\
    A+\") } else { String::from(\"A\") };\n        letter_grades.push(grade);\n  \
    \      gpa -= 4.0;\n    }\n    while gpa > 3.0 {\n        let grade = if gpa >=\
    \ 3.7 { String::from(\"A\") } else { String::from(\"A-\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 3.7;\n    }\n    while gpa > 2.0 {\n        let grade = if gpa\
    \ >= 2.7 { String::from(\"B\") } else { String::from(\"B-\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 2.7;\n    }\n    while gpa > 1.7 {\n        let grade = if gpa\
    \ >= 1.3 { String::from(\"C\") } else { String::from(\"C-\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 1.3;\n    }\n    while gpa > 1.0 {\n        let grade = if gpa\
    \ >= 0.7 { String::from(\"D\") } else { String::from(\"D-\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 0.7;\n    }\n    while gpa > 0.0 {\n        let grade = if gpa\
    \ >= 0.0 { String::from(\"D+\") } else { String::from(\"D\") };\n        letter_grades.push(grade);\n\
    \        gpa -= 0.0;\n    }\n    letter_grades.push(letter_grade);\n    letter_grades",
  "    let mut grades_vec: Vec<String> = vec![];\n    for grade in grades {\n    \
    \    if grade < 3.0 {\n            grades_vec.push(String::from(\"A+\"));\n  \
    \      } else if grade < 3.7 {\n            grades_vec.push(String::from(\"A\"\
    ));\n        } else if grade < 4.0 {\n            grades_vec.push(String::from(\"\
    A-\"));\n        } else if grade < 4.7 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade < 5.0 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade < 5.7 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade < 6.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade < 6.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade < 7.0 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade < 7.7 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade < 8.0 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade < 8.7 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else if grade < 9.0 {\n            grades_vec.push(String::from(\"\
    E\"));\n        } else {\n            grades_vec.push(String::from(\"F\"));\n\
    \        }\n    }\n    grades_vec", "    let mut letter_grades = vec![];\n   \
    \ let mut min_grade = grades.iter().min().unwrap();\n    let mut max_grade = grades.iter().max().unwrap();\n\
    \    let mut min_grade_index = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut grades_sum = grades.iter().sum();\n    let mut grades_sum_index =\
    \ 0;\n    let mut grades_sum_index2 = 0;\n    let mut grades_sum_index3 = 0;\n\
    \    let mut grades_sum_index4 = 0;\n    let mut grades_sum_index5 = 0;\n    let\
    \ mut grades_sum_index6 = 0;\n    let mut grades_sum_index7 = 0;\n    let mut\
    \ grades_sum_index8 = 0;\n    let mut grades_sum_index9 = 0;\n    let mut grades_sum_index10\
    \ = 0;\n    let mut grades_sum_index11 = 0;\n    let mut grades_sum_index12 =\
    \ 0;\n    let mut grades_sum_index13 = 0;\n    let mut grades_sum_index14 = 0;\n\
    \    let mut grades_sum_index15 = 0;\n    let mut grades_sum_index16 = 0;\n  \
    \  let mut grades_sum_index17 = 0;\n    let mut grades_sum_index18 = 0;\n    let\
    \ mut grades_sum_index19 = 0;\n    let mut grades_sum_index20 = 0;\n    let mut\
    \ grades_sum_index21 = 0;\n    let mut grades_sum_index22 = 0;\n    let mut grades_sum_index23\
    \ = 0;\n    let mut grades_sum_index24 = 0;\n    let mut grades_sum_index25 =\
    \ 0;\n    let mut grades_sum_index26 = 0;\n    let mut grades_sum_index27 = 0;\n\
    \    let mut grades_sum_index28 = 0;\n    let mut grades_sum_index29 = 0;\n  \
    \  let mut grades_sum_index30 = 0;\n    let mut grades_sum_index31 = 0;\n    let\
    \ mut grades_sum_index32 = 0;\n    let mut grades_sum_index33 = 0;\n    let mut\
    \ grades_sum_index34 = 0;\n    let mut grades_sum_index35 = 0;\n    let mut grades_sum_index36\
    \ = 0;\n    let mut grades_sum_index37 = 0;\n    let mut grades_sum_index38 =\
    \ 0;\n    let mut grades_sum_index39 = 0;\n    let mut grades_sum_index40 = 0;\n\
    \    let mut grades_sum_index41 = 0;\n    let mut grades_sum_index42 = 0;\n  \
    \  let mu", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut grades_sum: f64 = 0.0;\n    let mut grades_count: usize\
    \ = 0;\n    let mut grades_sum_square: f64 = 0.0;\n    let mut grades_square_count:\
    \ usize = 0;\n    let mut grades_sum_sq: f64 = 0.0;\n    let mut grades_square_sq:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_2: f64 = 0.0;\n    let mut grades_square_sq_2:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_3: f64 = 0.0;\n    let mut grades_square_sq_3:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_4: f64 = 0.0;\n    let mut grades_square_sq_4:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_5: f64 = 0.0;\n    let mut grades_square_sq_5:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_6: f64 = 0.0;\n    let mut grades_square_sq_6:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_7: f64 = 0.0;\n    let mut grades_square_sq_7:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_8: f64 = 0.0;\n    let mut grades_square_sq_8:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_9: f64 = 0.0;\n    let mut grades_square_sq_9:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_10: f64 = 0.0;\n    let mut grades_square_sq_10:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_11: f64 = 0.0;\n    let mut grades_square_sq_11:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_12: f64 = 0.0;\n    let mut grades_square_sq_12:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_13: f64 = 0.0;\n    let mut grades_square_sq_13:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_14: f64 = 0.0;\n    let mut grades_square_sq_14:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_15: f64 = 0.0;\n    let mut grades_square_sq_15:\
    \ f64 = 0.0;\n    let mut grades_sum_sq_16: f64 = 0.0;\n    let mut grades_square",
  "    let mut grades_sorted = grades.iter().cloned().collect::<Vec<_>>();\n    grades_sorted.sort_unstable();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_sorted[0];\n\
    \    let mut current_letter = String::from(\"E\");\n    for grade in grades_sorted\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter);\n\
    \            current_letter = String::from(\"E\");\n            current_grade\
    \ = grade;\n        } else if grade == current_grade {\n            current_letter\
    \ += String::from(\"+\");\n        } else {\n            current_letter += String::from(\"\
    -\");\n        }\n    }\n    letter_grades.push(current_letter);\n    letter_grades",
  "    let mut grades_iter = grades.iter();\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut current_grade: f64 = grades_iter.next().unwrap();\n   \
    \ let mut current_letter: &str = \"E\";\n    let mut current_letter_grade: &str\
    \ = \"E\";\n    while grades_iter.any() {\n        let current_grade = grades_iter.next().unwrap();\n\
    \        if current_grade > current_grade {\n            current_letter = \"A\"\
    ;\n            current_letter_grade = \"A\";\n        } else if current_grade\
    \ < current_grade {\n            current_letter = \"B\";\n            current_letter_grade\
    \ = \"B\";\n        } else if current_grade == current_grade {\n            current_letter\
    \ = \"C\";\n            current_letter_grade = \"C\";\n        } else if current_grade\
    \ > current_grade {\n            current_letter = \"D\";\n            current_letter_grade\
    \ = \"D\";\n        } else if current_grade < current_grade {\n            current_letter\
    \ = \"E\";\n            current_letter_grade = \"E\";\n        } else {\n    \
    \        current_letter = \"E\";\n            current_letter_grade = \"E\";\n\
    \        }\n        grades_vec.push(current_letter + current_letter_grade);\n\
    \    }\n    grades_vec", "    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n", "    let mut grades_copy = grades.clone();\n\
    \    let mut grades_sorted = grades_copy.clone();\n    grades_sorted.sort();\n\
    \    let mut grades_reversed = grades_copy.clone();\n    grades_reversed.reverse();\n\
    \    let mut grades_reversed_sorted = grades_reversed.clone();\n    grades_reversed_sorted.sort();\n\
    \    let mut grades_reversed_sorted_reversed = grades_reversed_sorted.clone();\n\
    \    grades_reversed_sorted_reversed.reverse();\n    let mut grades_reversed_sorted_reversed_sorted\
    \ = grades_reversed_sorted_reversed.clone();\n    grades_reversed_sorted_reversed_sorted.sort();\n\
    \    let mut grades_reversed_sorted_reversed_sorted_reversed = grades_reversed_sorted_reversed_sorted.clone();\n\
    \    grades_reversed_sorted_reversed_sorted_reversed.reverse();\n    let mut grades_reversed_sorted_reversed_sorted_reversed_sorted\
    \ = grades_reversed_sorted_reversed_sorted_reversed.clone();\n    grades_reversed_sorted_reversed_sorted_reversed_sorted.sort();\n\
    \    let mut grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed =\
    \ grades_reversed_sorted_reversed_sorted_reversed_sorted.clone();\n    grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed.reverse();\n\
    \    let mut grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted\
    \ = grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed.clone();\n\
    \    grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted.sort();\n\
    \    let mut grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed\
    \ = grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted.clone();\n\
    \    grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed.reverse();\n\
    \    let mut grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted\
    \ = grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed.clone();\n\
    \    grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted.sort();\n\
    \    let mut grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed\
    \ = grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed.clone();\n\
    \    grades_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted.sort();\n\
    \    let mut grades_reversed_sorted_reverse", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    for grade in grades_copy {\n        if grade < current_grade {\n        \
    \    current_letter_grade = String::from(\"E\");\n            current_grade =\
    \ grade;\n        }\n        if grade == current_grade {\n            if grade\
    \ < current_grade {\n                current_letter_grade = String::from(\"E\"\
    );\n                current_grade = grade;\n            }\n            if grade\
    \ == current_grade {\n                if grade < current_grade {\n           \
    \         current_letter_grade = String::from(\"E\");\n                    current_grade\
    \ = grade;\n                }\n                if grade == current_grade {\n \
    \                   if grade < current_grade {\n                        current_letter_grade\
    \ = String::from(\"E\");\n                        current_grade = grade;\n   \
    \                 }\n                    if grade == current_grade {\n       \
    \                 if grade < current_grade {\n                            current_letter_grade\
    \ = String::from(\"E\");\n                            current_grade = grade;\n\
    \                        }\n                        if grade == current_grade\
    \ {\n                            if grade < current_grade {\n                \
    \                current_letter_grade = String::from(\"E\");\n               \
    \                 current_grade = grade;\n                            }\n    \
    \                        if grade == current_grade {\n                       \
    \         if grade < current_grade {\n                                    current_letter_grade\
    \ = String::from(\"E\");\n                                    current_grade =\
    \ grade;\n                                }\n                                if\
    \ grade == current_grade {\n                                    if grade < current_grade\
    \ {\n                                        current_letter_grade = String::from(\"\
    E\");\n                                        current_grade = grade;\n      \
    \                              }\n                                    if grade\
    \ == current_grade {\n                                        if grade < current_grade\
    \ {\n                                            current_letter_grade = String::from(\"\
    E\");\n                                            current_grade = grade;\n  \
    \                                      }\n                                   \
    \     if grade == current_grade {\n                                          \
    \  if grade < current_grade {\n                                              \
    \  current_letter_grade = String::from(\"E\");\n                             \
    \                   current_grade = grade;\n                                 \
    \           }\n                                            if grade == current_grade\
    \ {\n                                                if grade < current_grade\
    \ {\n                                                    current_letter_grade\
    \ = String::from(\"E\");\n                                                   \
    \ current_grade = grade;\n                                                }\n\
    \                                                if grade == current_grade {\n\
    \                                                    if grade < current_grade\
    \ {\n                                                        current_letter_",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut grades_sum: f64 = grades.iter().sum();\n    let mut grades_length:\
    \ usize = grades.len();\n    let mut grades_average: f64 = grades_sum / grades_length;\n\
    \    let mut grades_average_index: usize = 0;\n    let mut grades_average_index2:\
    \ usize = 0;\n    let mut grades_average_index3: usize = 0;\n    let mut grades_average_index4:\
    \ usize = 0;\n    let mut grades_average_index5: usize = 0;\n    let mut grades_average_index6:\
    \ usize = 0;\n    let mut grades_average_index7: usize = 0;\n    let mut grades_average_index8:\
    \ usize = 0;\n    let mut grades_average_index9: usize = 0;\n    let mut grades_average_index10:\
    \ usize = 0;\n    let mut grades_average_index11: usize = 0;\n    let mut grades_average_index12:\
    \ usize = 0;\n    let mut grades_average_index13: usize = 0;\n    let mut grades_average_index14:\
    \ usize = 0;\n    let mut grades_average_index15: usize = 0;\n    let mut grades_average_index16:\
    \ usize = 0;\n    let mut grades_average_index17: usize = 0;\n    let mut grades_average_index18:\
    \ usize = 0;\n    let mut grades_average_index19: usize = 0;\n    let mut grades_average_index20:\
    \ usize = 0;\n    let mut grades_average_index21: usize = 0;\n    let mut grades_average_index22:\
    \ usize = 0;\n    let mut grades_average_index23: usize = 0;\n    let mut grades_average_index24:\
    \ usize = 0;\n    let mut grades_average_index25: usize = 0;\n    let mut grades_average_index26:\
    \ usize = 0;\n    let mut grades_average_index27: usize = 0;\n    let mut grades_average_index28:\
    \ usize = 0;\n    let mut grades_average_index29: usize = 0;\n    let mut grades_average_index30:\
    \ usize = 0;\n    let mut grades_average_index31: usize = 0;\n    let mut grades_average_index32:\
    \ usize = 0;\n    let mut grades_average_index33: usize = 0;\n    let mut grades_average_index34:\
    \ usize = 0;\n    let mut grades_average", "    let mut letter_grades = vec![];\n\
    \    let mut grades_sum = grades.iter().sum();\n    let mut min_grade = grades.iter().min();\n\
    \    let mut max_grade = grades.iter().max();\n    let mut min_grade_index = grades.iter().min_by_key(|&x|\
    \ x);\n    let mut max_grade_index = grades.iter().max_by_key(|&x| x);\n    let\
    \ mut min_grade_index = grades.iter().min_by_key(|&x| x).unwrap();\n    let mut\
    \ max_grade_index = grades.iter().max_by_key(|&x| x).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().min_by_key(|&x| x).unwrap();\n    let mut max_grade_index =\
    \ grades.iter().max_by_key(|&x| x).unwrap();\n    let mut min_grade_index = grades.iter().min_by_key(|&x|\
    \ x).unwrap();\n    let mut max_grade_index = grades.iter().max_by_key(|&x| x).unwrap();\n\
    \    let mut min_grade_index = grades.iter().min_by_key(|&x| x).unwrap();\n  \
    \  let mut max_grade_index = grades.iter().max_by_key(|&x| x).unwrap();\n    let\
    \ mut min_grade_index = grades.iter().min_by_key(|&x| x).unwrap();\n    let mut\
    \ max_grade_index = grades.iter().max_by_key(|&x| x).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().min_by_key(|&x| x).unwrap();\n    let mut max_grade_index =\
    \ grades.iter().max_by_key(|&x| x).unwrap();\n    let mut min_grade_index = grades.iter().min_by_key(|&x|\
    \ x).unwrap();\n    let mut max_grade_index = grades.iter().max_by_key(|&x| x).unwrap();\n\
    \    let mut min_grade_index = grades.iter().min_by_key(|&x| x).unwrap();\n  \
    \  let mut max_grade_index = grades.iter().max_by_key(|&x| x).unwrap();\n    let\
    \ mut min_grade_index = grades.iter().min_by_key(|&x| x).unwrap();\n    let mut\
    \ max_grade_index = grades.iter().max_by_key(|&x| x).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().min_by_key(|&x| x).unwrap();\n    let mut max_grade_index =\
    \ grades.iter().max_by_key(|&x| x).unwrap();\n    let mut min_grade", "    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n", "    let mut letter_grades = vec![];\n    for grade in grades {\n\
    \        let mut letter_grade = String::from(\"E\");\n        if grade < 3.0 {\n\
    \            letter_grade = String::from(\"D-\");\n        } else if grade < 3.3\
    \ {\n            letter_grade = String::from(\"B-\");\n        } else if grade\
    \ < 3.7 {\n            letter_grade = String::from(\"B-\");\n        } else if\
    \ grade < 4.0 {\n            letter_grade = String::from(\"B-\");\n        } else\
    \ if grade < 4.3 {\n            letter_grade = String::from(\"B-\");\n       \
    \ } else if grade < 4.7 {\n            letter_grade = String::from(\"B-\");\n\
    \        } else if grade < 5.0 {\n            letter_grade = String::from(\"B-\"\
    );\n        } else if grade < 5.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 5.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 6.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 6.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 6.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 7.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 7.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 7.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 8.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 8.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 8.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 9.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 9.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 9.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 10.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 10.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 10.7 {\n            letter_grade = String::",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut prev_grade = grades_copy[0];\n    let mut prev_letter_grade = String::from(\"\
    E\");\n    let mut prev_gpa = grades_copy[0];\n    for grade in grades_copy {\n\
    \        if grade < prev_grade {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            if grade < prev_gpa {\n                letter_grades.push(String::from(\"\
    E\"));\n            } else {\n                let letter_grade = prev_letter_grade.clone();\n\
    \                let gpa = prev_gpa.clone();\n                let letter_grade\
    \ = if grade < gpa { \"A+\" } else if grade < 3.0 { \"A-\" } else if grade < 2.7\
    \ { \"B+\" } else if grade < 2.3 { \"B-\" } else if grade < 2.0 { \"C+\" } else\
    \ if grade < 1.7 { \"C\" } else if grade < 1.3 { \"C-\" } else if grade < 1.0\
    \ { \"D+\" } else if grade < 0.7 { \"D\" } else { \"D-\" };\n                letter_grades.push(letter_grade);\n\
    \                prev_letter_grade = letter_grade;\n                prev_gpa =\
    \ gpa;\n            }\n        }\n        prev_grade = grade;\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            letter_grades.push(String::from(\"B+\"));\n        } else\
    \ if grade > 2.7 {\n            letter_grades.push(String::from(\"B\"));\n   \
    \     } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else {\n            letter_grades.push(String::from(\"D-\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut total_grade = 0;\n    let mut\
    \ total_letter_grade = 0;\n    while grades_copy.len() > 0 {\n        let grade\
    \ = grades_copy.pop().unwrap();\n        total_grade += grade;\n        total_letter_grade\
    \ += grade * 4.0;\n        if total_grade > 4.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n            total_grade -= 4.0;\n        } else if total_grade > 3.0\
    \ {\n            letter_grades.push(String::from(\"A\"));\n            total_grade\
    \ -= 3.0;\n        } else if total_grade > 2.0 {\n            letter_grades.push(String::from(\"\
    A-\"));\n            total_grade -= 2.0;\n        } else if total_grade > 1.0\
    \ {\n            letter_grades.push(String::from(\"B+\"));\n            total_grade\
    \ -= 1.0;\n        } else if total_grade > 0.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n            total_grade -= 0.7;\n        } else if total_grade > 0.3 {\n\
    \            letter_grades.push(String::from(\"B-\"));\n            total_grade\
    \ -= 0.3;\n        } else if total_grade > 0.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n            total_grade -= 0.0;\n        } else if total_grade > -0.3\
    \ {\n            letter_grades.push(String::from(\"C\"));\n            total_grade\
    \ -= -0.3;\n        } else if total_grade > -0.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n            total_grade -= -0.7;\n        } else if total_grade > -1.0\
    \ {\n            letter_grades.push(String::from(\"D+\"));\n            total_grade\
    \ -= -1.0;\n        } else if total_grade > -1.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n            total_grade -= -1.7;\n        } else if total_grade > -2.0\
    \ {\n            letter_grades.push(String::from(\"D-\"));\n            total_grade\
    \ -= -2.0;\n        } else if total_grade > -3.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n            total_grade -= -3.0;\n        } else {\n            letter_grades.push(String::from(\"\
    E\"));\n        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut grades_len = grades.len();\n    let mut grades_sum = 0.0;\n    let\
    \ mut grades_average = 0.0;\n    let mut grades_min_value = grades.iter().min().unwrap();\n\
    \    let mut grades_max_value = grades.iter().max().unwrap();\n    let mut grades_min_value\
    \ = grades.iter().min().unwrap();\n    let mut grades_max_value = grades.iter().max().unwrap();\n\
    \    let mut grades_min_value = grades.iter().min().unwrap();\n    let mut grades_max_value\
    \ = grades.iter().max().unwrap();\n    let mut grades_min_value = grades.iter().min().unwrap();\n\
    \    let mut grades_max_value = grades.iter().max().unwrap();\n    let mut grades_min_value\
    \ = grades.iter().min().unwrap();\n    let mut grades_max_value = grades.iter().max().unwrap();\n\
    \    let mut grades_min_value = grades.iter().min().unwrap();\n    let mut grades_max_value\
    \ = grades.iter().max().unwrap();\n    let mut grades_min_value = grades.iter().min().unwrap();\n\
    \    let mut grades_max_value = grades.iter().max().unwrap();\n    let mut grades_min_value\
    \ = grades.iter().min().unwrap();\n    let mut grades_max_value = grades.iter().max().unwrap();\n\
    \    let mut grades_min_value = grades.iter().min().unwrap();\n    let mut grades_max_value\
    \ = grades.iter().max().unwrap();\n    let mut grades_min_value = grades.iter().min().unwrap();\n\
    \    let mut grades_max_value = grades.iter().max().unwrap();\n    let mut grades_min_value\
    \ = grades.iter().min().unwrap();\n    let mut grades_max_value = grades.iter().max().unwrap();\n\
    \    let mut grades_min_value = grades.iter().min().unwrap();\n    let mut grades_max_value\
    \ = grades.iter().max().unwrap();\n    let mut grades_min_value = grades.iter().min().unwrap();\n\
    \    let mut grades_max_value = grades.iter().max().unwrap();\n    let mut grades_min_value\
    \ = grades.iter().min().unwrap();\n    let mut grades_max_value = grades.iter().max().unwrap();\n\
    \    let mut grades_min_value = grades.iter().min().unwrap();\n    let mut grades_max_value\
    \ = grades.", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy.pop().unwrap();\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade_index46 = 0;\n    let mut current_letter_grade_index47\
    \ = 0;", "    let mut grades_iter = grades.iter();\n    let mut letter_grades\
    \ = vec![];\n    \n    while let Some(grade) = grades_iter.next() {\n        let\
    \ mut letter_grade = String::from(\"E\");\n        \n        if grade > 3.0 {\n\
    \            letter_grade = String::from(\"D+\");\n        } else if grade > 2.7\
    \ {\n            letter_grade = String::from(\"D\");\n        } else if grade\
    \ > 2.3 {\n            letter_grade = String::from(\"D-\");\n        } else if\
    \ grade > 2.0 {\n            letter_grade = String::from(\"C+\");\n        } else\
    \ if grade > 1.7 {\n            letter_grade = String::from(\"C\");\n        }\
    \ else if grade > 1.3 {\n            letter_grade = String::from(\"C-\");\n  \
    \      } else if grade > 1.0 {\n            letter_grade = String::from(\"B+\"\
    );\n        } else if grade > 0.7 {\n            letter_grade = String::from(\"\
    B\");\n        } else if grade > 0.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    A+\");\n        } else if grade > -0.7 {\n            letter_grade = String::from(\"\
    A\");\n        } else if grade > -0.3 {\n            letter_grade = String::from(\"\
    A-\");\n        } else if grade > -0.0 {\n            letter_grade = String::from(\"\
    A\");\n        } else {\n            letter_grade = String::from(\"A\");\n   \
    \     }\n        \n        letter_grades.push(letter_grade);\n    }\n    \n  \
    \  letter_grades", "    let mut letter_grades = vec![];\n    let mut max_grade\
    \ = grades.iter().max().unwrap();\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut current_grade = max_grade;\n    let mut current_letter_grade = String::from(\"\
    E\");\n    for grade in grades {\n        if grade > max_grade {\n           \
    \ max_grade = grade;\n        }\n        if grade < min_grade {\n            min_grade\
    \ = grade;\n        }\n        if grade == 0.0 {\n            current_grade =\
    \ max_grade;\n            current_letter_grade = String::from(\"E\");\n      \
    \  }\n        if grade < current_grade {\n            current_grade = grade;\n\
    \            current_letter_grade = String::from(\"E\");\n        }\n        if\
    \ grade > current_grade {\n            current_grade = grade;\n            current_letter_grade\
    \ = String::from(\"E\");\n        }\n        if grade < max_grade {\n        \
    \    letter_grades.push(current_letter_grade);\n            current_grade = grade;\n\
    \            current_letter_grade = String::from(\"E\");\n        }\n    }\n \
    \   letter_grades.push(current_letter_grade);\n    letter_grades", "    let mut\
    \ letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n    let mut\
    \ grade = grades.iter().sum();\n    while grade != 0 {\n        let mut letter_grade\
    \ = String::from(\"E\");\n        if grade > gpa {\n            letter_grade =\
    \ String::from(\"D+\");\n            grade -= gpa;\n        } else if grade >\
    \ gpa - 0.3 {\n            letter_grade = String::from(\"D\");\n            grade\
    \ -= gpa - 0.3;\n        } else if grade > gpa - 0.2 {\n            letter_grade\
    \ = String::from(\"C-\");\n            grade -= gpa - 0.2;\n        } else if\
    \ grade > gpa - 0.1 {\n            letter_grade = String::from(\"C\");\n     \
    \       grade -= gpa - 0.1;\n        } else if grade > gpa - 0.05 {\n        \
    \    letter_grade = String::from(\"B-\");\n            grade -= gpa - 0.05;\n\
    \        } else if grade > gpa - 0.01 {\n            letter_grade = String::from(\"\
    B\");\n            grade -= gpa - 0.01;\n        } else if grade > gpa - 0.005\
    \ {\n            letter_grade = String::from(\"A-\");\n            grade -= gpa\
    \ - 0.005;\n        } else if grade > gpa - 0.001 {\n            letter_grade\
    \ = String::from(\"A\");\n            grade -= gpa - 0.001;\n        } else if\
    \ grade > gpa - 0.0005 {\n            letter_grade = String::from(\"A+\");\n \
    \           grade -= gpa - 0.0005;\n        } else {\n            letter_grade\
    \ = String::from(\"A\");\n            grade -= gpa;\n        }\n        letter_grades.push(letter_grade);\n\
    \        gpa -= grade;\n    }\n    letter_grades", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n", "    let mut grades_copy\
    \ = grades.clone();\n    grades_copy.sort();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_grade_index\
    \ = 0;\n    let mut current_letter_grade = String::from(\"E\");\n    while current_grade\
    \ > 0.0 {\n        if current_grade < grades_copy[current_grade_index] {\n   \
    \         current_letter_grade = String::from(\"D-\");\n            current_grade\
    \ = grades_copy[current_grade_index];\n            current_grade_index += 1;\n\
    \        } else if current_grade == grades_copy[current_grade_index] {\n     \
    \       current_letter_grade = String::from(\"D\");\n            current_grade\
    \ = grades_copy[current_grade_index];\n            current_grade_index += 1;\n\
    \        } else if current_grade > grades_copy[current_grade_index] {\n      \
    \      current_letter_grade = String::from(\"D+\");\n            current_grade\
    \ = grades_copy[current_grade_index];\n            current_grade_index += 1;\n\
    \        } else {\n            current_letter_grade = String::from(\"D\");\n \
    \           current_grade = grades_copy[current_grade_index];\n            current_grade_index\
    \ += 1;\n        }\n        letter_grades.push(current_letter_grade);\n    }\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut min_grade = grades.iter().min().unwrap();\n    let mut\
    \ max_grade = grades.iter().max().unwrap();\n    let mut min_grade_index = grades.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut current_grade = grades_copy[min_grade_index];\n\
    \    let mut current_index = min_grade_index;\n    while current_index < max_grade_index\
    \ {\n        let current_grade = grades_copy[current_index];\n        if current_grade\
    \ < min_grade {\n            letter_grades.push(String::from(\"D-\"));\n     \
    \       current_index += 1;\n        } else if current_grade > max_grade {\n \
    \           letter_grades.push(String::from(\"D+\"));\n            current_index\
    \ += 1;\n        } else {\n            let current_index = grades.iter().position(|x|\
    \ x == current_grade).unwrap();\n            let current_grade = grades_copy[current_index];\n\
    \            if current_grade < min_grade {\n                letter_grades.push(String::from(\"\
    D-\"));\n                current_index += 1;\n            } else if current_grade\
    \ > max_grade {\n                letter_grades.push(String::from(\"D+\"));\n \
    \               current_index += 1;\n            } else {\n                let\
    \ current_index = grades.iter().position(|x| x == current_grade).unwrap();\n \
    \               let current_grade = grades_copy[current_index];\n            \
    \    if current_grade < min_grade {\n                    letter_grades.push(String::from(\"\
    D-\"));\n                    current_index += 1;\n                } else if current_grade\
    \ > max_grade {\n                    letter_grades.push(String::from(\"D+\"));\n\
    \                    current_index += 1;\n                } else {\n         \
    \           let current_index = grades.iter().position(|x| x == current_grade).unwrap();\n\
    \                    let current_grade = grades_copy[current_index];\n       \
    \             if current_grade < min_grade {\n                        letter_grades.push(String::from(\"\
    D-\"));\n                        current_index += 1;\n                    } else\
    \ if current_grade > max_grade {\n                        letter_grades.push(String::from(\"\
    D+\"));\n                        current_index += 1;\n                    } else\
    \ {\n                        let current_index = grades.iter().position(|x| x\
    \ == current_grade).unwrap();\n                        let current_grade = grades_copy[current_index];\n\
    \                        if current_grade < min_grade {\n                    \
    \        letter_", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut total_grade = 0.0;\n    let mut total_letter_grade =\
    \ String::new();\n    let mut total_letter_grade_index = 0;\n    let mut total_letter_grade_index2\
    \ = 0;\n    let mut total_letter_grade_index3 = 0;\n    let mut total_letter_grade_index4\
    \ = 0;\n    let mut total_letter_grade_index5 = 0;\n    let mut total_letter_grade_index6\
    \ = 0;\n    let mut total_letter_grade_index7 = 0;\n    let mut total_letter_grade_index8\
    \ = 0;\n    let mut total_letter_grade_index9 = 0;\n    let mut total_letter_grade_index10\
    \ = 0;\n    let mut total_letter_grade_index11 = 0;\n    let mut total_letter_grade_index12\
    \ = 0;\n    let mut total_letter_grade_index13 = 0;\n    let mut total_letter_grade_index14\
    \ = 0;\n    let mut total_letter_grade_index15 = 0;\n    let mut total_letter_grade_index16\
    \ = 0;\n    let mut total_letter_grade_index17 = 0;\n    let mut total_letter_grade_index18\
    \ = 0;\n    let mut total_letter_grade_index19 = 0;\n    let mut total_letter_grade_index20\
    \ = 0;\n    let mut total_letter_grade_index21 = 0;\n    let mut total_letter_grade_index22\
    \ = 0;\n    let mut total_letter_grade_index23 = 0;\n    let mut total_letter_grade_index24\
    \ = 0;\n    let mut total_letter_grade_index25 = 0;\n    let mut total_letter_grade_index26\
    \ = 0;\n    let mut total_letter_grade_index27 = 0;\n    let mut total_letter_grade_index28\
    \ = 0;\n    let mut total_letter_grade_index29 = 0;\n    let mut total_letter_grade_index30\
    \ = 0;\n    let mut total_letter_grade_index31 = 0;\n    let mut total_letter_grade_index32\
    \ = 0;\n    let mut total_letter_grade_index33 = 0;\n    let mut total_letter_grade_index34\
    \ = 0;\n    let mut total_letter_grade_index35 = 0;\n    let mut total_letter_grade_index36\
    \ = 0;\n    let mut total_letter_grade_index37 = 0;\n    let mut total_letter_grade_index38\
    \ = 0;\n    let mut total_letter_grade_index39 = 0;\n    let mut total_letter_grade_index40\
    \ = 0;\n    let mut total_letter_grade_index41 = 0;\n    let mut total_letter_grade_index42\
    \ = 0;\n    let mut total_letter_grade_index43 = 0;\n    let mut total_letter_grade_index44\
    \ = 0;\n    let mut total_letter_grade_index45 = 0;\n    let mut total_letter_grade_index46\
    \ = 0;\n    let mut total_letter_grade_index47 = 0;\n    let mut total_letter_grade_index",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    for\
    \ grade in grades_copy {\n        if grade > current_grade {\n            letter_grades.push(String::from(\"\
    A+\"));\n            current_grade = grade;\n        } else if grade < current_grade\
    \ {\n            letter_grades.push(String::from(\"A-\"));\n            current_grade\
    \ = grade;\n        } else {\n            letter_grades.push(String::from(\"B+\"\
    ));\n            current_grade = grade;\n        }\n    }\n    letter_grades.push(String::from(\"\
    E\"));\n    letter_grades", "    let mut grades_iter = grades.iter();\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut current_grade: f64 = grades_iter.next().unwrap();\n\
    \    let mut current_grade_index = 0;\n    let mut current_letter_grade: String;\n\
    \    while current_grade != 0.0 {\n        let mut current_letter_grade = String::from(\"\
    \");\n        let mut current_grade = grades_iter.next().unwrap();\n        while\
    \ current_grade != 0.0 {\n            if current_grade > current_grade {\n   \
    \             current_letter_grade += String::from(\"+\");\n                current_grade\
    \ -= current_grade;\n            } else {\n                current_letter_grade\
    \ += String::from(\"-\");\n                current_grade -= current_grade;\n \
    \           }\n            current_grade_index += 1;\n            current_grade\
    \ = grades_iter.next().unwrap();\n        }\n        grades_vec.push(current_letter_grade);\n\
    \    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n    let mut\
    \ grades_len = grades.len();\n    let mut grades_sum = 0.0;\n    let mut grades_min_value\
    \ = grades.iter().min().unwrap();\n    let mut grades_max_value = grades.iter().max().unwrap();\n\
    \    let mut grades_min_value = grades_min_value - 0.1;\n    let mut grades_max_value\
    \ = grades_max_value + 0.1;\n    let mut grades_min_value = grades_min_value -\
    \ 0.1;\n    let mut grades_max_value = grades_max_value + 0.1;\n    let mut grades_min_value\
    \ = grades_min_value - 0.1;\n    let mut grades_max_value = grades_max_value +\
    \ 0.1;\n    let mut grades_min_value = grades_min_value - 0.1;\n    let mut grades_max_value\
    \ = grades_max_value + 0.1;\n    let mut grades_min_value = grades_min_value -\
    \ 0.1;\n    let mut grades_max_value = grades_max_value + 0.1;\n    let mut grades_min_value\
    \ = grades_min_value - 0.1;\n    let mut grades_max_value = grades_max_value +\
    \ 0.1;\n    let mut grades_min_value = grades_min_value - 0.1;\n    let mut grades_max_value\
    \ = grades_max_value + 0.1;\n    let mut grades_min_value = grades_min_value -\
    \ 0.1;\n    let mut grades_max_value = grades_max_value + 0.1;\n    let mut grades_min_value\
    \ = grades_min_value - 0.1;\n    let mut grades_max_value = grades_max_value +\
    \ 0.1;\n    let mut grades_min_value = grades_min_value - 0.1;\n    let mut grades_max_value\
    \ = grades_max_value + 0.1;\n    let mut grades_min_value = grades_min_value -\
    \ 0.1;\n    let mut grades_max_value = grades_max_value + 0.1;\n    let mut grades_min_value\
    \ = grades_min_value - 0.1;\n    let mut grades_max_value = grades_max_value +\
    \ 0.1;\n    let mut grades_min_value = grades_min_value - 0.1;\n    let mut grades_max_value\
    \ = grades_max_value + 0.1;\n    let mut grades_min_value = grades_min_value -\
    \ 0.1;\n    let mut grades_max_value = grades_max_value + 0.1;\n    let mut grades_min_value\
    \ = grades_min_value - 0.1;\n    let mut grades_max_value = grades_max_value +\
    \ 0.1;\n    let mut grades_min_value = grades_min_value - 0.1;\n    let ", " \
    \   let mut letter_grades = vec![];\n    for grade in grades {\n        let mut\
    \ letter_grade = String::from(\"E\");\n        if grade > 3.0 {\n            letter_grade\
    \ = String::from(\"D-\");\n        } else if grade > 2.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 1.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.7 { // < 0.7\n        \
    \    letter_grade = String::from(\"B-\");\n        } else if grade > 0.0 { //\
    \ < 0.0\n            letter_grade = String::from(\"B-\");\n        } else if grade\
    \ > 0.0 { // < 0.0\n            letter_grade = String::from(\"B-\");\n       \
    \ } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { // < 0.0\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 { ", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 0.7 { \n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 0.3 { \n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 { \n            letter_grades.push(String::from(\"\
    D\"));\n        } else { \n            letter_grades.push(String::from(\"D-\"\
    ));\n        }\n    }\n    letter_grades", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    for grade in grades {\n        let grade = grade as f64;\n  \
    \      let letter_grade = match grade {\n            4.0 => \"A+\".to_string(),\n\
    \            3.7 => \"A\".to_string(),\n            3.3 => \"A-\".to_string(),\n\
    \            3.0 => \"B+\".to_string(),\n            2.7 => \"B\".to_string(),\n\
    \            2.3 => \"B-\".to_string(),\n            2.0 => \"C+\".to_string(),\n\
    \            1.7 => \"C\".to_string(),\n            1.3 => \"C-\".to_string(),\n\
    \            1.0 => \"D+\".to_string(),\n            0.7 => \"D\".to_string(),\n\
    \            0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n\
    \        };\n        grades_vec.push(letter_grade);\n    }\n    grades_vec", " \
    \   let mut letter_grades = vec![];\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut max_grade = grades.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut current_grade\
    \ = grades[min_grade_index];\n    let mut current_index = min_grade_index;\n \
    \   while current_index < max_grade_index {\n        let current_grade = grades[current_index];\n\
    \        if current_grade < min_grade {\n            letter_grades.push(String::from(\"\
    D-\"));\n            break;\n        }\n        if current_grade == min_grade\
    \ {\n            letter_grades.push(String::from(\"D\"));\n            break;\n\
    \        }\n        if current_grade > max_grade {\n            letter_grades.push(String::from(\"\
    D+\"));\n            break;\n        }\n        let current_index = current_index\
    \ + 1;\n        let current_grade = grades[current_index];\n        if current_grade\
    \ < min_grade {\n            letter_grades.push(String::from(\"D-\"));\n     \
    \       break;\n        }\n        if current_grade == min_grade {\n         \
    \   letter_grades.push(String::from(\"D\"));\n            break;\n        }\n\
    \        if current_grade > max_grade {\n            letter_grades.push(String::from(\"\
    D+\"));\n            break;\n        }\n    }\n    letter_grades.push(String::from(\"\
    E\"));\n    letter_grades", "    let mut grades_string = vec![];\n    for grade\
    \ in grades {\n        if grade > 3.0 {\n            grades_string.push(String::from(\"\
    B+\"));\n        } else if grade > 2.0 {\n            grades_string.push(String::from(\"\
    B-\"));\n        } else if grade > 1.0 {\n            grades_string.push(String::from(\"\
    C+\"));\n        } else if grade > 0.7 {\n            grades_string.push(String::from(\"\
    C\"));\n        } else if grade > 0.3 {\n            grades_string.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 {\n            grades_string.push(String::from(\"\
    D+\"));\n        } else if grade > -0.3 {\n            grades_string.push(String::from(\"\
    D\"));\n        } else if grade > -0.7 {\n            grades_string.push(String::from(\"\
    D-\"));\n        } else {\n            grades_string.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_string", "    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n", "    let mut grades_copy\
    \ = grades.clone();\n    grades_copy.sort();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade < current_grade\
    \ {\n            current_letter_grade = String::from(\"E\");\n            current_grade\
    \ = grade;\n        }\n        if grade == current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_letter_grade = String::from(\"E\");\n            current_grade\
    \ = grade;\n        } else {\n            current_letter_grade = String::from(current_letter_grade.chars().nth(1).unwrap().to_string());\n\
    \            current_grade = grade;\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    let mut gpa_max = grades.iter().max().unwrap();\n    let mut gpa_min = grades.iter().min().unwrap();\n\
    \    let mut gpa_average = grades.iter().sum().unwrap() / grades.len();\n    let\
    \ mut gpa_sum = 0;\n    let mut gpa_count = 0;\n    for grade in grades {\n  \
    \      gpa_sum += grade;\n        gpa_count += 1;\n        if grade == 0.0 {\n\
    \            break;\n        }\n    }\n    let mut gpa_average = grades.iter().sum().unwrap()\
    \ / grades.len();\n    let mut gpa_sum = 0;\n    let mut gpa_count = 0;\n    for\
    \ grade in grades {\n        gpa_sum += grade;\n        gpa_count += 1;\n    \
    \    if grade == 0.0 {\n            break;\n        }\n    }\n    let mut gpa_average\
    \ = grades.iter().sum().unwrap() / grades.len();\n    let mut gpa_sum = 0;\n \
    \   let mut gpa_count = 0;\n    for grade in grades {\n        gpa_sum += grade;\n\
    \        gpa_count += 1;\n        if grade == 0.0 {\n            break;\n    \
    \    }\n    }\n    let mut gpa_average = grades.iter().sum().unwrap() / grades.len();\n\
    \    let mut gpa_sum = 0;\n    let mut gpa_count = 0;\n    for grade in grades\
    \ {\n        gpa_sum += grade;\n        gpa_count += 1;\n        if grade == 0.0\
    \ {\n            break;\n        }\n    }\n    let mut gpa_average = grades.iter().sum().unwrap()\
    \ / grades.len();\n    let mut gpa_sum = 0;\n    let mut gpa_count = 0;\n    for\
    \ grade in grades {\n        gpa_sum += grade;\n        gpa_count += 1;\n    \
    \    if grade == 0.0 {\n            break;\n        }\n    }\n    let mut gpa_average\
    \ = grades.iter().sum().unwrap() / grades.len();\n    let mut gpa_sum = 0;\n \
    \   let mut gpa_count = 0;\n    for grade in grades {\n        gpa_sum += grade;\n\
    \        gpa_count += 1;\n        if grade == 0.0 {\n            break;\n    \
    \    }\n    }\n    let mut gpa_average = grades.iter().sum().unwrap() / grades.len();\n\
    \    let mut gpa_sum = 0;\n    let mut gpa_count = 0;\n    for grade in grades\
    \ {\n        gpa_sum += grade;\n        gpa_count += 1;\n        if grade ", " \
    \   let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ < 3.0 {\n            letter_grades.push(String::from(\"A+\"));\n        } else\
    \ if grade < 3.3 {\n            letter_grades.push(String::from(\"A\"));\n   \
    \     } else if grade < 3.7 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade < 7.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            letter_grades.push(String::from(\"F\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_string = vec![];\n    for grade in grades\
    \ {\n        let grade = grade as f64;\n        let letter_grade = match grade\
    \ {\n            4.0 => \"A+\".to_string(),\n            3.7 => \"A\".to_string(),\n\
    \            3.3 => \"A-\".to_string(),\n            3.0 => \"B+\".to_string(),\n\
    \            2.7 => \"B\".to_string(),\n            2.3 => \"B-\".to_string(),\n\
    \            2.0 => \"C+\".to_string(),\n            1.7 => \"C\".to_string(),\n\
    \            1.3 => \"C-\".to_string(),\n            1.0 => \"D+\".to_string(),\n\
    \            0.7 => \"D\".to_string(),\n            0.0 => \"D-\".to_string(),\n\
    \            _ => \"E\".to_string(),\n        };\n        grades_string.push(letter_grade);\n\
    \    }\n    grades_string", "    let mut letter_grades = vec![];\n    let mut\
    \ gpa = grades.iter().sum();\n    let mut letter_grade = String::from(\"E\");\n\
    \    while gpa > 0.0 {\n        if gpa < 3.0 {\n            letter_grade = String::from(\"\
    D-\");\n            gpa -= 3.0;\n        } else if gpa < 3.3 {\n            letter_grade\
    \ = String::from(\"C-\");\n            gpa -= 3.3;\n        } else if gpa < 3.7\
    \ {\n            letter_grade = String::from(\"B-\");\n            gpa -= 3.7;\n\
    \        } else if gpa < 4.0 {\n            letter_grade = String::from(\"B-\"\
    );\n            gpa -= 4.0;\n        } else if gpa < 4.3 {\n            letter_grade\
    \ = String::from(\"B-\");\n            gpa -= 4.3;\n        } else if gpa < 4.7\
    \ {\n            letter_grade = String::from(\"B-\");\n            gpa -= 4.7;\n\
    \        } else if gpa < 5.0 {\n            letter_grade = String::from(\"B-\"\
    );\n            gpa -= 5.0;\n        } else if gpa < 5.3 {\n            letter_grade\
    \ = String::from(\"B-\");\n            gpa -= 5.3;\n        } else if gpa < 5.7\
    \ {\n            letter_grade = String::from(\"B-\");\n            gpa -= 5.7;\n\
    \        } else if gpa < 6.0 {\n            letter_grade = String::from(\"B-\"\
    );\n            gpa -= 6.0;\n        } else if gpa < 6.3 {\n            letter_grade\
    \ = String::from(\"B-\");\n            gpa -= 6.3;\n        } else if gpa < 6.7\
    \ {\n            letter_grade = String::from(\"B-\");\n            gpa -= 6.7;\n\
    \        } else if gpa < 7.0 {\n            letter_grade = String::from(\"B-\"\
    );\n            gpa -= 7.0;\n        } else if gpa < 7.3 {\n            letter_grade\
    \ = String::from(\"B-\");\n            gpa -= 7.3;\n        } else if gpa < 7.7\
    \ {\n            letter_grade = String::from(\"B-\");\n            gpa -= 7.7;\n\
    \        } else if gpa < 8.0 {\n            letter_grade = String::from(\"B-\"\
    );\n            gpa -= 8.0;\n        } else if gpa < 8.3 {\n            letter_grade\
    \ = String::from(\"B-\");\n            gpa -= 8.3;\n        } else if gpa < ",
  "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n \
    \   let mut current_grade = String::from(\"E\");\n    while gpa > 0.0 {\n    \
    \    let grade = if gpa >= 4.0 { String::from(\"A+\") } else if gpa >= 3.7 { String::from(\"\
    A\") } else if gpa >= 3.3 { String::from(\"A-\") } else if gpa >= 3.0 { String::from(\"\
    B+\") } else if gpa >= 2.7 { String::from(\"B\") } else if gpa >= 2.3 { String::from(\"\
    B-\") } else if gpa >= 2.0 { String::from(\"C+\") } else if gpa >= 1.7 { String::from(\"\
    C\") } else if gpa >= 1.3 { String::from(\"C-\") } else { String::from(\"D+\"\
    ) } else if gpa >= 1.0 { String::from(\"D\") } else { String::from(\"D-\") };\n\
    \        letter_grades.push(grade);\n        gpa -= 1.0;\n        current_grade\
    \ = grade;\n    }\n    letter_grades.push(current_grade);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_copy.iter().min();\n    let mut max_grade = grades_copy.iter().max();\n\
    \    let mut current_grade = grades_copy.iter().next();\n    while current_grade.unwrap()\
    \ != 0.0 {\n        if current_grade.unwrap() < min_grade {\n            letter_grades.push(String::from(\"\
    D-\"));\n            min_grade = current_grade.unwrap();\n        } else if current_grade.unwrap()\
    \ > max_grade {\n            letter_grades.push(String::from(\"D+\"));\n     \
    \       max_grade = current_grade.unwrap();\n        } else {\n            letter_grades.push(String::from(current_grade.unwrap().to_string()));\n\
    \            current_grade = grades_copy.iter().next();\n        }\n    }\n  \
    \  letter_grades", "    let mut grades_sorted = grades.clone();\n    grades_sorted.sort_unstable();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned", "    let mut grades_copy\
    \ = grades.clone();\n    grades_copy.sort();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut min_grade = grades_copy.iter().min().unwrap();\n    let mut max_grade\
    \ = grades_copy.iter().max().unwrap();\n    let mut min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n    let mut max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n    let mut current_grade = grades_copy[min_grade_index];\n\
    \    let mut current_index = min_grade_index;\n    while current_index < max_grade_index\
    \ {\n        if current_grade < grades_copy[current_index] {\n            current_grade\
    \ = grades_copy[current_index];\n            current_index = min_grade_index;\n\
    \        } else {\n            current_grade = grades_copy[current_index];\n \
    \           current_index += 1;\n        }\n        letter_grades.push(String::from(\n\
    \            format!(\"{}{}\", current_grade, \n                match current_grade\
    \ {\n                    4.0 => \"A+\",\n                    > 3.7 => \"A\",\n\
    \                    > 3.3 => \"A-\",\n                    > 3.0 => \"B+\",\n\
    \                    > 2.7 => \"B\",\n                    > 2.3 => \"B-\",\n \
    \                   > 2.0 => \"C+\",\n                    > 1.7 => \"C\",\n  \
    \                  > 1.3 => \"C-\",\n                    > 1.0 => \"D+\",\n  \
    \                  > 0.7 => \"D\",\n                    > 0.0 => \"D-\",\n   \
    \                 0.0 => \"E\",\n                }\n            )\n        ));\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut min_grade = grades_copy[0];\n    let\
    \ mut max_grade = grades_copy[0];\n    let mut min_grade_index = -1;\n    let\
    \ mut max_grade_index = -1;\n    let mut min_grade_index2 = -1;\n    let mut max_grade_index2\
    \ = -1;\n    let mut min_grade_index3 = -1;\n    let mut max_grade_index3 = -1;\n\
    \    let mut min_grade_index4 = -1;\n    let mut max_grade_index4 = -1;\n    let\
    \ mut min_grade_index5 = -1;\n    let mut max_grade_index5 = -1;\n    let mut\
    \ min_grade_index6 = -1;\n    let mut max_grade_index6 = -1;\n    let mut min_grade_index7\
    \ = -1;\n    let mut max_grade_index7 = -1;\n    let mut min_grade_index8 = -1;\n\
    \    let mut max_grade_index8 = -1;\n    let mut min_grade_index9 = -1;\n    let\
    \ mut max_grade_index9 = -1;\n    let mut min_grade_index10 = -1;\n    let mut\
    \ max_grade_index10 = -1;\n    let mut min_grade_index11 = -1;\n    let mut max_grade_index11\
    \ = -1;\n    let mut min_grade_index12 = -1;\n    let mut max_grade_index12 =\
    \ -1;\n    let mut min_grade_index13 = -1;\n    let mut max_grade_index13 = -1;\n\
    \    let mut min_grade_index14 = -1;\n    let mut max_grade_index14 = -1;\n  \
    \  let mut min_grade_index15 = -1;\n    let mut max_grade_index15 = -1;\n    let\
    \ mut min_grade_index16 = -1;\n    let mut max_grade_index16 = -1;\n    let mut\
    \ min_grade_index17 = -1;\n    let mut max_grade_index17 = -1;\n    let mut min_grade_index18\
    \ = -1;\n    let mut max_grade_index18 = -1;\n    let mut min_grade_index19 =\
    \ -1;\n    let mut max_grade_index19 = -1;\n    let mut min_grade_index20 = -1;\n\
    \    let mut max_grade_index20 = -1;\n    let mut min_grade_index21 = -1;\n  \
    \  let mut max_grade_index21 = -1;\n    let mut min_grade_index22 = -1;\n    let\
    \ mut max_grade_index22 = -1;\n    let mut min_grade_index23 = -1;\n    let mut\
    \ max_grade_index23 = -1;\n    let mut min_grade_index24 = -1;\n    let mut max_grade_index24\
    \ = -1;\n    let mut min_grade_index25 = -1;\n    let mut max_grade_index", " \
    \   let mut letter_grades = vec![];\n    let mut total_grade = grades.iter().sum();\n\
    \    let mut total_gpa = grades.iter().sum();\n    let mut total_gpa_percent =\
    \ grades.iter().sum();\n    let mut total_gpa_percent = grades.iter().sum();\n\
    \    let mut total_gpa_percent = grades.iter().sum();\n    let mut total_gpa_percent\
    \ = grades.iter().sum();\n    let mut total_gpa_percent = grades.iter().sum();\n\
    \    let mut total_gpa_percent = grades.iter().sum();\n    let mut total_gpa_percent\
    \ = grades.iter().sum();\n    let mut total_gpa_percent = grades.iter().sum();\n\
    \    let mut total_gpa_percent = grades.iter().sum();\n    let mut total_gpa_percent\
    \ = grades.iter().sum();\n    let mut total_gpa_percent = grades.iter().sum();\n\
    \    let mut total_gpa_percent = grades.iter().sum();\n    let mut total_gpa_percent\
    \ = grades.iter().sum();\n    let mut total_gpa_percent = grades.iter().sum();\n\
    \    let mut total_gpa_percent = grades.iter().sum();\n    let mut total_gpa_percent\
    \ = grades.iter().sum();\n    let mut total_gpa_percent = grades.iter().sum();\n\
    \    let mut total_gpa_percent = grades.iter().sum();\n    let mut total_gpa_percent\
    \ = grades.iter().sum();\n    let mut total_gpa_percent = grades.iter().sum();\n\
    \    let mut total_gpa_percent = grades.iter().sum();\n    let mut total_gpa_percent\
    \ = grades.iter().sum();\n    let mut total_gpa_percent = grades.iter().sum();\n\
    \    let mut total_gpa_percent = grades.iter().sum();\n    let mut total_gpa_percent\
    \ = grades.iter().sum();\n    let mut total_gpa_percent = grades.iter().sum();\n\
    \    let mut total_gpa_percent = grades.iter().sum();\n    let mut total_gpa_percent\
    \ = grades.iter().sum();\n    let mut total_gpa_percent = grades.iter().sum();\n\
    \    let mut total_gpa_percent = grades.iter().sum();\n    let mut total_gpa_percent\
    \ = grades.iter().sum();\n    let mut total_gpa_percent = grades.", "    let mut\
    \ letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n    let mut\
    \ gpa_diff = grades.iter().sum().unwrap() - gpa;\n    let mut gpa_diff2 = gpa_diff\
    \ * gpa_diff;\n    let mut gpa_diff3 = gpa_diff2 * gpa_diff;\n    let mut gpa_diff4\
    \ = gpa_diff3 * gpa_diff;\n    let mut gpa_diff5 = gpa_diff4 * gpa_diff;\n   \
    \ let mut gpa_diff6 = gpa_diff5 * gpa_diff;\n    let mut gpa_diff7 = gpa_diff6\
    \ * gpa_diff;\n    let mut gpa_diff8 = gpa_diff7 * gpa_diff;\n    let mut gpa_diff9\
    \ = gpa_diff8 * gpa_diff;\n    let mut gpa_diff10 = gpa_diff9 * gpa_diff;\n  \
    \  let mut gpa_diff11 = gpa_diff10 * gpa_diff;\n    let mut gpa_diff12 = gpa_diff11\
    \ * gpa_diff;\n    let mut gpa_diff13 = gpa_diff12 * gpa_diff;\n    let mut gpa_diff14\
    \ = gpa_diff13 * gpa_diff;\n    let mut gpa_diff15 = gpa_diff14 * gpa_diff;\n\
    \    let mut gpa_diff16 = gpa_diff15 * gpa_diff;\n    let mut gpa_diff17 = gpa_diff16\
    \ * gpa_diff;\n    let mut gpa_diff18 = gpa_diff17 * gpa_diff;\n    let mut gpa_diff19\
    \ = gpa_diff18 * gpa_diff;\n    let mut gpa_diff20 = gpa_diff19 * gpa_diff;\n\
    \    let mut gpa_diff21 = gpa_diff20 * gpa_diff;\n    let mut gpa_diff22 = gpa_diff21\
    \ * gpa_diff;\n    let mut gpa_diff23 = gpa_diff22 * gpa_diff;\n    let mut gpa_diff24\
    \ = gpa_diff23 * gpa_diff;\n    let mut gpa_diff25 = gpa_diff24 * gpa_diff;\n\
    \    let mut gpa_diff26 = gpa_diff25 * gpa_diff;\n    let mut gpa_diff27 = gpa_diff26\
    \ * gpa_diff;\n    let mut gpa_diff28 = gpa_diff27 * gpa_diff;\n    let mut gpa_diff29\
    \ = gpa_diff28 * gpa_diff;\n    let ", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n    let mut\
    \ grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n\
    \    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n", "    let mut letter_grades = vec![];\n    let mut\
    \ total_gpa = grades.iter().sum();\n    let mut total_letter_grade = String::from(\"\
    E\");\n    for grade in grades {\n        let letter_grade = if grade < total_gpa\
    \ { \n            String::from(\"D-\") \n        } else if grade < total_gpa +\
    \ 0.7 { \n            String::from(\"D\") \n        } else if grade < total_gpa\
    \ + 0.3 { \n            String::from(\"C-\") \n        } else if grade < total_gpa\
    \ + 0.1 { \n            String::from(\"C\") \n        } else if grade < total_gpa\
    \ + 0.0 { \n            String::from(\"B-\") \n        } else if grade < total_gpa\
    \ + 0.7 { \n            String::from(\"B\") \n        } else if grade < total_gpa\
    \ + 0.3 { \n            String::from(\"B-\") \n        } else if grade < total_gpa\
    \ + 0.1 { \n            String::from(\"B\") \n        } else if grade < total_gpa\
    \ + 0.0 { \n            String::from(\"A-\") \n        } else { \n           \
    \ String::from(\"A\") \n        };\n        letter_grades.push(letter_grade);\n\
    \        total_letter_grade += letter_grade;\n        total_gpa -= grade;\n  \
    \  }\n    letter_grades.push(total_letter_grade);\n    letter_grades", "    let\
    \ mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"E\");\n            current_grade\
    \ = grade;\n        } else if grade == current_grade {\n            current_letter_grade\
    \ = String::from(current_letter_grade + \"+\");\n        } else {\n          \
    \  current_letter_grade = String::from(current_letter_grade + \"-\");\n      \
    \  }\n        letter_grades.push(current_letter_grade);\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    let mut max_grade = grades.iter().max().unwrap();\n\
    \    let mut min_grade = grades.iter().min().unwrap();\n    let mut max_grade_index\
    \ = grades.iter().rposition(|x| x > max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().rposition(|x| x < min_grade).unwrap();\n    let mut current_grade\
    \ = grades.iter().nth(min_grade_index).unwrap();\n    let mut current_grade_index\
    \ = min_grade_index;\n    while current_grade < max_grade {\n        letter_grades.push(current_grade\
    \ as char);\n        current_grade = grades.iter().nth(current_grade_index).unwrap();\n\
    \        current_grade_index += 1;\n    }\n    letter_grades", "    let mut letter_grades\
    \ = vec![];\n    for grade in grades {\n        match grade {\n            4.0\
    \ => letter_grades.push(String::from(\"A+\")),\n            3.7 => letter_grades.push(String::from(\"\
    A\")),\n            3.3 => letter_grades.push(String::from(\"A-\")),\n       \
    \     3.0 => letter_grades.push(String::from(\"B+\")),\n            2.7 => letter_grades.push(String::from(\"\
    B\")),\n            2.3 => letter_grades.push(String::from(\"B-\")),\n       \
    \     2.0 => letter_grades.push(String::from(\"C+\")),\n            1.7 => letter_grades.push(String::from(\"\
    C\")),\n            1.3 => letter_grades.push(String::from(\"C-\")),\n       \
    \     1.0 => letter_grades.push(String::from(\"D+\")),\n            0.7 => letter_grades.push(String::from(\"\
    D\")),\n            0.0 => letter_grades.push(String::from(\"D-\")),\n       \
    \     _ => letter_grades.push(String::from(\"E\")),\n        }\n    }\n    letter_grades",
  "    let mut grades_iter = grades.iter();\n    let mut letter_grades = vec![];\n\
    \    while let Some(grade) = grades_iter.next() {\n        let mut letter_grade\
    \ = String::from(\"\");\n        if grade < 3.0 {\n            letter_grade +=\
    \ \"A\";\n        } else if grade < 3.3 {\n            letter_grade += \"A-\"\
    ;\n        } else if grade < 3.7 {\n            letter_grade += \"B+\";\n    \
    \    } else if grade < 4.0 {\n            letter_grade += \"B\";\n        } else\
    \ if grade < 4.3 {\n            letter_grade += \"B-\";\n        } else if grade\
    \ < 4.7 {\n            letter_grade += \"C+\";\n        } else if grade < 5.0\
    \ {\n            letter_grade += \"C\";\n        } else if grade < 5.3 {\n   \
    \         letter_grade += \"C-\";\n        } else if grade < 5.7 {\n         \
    \   letter_grade += \"D+\";\n        } else if grade < 6.0 {\n            letter_grade\
    \ += \"D\";\n        } else if grade < 6.3 {\n            letter_grade += \"D-\"\
    ;\n        } else if grade < 6.7 {\n            letter_grade += \"E\";\n     \
    \   } else {\n            letter_grade += \"F\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ max_grade = grades.iter().max().unwrap();\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    for grade in grades {\n        if grade > max_grade {\n            max_grade\
    \ = grade;\n        }\n        if grade < min_grade {\n            min_grade =\
    \ grade;\n        }\n    }\n    for grade in grades {\n        let letter_grade\
    \ = if grade > max_grade {\n            \"D-\"\n        } else if grade < min_grade\
    \ {\n            \"D\"\n        } else if grade == 0.0 {\n            \"E\"\n\
    \        } else if grade > 0.0 {\n            match grade {\n                4.0\
    \ => \"A+\",\n                > 3.7 => \"A\",\n                > 3.3 => \"A-\"\
    ,\n                > 3.0 => \"B+\",\n                > 2.7 => \"B\",\n       \
    \         > 2.3 => \"B-\",\n                > 2.0 => \"C+\",\n               \
    \ > 1.7 => \"C\",\n                > 1.3 => \"C-\",\n                > 1.0 =>\
    \ \"D+\",\n                > 0.7 => \"D\",\n                _ => \"D-\"\n    \
    \        }\n        } else {\n            \"E\"\n        };\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ gpa = grades.iter().sum();\n    let mut grade = grades.iter().sum();\n    let\
    \ mut letter_grade = String::from(\"E\");\n    while grade > 0.0 {\n        if\
    \ gpa < 3.0 {\n            letter_grade = String::from(\"E\");\n            break;\n\
    \        }\n        if gpa < 3.3 {\n            letter_grade = String::from(\"\
    D-\");\n            break;\n        }\n        if gpa < 3.7 {\n            letter_grade\
    \ = String::from(\"D\");\n            break;\n        }\n        if gpa < 4.0\
    \ {\n            letter_grade = String::from(\"C-\");\n            break;\n  \
    \      }\n        if gpa < 4.3 {\n            letter_grade = String::from(\"C\"\
    );\n            break;\n        }\n        if gpa < 4.7 {\n            letter_grade\
    \ = String::from(\"B-\");\n            break;\n        }\n        if gpa < 5.0\
    \ {\n            letter_grade = String::from(\"B\");\n            break;\n   \
    \     }\n        if gpa < 5.3 {\n            letter_grade = String::from(\"A-\"\
    );\n            break;\n        }\n        if gpa < 5.7 {\n            letter_grade\
    \ = String::from(\"A\");\n            break;\n        }\n        if gpa < 6.0\
    \ {\n            letter_grade = String::from(\"A+\");\n            break;\n  \
    \      }\n        if gpa < 6.3 {\n            letter_grade = String::from(\"A\"\
    );\n            break;\n        }\n        if gpa < 6.7 {\n            letter_grade\
    \ = String::from(\"A+\");\n            break;\n        }\n        if gpa < 7.0\
    \ {\n            letter_grade = String::from(\"A+\");\n            break;\n  \
    \      }\n        if gpa < 7.3 {\n            letter_grade = String::from(\"A+\"\
    );\n            break;\n        }\n        if gpa < 7.7 {\n            letter_grade\
    \ = String::from(\"A+\");\n            break;\n        }\n        if gpa < 8.0\
    \ {\n            letter_grade = String::from(\"A+\");\n            break;\n  \
    \      }\n        if gpa < 8.3 {\n            letter_grade = String::from(\"A+\"\
    );\n            break;\n        }\n        if gpa < 8.7 {\n            letter_grade\
    \ = String::from(\"A+\");\n            break;\n        }\n        if gpa < 9.0\
    \ {\n            letter_grade = String::from(\"A+\");\n            break;\n  \
    \      }\n        if gpa < 9.3 {\n            letter_grade = String::from(\"A+\"\
    );\n            break;\n        }\n", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    for grade in grades_copy {\n        if grade > current_grade {\n        \
    \    current_letter_grade = String::from(\"E\");\n            current_grade =\
    \ grade;\n        } else if grade == current_grade {\n            current_letter_grade\
    \ = String::from(\"D\");\n        }\n        letter_grades.push(current_letter_grade);\n\
    \        current_grade = grade;\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n    for grade\
    \ in grades {\n        let mut grades_vec: Vec<String> = vec![];\n        if grade\
    \ >= 4.0 {\n            grades_vec.push(String::from(\"A+\"));\n        } else\
    \ if grade > 3.7 {\n            grades_vec.push(String::from(\"A\"));\n      \
    \  } else if grade > 3.3 {\n            grades_vec.push(String::from(\"A-\"));\n\
    \        } else if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n        grades_vec.push(String::from(\"E\"));\n    }\n    grades_vec",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort_unstable();\n \
    \   let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    let mut current_gpa = grades_copy[0];\n    let mut current_letter_gpa = String::from(\"\
    E\");\n    for grade in grades_copy {\n        if grade > current_grade {\n  \
    \          current_letter_grade = String::from(\"E\");\n            current_gpa\
    \ = grade;\n        } else if grade < current_grade {\n            current_letter_grade\
    \ = String::from(\"E\");\n            current_gpa = grade;\n        } else {\n\
    \            current_letter_grade = String::from(\n                match current_gpa\
    \ {\n                    4.0 => \"A+\",\n                    3.7 => \"A\",\n \
    \                   3.3 => \"A-\",\n                    3.0 => \"B+\",\n     \
    \               2.7 => \"B\",\n                    2.3 => \"B-\",\n          \
    \          2.0 => \"C+\",\n                    1.7 => \"C\",\n               \
    \     1.3 => \"C-\",\n                    1.0 => \"D+\",\n                   \
    \ 0.7 => \"D\",\n                    0.0 => \"D-\",\n                    _ =>\
    \ \"E\",\n                }\n            );\n            current_gpa = grade;\n\
    \        }\n        letter_grades.push(current_letter_grade);\n        current_grade\
    \ = grade;\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    let mut current_grade = String::from(\"\
    E\");\n    for grade in grades.iter() {\n        if gpa > grade {\n          \
    \  gpa -= grade;\n            current_grade = String::from(\"D\");\n        }\
    \ else if gpa < grade {\n            gpa += grade;\n            current_grade\
    \ = String::from(\"C\");\n        } else {\n            current_grade = String::from(\"\
    A\");\n        }\n        letter_grades.push(current_grade);\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort_unstable();\n \
    \   let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    for grade in grades_copy {\n        if grade > current_grade {\n        \
    \    letter_grades.push(String::from(\"A+\"));\n            current_grade = grade;\n\
    \        } else if grade < current_grade {\n            letter_grades.push(String::from(\"\
    A-\"));\n            current_grade = grade;\n        } else {\n            letter_grades.push(String::from(\"\
    B+\"));\n            current_grade = grade;\n        }\n    }\n    letter_grades.push(String::from(\"\
    E\"));\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n \
    \   let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = -1;\n    \n    while current_grade > 0.0 {\n        let current_grade_index\
    \ = grades_copy.iter().position(|x| x > current_grade).unwrap();\n        let\
    \ current_letter_grade_index = grades_copy.iter().position(|x| x > current_grade).unwrap();\n\
    \        let current_letter_grade = grades_copy[current_letter_grade_index];\n\
    \        \n        if current_grade > current_letter_grade {\n            letter_grades.push(current_letter_grade);\n\
    \        }\n        \n        grades_copy[current_grade_index] -= current_letter_grade;\n\
    \        current_grade -= current_letter_grade;\n    }\n    \n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut total_gpa\
    \ = grades.iter().sum();\n    let mut total_letter_grade = String::from(\"E\"\
    );\n    for grade in grades {\n        let letter_grade = if grade < total_gpa\
    \ / 4 {\n            String::from(\"A+\")\n        } else if grade < total_gpa\
    \ / 3 {\n            String::from(\"A\")\n        } else if grade < total_gpa\
    \ / 2 {\n            String::from(\"A-\")\n        } else if grade < total_gpa\
    \ {\n            String::from(\"B+\")\n        } else if grade < total_gpa + total_gpa\
    \ / 3 {\n            String::from(\"B\")\n        } else if grade < total_gpa\
    \ + total_gpa / 2 {\n            String::from(\"B-\")\n        } else if grade\
    \ < total_gpa + total_gpa {\n            String::from(\"C+\")\n        } else\
    \ if grade < total_gpa + total_gpa + total_gpa / 3 {\n            String::from(\"\
    C\")\n        } else if grade < total_gpa + total_gpa + total_gpa / 2 {\n    \
    \        String::from(\"C-\")\n        } else if grade < total_gpa + total_gpa\
    \ + total_gpa {\n            String::from(\"D+\")\n        } else if grade < total_gpa\
    \ + total_gpa + total_gpa + total_gpa / 3 {\n            String::from(\"D\")\n\
    \        } else if grade < total_gpa + total_gpa + total_gpa + total_gpa / 2 {\n\
    \            String::from(\"D-\")\n        } else {\n            String::from(\"\
    E\")\n        };\n        letter_grades.push(letter_grade);\n        total_letter_grade\
    \ += letter_grade;\n        total_gpa -= grade;\n    }\n    letter_grades.push(total_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    let mut min_gpa = grades.iter().min().unwrap();\n    let mut max_gpa = grades.iter().max().unwrap();\n\
    \    let mut gpa_diff = max_gpa - min_gpa;\n    let mut gpa_diff2 = max_gpa -\
    \ min_gpa;\n    let mut gpa_diff3 = max_gpa - min_gpa;\n    let mut gpa_diff4\
    \ = max_gpa - min_gpa;\n    let mut gpa_diff5 = max_gpa - min_gpa;\n    let mut\
    \ gpa_diff6 = max_gpa - min_gpa;\n    let mut gpa_diff7 = max_gpa - min_gpa;\n\
    \    let mut gpa_diff8 = max_gpa - min_gpa;\n    let mut gpa_diff9 = max_gpa -\
    \ min_gpa;\n    let mut gpa_diff10 = max_gpa - min_gpa;\n    let mut gpa_diff11\
    \ = max_gpa - min_gpa;\n    let mut gpa_diff12 = max_gpa - min_gpa;\n    let mut\
    \ gpa_diff13 = max_gpa - min_gpa;\n    let mut gpa_diff14 = max_gpa - min_gpa;\n\
    \    let mut gpa_diff15 = max_gpa - min_gpa;\n    let mut gpa_diff16 = max_gpa\
    \ - min_gpa;\n    let mut gpa_diff17 = max_gpa - min_gpa;\n    let mut gpa_diff18\
    \ = max_gpa - min_gpa;\n    let mut gpa_diff19 = max_gpa - min_gpa;\n    let mut\
    \ gpa_diff20 = max_gpa - min_gpa;\n    let mut gpa_diff21 = max_gpa - min_gpa;\n\
    \    let mut gpa_diff22 = max_gpa - min_gpa;\n    let mut gpa_diff23 = max_gpa\
    \ - min_gpa;\n    let mut gpa_diff24 = max_gpa - min_gpa;\n    let mut gpa_diff25\
    \ = max_gpa - min_gpa;\n    let mut gpa_diff26 = max_gpa - min_gpa;\n    let mut\
    \ gpa_diff27 = max_gpa - min_gpa;\n    let mut gpa_diff28 = max_gpa - min_gpa;\n\
    \    let mut gpa_diff29 = max_gpa - min_gpa;\n    let mut gpa_diff", "    let\
    \ mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n   \
    \ let mut prev_grade = grades_copy.clone();\n    let mut prev_letter_grade = String::from(\"\
    E\");\n    let mut prev_gp = 0;\n    let mut prev_gpa = 0;\n    let mut prev_gpa_sum\
    \ = 0;\n    let mut prev_gpa_sum2 = 0;\n    let mut prev_gpa_sum3 = 0;\n    let\
    \ mut prev_gpa_sum4 = 0;\n    let mut prev_gpa_sum5 = 0;\n    let mut prev_gpa_sum6\
    \ = 0;\n    let mut prev_gpa_sum7 = 0;\n    let mut prev_gpa_sum8 = 0;\n    let\
    \ mut prev_gpa_sum9 = 0;\n    let mut prev_gpa_sum10 = 0;\n    let mut prev_gpa_sum11\
    \ = 0;\n    let mut prev_gpa_sum12 = 0;\n    let mut prev_gpa_sum13 = 0;\n   \
    \ let mut prev_gpa_sum14 = 0;\n    let mut prev_gpa_sum15 = 0;\n    let mut prev_gpa_sum16\
    \ = 0;\n    let mut prev_gpa_sum17 = 0;\n    let mut prev_gpa_sum18 = 0;\n   \
    \ let mut prev_gpa_sum19 = 0;\n    let mut prev_gpa_sum20 = 0;\n    let mut prev_gpa_sum21\
    \ = 0;\n    let mut prev_gpa_sum22 = 0;\n    let mut prev_gpa_sum23 = 0;\n   \
    \ let mut prev_gpa_sum24 = 0;\n    let mut prev_gpa_sum25 = 0;\n    let mut prev_gpa_sum26\
    \ = 0;\n    let mut prev_gpa_sum27 = 0;\n    let mut prev_gpa_sum28 = 0;\n   \
    \ let mut prev_gpa_sum29 = 0;\n    let mut prev_gpa_sum30 = 0;\n    let mut prev_gpa_sum31\
    \ = 0;\n    let mut prev_gpa_sum32 = 0;\n    let mut prev_gpa_sum33 = 0;\n   \
    \ let mut prev_gpa_sum34 = 0;\n    let mut prev_gpa_sum35 = 0;\n    let mut prev_gpa_sum36\
    \ = 0;\n    let mut prev_gpa_sum37 = 0;\n    let mut prev_gpa_sum38 = 0;\n   \
    \ let mut prev_gpa_sum39 = 0;\n    let mut prev_gpa_sum40 = 0;\n    let mut prev_gpa_sum41\
    \ = 0;\n    let mut prev_gpa_sum42 = 0;\n    let mut prev_gpa_sum43 = 0;\n   \
    \ let mut prev_gpa_sum44 = 0;\n    let mut prev_gpa_sum45 = 0;\n    let mut prev_gpa_sum",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\n\
    \        if grade < current_grade {\n            current_letter_grade = String::from(current_letter_grade.chars().nth(1).unwrap());\n\
    \        }\n        current_grade -= grade;\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n\
    \    let mut grade = grades.iter().sum();\n    while grade > 0.0 {\n        if\
    \ gpa < 3.0 {\n            letter_grades.push(String::from(\"E\"));\n        \
    \    break;\n        }\n        let mut grade = grades.iter().sum();\n       \
    \ let mut gpa = grades.iter().sum();\n        while grade > 0.0 {\n          \
    \  if gpa < 3.0 {\n                letter_grades.push(String::from(\"E\"));\n\
    \                break;\n            }\n            let mut grade = grades.iter().sum();\n\
    \            let mut gpa = grades.iter().sum();\n            while grade > 0.0\
    \ {\n                if gpa < 3.0 {\n                    letter_grades.push(String::from(\"\
    E\"));\n                    break;\n                }\n                let mut\
    \ grade = grades.iter().sum();\n                let mut gpa = grades.iter().sum();\n\
    \                while grade > 0.0 {\n                    if gpa < 3.0 {\n   \
    \                     letter_grades.push(String::from(\"E\"));\n             \
    \           break;\n                    }\n                    let mut grade =\
    \ grades.iter().sum();\n                    let mut gpa = grades.iter().sum();\n\
    \                    while grade > 0.0 {\n                        if gpa < 3.0\
    \ {\n                            letter_grades.push(String::from(\"E\"));\n  \
    \                          break;\n                        }\n               \
    \         let mut grade = grades.iter().sum();\n                        let mut\
    \ gpa = grades.iter().sum();\n                        while grade > 0.0 {\n  \
    \                          if gpa < 3.0 {\n                                letter_grades.push(String::from(\"\
    E\"));\n                                break;\n                            }\n\
    \                            let mut grade = grades.iter().sum();\n          \
    \                  let mut gpa = grades.iter().sum();\n                      \
    \      while grade > 0.0 {\n                                if gpa < 3.0 {\n \
    \                                   letter_grades.push(String::from(\"E\"));\n\
    \                                    break;\n                                }\n\
    \                                let mut grade = grades.iter().sum();\n      \
    \                          let mut gpa = grades.iter().sum();\n              \
    \                  while grade > 0.0 {\n                                    if\
    \ gpa < 3.0 {\n                                        letter_grades.push(String::from(\"\
    E\"));\n                                        break;\n                     \
    \               }\n                                    let mut grade = grades.iter().sum();\n\
    \                                    let mut gpa = grades.iter().sum();\n    \
    \                                while grade > 0.0 {\n                       \
    \                 if gpa < 3.0 {\n                                           \
    \ letter_grades.push(String", "    let mut grades_copy = grades.clone();\n   \
    \ grades_copy.sort_unstable();\n    let mut letter_grades = vec![];\n    let mut\
    \ current_grade = grades_copy[0];\n    let mut current_letter_grade = String::from(\"\
    E\");\n    for grade in grades_copy {\n        if grade > current_grade {\n  \
    \          letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\n\
    \        if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        }\n        if grade < current_grade {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    let mut current_letter_grade_index = 0;\n    let\
    \ mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade_index46 = 0;\n    let mut current_letter_grade_index47\
    \ = 0;\n    let mu", "    let mut grades_iter = grades.iter();\n    let mut letter_grades\
    \ = Vec::new();\n    let mut current_grade = grades_iter.next().unwrap();\n  \
    \  let mut current_letter_grade = String::from(\"E\");\n    loop {\n        if\
    \ current_grade > 0.0 {\n            letter_grades.push(current_letter_grade);\n\
    \            current_letter_grade = String::from(\"E\");\n        }\n        if\
    \ current_grade < 0.0 {\n            current_letter_grade = String::from(\"E\"\
    );\n            current_grade = grades_iter.next().unwrap();\n        }\n    \
    \    if current_grade == 0.0 {\n            current_letter_grade = String::from(\"\
    E\");\n            current_grade = grades_iter.next().unwrap();\n        }\n \
    \       current_grade -= current_grade;\n        current_grade /= 2.0;\n    }\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut max_grade = grades_copy[0];\n    let mut min_grade =\
    \ grades_copy[0];\n    for grade in grades_copy {\n        if grade > max_grade\
    \ {\n            max_grade = grade;\n        }\n        if grade < min_grade {\n\
    \            min_grade = grade;\n        }\n    }\n    let mut min_grade_index\
    \ = grades_copy.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades_copy.iter().position(|x| x == max_grade).unwrap();\n    let mut grades_len\
    \ = grades_copy.len();\n    while grades_len > 0 {\n        let mut grade = grades_copy[grades_len\
    \ - 1];\n        grades_len -= 1;\n        if grade > max_grade {\n          \
    \  max_grade = grade;\n            max_grade_index = grades_len;\n        }\n\
    \        if grade < min_grade {\n            min_grade = grade;\n            min_grade_index\
    \ = grades_len;\n        }\n    }\n    for grade in grades_copy {\n        if\
    \ grade > max_grade {\n            letter_grades.push(String::from(\"B+\"));\n\
    \        }\n        if grade < min_grade {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade == max_grade {\n            letter_grades.push(String::from(\"\
    B\"));\n        }\n        if grade == min_grade {\n            letter_grades.push(String::from(\"\
    A\"));\n        }\n        if grade == 0.0 {\n            letter_grades.push(String::from(\"\
    D\"));\n        }\n        if grade == 1.0 {\n            letter_grades.push(String::from(\"\
    C\"));\n        }\n        if grade == 1.1 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        }\n        if grade == 1.2 {\n            letter_grades.push(String::from(\"\
    C\"));\n        }\n        if grade == 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        }\n        if grade == 1.4 {\n            letter_grades.push(String::from(\"\
    C\"));\n        }\n        if grade == 1.5 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        }\n        if grade == 1.6 {\n            letter_grades.push(String::from(\"\
    C\"));\n        }\n        if grade == 1.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        }\n        if grade == 1.8 {\n            letter_grades.push(String",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ < 3.0 {\n            letter_grades.push(String::from(\"A+\"));\n        } else\
    \ if grade < 4.0 {\n            letter_grades.push(String::from(\"A\"));\n   \
    \     } else if grade < 5.0 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade < 6.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade < 7.0 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade < 8.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade < 9.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade < 10.0 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade < 11.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade < 12.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade < 13.0 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade < 14.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade < 15.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            letter_grades.push(String::from(\"F\"));\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        let mut letter_grade = String::new();\n  \
    \      if grade >= 3.0 {\n            letter_grade += \"A+\";\n        } else\
    \ if grade >= 2.0 {\n            letter_grade += \"A\";\n        } else if grade\
    \ >= 1.0 {\n            letter_grade += \"B+\";\n        } else if grade >= 0.7\
    \ { \n            letter_grade += \"B\";\n        } else if grade >= 0.3 { \n\
    \            letter_grade += \"B-\";\n        } else if grade >= 0.0 { \n    \
    \        letter_grade += \"C+\";\n        } else if grade >= 0.1 { \n        \
    \    letter_grade += \"C\";\n        } else if grade >= 0.0 { \n            letter_grade\
    \ += \"C-\";\n        } else if grade >= 0.0 { \n            letter_grade += \"\
    D+\";\n        } else if grade >= 0.1 { \n            letter_grade += \"D\";\n\
    \        } else { \n            letter_grade += \"D-\";\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            current_letter_grade = String::from(\"\
    E\");\n            current_grade = grade;\n        } else if grade == current_grade\
    \ {\n            current_letter_grade = String::from(current_letter_grade + \"\
    +\");\n        } else if grade < current_grade {\n            current_letter_grade\
    \ = String::from(current_letter_grade + \"-\");\n            current_grade = grade;\n\
    \        }\n        letter_grades.push(current_letter_grade);\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade < current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else {\n            current_letter_grade += String::from(\"-\"\
    );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_sum = 0.0;\n\
    \    let mut grades_average = 0.0;\n    let mut grades_min_value = grades_copy[0];\n\
    \    let mut grades_max_value = grades_copy[0];\n    let mut grades_min_index\
    \ = -1;\n    let mut grades_max_index = -1;\n    let mut grades_min_value = grades_copy[0];\n\
    \    let mut grades_max_value = grades_copy[0];\n    let mut grades_min_index\
    \ = -1;\n    let mut grades_max_index = -1;\n    let mut grades_min_value = grades_copy[0];\n\
    \    let mut grades_max_value = grades_copy[0];\n    let mut grades_min_index\
    \ = -1;\n    let mut grades_max_index = -1;\n    let mut grades_min_value = grades_copy[0];\n\
    \    let mut grades_max_value = grades_copy[0];\n    let mut grades_min_index\
    \ = -1;\n    let mut grades_max_index = -1;\n    let mut grades_min_value = grades_copy[0];\n\
    \    let mut grades_max_value = grades_copy[0];\n    let mut grades_min_index\
    \ = -1;\n    let mut grades_max_index = -1;\n    let mut grades_min_value = grades_copy[0];\n\
    \    let mut grades_max_value = grades_copy[0];\n    let mut grades_min_index\
    \ = -1;\n    let mut grades_max_index = -1;\n    let mut grades_min_value = grades_copy[0];\n\
    \    let mut grades_max_value = grades_copy[0];\n    let mut grades_min_index\
    \ = -1;\n    let mut grades_max_index = -1;\n    let mut grades_min_value = grades_copy[0];\n\
    \    let mut grades_max_value = grades_copy[0];\n    let mut grades_min_index\
    \ = -1;\n    let mut grades_max_index = -1;\n    let mut grades_min_value = grades_copy[0];\n\
    \    let mut grades_max_value = grades_copy[0];\n    let mut grades_min_index\
    \ = -1;\n    let mut grades_max_index = -1;\n    let mut grades_min_value = grades_copy[0];\n\
    \    let mut grades_max_value = grades_copy[0];\n    let mut grades_min_index\
    \ = -1;\n    let mut grades_max_index = -1;\n    let mut grades_min_value = grades_copy[0];\n\
    \    let mut grades_max_value = grades_copy[0];\n    let mut grades_min_index\
    \ = -1;\n    let mut grades_max_index = -1;\n", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade >= 3.7 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade >= 3.3 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade >= 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade >= 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade >= 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade >= 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade >= 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade >= 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade >= 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade >= 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade >= 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut prev_grade = grades_copy.clone();\n\
    \    let mut prev_letter_grade = String::from(\"E\");\n    let mut prev_gpa =\
    \ grades_copy.clone();\n    let mut prev_letter_gpa = String::from(\"E\");\n \
    \   let mut prev_gpa_sum = grades_copy.clone();\n    let mut prev_letter_gpa_sum\
    \ = String::from(\"E\");\n    let mut prev_gpa_avg = grades_copy.clone();\n  \
    \  let mut prev_letter_gpa_avg = String::from(\"E\");\n    let mut prev_gpa_max\
    \ = grades_copy.clone();\n    let mut prev_letter_gpa_max = String::from(\"E\"\
    );\n    let mut prev_gpa_min = grades_copy.clone();\n    let mut prev_letter_gpa_min\
    \ = String::from(\"E\");\n    let mut prev_gpa_std = grades_copy.clone();\n  \
    \  let mut prev_letter_gpa_std = String::from(\"E\");\n    let mut prev_gpa_median\
    \ = grades_copy.clone();\n    let mut prev_letter_gpa_median = String::from(\"\
    E\");\n    let mut prev_gpa_mode = grades_copy.clone();\n    let mut prev_letter_gpa_mode\
    \ = String::from(\"E\");\n    let mut prev_gpa_mode = grades_copy.clone();\n \
    \   let mut prev_letter_gpa_mode = String::from(\"E\");\n    let mut prev_gpa_mode\
    \ = grades_copy.clone();\n    let mut prev_letter_gpa_mode = String::from(\"E\"\
    );\n    let mut prev_gpa_mode = grades_copy.clone();\n    let mut prev_letter_gpa_mode\
    \ = String::from(\"E\");\n    let mut prev_gpa_mode = grades_copy.clone();\n \
    \   let mut prev_letter_gpa_mode = String::from(\"E\");\n    let mut prev_gpa_mode\
    \ = grades_copy.clone();\n    let mut prev_letter_gpa_mode = String::from(\"E\"\
    );\n    let mut prev_gpa_mode = grades_copy.clone();\n    let mut prev_letter_gpa_mode\
    \ = String::from(\"E\");\n    let mut prev_gpa_mode = grades_copy.clone();\n \
    \   let mut prev_letter_gpa_mode = String::from(\"E\");\n    let mut prev_gpa_mode\
    \ = grades_copy.clone();\n    let mut prev_letter_gpa_mode = String::from(\"E\"\
    );\n    let mut prev_gpa_mode = grades_copy.clone();\n    let mut prev_letter_gpa_mode\
    \ = String::from(\"E\");\n    let mut prev_", "    let mut letter_grades = vec![];\n\
    \    let mut total_grade = grades.iter().sum();\n    let mut total_points = 0;\n\
    \    for grade in grades {\n        total_points += grade * 4;\n    }\n    let\
    \ mut total_points = total_points / total_grade;\n    let mut total_points = total_points\
    \ - total_grade * total_points;\n    for grade in grades {\n        let letter_grade\
    \ = if total_points < 0.0 {\n            String::from(\"E\")\n        } else {\n\
    \            match grade {\n                0...3.0 => String::from(\"A+\"),\n\
    \                4.0...5.0 => String::from(\"A\"),\n                6.0...7.0\
    \ => String::from(\"A-\"),\n                8.0...9.0 => String::from(\"B+\"),\n\
    \                10.0...11.0 => String::from(\"B\"),\n                12.0...13.0\
    \ => String::from(\"B-\"),\n                14.0...15.0 => String::from(\"C+\"\
    ),\n                16.0...17.0 => String::from(\"C\"),\n                18.0...19.0\
    \ => String::from(\"C-\"),\n                20.0...21.0 => String::from(\"D+\"\
    ),\n                22.0...23.0 => String::from(\"D\"),\n                24.0...25.0\
    \ => String::from(\"D-\"),\n                _ => String::from(\"E\"),\n      \
    \      }\n        };\n        letter_grades.push(letter_grade);\n        total_points\
    \ += grade * 4;\n    }\n    letter_grades", "    let mut letter_grades = vec![];\n\
    \    for grade in grades {\n        let mut letter_grade = String::from(\"\");\n\
    \        if grade < 3.0 {\n            letter_grade += \"A\";\n        } else\
    \ if grade < 3.3 {\n            letter_grade += \"A-\";\n        } else if grade\
    \ < 3.7 {\n            letter_grade += \"B+\";\n        } else if grade < 4.0\
    \ {\n            letter_grade += \"B\";\n        } else if grade < 4.3 {\n   \
    \         letter_grade += \"B-\";\n        } else if grade < 4.7 {\n         \
    \   letter_grade += \"C+\";\n        } else if grade < 5.0 {\n            letter_grade\
    \ += \"C\";\n        } else if grade < 5.3 {\n            letter_grade += \"C-\"\
    ;\n        } else if grade < 5.7 {\n            letter_grade += \"D+\";\n    \
    \    } else if grade < 6.0 {\n            letter_grade += \"D\";\n        } else\
    \ if grade < 6.3 {\n            letter_grade += \"D-\";\n        } else if grade\
    \ < 6.7 {\n            letter_grade += \"E\";\n        } else {\n            letter_grade\
    \ += \"F\";\n        }\n        letter_grades.push(letter_grade);\n    }\n   \
    \ letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy.first().unwrap();\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            current_letter_grade = String::from(\"\
    E\");\n            current_grade = grade;\n        } else if grade == current_grade\
    \ {\n            current_letter_grade = String::from(current_letter_grade + \"\
    +\");\n        } else {\n            current_letter_grade = String::from(current_letter_grade\
    \ + \"-\");\n        }\n        letter_grades.push(current_letter_grade);\n  \
    \  }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut gpa\
    \ = grades.iter().sum();\n    while gpa > 0.0 {\n        let mut letter_grade\
    \ = String::from(\"E\");\n        if gpa > 3.0 {\n            letter_grade = String::from(\"\
    D-\");\n        } else if gpa > 2.0 {\n            letter_grade = String::from(\"\
    D\");\n        } else if gpa > 1.7 {\n            letter_grade = String::from(\"\
    C-\");\n        } else if gpa > 1.0 {\n            letter_grade = String::from(\"\
    C\");\n        } else if gpa > 0.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa > 0.3 {\n            letter_grade = String::from(\"\
    B\");\n        } else if gpa > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa > 0.0 {\n            letter_grade = String::from(\"\
    B\");\n        } else if gpa > 0.0 {\n            letter_grade = String::from(\"\
    A+\");\n        } else if gpa > 0.0 {\n            letter_grade = String::from(\"\
    A\");\n        } else if gpa > 0.0 {\n            letter_grade = String::from(\"\
    A\");\n        } else if gpa > 0.0 {\n            letter_grade = String::from(\"\
    A\");\n        }\n        letter_grades.push(letter_grade);\n        gpa -= 0.0;\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n  \
    \  let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<", "    let\
    \ mut grades_sorted = grades.clone();\n    grades_sorted.sort();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter\
    \ = grades_sorted.iter().cloned();\n    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n\
    \    let mut grades_sorted_iter = grades_sorted.iter().cloned();\n    let mut\
    \ grades_sorted_iter = grades_sorted.iter().cloned();\n", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut min_grade\
    \ = grades_copy.iter().min().unwrap();\n    let mut max_grade = grades_copy.iter().max().unwrap();\n\
    \    let mut min_grade_index = grades_copy.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index = grades_copy.iter().position(|x| x == max_grade).unwrap();\n\
    \    let mut grades_index = min_grade_index;\n    let mut grades_index = max_grade_index;\n\
    \    while grades_index < grades_copy.len() {\n        if grades_copy[grades_index]\
    \ == min_grade {\n            letter_grades.push(String::from(\"A+\"));\n    \
    \        grades_index += 1;\n        } else if grades_copy[grades_index] == max_grade\
    \ {\n            letter_grades.push(String::from(\"D-\"));\n            grades_index\
    \ += 1;\n        } else {\n            letter_grades.push(String::from(\"D\"));\n\
    \            grades_index += 1;\n        }\n    }\n    letter_grades", "    let\
    \ mut letter_grades = vec![];\n    let mut gpa = grades.iter().sum();\n    let\
    \ mut letter_grade = String::from(\"E\");\n    while gpa > 0.0 {\n        if gpa\
    \ < 3.0 {\n            letter_grade = String::from(\"D-\");\n            gpa -=\
    \ 3.0;\n        } else if gpa < 4.0 {\n            letter_grade = String::from(\"\
    C+\");\n            gpa -= 4.0;\n        } else if gpa < 5.0 {\n            letter_grade\
    \ = String::from(\"C\");\n            gpa -= 5.0;\n        } else if gpa < 6.0\
    \ {\n            letter_grade = String::from(\"B-\");\n            gpa -= 6.0;\n\
    \        } else if gpa < 7.0 {\n            letter_grade = String::from(\"B\"\
    );\n            gpa -= 7.0;\n        } else if gpa < 8.0 {\n            letter_grade\
    \ = String::from(\"A-\");\n            gpa -= 8.0;\n        } else if gpa < 9.0\
    \ {\n            letter_grade = String::from(\"A\");\n            gpa -= 9.0;\n\
    \        } else if gpa < 10.0 {\n            letter_grade = String::from(\"A+\"\
    );\n            gpa -= 10.0;\n        } else {\n            letter_grade = String::from(\"\
    A\");\n            gpa -= 10.0;\n        }\n        letter_grades.push(letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let mut current_gpa =\
    \ grades_copy.clone();\n    let mut current_gpa_copy = current_gpa.clone();\n\
    \    let mut current_letter_grade = String::new();\n    let ", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter = String::from(\"E\");\n    for\
    \ grade in grades_copy {\n        if grade < current_grade {\n            letter_grades.push(current_letter);\n\
    \            current_letter = String::from(\"E\");\n            current_grade\
    \ = grade;\n        } else if grade > current_grade {\n            current_letter\
    \ = current_letter.to_lowercase();\n            current_grade = grade;\n     \
    \   } else {\n            current_letter = current_letter.to_lowercase();\n  \
    \      }\n    }\n    letter_grades.push(current_letter);\n    letter_grades",
  "    let mut grades_iter = grades.iter();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_iter.next();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    loop {\n        if current_grade == Some(0.0) {\n\
    \            break;\n        }\n        let current_grade = grades_iter.next();\n\
    \        let current_letter_grade = match current_grade {\n            Some(g)\
    \ => match g {\n                4.0 => \"A+\".to_string(),\n                >\
    \ 3.7 => \"A\".to_string(),\n                > 3.3 => \"A-\".to_string(),\n  \
    \              > 3.0 => \"B+\".to_string(),\n                > 2.7 => \"B\".to_string(),\n\
    \                > 2.3 => \"B-\".to_string(),\n                > 2.0 => \"C+\"\
    .to_string(),\n                > 1.7 => \"C\".to_string(),\n                >\
    \ 1.3 => \"C-\".to_string(),\n                > 1.0 => \"D+\".to_string(),\n \
    \               > 0.7 => \"D\".to_string(),\n                _ => \"D-\".to_string(),\n\
    \            },\n            None => \"E\".to_string(),\n        };\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n \
    \   for grade in grades {\n        if grade > 3.0 {\n            grades_vec.push(String::from(\"\
    A+\"));\n        } else if grade > 2.7 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else {\n            grades_vec.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<String>>();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<", "    let\
    \ mut letter_grades = vec![];\n    let mut max_grade = grades.iter().max().unwrap();\n\
    \    let mut min_grade = grades.iter().min().unwrap();\n    let mut current_grade\
    \ = max_grade;\n    let mut current_letter_grade = String::from(\"E\");\n    for\
    \ grade in grades {\n        if grade > current_grade {\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade < min_grade {\n            current_grade = grade;\n          \
    \  current_letter_grade = String::from(\"E\");\n        } else {\n           \
    \ current_letter_grade = match grade {\n                0..=1 => \"A\",\n    \
    \            1..=2 => \"B\",\n                2..=3 => \"C\",\n              \
    \  3..=4 => \"D\",\n                4..=5 => \"E\",\n                _ => String::from(\"\
    E\"),\n            };\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ min_grade = grades.iter().min().unwrap();\n    let mut max_grade = grades.iter().max().unwrap();\n\
    \    let mut min_grade_index = grades.iter().position(|x| x == min_grade).unwrap();\n\
    \    let mut max_grade_index = grades.iter().position(|x| x == max_grade).unwrap();\n\
    \    \n    for grade in grades {\n        if grade == 0.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n            break;\n        }\n        \n        let grade_index = grades.iter().position(|x|\
    \ x == grade).unwrap();\n        \n        if grade_index == min_grade_index {\n\
    \            letter_grades.push(String::from(\"A+\"));\n        }\n        \n\
    \        if grade_index == max_grade_index {\n            letter_grades.push(String::from(\"\
    A-\"));\n        }\n        \n        if grade_index == min_grade_index + 1 {\n\
    \            letter_grades.push(String::from(\"A\"));\n        }\n        \n \
    \       if grade_index == max_grade_index - 1 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        }\n        \n        if grade_index == min_grade_index + 2 {\n\
    \            letter_grades.push(String::from(\"B\"));\n        }\n        \n \
    \       if grade_index == max_grade_index - 2 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        \n        if grade_index == min_grade_index + 3 {\n\
    \            letter_grades.push(String::from(\"C+\"));\n        }\n        \n\
    \        if grade_index == max_grade_index - 3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        }\n        \n        if grade_index == min_grade_index + 4 {\n\
    \            letter_grades.push(String::from(\"C-\"));\n        }\n        \n\
    \        if grade_index == max_grade_index - 4 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        }\n        \n        if grade_index == min_grade_index + 5 {\n\
    \            letter_grades.push(String::from(\"D\"));\n        }\n        \n \
    \       if grade_index == max_grade_index - 5 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        }\n    }\n    \n    letter_grades", "    let mut grades_string\
    \ = vec![];\n    let mut grades_length = grades.len();\n    let mut grades_index\
    \ = 0;\n    let mut grades_sum = 0;\n    let mut grades_average = grades.iter().sum();\n\
    \    let mut grades_average_index = 0;\n    let mut grades_average_sum = 0;\n\
    \    let mut grades_average_average = 0;\n    let mut grades_average_average_index\
    \ = 0;\n    let mut grades_average_average_sum = 0;\n    let mut grades_average_average_average\
    \ = 0;\n    let mut grades_average_average_average_index = 0;\n    let mut grades_average_average_average_sum\
    \ = 0;\n    let mut grades_average_average_average_average = 0;\n    let mut grades_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_sum = 0;\n    let mut\
    \ grades_average_average_average_average_average = 0;\n    let mut grades_average_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_average_sum = 0;\n\
    \    let mut grades_average_average_average_average_average_average = 0;\n   \
    \ let mut grades_average_average_average_average_average_average_index = 0;\n\
    \    let mut grades_average_average_average_average_average_average_sum = 0;\n\
    \    let mut grades_average_average_average_average_average_average_average =\
    \ 0;\n    let mut grades_average_average_average_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_sum\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_sum\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_sum\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average_sum\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average_average\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average_average_index\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average_average_sum\
    \ = 0;\n    let mut grades_average_average_average_average_average_average_average_average_average_average_average_average\
    \ = 0;", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    let mut current_gp = 0;\n    let mut current_gp_index\
    \ = 0;\n    let mut current_gpa = grades_copy[0];\n    let mut current_gpa_index\
    \ = 0;\n    \n    while current_gp_index < grades_copy.len() {\n        if current_gp_index\
    \ == grades_copy.len() - 1 {\n            current_gp = current_gp;\n         \
    \   current_gp_index = 0;\n        } else {\n            current_gp = grades_copy[current_gp_index\
    \ + 1];\n            current_gp_index += 1;\n        }\n        \n        if current_gp\
    \ == current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_letter_grade = String::from(\"E\");\n            current_gp_index\
    \ = 0;\n            current_gpa = current_gpa;\n            current_gpa_index\
    \ = 0;\n        } else {\n            current_letter_grade = String::from(\n \
    \               match current_gp_index {\n                    0 => \"A+\",\n \
    \                   1 => \"A\",\n                    2 => \"A-\",\n          \
    \          3 => \"B+\",\n                    4 => \"B\",\n                   \
    \ 5 => \"B-\",\n                    6 => \"C+\",\n                    7 => \"\
    C\",\n                    8 => \"C-\",\n                    9 => \"D+\",\n   \
    \                 10 => \"D\",\n                    11 => \"D-\",\n          \
    \          _ => \"E\",\n                }\n            );\n            current_gp_index\
    \ = 0;\n            current_gpa = current_gpa;\n            current_gpa_index\
    \ = 0;\n        }\n    }\n    \n    letter_grades", "    let mut grades_copy =\
    \ grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    for grade in grades_copy {\n        if grade > current_grade {\n        \
    \    letter_grades.push(current_letter_grade);\n            current_grade = grade;\n\
    \            current_letter_grade = String::from(\"E\");\n        } else if grade\
    \ == current_grade {\n            current_letter_grade += String::from(\"+\");\n\
    \        } else {\n            current_letter_grade += String::from(\"-\");\n\
    \        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else {\n            current_letter_grade += String::from(\"-\"\
    );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    let mut current_letter_grade_index = 0;\n    let\
    \ mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade_index46 = 0;\n    let mut current_letter_grade_index47\
    \ = 0;\n    let mu", "    let mut grades_string = vec![];\n    for grade in grades\
    \ {\n        if grade > 3.0 {\n            grades_string.push(String::from(\"\
    B+\"));\n        } else if grade > 2.0 {\n            grades_string.push(String::from(\"\
    B\"));\n        } else if grade > 1.0 {\n            grades_string.push(String::from(\"\
    B-\"));\n        } else if grade > 0.7 {\n            grades_string.push(String::from(\"\
    C+\"));\n        } else if grade > 0.3 {\n            grades_string.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 {\n            grades_string.push(String::from(\"\
    C-\"));\n        } else if grade > 0.0 {\n            grades_string.push(String::from(\"\
    D+\"));\n        } else if grade > 0.0 {\n            grades_string.push(String::from(\"\
    D\"));\n        } else {\n            grades_string.push(String::from(\"E\"));\n\
    \        }\n    }\n    grades_string", "    let mut grades_iter = grades.iter();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    while current_grade > 0.0 {\n        if current_grade < current_letter_grade\
    \ {\n            current_letter_grade = current_letter_grade;\n            current_letter_grade_index\
    \ += 1;\n        }\n        letter_grades.push(current_letter_grade.to_string());\n\
    \        current_grade = grades_iter.next().unwrap();\n    }\n    letter_grades.push(current_letter_grade.to_string());\n\
    \    letter_grades", "    let mut grades_sorted = grades.clone();\n    grades_sorted.sort();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_sorted[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_gp\
    \ = 0;\n    for grade in grades_sorted {\n        if grade > current_grade {\n\
    \            current_gp += 1;\n            current_letter_grade = String::from(\"\
    E\");\n        }\n        if grade == current_grade {\n            current_gp\
    \ += 1;\n            current_letter_grade = String::from(\n                match\
    \ current_gp {\n                    1 => \"A+\",\n                    2 => \"\
    A\",\n                    3 => \"A-\",\n                    4 => \"B+\",\n   \
    \                 5 => \"B\",\n                    6 => \"B-\",\n            \
    \        7 => \"C+\",\n                    8 => \"C\",\n                    9\
    \ => \"C-\",\n                    _ => \"D+\",\n                },\n         \
    \   );\n        }\n        current_grade = grade;\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n \
    \   let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade < current_grade {\n            current_letter_grade = String::from(\"\
    E\");\n        }\n        if grade == current_grade {\n            if grade >\
    \ current_grade {\n                current_letter_grade = String::from(\"D-\"\
    );\n            }\n            if grade < current_grade {\n                current_letter_grade\
    \ = String::from(\"D+\");\n            }\n        }\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"B-\");\n        }\n   \
    \     if grade < current_grade {\n            current_letter_grade = String::from(\"\
    B+\");\n        }\n        if grade == current_grade {\n            if grade >\
    \ current_grade {\n                current_letter_grade = String::from(\"B-\"\
    );\n            }\n            if grade < current_grade {\n                current_letter_grade\
    \ = String::from(\"B+\");\n            }\n        }\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"A-\");\n        }\n   \
    \     if grade < current_grade {\n            current_letter_grade = String::from(\"\
    A+\");\n        }\n        if grade == current_grade {\n            if grade >\
    \ current_grade {\n                current_letter_grade = String::from(\"A-\"\
    );\n            }\n            if grade < current_grade {\n                current_letter_grade\
    \ = String::from(\"A+\");\n            }\n        }\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"C-\");\n        }\n   \
    \     if grade < current_grade {\n            current_letter_grade = String::from(\"\
    C\");\n        }\n        if grade == current_grade {\n            if grade >\
    \ current_grade {\n                current_letter_grade = String::from(\"C-\"\
    );\n            }\n            if grade < current_grade {\n                current_letter_grade\
    \ = String::from(\"C\");\n            }\n        }\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"B-\");\n        }\n   \
    \     if grade < current_grade {\n            current_letter_grade = String::from(\"\
    B\");\n        }\n        if grade == current_grade {\n            if grade >\
    \ current_grade {\n                current_letter_grade = String::from(\"B-\"\
    );\n            }\n            if grade ", "    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    let mut current_letter_grade = String::from(\"\
    E\");\n    for grade in grades {\n        if grade > gpa {\n            current_letter_grade\
    \ = String::from(\"E\");\n            gpa = grade;\n        }\n        if grade\
    \ < gpa {\n            current_letter_grade = String::from(\"D\");\n         \
    \   gpa = grade;\n        }\n        if grade == gpa {\n            current_letter_grade\
    \ = String::from(\"A\");\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut letter_grades = vec![];\n    let mut\
    \ max_grade = grades.iter().max().unwrap();\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut current_grade = max_grade;\n    let mut current_letter_grade = String::from(\"\
    E\");\n    for grade in grades {\n        if grade > current_grade {\n       \
    \     current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade < min_grade {\n            current_grade = grade;\n\
    \            current_letter_grade = String::from(\"E\");\n        } else if grade\
    \ == current_grade {\n            current_letter_grade = String::from(\n     \
    \           match current_grade {\n                    4.0 => \"A+\",\n      \
    \              3.7 => \"A\",\n                    3.3 => \"A-\",\n           \
    \         3.0 => \"B+\",\n                    2.7 => \"B\",\n                \
    \    2.3 => \"B-\",\n                    2.0 => \"C+\",\n                    1.7\
    \ => \"C\",\n                    1.3 => \"C-\",\n                    1.0 => \"\
    D+\",\n                    0.7 => \"D\",\n                    0.0 => \"D-\",\n\
    \                    _ => \"E\",\n                },\n            );\n       \
    \ }\n        letter_grades.push(current_letter_grade);\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    for grade in grades {\n        if grade\
    \ > 3.0 {\n            letter_grades.push(String::from(\"B+\"));\n        } else\
    \ if grade > 2.7 {\n            letter_grades.push(String::from(\"B\"));\n   \
    \     } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut prev_grade = grades_copy[0];\n\
    \    let mut prev_letter_grade = String::from(\"E\");\n    let mut prev_letter_grade_index\
    \ = 0;\n    let mut prev_grade_index = 0;\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    for grade in grades_copy {\n        if grade > prev_grade {\n    \
    \        letter_grades.push(String::from(\"E\"));\n            prev_letter_grade\
    \ = String::from(\"E\");\n            prev_letter_grade_index = 0;\n         \
    \   prev_grade_index = 0;\n            current_grade = grade;\n            current_letter_grade\
    \ = String::from(\"E\");\n            current_letter_grade_index = 0;\n      \
    \  } else {\n            prev_grade = current_grade;\n            prev_letter_grade\
    \ = current_letter_grade;\n            prev_grade_index = current_grade_index;\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n            current_letter_grade_index = 0;\n        }\n        if grade\
    \ > prev_grade {\n            current_letter_grade_index += 1;\n        } else\
    \ {\n            current_letter_grade_index += 1;\n        }\n        if current_letter_grade_index\
    \ == letter_grades.len() {\n            letter_grades.push(current_letter_grade);\n\
    \            current_letter_grade_index = 0;\n        }\n    }\n    letter_grades",
  "    let mut letter_grades = vec![];\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut max_grade = grades.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut grades_range\
    \ = max_grade_index - min_grade_index;\n    let mut grades_remaining = grades_range;\n\
    \    let mut grades_remaining_index = grades_range;\n    let mut grades_remaining_sum\
    \ = 0;\n    \n    while grades_remaining > 0 {\n        grades_remaining_sum +=\
    \ grades[grades_remaining_index];\n        grades_remaining -= 1;\n        grades_remaining_index\
    \ += 1;\n    }\n    \n    grades_remaining_sum += grades[grades_remaining_index];\n\
    \    grades_remaining_index += 1;\n    \n    for grade in grades.iter().skip(grades_remaining_index)\
    \ {\n        let grade_index = grades.iter().position(|x| x == grade).unwrap();\n\
    \        let grades_remaining_sum = grades_remaining + grades[grade_index];\n\
    \        \n        if grades_remaining_sum < min_grade {\n            letter_grades.push(String::from(\"\
    E\"));\n            break;\n        }\n        \n        if grades_remaining_sum\
    \ > max_grade {\n            letter_grades.push(String::from(\"D-\"));\n     \
    \       break;\n        }\n        \n        if grades_remaining_sum == min_grade\
    \ {\n            letter_grades.push(String::from(\"D+\"));\n            break;\n\
    \        }\n        \n        if grades_remaining_sum == max_grade {\n       \
    \     letter_grades.push(String::from(\"D\"));\n            break;\n        }\n\
    \        \n        let grades_remaining_sum = grades_remaining + grades[grade_index];\n\
    \        \n        if grades_remaining_sum < min_grade {\n            letter_grades.push(String::from(\"\
    C-\"));\n            break;\n        }\n        \n        if grades_remaining_sum\
    \ > max_grade {\n            letter_grades.push(String::from(\"C\"));\n      \
    \      break;\n        }\n        \n        if grades_remaining_sum == min_grade\
    \ {\n            letter_grades.push(String::from(\"C+\"));\n            break;\n\
    \        }\n        \n        if grades_remaining_sum == max_grade {\n       \
    \     letter_grades.push(String::from(\"B\"));\n            break;\n        }\n\
    \        \n        if grades_remaining_sum", "    let mut grades_sorted = grades.clone();\n\
    \    grades_sorted.sort_unstable();\n    let mut grades_iter = grades_sorted.iter();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    while current_grade\
    \ != 0.0 {\n        if current_grade < current_grade.checked_add(0.1).unwrap()\
    \ {\n            current_letter_grade = String::from(\"A+\");\n        } else\
    \ if current_grade < current_grade.checked_add(0.2).unwrap() {\n            current_letter_grade\
    \ = String::from(\"A\");\n        } else if current_grade < current_grade.checked_add(0.3).unwrap()\
    \ {\n            current_letter_grade = String::from(\"A-\");\n        } else\
    \ if current_grade < current_grade.checked_add(0.4).unwrap() {\n            current_letter_grade\
    \ = String::from(\"B+\");\n        } else if current_grade < current_grade.checked_add(0.5).unwrap()\
    \ {\n            current_letter_grade = String::from(\"B\");\n        } else if\
    \ current_grade < current_grade.checked_add(0.6).unwrap() {\n            current_letter_grade\
    \ = String::from(\"B-\");\n        } else if current_grade < current_grade.checked_add(0.7).unwrap()\
    \ {\n            current_letter_grade = String::from(\"C+\");\n        } else\
    \ if current_grade < current_grade.checked_add(0.8).unwrap() {\n            current_letter_grade\
    \ = String::from(\"C\");\n        } else if current_grade < current_grade.checked_add(0.9).unwrap()\
    \ {\n            current_letter_grade = String::from(\"C-\");\n        } else\
    \ if current_grade < current_grade.checked_add(1.0).unwrap() {\n            current_letter_grade\
    \ = String::from(\"D+\");\n        } else if current_grade < current_grade.checked_add(1.1).unwrap()\
    \ {\n            current_letter_grade = String::from(\"D\");\n        } else if\
    \ current_grade < current_grade.checked_add(1.2).unwrap() {\n            current_letter_grade\
    \ = String::from(\"D-\");\n        } else {\n            current_letter_grade\
    \ = String::from(\"E\");\n        }\n        letter_grades.push(current_letter_grade);\n\
    \        current_grade = grades_iter.next().unwrap();\n    }\n    letter_grades",
  "    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n", "    let mut grades_copy = grades.clone();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect();\n    let mut grades_copy = grades_copy.iter().cloned().collect();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect();\n    let mut\
    \ grades_copy = grades_copy.iter().cloned().collect();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect();\n    let mut grades_copy = grades_copy.iter().cloned().collect();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect();\n    let mut\
    \ grades_copy = grades_copy.iter().cloned().collect();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect();\n    let mut grades_copy = grades_copy.iter().cloned().collect();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect();\n    let mut\
    \ grades_copy = grades_copy.iter().cloned().collect();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect();\n    let mut grades_copy = grades_copy.iter().cloned().collect();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect();\n    let mut\
    \ grades_copy = grades_copy.iter().cloned().collect();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect();\n    let mut grades_copy = grades_copy.iter().cloned().collect();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect();\n    let mut\
    \ grades_copy = grades_copy.iter().cloned().collect();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect();\n    let mut grades_copy = grades_copy.iter().cloned().collect();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect();\n    let mut\
    \ grades_copy = grades_copy.iter().cloned().collect();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect();\n    let mut grades_copy = grades_copy.iter().cloned().collect();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect();\n    let mut\
    \ grades_copy = grades_copy.iter().cloned().collect();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect();\n    let mut grades_copy = grades_copy.",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else {\n            current_letter_grade += String::from(\"-\"\
    );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"E\");\n            current_grade\
    \ = grade;\n        } else if grade < current_grade {\n            current_letter_grade\
    \ = String::from(\"E\");\n            current_grade = grade;\n        } else {\n\
    \            current_letter_grade = String::from(\n                match current_grade\
    \ {\n                    4.0 => \"A+\",\n                    3.7 => \"A\",\n \
    \                   3.3 => \"A-\",\n                    3.0 => \"B+\",\n     \
    \               2.7 => \"B\",\n                    2.3 => \"B-\",\n          \
    \          2.0 => \"C+\",\n                    1.7 => \"C\",\n               \
    \     1.3 => \"C-\",\n                    1.0 => \"D+\",\n                   \
    \ 0.7 => \"D\",\n                    0.0 => \"D-\",\n                    _ =>\
    \ \"E\",\n                },\n            );\n            current_grade = grade;\n\
    \        }\n        letter_grades.push(current_letter_grade);\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut grades_len = grades.len();\n\
    \    let mut grades_sum = 0.0;\n    let mut grades_average = 0.0;\n    let mut\
    \ grades_min_value = grades.iter().min().unwrap();\n    let mut grades_max_value\
    \ = grades.iter().max().unwrap();\n    let mut grades_min_value = grades_min_value.to_f64();\n\
    \    let mut grades_max_value = grades_max_value.to_f64();\n    let mut grades_min_value\
    \ = grades_min_value.to_f64();\n    let mut grades_max_value = grades_max_value.to_f64();\n\
    \    let mut grades_min_value = grades_min_value.to_f64();\n    let mut grades_max_value\
    \ = grades_max_value.to_f64();\n    let mut grades_min_value = grades_min_value.to_f64();\n\
    \    let mut grades_max_value = grades_max_value.to_f64();\n    let mut grades_min_value\
    \ = grades_min_value.to_f64();\n    let mut grades_max_value = grades_max_value.to_f64();\n\
    \    let mut grades_min_value = grades_min_value.to_f64();\n    let mut grades_max_value\
    \ = grades_max_value.to_f64();\n    let mut grades_min_value = grades_min_value.to_f64();\n\
    \    let mut grades_max_value = grades_max_value.to_f64();\n    let mut grades_min_value\
    \ = grades_min_value.to_f64();\n    let mut grades_max_value = grades_max_value.to_f64();\n\
    \    let mut grades_min_value = grades_min_value.to_f64();\n    let mut grades_max_value\
    \ = grades_max_value.to_f64();\n    let mut grades_min_value = grades_min_value.to_f64();\n\
    \    let mut grades_max_value = grades_max_value.to_f64();\n    let mut grades_min_value\
    \ = grades_min_value.to_f64();\n    let mut grades_max_value = grades_max_value.to_f64();\n\
    \    let mut grades_min_value = grades_min_value.to_f64();\n    let mut grades_max_value\
    \ = grades_max_value.to_f64();\n    let mut grades_min_value = grades_min_value.to_f64();\n\
    \    let mut grades_max_value = grades_max_value.to_f64();\n    let mut grades_min_value\
    \ = grades_min_value.to_f64();\n    let mut grades_max_value = grades_", "   \
    \ let mut grades_iter = grades.iter();\n    let mut letter_grades = Vec::new();\n\
    \    let mut current_grade = grades_iter.next().unwrap();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    while let Some(grade) = grades_iter.next() {\n \
    \       if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_letter_grade = String::from(\"E\");\n            current_grade\
    \ = grade;\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec<_>>();\n    let mut grades_copy\
    \ = grades_copy.iter().cloned().collect::<Vec", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy.first().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut grades_sorted = grades.clone();\n    grades_sorted.sort_unstable();\n\
    \    let mut grades_iter = grades_sorted.iter();\n    let mut letter_grades =\
    \ vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n    let mut\
    \ current_letter_grade = String::from(\"E\");\n    while let Some(grade) = grades_iter.next()\
    \ {\n        if grade > current_grade {\n            letter_grades.push(current_letter_grade);\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade == current_grade {\n            current_letter_grade\
    \ += String::from(\"+\");\n        } else {\n            current_letter_grade\
    \ += String::from(\"-\");\n        }\n    }\n    letter_grades.push(current_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        let mut letter_grade = String::new();\n        if grade > 3.0 {\n\
    \            letter_grade += \"B+\";\n        } else if grade > 2.7 {\n      \
    \      letter_grade += \"B\";\n        } else if grade > 2.3 {\n            letter_grade\
    \ += \"B-\";\n        } else if grade > 1.3 {\n            letter_grade += \"\
    C+\";\n        } else if grade > 1.0 {\n            letter_grade += \"C\";\n \
    \       } else if grade > 0.7 {\n            letter_grade += \"C-\";\n       \
    \ } else if grade > 0.3 {\n            letter_grade += \"D+\";\n        } else\
    \ if grade > 0.0 {\n            letter_grade += \"D\";\n        } else if grade\
    \ > -0.3 {\n            letter_grade += \"D-\";\n        } else if grade > -0.7\
    \ {\n            letter_grade += \"E\";\n        } else {\n            letter_grade\
    \ += \"E\";\n        }\n        letter_grades.push(letter_grade);\n    }\n   \
    \ letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut min_grade = grades_copy[0];\n    let mut max_grade =\
    \ grades_copy[0];\n    let mut min_grade_index = -1;\n    let mut max_grade_index\
    \ = -1;\n    for grade in grades_copy {\n        if grade < min_grade {\n    \
    \        min_grade = grade;\n            min_grade_index = grades_copy.iter().position(|x|\
    \ x == min_grade).unwrap();\n        }\n        if grade > max_grade {\n     \
    \       max_grade = grade;\n            max_grade_index = grades_copy.iter().position(|x|\
    \ x == max_grade).unwrap();\n        }\n    }\n    for grade in grades_copy {\n\
    \        if grade == min_grade {\n            letter_grades.push(String::from(\"\
    A+\"));\n        }\n        if grade == max_grade {\n            letter_grades.push(String::from(\"\
    D+\"));\n        }\n        if grade < min_grade {\n            letter_grades.push(String::from(\"\
    A-\"));\n        }\n        if grade > max_grade {\n            letter_grades.push(String::from(\"\
    D-\"));\n        }\n        if grade == 0.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        }\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 0.1 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 0.07 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 0.03 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > 0.01 {\n            letter_", "    let\
    \ mut grades_sorted = grades.iter().cloned().collect::<Vec<f64>>();\n    grades_sorted.sort_unstable();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_sorted[0];\n\
    \    for grade in grades_sorted {\n        if grade > current_grade {\n      \
    \      letter_grades.push(String::from(\"D-\"));\n            current_grade =\
    \ grade;\n        } else if grade == current_grade {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade < current_grade {\n            letter_grades.push(String::from(\"\
    C-\"));\n            current_grade = grade;\n        } else {\n            letter_grades.push(String::from(\"\
    C\"));\n            current_grade = grade;\n        }\n    }\n    letter_grades.push(String::from(\"\
    A-\"));\n    letter_grades.push(String::from(\"A\"));\n    letter_grades.push(String::from(\"\
    B+\"));\n    letter_grades.push(String::from(\"B\"));\n    letter_grades.push(String::from(\"\
    B-\"));\n    letter_grades.push(String::from(\"B\"));\n    letter_grades.push(String::from(\"\
    C+\"));\n    letter_grades.push(String::from(\"C\"));\n    letter_grades.push(String::from(\"\
    C-\"));\n    letter_grades.push(String::from(\"C\"));\n    letter_grades.push(String::from(\"\
    D+\"));\n    letter_grades.push(String::from(\"D\"));\n    letter_grades.push(String::from(\"\
    D-\"));\n    letter_grades.push(String::from(\"D\"));\n    letter_grades.push(String::from(\"\
    E\"));\n    letter_grades", "    let mut letter_grades = vec![];\n    for grade\
    \ in grades {\n        let mut letter_grade = String::from(\"E\");\n        if\
    \ grade > 3.0 {\n            letter_grade = String::from(\"D-\");\n        } else\
    \ if grade > 2.0 {\n            letter_grade = String::from(\"B-\");\n       \
    \ } else if grade > 1.0 {\n            letter_grade = String::from(\"B-\");\n\
    \        } else if grade > 0.7 {\n            letter_grade = String::from(\"B-\"\
    );\n        } else if grade > 0.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -0.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -0.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -1.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -2.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -3.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -3.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -4.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -4.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -5.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -5.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -6.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -6.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -7.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -7.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -8.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -8.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -9.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -9.7 {\n            ", "    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut gpa: f64 = grades.iter().sum();\n    let\
    \ mut letter_grade: String;\n    \n    while gpa > 0.0 {\n        letter_grade\
    \ = match gpa % 10 {\n            0 => \"E\",\n            1 => \"D-\", \n   \
    \         2 => \"D\", \n            3 => \"C-\", \n            4 => \"C\", \n\
    \            5 => \"B-\", \n            6 => \"B\", \n            7 => \"B-\"\
    , \n            8 => \"B\", \n            9 => \"A-\", \n            10 => \"\
    A\", \n            11 => \"A+\", \n            _ => \"\"\n        };\n       \
    \ grades_vec.push(letter_grade);\n        gpa /= 10.0;\n    }\n    grades_vec",
  "    let mut grades_copy = grades.clone();\n    let mut grades_len = grades_copy.len();\n\
    \    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut grades_len = grades_copy.len();\n    let mut grades_copy = grades_copy.iter().cloned().",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    let mut current_letter_grade_index2 = 0;\n    let mut current_letter_grade_index3\
    \ = 0;\n    let mut current_letter_grade_index4 = 0;\n    let mut current_letter_grade_index5\
    \ = 0;\n    let mut current_letter_grade_index6 = 0;\n    let mut current_letter_grade_index7\
    \ = 0;\n    let mut current_letter_grade_index8 = 0;\n    let mut current_letter_grade_index9\
    \ = 0;\n    let mut current_letter_grade_index10 = 0;\n    let mut current_letter_grade_index11\
    \ = 0;\n    let mut current_letter_grade_index12 = 0;\n    let mut current_letter_grade_index13\
    \ = 0;\n    let mut current_letter_grade_index14 = 0;\n    let mut current_letter_grade_index15\
    \ = 0;\n    let mut current_letter_grade_index16 = 0;\n    let mut current_letter_grade_index17\
    \ = 0;\n    let mut current_letter_grade_index18 = 0;\n    let mut current_letter_grade_index19\
    \ = 0;\n    let mut current_letter_grade_index20 = 0;\n    let mut current_letter_grade_index21\
    \ = 0;\n    let mut current_letter_grade_index22 = 0;\n    let mut current_letter_grade_index23\
    \ = 0;\n    let mut current_letter_grade_index24 = 0;\n    let mut current_letter_grade_index25\
    \ = 0;\n    let mut current_letter_grade_index26 = 0;\n    let mut current_letter_grade_index27\
    \ = 0;\n    let mut current_letter_grade_index28 = 0;\n    let mut current_letter_grade_index29\
    \ = 0;\n    let mut current_letter_grade_index30 = 0;\n    let mut current_letter_grade_index31\
    \ = 0;\n    let mut current_letter_grade_index32 = 0;\n    let mut current_letter_grade_index33\
    \ = 0;\n    let mut current_letter_grade_index34 = 0;\n    let mut current_letter_grade_index35\
    \ = 0;\n    let mut current_letter_grade_index36 = 0;\n    let mut current_letter_grade_index37\
    \ = 0;\n    let mut current_letter_grade_index38 = 0;\n    let mut current_letter_grade_index39\
    \ = 0;\n    let mut current_letter_grade_index40 = 0;\n    let mut current_letter_grade_index41\
    \ = 0;\n    let mut current_letter_grade_index42 = 0;\n    let mut current_letter_grade_index43\
    \ = 0;\n    let mut current_letter_grade_index44 = 0;\n    let mut current_letter_grade_index45\
    \ = 0;\n    let mut current_letter_grade_index46 = 0;\n    let mut current_letter_",
  "    let mut grades_iter = grades.iter();\n    let mut letter_grades = vec![];\n\
    \    let mut grade = grades_iter.next();\n    while grade != Some(0.0) {\n   \
    \     let mut letter_grade = String::from(\"E\");\n        if grade < 3.0 {\n\
    \            letter_grade = String::from(\"D-\");\n        } else if grade < 3.3\
    \ {\n            letter_grade = String::from(\"C-\");\n        } else if grade\
    \ < 3.7 {\n            letter_grade = String::from(\"B-\");\n        } else if\
    \ grade < 4.0 {\n            letter_grade = String::from(\"B-\");\n        } else\
    \ if grade < 4.3 {\n            letter_grade = String::from(\"B-\");\n       \
    \ } else if grade < 4.7 {\n            letter_grade = String::from(\"B-\");\n\
    \        } else if grade < 5.0 {\n            letter_grade = String::from(\"B-\"\
    );\n        } else if grade < 5.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 5.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 6.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 6.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 6.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 7.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 7.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 7.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 8.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 8.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 8.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 9.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 9.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 9.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 10.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade < 10.3 {\n            letter_grade = ", "    let\
    \ mut letter_grades = vec![];\n    for grade in grades {\n        let mut letter_grade\
    \ = String::from(\"E\");\n        if grade > 3.0 {\n            letter_grade =\
    \ String::from(\"D-\");\n        } else if grade > 2.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 1.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.7 { \n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if grade > 0.0 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else ", "    let mut letter_grades = vec![];\n\
    \    let mut gpa = grades.iter().sum();\n    let mut letter_grade = String::from(\"\
    E\");\n    for grade in grades {\n        if grade > gpa {\n            letter_grade\
    \ = String::from(\"D\");\n            letter_grades.push(letter_grade);\n    \
    \        gpa = grade;\n        } else if grade < gpa {\n            letter_grade\
    \ = String::from(\"C\");\n            letter_grades.push(letter_grade);\n    \
    \        gpa = grade;\n        } else if grade == gpa {\n            letter_grade\
    \ = String::from(\"B\");\n            letter_grades.push(letter_grade);\n    \
    \        gpa = grade;\n        }\n    }\n    letter_grades.push(letter_grade);\n\
    \    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n    let mut\
    \ total_grade: f64 = 0.0;\n    for grade in grades {\n        total_grade += grade;\n\
    \    }\n    let mut total_grade = total_grade / grades.len();\n    for grade in\
    \ grades {\n        let grade = grade / total_grade;\n        let letter_grade\
    \ = match grade {\n            0.0 => \"E\",\n            1.0 => \"A\",\n    \
    \        2.0 => \"B\",\n            3.0 => \"C\",\n            4.0 => \"D\",\n\
    \            5.0 => \"F\",\n            _ => \"\".to_string(),\n        };\n \
    \       grades_vec.push(letter_grade);\n    }\n    grades_vec", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy.first();\n    let mut current_letter_grade = String::from(\"E\"\
    );\n    \n    while grades_copy.len() > 0 {\n        if current_grade > grades_copy.last()\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grades_copy.last();\n            current_letter_grade = String::from(\"E\"\
    );\n        }\n        \n        if current_grade < grades_copy.first() {\n  \
    \          current_grade = grades_copy.first();\n            current_letter_grade\
    \ = String::from(\"E\");\n        }\n        \n        if current_grade == grades_copy.first()\
    \ {\n            current_letter_grade = String::from(grades_copy.first().to_string());\n\
    \        }\n        \n        if current_grade == grades_copy.last() {\n     \
    \       current_letter_grade = String::from(grades_copy.last().to_string());\n\
    \        }\n        \n        grades_copy.pop();\n    }\n    \n    letter_grades.push(current_letter_grade);\n\
    \    \n    letter_grades", "    let mut grades_string = vec![];\n    let mut grades_length\
    \ = grades.len();\n    let mut grades_sum: f64 = 0.0;\n    let mut grades_average:\
    \ f64 = 0.0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize = 0;\n    let mut grades_max_index:\
    \ usize = 0;\n    let mut grades_min_value: f64 = grades[0];\n    let mut grades_max_value:\
    \ f64 = grades[0];\n    let mut grades_min_index: usize", "    let mut letter_grades\
    \ = vec![];\n    for grade in grades {\n        if grade > 3.0 {\n           \
    \ letter_grades.push(String::from(\"B+\"));\n        } else if grade > 2.0 {\n\
    \            letter_grades.push(String::from(\"B\"));\n        } else if grade\
    \ > 1.0 {\n            letter_grades.push(String::from(\"B-\"));\n        } else\
    \ if grade > 0.7 {\n            letter_grades.push(String::from(\"C+\"));\n  \
    \      } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > -0.3 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > -0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > -1.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade > -2.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            letter_grades.push(String::from(\"A\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut total_grade = 0.0;\n    let\
    \ mut total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points\
    \ = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points = 0.0;\n \
    \   let mut total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut\
    \ total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points\
    \ = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points = 0.0;\n \
    \   let mut total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut\
    \ total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points\
    \ = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points = 0.0;\n \
    \   let mut total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut\
    \ total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points\
    \ = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points = 0.0;\n \
    \   let mut total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut\
    \ total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points\
    \ = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points = 0.0;\n \
    \   let mut total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut\
    \ total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points\
    \ = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points = 0.0;\n \
    \   let mut total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut\
    \ total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points\
    \ = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points = 0.0;\n \
    \   let mut total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut\
    \ total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points\
    \ = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points = 0.0;\n \
    \   let mut total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut\
    \ total_points = 0.0;\n    let mut total_points = 0.0;\n    let mut total_points\
    \ = 0.0;\n    let mut total_points = 0.0;\n    let mut total_", "    let mut letter_grades\
    \ = vec![];\n    let mut gpa = grades.iter().sum();\n    let mut letter_grade\
    \ = String::from(\"E\");\n    while gpa > 0.0 {\n        if gpa < 3.0 {\n    \
    \        letter_grade = String::from(\"D-\");\n        } else if gpa < 3.3 {\n\
    \            letter_grade = String::from(\"B-\");\n        } else if gpa < 3.7\
    \ {\n            letter_grade = String::from(\"B-\");\n        } else if gpa <\
    \ 4.0 {\n            letter_grade = String::from(\"B-\");\n        } else if gpa\
    \ < 4.3 {\n            letter_grade = String::from(\"B-\");\n        } else if\
    \ gpa < 4.7 {\n            letter_grade = String::from(\"B-\");\n        } else\
    \ if gpa < 5.0 {\n            letter_grade = String::from(\"B-\");\n        }\
    \ else if gpa < 5.3 {\n            letter_grade = String::from(\"B-\");\n    \
    \    } else if gpa < 5.7 {\n            letter_grade = String::from(\"B-\");\n\
    \        } else if gpa < 6.0 {\n            letter_grade = String::from(\"B-\"\
    );\n        } else if gpa < 6.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa < 6.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa < 7.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa < 7.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa < 7.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa < 8.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa < 8.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa < 8.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa < 9.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa < 9.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa < 9.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa < 10.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if gpa < 10.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if ", "    let mut letter_grades = vec![];\n    let mut\
    \ gpa = grades.iter().sum();\n    let mut gpa_min = gpa.min();\n    let mut gpa_max\
    \ = gpa.max();\n    let mut gpa_mid = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid2\
    \ = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid3 = (gpa_max + gpa_min) / 2;\n\
    \    let mut gpa_mid4 = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid5 = (gpa_max\
    \ + gpa_min) / 2;\n    let mut gpa_mid6 = (gpa_max + gpa_min) / 2;\n    let mut\
    \ gpa_mid7 = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid8 = (gpa_max + gpa_min)\
    \ / 2;\n    let mut gpa_mid9 = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid10\
    \ = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid11 = (gpa_max + gpa_min) / 2;\n\
    \    let mut gpa_mid12 = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid13 = (gpa_max\
    \ + gpa_min) / 2;\n    let mut gpa_mid14 = (gpa_max + gpa_min) / 2;\n    let mut\
    \ gpa_mid15 = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid16 = (gpa_max + gpa_min)\
    \ / 2;\n    let mut gpa_mid17 = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid18\
    \ = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid19 = (gpa_max + gpa_min) / 2;\n\
    \    let mut gpa_mid20 = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid21 = (gpa_max\
    \ + gpa_min) / 2;\n    let mut gpa_mid22 = (gpa_max + gpa_min) / 2;\n    let mut\
    \ gpa_mid23 = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid24 = (gpa_max + gpa_min)\
    \ / 2;\n    let mut gpa_mid25 = (gpa_max + gpa_min) / 2;\n    let mut gpa_mid26\
    \ = (gpa_max + gpa_min) / 2;\n    let ", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n", "    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut min_grade: f64 = grades.iter().min().unwrap();\n\
    \    let mut max_grade: f64 = grades.iter().max().unwrap();\n    let mut min_grade_index:\
    \ usize = 0;\n    let mut max_grade_index: usize = 0;\n    let mut min_grade_index2:\
    \ usize = 0;\n    let mut max_grade_index2: usize = 0;\n    let mut min_grade_index3:\
    \ usize = 0;\n    let mut max_grade_index3: usize = 0;\n    let mut min_grade_index4:\
    \ usize = 0;\n    let mut max_grade_index4: usize = 0;\n    let mut min_grade_index5:\
    \ usize = 0;\n    let mut max_grade_index5: usize = 0;\n    let mut min_grade_index6:\
    \ usize = 0;\n    let mut max_grade_index6: usize = 0;\n    let mut min_grade_index7:\
    \ usize = 0;\n    let mut max_grade_index7: usize = 0;\n    let mut min_grade_index8:\
    \ usize = 0;\n    let mut max_grade_index8: usize = 0;\n    let mut min_grade_index9:\
    \ usize = 0;\n    let mut max_grade_index9: usize = 0;\n    let mut min_grade_index10:\
    \ usize = 0;\n    let mut max_grade_index10: usize = 0;\n    let mut min_grade_index11:\
    \ usize = 0;\n    let mut max_grade_index11: usize = 0;\n    let mut min_grade_index12:\
    \ usize = 0;\n    let mut max_grade_index12: usize = 0;\n    let mut min_grade_index13:\
    \ usize = 0;\n    let mut max_grade_index13: usize = 0;\n    let mut min_grade_index14:\
    \ usize = 0;\n    let mut max_grade_index14: usize = 0;\n    let mut min_grade_index15:\
    \ usize = 0;\n    let mut max_grade_index15: usize = 0;\n    let mut min_grade_index16:\
    \ usize = 0;\n    let mut max_grade_index16: usize = 0;\n    let mut min_grade_index17:\
    \ usize = 0;\n    let mut max_grade_index17: usize = 0;\n    let mut min_grade_index18:\
    \ usize = 0;\n    let mut max_grade_index18: usize = 0;\n    let mut min_grade_index19:\
    \ usize = 0;\n    let mut max_grade_index19: usize = 0;\n    let mut min_grade_index20:\
    \ usize = 0;\n    let mu", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut current_grade = grades_copy.pop().unwrap();\n\
    \    let mut current_letter = String::from(\"E\");\n    \n    while grades_copy.len()\
    \ > 0 {\n        let mut current_grade = grades_copy.pop().unwrap();\n       \
    \ let mut current_letter = String::from(\"E\");\n        \n        if current_grade\
    \ > 3.0 {\n            current_letter = String::from(\"C\");\n        } else if\
    \ current_grade > 2.0 {\n            current_letter = String::from(\"B\");\n \
    \       } else if current_grade > 1.0 {\n            current_letter = String::from(\"\
    A\");\n        } else if current_grade > 0.0 {\n            current_letter = String::from(\"\
    D\");\n        } else {\n            current_letter = String::from(\"F\");\n \
    \       }\n        \n        letter_grades.push(current_letter);\n    }\n    \n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    let mut total_grade\
    \ = grades.iter().sum();\n    let mut total_letter_grade = String::from(\"E\"\
    );\n    for grade in grades {\n        let letter_grade = if grade < total_grade\
    \ {\n            String::from(\"D-\")\n        } else if grade < total_grade +\
    \ 0.3 {\n            String::from(\"C+\")\n        } else if grade < total_grade\
    \ + 0.4 {\n            String::from(\"B+\")\n        } else if grade < total_grade\
    \ + 0.5 {\n            String::from(\"A-\")\n        } else if grade < total_grade\
    \ + 0.6 {\n            String::from(\"A-\")\n        } else if grade < total_grade\
    \ + 0.7 {\n            String::from(\"A-\")\n        } else if grade < total_grade\
    \ + 0.8 {\n            String::from(\"A-\")\n        } else if grade < total_grade\
    \ + 0.9 {\n            String::from(\"A-\")\n        } else if grade < total_grade\
    \ + 1.0 {\n            String::from(\"A-\")\n        } else {\n            String::from(\"\
    A-\")\n        };\n        total_grade -= grade;\n        total_letter_grade +=\
    \ letter_grade;\n        letter_grades.push(letter_grade);\n    }\n    letter_grades.push(total_letter_grade);\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        if grade > 3.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_iter = grades.iter();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    \n    while current_grade\
    \ > 0.0 {\n        if current_grade < 3.0 {\n            current_letter_grade\
    \ = String::from(\"E\");\n            current_grade = grades_iter.next().unwrap();\n\
    \        } else {\n            if current_grade < 3.3 {\n                current_letter_grade\
    \ = String::from(\"D-\");\n                current_grade = grades_iter.next().unwrap();\n\
    \            } else if current_grade < 3.7 {\n                current_letter_grade\
    \ = String::from(\"D\");\n                current_grade = grades_iter.next().unwrap();\n\
    \            } else if current_grade < 4.0 {\n                current_letter_grade\
    \ = String::from(\"C-\");\n                current_grade = grades_iter.next().unwrap();\n\
    \            } else if current_grade < 4.3 {\n                current_letter_grade\
    \ = String::from(\"C\");\n                current_grade = grades_iter.next().unwrap();\n\
    \            } else if current_grade < 4.7 {\n                current_letter_grade\
    \ = String::from(\"B-\");\n                current_grade = grades_iter.next().unwrap();\n\
    \            } else if current_grade < 5.0 {\n                current_letter_grade\
    \ = String::from(\"B\");\n                current_grade = grades_iter.next().unwrap();\n\
    \            } else if current_grade < 5.3 {\n                current_letter_grade\
    \ = String::from(\"A-\");\n                current_grade = grades_iter.next().unwrap();\n\
    \            } else if current_grade < 5.7 {\n                current_letter_grade\
    \ = String::from(\"A\");\n                current_grade = grades_iter.next().unwrap();\n\
    \            } else if current_grade < 6.0 {\n                current_letter_grade\
    \ = String::from(\"A+\");\n                current_grade = grades_iter.next().unwrap();\n\
    \            } else {\n                current_letter_grade = String::from(\"\
    A\");\n                current_grade = grades_iter.next().unwrap();\n        \
    \    }\n        }\n        letter_grades.push(current_letter_grade);\n    }\n\
    \    letter_grades", "    let mut grades_iter = grades.iter();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n    let\
    \ mut current_letter_grade = String::from(\"E\");\n    \n    while current_grade\
    \ != 0.0 {\n        if current_grade > current_grade.checked_sub(1.7).unwrap()\
    \ {\n            current_letter_grade = String::from(\"A+\");\n        } else\
    \ if current_grade > current_grade.checked_sub(1.3).unwrap() {\n            current_letter_grade\
    \ = String::from(\"A-\");\n        } else if current_grade > current_grade.checked_sub(1.0).unwrap()\
    \ {\n            current_letter_grade = String::from(\"B+\");\n        } else\
    \ if current_grade > current_grade.checked_sub(0.5).unwrap() {\n            current_letter_grade\
    \ = String::from(\"B\");\n        } else if current_grade > current_grade.checked_sub(0.1).unwrap()\
    \ {\n            current_letter_grade = String::from(\"B-\");\n        } else\
    \ if current_grade > current_grade.checked_sub(0.7).unwrap() {\n            current_letter_grade\
    \ = String::from(\"C+\");\n        } else if current_grade > current_grade.checked_sub(0.0).unwrap()\
    \ {\n            current_letter_grade = String::from(\"C\");\n        } else if\
    \ current_grade > current_grade.checked_sub(-0.7).unwrap() {\n            current_letter_grade\
    \ = String::from(\"C-\");\n        } else if current_grade > current_grade.checked_sub(-1.0).unwrap()\
    \ {\n            current_letter_grade = String::from(\"D+\");\n        } else\
    \ if current_grade > current_grade.checked_sub(-1.5).unwrap() {\n            current_letter_grade\
    \ = String::from(\"D\");\n        } else if current_grade > current_grade.checked_sub(-2.0).unwrap()\
    \ {\n            current_letter_grade = String::from(\"D-\");\n        } else\
    \ {\n            current_letter_grade = String::from(\"E\");\n        }\n    \
    \    \n        letter_grades.push(current_letter_grade);\n        \n        current_grade\
    \ = grades_iter.next().unwrap();\n    }\n    \n    letter_grades", "    let mut\
    \ grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut letter_grades\
    \ = vec![];\n    let mut prev_grade = grades_copy[0];\n    let mut prev_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > prev_grade\
    \ {\n            letter_grades.push(String::from(prev_letter_grade));\n      \
    \      prev_letter_grade = String::from(\"E\");\n        }\n        if grade ==\
    \ prev_grade {\n            prev_letter_grade += String::from(\"+\");\n      \
    \  } else {\n            prev_letter_grade += String::from(\"-\");\n        }\n\
    \        prev_grade = grade;\n    }\n    letter_grades.push(String::from(prev_letter_grade));\n\
    \    letter_grades", "    let mut letter_grades = vec![];\n    for grade in grades\
    \ {\n        let mut letter_grade = String::from(\"E\");\n        if grade > 3.0\
    \ {\n            letter_grade = String::from(\"D+\");\n        } else if grade\
    \ > 2.0 {\n            letter_grade = String::from(\"D\");\n        } else if\
    \ grade > 1.0 {\n            letter_grade = String::from(\"C+\");\n        } else\
    \ if grade > 0.7 {\n            letter_grade = String::from(\"C\");\n        }\
    \ else if grade > 0.3 {\n            letter_grade = String::from(\"B-\");\n  \
    \      } else if grade > 0.1 {\n            letter_grade = String::from(\"B\"\
    );\n        } else if grade > 0.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -0.1 {\n            letter_grade = String::from(\"\
    B\");\n        } else if grade > -0.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > -0.7 {\n            letter_grade = String::from(\"\
    B\");\n        } else if grade > -1.0 {\n            letter_grade = String::from(\"\
    B+\");\n        } else if grade > -2.0 {\n            letter_grade = String::from(\"\
    A+\");\n        } else if grade > -3.0 {\n            letter_grade = String::from(\"\
    A\");\n        } else if grade > -3.7 {\n            letter_grade = String::from(\"\
    A\");\n        } else if grade > -4.0 {\n            letter_grade = String::from(\"\
    A\");\n        } else if grade > -4.7 {\n            letter_grade = String::from(\"\
    A\");\n        } else if grade > -5.0 {\n            letter_grade = String::from(\"\
    A\");\n        } else if grade > -5.7 {\n            letter_grade = String::from(\"\
    A\");\n        } else if grade > -6.0 {\n            letter_grade = String::from(\"\
    A\");\n        } else if grade > -6.7 {\n            letter_grade = String::from(\"\
    A\");\n        } else if grade > -7.0 {\n            letter_grade = String::from(\"\
    A\");\n        } else if grade > -7.7 {\n            letter_grade = String::from(\"\
    A\");\n        } else if grade > -8.0 {\n            letter_grade = String::from(\"\
    A\");\n        } else if grade > -8.7 {\n            ", "    let mut grades_iter\
    \ = grades.iter();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_iter.next();\n    while let Some(current_grade) = current_grade {\n\
    \        let mut letter_grade = String::from(\"E\");\n        if current_grade\
    \ < 3.0 {\n            letter_grade = String::from(\"D-\");\n        } else if\
    \ current_grade < 3.3 {\n            letter_grade = String::from(\"C-\");\n  \
    \      } else if current_grade < 3.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 4.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 4.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 4.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 5.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 5.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 5.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 6.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 6.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 6.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 7.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 7.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 7.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 8.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 8.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 8.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 9.0 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 9.3 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 9.7 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if current_grade < 10.", "    let mut grades_copy = grades.clone();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade < current_grade {\n            current_letter_grade = String::from(\"\
    E\");\n        }\n        if grade == current_grade {\n            if grade <\
    \ current_grade {\n                current_letter_grade = String::from(\"E\");\n\
    \            }\n            if grade > current_grade {\n                current_letter_grade\
    \ = String::from(\"D-\");\n            }\n        }\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"D-\");\n        }\n   \
    \     if grade < current_grade {\n            current_letter_grade = String::from(\"\
    D-\");\n        }\n        if grade == current_grade {\n            if grade <\
    \ current_grade {\n                current_letter_grade = String::from(\"D-\"\
    );\n            }\n            if grade > current_grade {\n                current_letter_grade\
    \ = String::from(\"C-\");\n            }\n        }\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"C-\");\n        }\n   \
    \     if grade < current_grade {\n            current_letter_grade = String::from(\"\
    C-\");\n        }\n        if grade == current_grade {\n            if grade <\
    \ current_grade {\n                current_letter_grade = String::from(\"C-\"\
    );\n            }\n            if grade > current_grade {\n                current_letter_grade\
    \ = String::from(\"B-\");\n            }\n        }\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"B-\");\n        }\n   \
    \     if grade < current_grade {\n            current_letter_grade = String::from(\"\
    B-\");\n        }\n        if grade == current_grade {\n            if grade <\
    \ current_grade {\n                current_letter_grade = String::from(\"B-\"\
    );\n            }\n            if grade > current_grade {\n                current_letter_grade\
    \ = String::from(\"B-\");\n            }\n        }\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"B-\");\n        }\n   \
    \     if grade < current_grade {\n            current_letter_grade = String::from(\"\
    B-\");\n        }\n        if grade == current_grade {\n            if grade <\
    \ current_grade {\n                current_letter_grade = String::from(\"B-\"\
    );\n            }\n            if grade > current_", "    let mut letter_grades\
    \ = vec![];\n    let mut total_grade = grades.iter().sum();\n    let mut total_gpa\
    \ = grades.iter().sum();\n    let mut total_gpa_sum = 0;\n    let mut total_gpa_sum2\
    \ = 0;\n    let mut total_gpa_sum3 = 0;\n    let mut total_gpa_sum4 = 0;\n   \
    \ let mut total_gpa_sum5 = 0;\n    let mut total_gpa_sum6 = 0;\n    let mut total_gpa_sum7\
    \ = 0;\n    let mut total_gpa_sum8 = 0;\n    let mut total_gpa_sum9 = 0;\n   \
    \ let mut total_gpa_sum10 = 0;\n    let mut total_gpa_sum11 = 0;\n    let mut\
    \ total_gpa_sum12 = 0;\n    let mut total_gpa_sum13 = 0;\n    let mut total_gpa_sum14\
    \ = 0;\n    let mut total_gpa_sum15 = 0;\n    let mut total_gpa_sum16 = 0;\n \
    \   let mut total_gpa_sum17 = 0;\n    let mut total_gpa_sum18 = 0;\n    let mut\
    \ total_gpa_sum19 = 0;\n    let mut total_gpa_sum20 = 0;\n    let mut total_gpa_sum21\
    \ = 0;\n    let mut total_gpa_sum22 = 0;\n    let mut total_gpa_sum23 = 0;\n \
    \   let mut total_gpa_sum24 = 0;\n    let mut total_gpa_sum25 = 0;\n    let mut\
    \ total_gpa_sum26 = 0;\n    let mut total_gpa_sum27 = 0;\n    let mut total_gpa_sum28\
    \ = 0;\n    let mut total_gpa_sum29 = 0;\n    let mut total_gpa_sum30 = 0;\n \
    \   let mut total_gpa_sum31 = 0;\n    let mut total_gpa_sum32 = 0;\n    let mut\
    \ total_gpa_sum33 = 0;\n    let mut total_gpa_sum34 = 0;\n    let mut total_gpa_sum35\
    \ = 0;\n    let mut total_gpa_sum36 = 0;\n    let mut total_gpa_sum37 = 0;\n \
    \   let mut total_gpa_sum38 = 0;\n    let mut total_gpa_sum39 = 0;\n    let mut\
    \ total_gpa_sum40 = 0;\n    let mut total_gpa_sum41 = 0;\n    let mut total_gpa_sum42\
    \ = 0;\n    let mut total_gpa_sum43 = 0;\n    let mut total_gpa_sum44 = 0;\n \
    \   let mut total_gpa_sum45 = 0;\n    let mut total_gpa_sum46 = 0;\n    let mut\
    \ total_gpa_sum47 = 0;\n    let mut total_gpa_sum48 = 0;\n", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut total_grade\
    \ = grades_copy.iter().sum();\n    let mut total_letter_grade = String::from(\"\
    E\");\n    while total_grade > 0.0 {\n        let mut grade = grades_copy.iter().sum();\n\
    \        if grade > total_grade {\n            grade = total_grade;\n        }\n\
    \        let mut letter_grade = String::from(\"E\");\n        if grade > 3.0 {\n\
    \            letter_grade = String::from(\"A+\");\n        } else if grade > 2.0\
    \ {\n            letter_grade = String::from(\"A\");\n        } else if grade\
    \ > 1.0 {\n            letter_grade = String::from(\"A-\");\n        } else if\
    \ grade > 0.7 {\n            letter_grade = String::from(\"B+\");\n        } else\
    \ if grade > 0.3 {\n            letter_grade = String::from(\"B\");\n        }\
    \ else if grade > 0.1 {\n            letter_grade = String::from(\"B-\");\n  \
    \      } else if grade > 0.0 {\n            letter_grade = String::from(\"C+\"\
    );\n        } else if grade > -0.1 {\n            letter_grade = String::from(\"\
    C\");\n        } else if grade > -0.3 {\n            letter_grade = String::from(\"\
    C-\");\n        } else if grade > -0.7 {\n            letter_grade = String::from(\"\
    D+\");\n        } else if grade > -1.0 {\n            letter_grade = String::from(\"\
    D\");\n        } else if grade > -2.0 {\n            letter_grade = String::from(\"\
    D-\");\n        } else {\n            letter_grade = String::from(\"F\");\n  \
    \      }\n        letter_grades.push(letter_grade);\n        total_grade -= grade;\n\
    \    }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut total_grade = 0.0;\n    let mut total_letter_grade\
    \ = 0.0;\n    let mut total_letter_grades = 0.0;\n    let mut total_letter_grades_sum\
    \ = 0.0;\n    let mut total_letter_grades_product = 0.0;\n    let mut total_letter_grades_products\
    \ = 0.0;\n    let mut total_letter_grades_products_sum = 0.0;\n    let mut total_letter_grades_products_product\
    \ = 0.0;\n    let mut total_letter_grades_products_products = 0.0;\n    let mut\
    \ total_letter_grades_products_products_sum = 0.0;\n    let mut total_letter_grades_products_products_product\
    \ = 0.0;\n    let mut total_letter_grades_products_products_products = 0.0;\n\
    \    let mut total_letter_grades_products_products_products_sum = 0.0;\n    let\
    \ mut total_letter_grades_products_products_products_product = 0.0;\n    let mut\
    \ total_letter_grades_products_products_products_products = 0.0;\n    let mut\
    \ total_letter_grades_products_products_products_products_sum = 0.0;\n    let\
    \ mut total_letter_grades_products_products_products_products_product = 0.0;\n\
    \    let mut total_letter_grades_products_products_products_products_products\
    \ = 0.0;\n    let mut total_letter_grades_products_products_products_products_products_sum\
    \ = 0.0;\n    let mut total_letter_grades_products_products_products_products_products_product\
    \ = 0.0;\n    let mut total_letter_grades_products_products_products_products_products_products\
    \ = 0.0;\n    let mut total_letter_grades_products_products_products_products_products_products_sum\
    \ = 0.0;\n    let mut total_letter_grades_products_products_products_products_products_products_product\
    \ = 0.0;\n    let mut total_letter_grades_products_products_products_products_products_products_products\
    \ = 0.0;\n    let mut total_letter_grades_products_products_products_products_products_products_products_sum\
    \ = 0.0;\n    let mut total_letter_grades_products_products_products_products_products_products_products_product\
    \ = 0.0;\n    let mut total_letter_grades_products_products_products_products_products_products_products_products_products\
    \ = 0.0;\n    let mut total_letter_grades_products_products_products_products_products_products_products_products_",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy[0];\n    for\
    \ grade in grades_copy {\n        if grade > current_grade {\n            letter_grades.push(String::from(\"\
    A+\"));\n            current_grade = grade;\n        } else if grade < current_grade\
    \ {\n            letter_grades.push(String::from(\"A-\"));\n            current_grade\
    \ = grade;\n        } else {\n            letter_grades.push(String::from(\"B+\"\
    ));\n            current_grade = grade;\n        }\n    }\n    letter_grades.push(String::from(\"\
    E\"));\n    letter_grades", "    let mut grades_vec: Vec<String> = vec![];\n \
    \   let mut min_grade: f64 = grades.iter().min().unwrap();\n    let mut max_grade:\
    \ f64 = grades.iter().max().unwrap();\n    let mut min_grade_index: usize = 0;\n\
    \    let mut max_grade_index: usize = 0;\n    let mut min_grade_index2: usize\
    \ = 0;\n    let mut max_grade_index2: usize = 0;\n    let mut min_grade_index3:\
    \ usize = 0;\n    let mut max_grade_index3: usize = 0;\n    let mut min_grade_index4:\
    \ usize = 0;\n    let mut max_grade_index4: usize = 0;\n    let mut min_grade_index5:\
    \ usize = 0;\n    let mut max_grade_index5: usize = 0;\n    let mut min_grade_index6:\
    \ usize = 0;\n    let mut max_grade_index6: usize = 0;\n    let mut min_grade_index7:\
    \ usize = 0;\n    let mut max_grade_index7: usize = 0;\n    let mut min_grade_index8:\
    \ usize = 0;\n    let mut max_grade_index8: usize = 0;\n    let mut min_grade_index9:\
    \ usize = 0;\n    let mut max_grade_index9: usize = 0;\n    let mut min_grade_index10:\
    \ usize = 0;\n    let mut max_grade_index10: usize = 0;\n    let mut min_grade_index11:\
    \ usize = 0;\n    let mut max_grade_index11: usize = 0;\n    let mut min_grade_index12:\
    \ usize = 0;\n    let mut max_grade_index12: usize = 0;\n    let mut min_grade_index13:\
    \ usize = 0;\n    let mut max_grade_index13: usize = 0;\n    let mut min_grade_index14:\
    \ usize = 0;\n    let mut max_grade_index14: usize = 0;\n    let mut min_grade_index15:\
    \ usize = 0;\n    let mut max_grade_index15: usize = 0;\n    let mut min_grade_index16:\
    \ usize = 0;\n    let mut max_grade_index16: usize = 0;\n    let mut min_grade_index17:\
    \ usize = 0;\n    let mut max_grade_index17: usize = 0;\n    let mut min_grade_index18:\
    \ usize = 0;\n    let mut max_grade_index18: usize = 0;\n    let mut min_grade_index19:\
    \ usize = 0;\n    let mut max_grade_index19: usize = 0;\n    let mut min_grade_index20:\
    \ usize = 0;\n    let mu", "    let mut grades_copy = grades.clone();\n    let\
    \ mut letter_grades = vec![];\n    let mut min_grade = grades_copy[0];\n    let\
    \ mut max_grade = grades_copy[0];\n    let mut current_grade = grades_copy[0];\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    for grade in grades_copy\
    \ {\n        if grade < min_grade {\n            min_grade = grade;\n        }\n\
    \        if grade > max_grade {\n            max_grade = grade;\n        }\n \
    \   }\n    for grade in grades_copy {\n        if grade < min_grade {\n      \
    \      current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        }\n        if grade > max_grade {\n            current_grade =\
    \ grade;\n            current_letter_grade = String::from(\"E\");\n        }\n\
    \        if grade == min_grade {\n            current_letter_grade = String::from(\"\
    A\");\n        }\n        if grade == max_grade {\n            current_letter_grade\
    \ = String::from(\"D\");\n        }\n        if grade < current_grade {\n    \
    \        current_letter_grade = String::from(\"A-\");\n        }\n        if grade\
    \ > current_grade {\n            current_letter_grade = String::from(\"B-\");\n\
    \        }\n        if grade == current_grade {\n            current_letter_grade\
    \ = String::from(\"B-\");\n        }\n        letter_grades.push(current_letter_grade);\n\
    \    }\n    letter_grades", "    let mut grades_sorted = grades.iter().cloned().collect::<Vec<_>>();\n\
    \    grades_sorted.sort_unstable();\n    let mut letter_grades = vec![];\n   \
    \ let mut current_grade = grades_sorted[0];\n    let mut current_grade_index =\
    \ 0;\n    for grade in grades_sorted {\n        if grade > current_grade {\n \
    \           current_grade = grade;\n            current_grade_index = 0;\n   \
    \     }\n        if grade == current_grade {\n            current_grade_index\
    \ += 1;\n        }\n        if current_grade_index == 2 {\n            letter_grades.push(String::from(current_grade.to_string()));\n\
    \            current_grade_index = 0;\n            current_grade = grade;\n  \
    \      }\n    }\n    letter_grades.push(String::from(current_grade.to_string()));\n\
    \    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut letter_grades\
    \ = vec![];\n    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else {\n            current_letter_grade += String::from(\"-\"\
    );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n", "    let mut grades_sorted = grades.iter().cloned().collect::<Vec<f64>>();\n\
    \    grades_sorted.sort_unstable();\n    let mut letter_grades = vec![];\n   \
    \ for grade in grades_sorted {\n        if grade < 3.0 {\n            letter_grades.push(String::from(\"\
    A+\"));\n        } else if grade < 3.3 {\n            letter_grades.push(String::from(\"\
    A\"));\n        } else if grade < 3.7 {\n            letter_grades.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            letter_grades.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else if grade < 7.0 {\n            letter_grades.push(String::from(\"\
    E\"));\n        } else {\n            letter_grades.push(String::from(\"F\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_string = Vec::new();\n\
    \    for grade in grades {\n        if grade > 3.0 {\n            grades_string.push(\"\
    B+\");\n        } else if grade > 2.7 {\n            grades_string.push(\"B\"\
    );\n        } else if grade > 2.3 {\n            grades_string.push(\"B-\");\n\
    \        } else if grade > 2.0 {\n            grades_string.push(\"C+\");\n  \
    \      } else if grade > 1.7 {\n            grades_string.push(\"C\");\n     \
    \   } else if grade > 1.3 {\n            grades_string.push(\"C-\");\n       \
    \ } else if grade > 1.0 {\n            grades_string.push(\"D+\");\n        }\
    \ else if grade > 0.7 {\n            grades_string.push(\"D\");\n        } else\
    \ if grade > 0.0 {\n            grades_string.push(\"D-\");\n        } else {\n\
    \            grades_string.push(\"E\");\n        }\n    }\n    grades_string",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort_unstable();\n \
    \   let mut letter_grades = vec![];\n    let mut grade = grades_copy[0];\n   \
    \ let mut grades_remaining = grades_copy.clone();\n    while grade > 0.0 {\n \
    \       let mut letter_grade = String::from(\"E\");\n        if grade > 3.0 {\n\
    \            letter_grade = String::from(\"D-\");\n        } else if grade > 2.0\
    \ {\n            letter_grade = String::from(\"C-\");\n        } else if grade\
    \ > 1.0 {\n            letter_grade = String::from(\"B-\");\n        } else if\
    \ grade > 0.7 {\n            letter_grade = String::from(\"B-\");\n        } else\
    \ if grade > 0.3 {\n            letter_grade = String::from(\"B-\");\n       \
    \ } else if grade > 0.1 {\n            letter_grade = String::from(\"B-\");\n\
    \        } else if grade > 0.01 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.001 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0001 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.00001 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.000001 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0000001 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.00000001 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.000000001 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0000000001 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.00000000001 {\n            letter_grade =\
    \ String::from(\"B-\");\n        } else if grade > 0.000000000001 {\n        \
    \    letter_grade = String::from(\"B-\");\n        } else if grade > 0.0000000000001\
    \ {\n            letter_grade = String::from(\"B-\");\n        } else if grade\
    \ > 0.00000000000001 {\n            letter_grade = String::from(\"B-\");\n   \
    \     } else if grade > 0.000000000000001 {\n            letter_grade = String::from(\"\
    B-\");\n        } else if grade > 0.0000000000000001 {\n            letter_grade\
    \ = String::from(\"B-\");\n        } else if gra", "    let mut grades_iter =\
    \ grades.iter();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_iter.next().unwrap();\n    let mut current_letter_grade = String::from(\"\
    E\");\n    while let Some(grade) = grades_iter.next() {\n        if grade > current_grade\
    \ {\n            letter_grades.push(current_letter_grade);\n            current_grade\
    \ = grade;\n            current_letter_grade = String::from(\"E\");\n        }\
    \ else if grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else {\n            current_letter_grade += String::from(\"-\"\
    );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades"]
stop_tokens:
- "\n}"

name: HumanEval_81_numerical_letter_grade
language: rs
prompt: "/// It is the last week of the semester and the teacher has to give the grades\n\
  /// to students. The teacher has been making her own algorithm for grading.\n///\
  \ The only problem is, she has lost the code she used for grading.\n/// She has\
  \ given you a list of GPAs for some students and you have to write \n/// a function\
  \ that can output a list of letter grades using the following table:\n/// GPA  \
  \     |    Letter grade\n/// 4.0                A+\n/// > 3.7                A \n\
  /// > 3.3                A- \n/// > 3.0                B+\n/// > 2.7           \
  \     B \n/// > 2.3                B-\n/// > 2.0                C+\n/// > 1.7  \
  \              C\n/// > 1.3                C-\n/// > 1.0                D+ \n///\
  \ > 0.7                D \n/// > 0.0                D-\n/// 0.0                E\n\
  /// Example:\n/// >>> grade_equation(vec![4.0, 3, 1.7, 2, 3.5])\n/// vec![String::from(\"\
  A+\"), String::from(\"B\"), String::from(\"C-\"), String::from(\"C\"), String::from(\"\
  A-\")]\nfn numerical_letter_grade(grades: Vec<f64>) -> Vec<String> {\n"
tests: "}\n\nfn main() {\n    let candidate = numerical_letter_grade;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n}\n"
completions: ["    let mut grades_vec: Vec<String> = vec![];\n    let mut total_grade:\
    \ f64 = 0.0;\n    for grade in grades {\n        total_grade += grade;\n     \
    \   grades_vec.push(String::from(format!(\"{}+\", total_grade)));\n    }\n   \
    \ for grade in grades {\n        if grade > total_grade {\n            grades_vec.push(String::from(format!(\"\
    {}\", grade)));\n        } else {\n            grades_vec.push(String::from(format!(\"\
    {}-\", grade)));\n        }\n    }\n    grades_vec", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy.first();\n    let mut current_letter_grade = String::from(\"E\"\
    );\n    for grade in grades_copy {\n        if grade < current_grade {\n     \
    \       letter_grades.push(current_letter_grade);\n            current_letter_grade\
    \ = String::from(\"E\");\n            current_grade = grade;\n        } else if\
    \ grade == current_grade {\n            current_letter_grade += String::from(\"\
    +\");\n        } else {\n            current_letter_grade += String::from(\"-\"\
    );\n        }\n    }\n    letter_grades.push(current_letter_grade);\n    letter_grades",
  "    let mut grades_iter = grades.iter();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_iter.next();\n    while let Some(grade) =\
    \ current_grade {\n        let mut letter_grade = String::from(\"\");\n      \
    \  if grade > 3.0 {\n            letter_grade += String::from(\"+\");\n      \
    \  }\n        if grade > 2.7 {\n            letter_grade += String::from(\"A\"\
    );\n        }\n        if grade > 2.3 {\n            letter_grade += String::from(\"\
    A-\");\n        }\n        if grade > 2.0 {\n            letter_grade += String::from(\"\
    B+\");\n        }\n        if grade > 1.7 {\n            letter_grade += String::from(\"\
    B\");\n        }\n        if grade > 1.3 {\n            letter_grade += String::from(\"\
    B-\");\n        }\n        if grade > 1.0 {\n            letter_grade += String::from(\"\
    C+\");\n        }\n        if grade > 0.7 {\n            letter_grade += String::from(\"\
    C\");\n        }\n        if grade > 0.3 {\n            letter_grade += String::from(\"\
    C-\");\n        }\n        if grade > 0.0 {\n            letter_grade += String::from(\"\
    D+\");\n        }\n        if grade > 0.0 {\n            letter_grade += String::from(\"\
    D\");\n        }\n        if grade > 0.0 {\n            letter_grade += String::from(\"\
    D-\");\n        }\n        if grade > 0.0 {\n            letter_grade += String::from(\"\
    E\");\n        }\n        letter_grades.push(letter_grade);\n        current_grade\
    \ = grades_iter.next();\n    }\n    letter_grades", "    let mut grades_copy =\
    \ grades.clone();\n    let mut letter_grades = vec![];\n    let mut current_grade\
    \ = grades_copy[0];\n    let mut current_letter_grade = String::from(\"E\");\n\
    \    let mut current_letter_grade_index = -1;\n    let mut current_gpa : f64 =\
    \ grades_copy[0];\n    let mut current_gpa_numerator = grades_copy[0];\n    let\
    \ mut current_gpa_denominator = grades_copy[0];\n    let mut current_gpa_numerator_denominator\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mut current_gpa_numerator_denominator_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier_multiplier\
    \ = grades_copy[0];\n    let mu", "    let mut grades_vec: Vec<String> = vec![];\n\
    \    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n", "    let mut grades_vec: Vec<String>\
    \ = vec![];\n    for grade in grades {\n        let grade = grade as f64;\n  \
    \      if grade < 3.0 {\n            grades_vec.push(String::from(\"A+\"));\n\
    \        } else if grade < 3.3 {\n            grades_vec.push(String::from(\"\
    A\"));\n        } else if grade < 3.7 {\n            grades_vec.push(String::from(\"\
    A-\"));\n        } else if grade < 4.0 {\n            grades_vec.push(String::from(\"\
    B+\"));\n        } else if grade < 4.3 {\n            grades_vec.push(String::from(\"\
    B\"));\n        } else if grade < 4.7 {\n            grades_vec.push(String::from(\"\
    B-\"));\n        } else if grade < 5.0 {\n            grades_vec.push(String::from(\"\
    C+\"));\n        } else if grade < 5.3 {\n            grades_vec.push(String::from(\"\
    C\"));\n        } else if grade < 5.7 {\n            grades_vec.push(String::from(\"\
    C-\"));\n        } else if grade < 6.0 {\n            grades_vec.push(String::from(\"\
    D+\"));\n        } else if grade < 6.3 {\n            grades_vec.push(String::from(\"\
    D\"));\n        } else if grade < 6.7 {\n            grades_vec.push(String::from(\"\
    D-\"));\n        } else if grade < 7.0 {\n            grades_vec.push(String::from(\"\
    E\"));\n        } else {\n            grades_vec.push(String::from(\"F\"));\n\
    \        }\n    }\n    grades_vec", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort_unstable();\n    let mut grades_iter = grades_copy.iter().cloned();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    loop {\n       \
    \ if current_grade < 0.0 {\n            break;\n        }\n        let mut current_letter_grade\
    \ = String::from(current_letter_grade);\n        if current_grade < 3.0 {\n  \
    \          current_letter_grade = String::from(\"A\");\n        } else if current_grade\
    \ < 4.0 {\n            current_letter_grade = String::from(\"B\");\n        }\
    \ else if current_grade < 5.0 {\n            current_letter_grade = String::from(\"\
    C\");\n        } else if current_grade < 6.0 {\n            current_letter_grade\
    \ = String::from(\"D\");\n        } else if current_grade < 7.0 {\n          \
    \  current_letter_grade = String::from(\"E\");\n        }\n        letter_grades.push(current_letter_grade);\n\
    \        current_grade = grades_iter.next().unwrap();\n    }\n    letter_grades",
  "    let mut grades_iter = grades.iter();\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grade: f64;\n    let mut grades_sum: f64 = 0.0;\n    let\
    \ mut grades_count: usize = 0;\n    loop {\n        grade = grades_iter.next().unwrap();\n\
    \        grades_sum += grade;\n        grades_count += 1;\n        if grades_count\
    \ == 5 {\n            grades_vec.push(String::from(\"D+\"));\n            grades_sum\
    \ -= 4.0;\n            grades_count = 0;\n        } else if grades_count == 4\
    \ {\n            grades_vec.push(String::from(\"D\"));\n            grades_sum\
    \ -= 3.7;\n            grades_count = 0;\n        } else if grades_count == 3\
    \ {\n            grades_vec.push(String::from(\"C\"));\n            grades_sum\
    \ -= 3.3;\n            grades_count = 0;\n        } else if grades_count == 2\
    \ {\n            grades_vec.push(String::from(\"B\"));\n            grades_sum\
    \ -= 2.7;\n            grades_count = 0;\n        } else if grades_count == 1\
    \ {\n            grades_vec.push(String::from(\"A\"));\n            grades_sum\
    \ -= 2.3;\n            grades_count = 0;\n        } else if grades_count == 0\
    \ {\n            grades_vec.push(String::from(\"E\"));\n            grades_sum\
    \ -= 1.0;\n            grades_count = 0;\n        }\n        if grades_sum < 0.0\
    \ {\n            break;\n        }\n    }\n    grades_vec", "    let mut grades_copy\
    \ = grades.clone();\n    let mut letter_grades = vec![];\n    let mut total_grade\
    \ = grades_copy[0];\n    for grade in grades_copy {\n        if grade > total_grade\
    \ {\n            total_grade = grade;\n        }\n    }\n    for grade in grades_copy\
    \ {\n        if grade == total_grade {\n            letter_grades.push(String::from(\"\
    D+\"));\n        }\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    D\"));\n        }\n        if grade > total_grade {\n            letter_grades.push(String::from(\"\
    D-\"));\n        }\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    C\"));\n        }\n        if grade > total_grade {\n            letter_grades.push(String::from(\"\
    C+\"));\n        }\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > total_grade {\n            letter_grades.push(String::from(\"\
    B\"));\n        }\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    B-\"));\n        }\n        if grade > total_grade {\n            letter_grades.push(String::from(\"\
    B+\"));\n        }\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    A-\"));\n        }\n        if grade > total_grade {\n            letter_grades.push(String::from(\"\
    A\"));\n        }\n        if grade < total_grade {\n            letter_grades.push(String::from(\"\
    A+\"));\n        }\n    }\n    letter_grades", "    let mut grades_iter = grades.iter();\n\
    \    let mut letter_grades = vec![];\n    let mut current_grade = grades_iter.next().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    let mut current_letter_grade_index\
    \ = 0;\n    while current_grade != 0.0 {\n        if current_grade < current_grade.floor()\
    \ {\n            current_letter_grade = String::from(&\"E\");\n            current_letter_grade_index\
    \ = 0;\n        }\n        let current_letter_grade_index = (current_letter_grade_index\
    \ + 1) % (26);\n        let current_letter_grade = String::from(&\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    .chars()\n            .filter(|c| c.to_ascii_lowercase() == current_letter_grade.to_ascii_lowercase())\n\
    \            .next().unwrap());\n        letter_grades.push(current_letter_grade);\n\
    \        current_grade = grades_iter.next().unwrap();\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy.pop().unwrap();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    while grades_copy.len() > 0 {\n        let mut current_grade\
    \ = grades_copy.pop().unwrap();\n        if current_grade < current_grade {\n\
    \            current_letter_grade = String::from(\"D-\");\n        } else if current_grade\
    \ > current_grade {\n            current_letter_grade = String::from(\"D+\");\n\
    \        } else {\n            current_letter_grade = String::from(\"D\");\n \
    \       }\n        letter_grades.push(current_letter_grade);\n    }\n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    let mut letter_grades = vec![];\n\
    \    let mut current_grade = grades_copy[0];\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades_copy {\n        if grade > current_grade\
    \ {\n            current_letter_grade = String::from(\"E\");\n            current_grade\
    \ = grade;\n        } else if grade == current_grade {\n            current_letter_grade\
    \ = String::from(\n                match grade {\n                    4.0 => \"\
    A+\",\n                    3.7 => \"A\",\n                    3.3 => \"A-\",\n\
    \                    3.0 => \"B+\",\n                    2.7 => \"B\",\n     \
    \               2.3 => \"B-\",\n                    2.0 => \"C+\",\n         \
    \           1.7 => \"C\",\n                    1.3 => \"C-\",\n              \
    \      1.0 => \"D+\",\n                    0.7 => \"D\",\n                   \
    \ 0.0 => \"D-\",\n                    0.0 => \"E\",\n                }\n     \
    \       );\n        }\n        letter_grades.push(current_letter_grade);\n   \
    \ }\n    letter_grades", "    let mut grades_copy = grades.clone();\n    let mut\
    \ letter_grades = vec![];\n    let mut current_grade = grades_copy.pop().unwrap();\n\
    \    let mut current_letter_grade = String::from(\"E\");\n    \n    while grades_copy.len()\
    \ > 0 {\n        let mut current_grade = grades_copy.pop().unwrap();\n       \
    \ let mut current_letter_grade = String::from(\"E\");\n        \n        if current_grade\
    \ < current_grade {\n            current_letter_grade = String::from(\"D-\");\n\
    \        } else if current_grade < current_grade + 0.3 {\n            current_letter_grade\
    \ = String::from(\"D+\");\n        } else if current_grade < current_grade + 0.5\
    \ {\n            current_letter_grade = String::from(\"D\");\n        } else if\
    \ current_grade < current_grade + 0.7 {\n            current_letter_grade = String::from(\"\
    C-\");\n        } else if current_grade < current_grade + 0.9 {\n            current_letter_grade\
    \ = String::from(\"C\");\n        } else if current_grade < current_grade + 1.1\
    \ {\n            current_letter_grade = String::from(\"B-\");\n        } else\
    \ if current_grade < current_grade + 1.3 {\n            current_letter_grade =\
    \ String::from(\"B\");\n        } else if current_grade < current_grade + 1.5\
    \ { \n            current_letter_grade = String::from(\"A-\");\n        } else\
    \ if current_grade < current_grade + 1.7 {\n            current_letter_grade =\
    \ String::from(\"A\");\n        } else if current_grade < current_grade + 1.9\
    \ {\n            current_letter_grade = String::from(\"A+\");\n        } else\
    \ {\n            current_letter_grade = String::from(\"A\");\n        }\n    \
    \    \n        letter_grades.push(current_letter_grade);\n    }\n    \n    letter_grades",
  "    let mut grades_copy = grades.clone();\n    grades_copy.sort_unstable();\n \
    \   let mut grades_sorted = grades_copy.clone();\n    grades_sorted.reverse();\n\
    \    let mut grades_reversed = grades_sorted.clone();\n    grades_reversed.reverse();\n\
    \    let mut grades_reversed_copy = grades_reversed.clone();\n    grades_reversed_copy.pop();\n\
    \    let mut grades_reversed_sorted = grades_reversed_copy.clone();\n    grades_reversed_sorted.pop();\n\
    \    let mut grades_reversed_reversed = grades_reversed_sorted.clone();\n    grades_reversed_reversed.pop();\n\
    \    let mut grades_reversed_reversed_copy = grades_reversed_reversed.clone();\n\
    \    grades_reversed_reversed_copy.pop();\n    let mut grades_reversed_reversed_sorted\
    \ = grades_reversed_reversed_copy.clone();\n    grades_reversed_reversed_sorted.pop();\n\
    \    let mut grades_reversed_reversed_reversed = grades_reversed_reversed_sorted.clone();\n\
    \    grades_reversed_reversed_reversed.pop();\n    let mut grades_reversed_reversed_reversed_copy\
    \ = grades_reversed_reversed_reversed.clone();\n    grades_reversed_reversed_reversed_copy.pop();\n\
    \    let mut grades_reversed_reversed_reversed_sorted = grades_reversed_reversed_reversed_copy.clone();\n\
    \    grades_reversed_reversed_reversed_sorted.pop();\n    let mut grades_reversed_reversed_reversed_reversed\
    \ = grades_reversed_reversed_reversed_sorted.clone();\n    grades_reversed_reversed_reversed_reversed.pop();\n\
    \    let mut grades_reversed_reversed_reversed_reversed_copy = grades_reversed_reversed_reversed_reversed.clone();\n\
    \    grades_reversed_reversed_reversed_reversed_copy.pop();\n    let mut grades_reversed_reversed_reversed_reversed_sorted\
    \ = grades_reversed_reversed_reversed_reversed_copy.clone();\n    grades_reversed_reversed_reversed_reversed_sorted.pop();\n\
    \    let mut grades_reversed_reversed_reversed_reversed_reversed = grades_reversed_reversed_reversed_reversed_sorted.clone();\n\
    \    grades_reversed_reversed_reversed_reversed_reversed.pop();\n    let mut grades_reversed_reversed_reversed_reversed_reversed_copy\
    \ = grades_reversed_reversed_reversed_reversed_reversed.clone();\n    grades_reversed_reversed_reversed_reverse",
  "    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String>\
    \ = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    let mut grades_vec: Vec<String> = vec![];\n    let\
    \ mut grades_vec: Vec<String> = vec![];\n    let mut grades_vec: Vec<String> =\
    \ vec![];\n", "    let mut letter_grades = vec![];\n    for grade in grades {\n\
    \        if grade > 3.0 {\n            letter_grades.push(String::from(\"B+\"\
    ));\n        } else if grade > 2.7 {\n            letter_grades.push(String::from(\"\
    B\"));\n        } else if grade > 2.3 {\n            letter_grades.push(String::from(\"\
    B-\"));\n        } else if grade > 2.0 {\n            letter_grades.push(String::from(\"\
    C+\"));\n        } else if grade > 1.7 {\n            letter_grades.push(String::from(\"\
    C\"));\n        } else if grade > 1.3 {\n            letter_grades.push(String::from(\"\
    C-\"));\n        } else if grade > 1.0 {\n            letter_grades.push(String::from(\"\
    D+\"));\n        } else if grade > 0.7 {\n            letter_grades.push(String::from(\"\
    D\"));\n        } else if grade > 0.0 {\n            letter_grades.push(String::from(\"\
    D-\"));\n        } else {\n            letter_grades.push(String::from(\"E\"));\n\
    \        }\n    }\n    letter_grades", "    let mut grades_vec: Vec<String> =\
    \ vec![];\n    let mut min_grade: f64 = grades.iter().min().unwrap();\n    let\
    \ mut max_grade: f64 = grades.iter().max().unwrap();\n    let mut min_grade_index:\
    \ usize = 0;\n    let mut max_grade_index: usize = 0;\n    let mut grades_vec:\
    \ Vec<String> = vec![];\n    for grade in grades {\n        if grade < min_grade\
    \ {\n            min_grade = grade;\n            min_grade_index = grades.iter().position(|x|\
    \ x == min_grade).unwrap();\n        }\n        if grade > max_grade {\n     \
    \       max_grade = grade;\n            max_grade_index = grades.iter().position(|x|\
    \ x == max_grade).unwrap();\n        }\n    }\n    grades_vec.push(String::from(grades[min_grade_index]));\n\
    \    for grade in grades.iter().skip(min_grade_index + 1) {\n        grades_vec.push(String::from(grades[grade]));\n\
    \    }\n    grades_vec.push(String::from(grades[max_grade_index]));\n    grades_vec",
  "    let mut letter_grades = vec![];\n    let mut min_grade = grades.iter().min().unwrap();\n\
    \    let mut max_grade = grades.iter().max().unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().position(|x| x == min_grade).unwrap();\n    let mut max_grade_index\
    \ = grades.iter().position(|x| x == max_grade).unwrap();\n    let mut min_grade_index\
    \ = grades.iter().", "    let mut letter_grades = vec![];\n    let mut total_grade\
    \ = grades.iter().sum();\n    let mut total_letter_grade = String::from(\"E\"\
    );\n    let mut current_grade = grades.iter().sum();\n    let mut current_letter_grade\
    \ = String::from(\"E\");\n    for grade in grades {\n        if grade > total_grade\
    \ {\n            total_grade = grade;\n            total_letter_grade = current_letter_grade;\n\
    \            current_grade = grade;\n            current_letter_grade = String::from(\"\
    E\");\n        } else if grade < total_grade {\n            current_letter_grade\
    \ = current_letter_grade.chars().enumerate().filter(|&(i, _)| {\n            \
    \    i == 0 || grade < current_grade\n            }).map(|&(i, _)| {\n       \
    \         let grade = grade - current_grade;\n                let letter_grade\
    \ = if grade < 0.0 {\n                    \"D-\"\n                } else if grade\
    \ < 0.3 {\n                    \"C-\"\n                } else if grade < 0.6 {\n\
    \                    \"B-\"\n                } else if grade < 0.8 {\n       \
    \             \"B-\"\n                } else if grade < 1.0 {\n              \
    \      \"A-\"\n                } else if grade < 1.3 {\n                    \"\
    A-\"\n                } else if grade < 1.6 {\n                    \"A-\"\n  \
    \              } else if grade < 1.8 {\n                    \"A-\"\n         \
    \       } else if grade < 2.0 {\n                    \"A-\"\n                }\
    \ else if grade < 2.3 {\n                    \"A-\"\n                } else if\
    \ grade < 2.6 {\n                    \"A-\"\n                } else if grade <\
    \ 2.8 {\n                    \"A-\"\n                } else if grade < 3.0 {\n\
    \                    \"A-\"\n                } else if grade < 3.3 {\n       \
    \             \"A-\"\n                } else if grade < 3.6 {\n              \
    \      \"A-\"\n                } else if grade < 3.8 {\n                    \"\
    A-\"\n                } else if grade < 4.0 {\n                    \"A-\"\n  \
    \              } else if grade < 4.3 {\n                    \"A-\"\n         \
    \       } else if grade < 4.6 {\n                    \"A-\"\n                }\
    \ else if grade < 4.8 {\n                    \"A-\"\n                } else if\
    \ grade < 5.0 {\n                    \"A-\"\n                } else if grade <\
    \ 5.3 {\n                    \"A-\"\n                } else if grade < 5.6 {\n\
    \                    \"A-\"\n                } else if grade < 5.8 {\n       \
    \             \"A-\"\n                } else if grade < 6.0 {\n              \
    \      \"A-\"\n                ", "    let mut grades_copy = grades.clone();\n\
    \    grades_copy.sort();\n    let mut grades_copy = grades_copy.clone();\n   \
    \ let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n\
    \    let mut grades_copy = grades_copy.clone();\n    let mut grades_copy = grades_copy.clone();\n"]
stop_tokens:
- "\n}"

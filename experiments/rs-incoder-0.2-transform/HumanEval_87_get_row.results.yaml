language: rs
name: HumanEval_87_get_row
results:
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut result = Vec::new();\n    for row in lst {\n        let mut row_result\
    \ = Vec::new();\n        for cell in row.iter() {\n            if cell == x {\n\
    \                row_result.push((cell.0, cell.1));\n            }\n        }\n\
    \        result.push(row_result);\n    }\n    result.sort_by_key(|&(_, y)| y.iter().rev().cloned());\n\
    \    result.sort_by_key(|&(_, y)| y.iter().cloned());\n    result\n}\n\nfn main()\
    \ {\n    let candidate = get_row;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfq94fe_r.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfq94fe_r.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfq94fe_r.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfq94fe_r.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfq94fe_r.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfq94fe_r.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfq94fe_r.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfq94fe_r.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfq94fe_r.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfq94fe_r.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfq94fe_r.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut row: Vec<(isize, isize)> = Vec::new();\n    let mut row_idx =\
    \ 0;\n    let mut row_idx2 = 0;\n    let mut row_idx3 = 0;\n    let mut row_idx4\
    \ = 0;\n    let mut row_idx5 = 0;\n    let mut row_idx6 = 0;\n    let mut row_idx7\
    \ = 0;\n    let mut row_idx8 = 0;\n    let mut row_idx9 = 0;\n    let mut row_idx10\
    \ = 0;\n    let mut row_idx11 = 0;\n    let mut row_idx12 = 0;\n    let mut row_idx13\
    \ = 0;\n    let mut row_idx14 = 0;\n    let mut row_idx15 = 0;\n    let mut row_idx16\
    \ = 0;\n    let mut row_idx17 = 0;\n    let mut row_idx18 = 0;\n    let mut row_idx19\
    \ = 0;\n    let mut row_idx20 = 0;\n    let mut row_idx21 = 0;\n    let mut row_idx22\
    \ = 0;\n    let mut row_idx23 = 0;\n    let mut row_idx24 = 0;\n    let mut row_idx25\
    \ = 0;\n    let mut row_idx26 = 0;\n    let mut row_idx27 = 0;\n    let mut row_idx28\
    \ = 0;\n    let mut row_idx29 = 0;\n    let mut row_idx30 = 0;\n    let mut row_idx31\
    \ = 0;\n    let mut row_idx32 = 0;\n    let mut row_idx33 = 0;\n    let mut row_idx34\
    \ = 0;\n    let mut row_idx35 = 0;\n    let mut row_idx36 = 0;\n    let mut row_idx37\
    \ = 0;\n    let mut row_idx38 = 0;\n    let mut row_idx39 = 0;\n    let mut row_idx40\
    \ = 0;\n    let mut row_idx41 = 0;\n    let mut row_idx42 = 0;\n    let mut row_idx43\
    \ = 0;\n    let mut row_idx44 = 0;\n    let mut row_idx45 = 0;\n    let mut row_idx46\
    \ = 0;\n    let mut row_idx47 = 0;\n    let mut row_idx48 = 0;\n    let mut row_idx49\
    \ = 0;\n    let mut row_idx50 = 0;\n    let mut row_idx51 = 0;\n    let mut row_idx52\
    \ = 0;\n    let mut row_idx53 = 0;\n    let mut row_idx54 = 0;\n    let mut row_idx55\
    \ = 0;\n    let mut row_idx56 = 0;\n    let mut row_idx57 = 0;\n    let mut row_idx58\
    \ = 0;\n    let mut row_idx59 = 0;\n    let mut row_idx60 = 0;\n    let mut row_idx61\
    \ = 0;\n    let mut row_idx62 = 0;\n    let mut \n}\n\nfn main() {\n    let candidate\
    \ = get_row;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpfg8h69k4.rs:81:1\n\
    \   |\n81 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpfg8h69k4.rs:85:17\n   |\n85 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpfg8h69k4.rs:85:25\n \
    \  |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfg8h69k4.rs:86:17\n   |\n86 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfg8h69k4.rs:86:25\n   |\n86 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfg8h69k4.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfg8h69k4.rs:87:25\n   |\n87 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfg8h69k4.rs:88:17\n  \
    \ |\n88 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfg8h69k4.rs:88:25\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfg8h69k4.rs:89:17\n   |\n89 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfg8h69k4.rs:89:25\n\
    \   |\n89 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfg8h69k4.rs:90:17\n   |\n90 |     "
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut row = Vec::<(isize, isize)>::new();\n    let mut row_idx = 1;\n\
    \    let mut row_len = lst.len();\n    let mut col_len = lst.first().len();\n\
    \    let mut col_pos = 0;\n    let mut row_pos = 0;\n    let mut col_max = col_len;\n\
    \    let mut row_max = row_len;\n    let mut col_min = col_len;\n    let mut row_min\
    \ = row_len;\n    let mut col_max_idx = col_len;\n    let mut row_max_idx = row_len;\n\
    \    let mut col_min_idx = col_len;\n    let mut row_min_idx = row_len;\n    let\
    \ mut col_max_pos = col_len;\n    let mut row_max_pos = row_len;\n    let mut\
    \ col_min_pos = col_len;\n    let mut row_min_pos = row_len;\n    let mut col_max_idx\
    \ = col_len;\n    let mut row_max_idx = row_len;\n    let mut col_min_idx = col_len;\n\
    \    let mut row_min_idx = row_len;\n    let mut col_max_pos = col_len;\n    let\
    \ mut row_max_pos = row_len;\n    let mut col_min_pos = col_len;\n    let mut\
    \ row_min_pos = row_len;\n    let mut col_max_idx = col_len;\n    let mut row_max_idx\
    \ = row_len;\n    let mut col_min_idx = col_len;\n    let mut row_min_idx = row_len;\n\
    \    let mut col_max_pos = col_len;\n    let mut row_max_pos = row_len;\n    let\
    \ mut col_min_pos = col_len;\n    let mut row_min_pos = row_len;\n    let mut\
    \ col_max_idx = col_len;\n    let mut row_max_idx = row_len;\n    let mut col_min_idx\
    \ = col_len;\n    let mut row_min_idx = row_len;\n    let mut col_max_pos = col_len;\n\
    \    let mut row_max_pos = row_len;\n    let mut col_min_pos = col_len;\n    let\
    \ mut row_min_pos = row_len;\n    let mut col_max_idx = col_len;\n    let mut\
    \ row_max_idx = row_len;\n    let mut col_min_idx = col_len;\n    let mut row_min_idx\
    \ = row_len;\n    let mut col_max_pos = col_len;\n    let mut row_max_pos = row_len;\n\
    \    let mut col_min_pos = col_len;\n    let mut row_min_pos = row_len;\n    let\
    \ mut col_max_idx = col_len;\n    let mut row_max_idx = row_len;\n    let mut\
    \ col_min_idx = col_len;\n    let mut row_min_idx = row_len;\n    let mut col_max_pos\
    \ = col_len;\n    let mut row_max_pos = row_len;\n    let mut col_min_pos = col_len;\n\
    }\n\nfn main() {\n    let candidate = get_row;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbzxrm14g.rs:78:17\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbzxrm14g.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbzxrm14g.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbzxrm14g.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbzxrm14g.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbzxrm14g.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbzxrm14g.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbzxrm14g.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbzxrm14g.rs:82:17\n  \
    \ |\n82 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbzxrm14g.rs:82:25\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbzxrm14g.rs:83:17\n   |\n83 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut row: Vec<(isize, isize)> = vec![];\n    let mut row_idx = 0;\n\
    \    let mut row_idx2 = 0;\n    let mut row_idx3 = 0;\n    let mut row_idx4 =\
    \ 0;\n    let mut row_idx5 = 0;\n    let mut row_idx6 = 0;\n    let mut row_idx7\
    \ = 0;\n    let mut row_idx8 = 0;\n    let mut row_idx9 = 0;\n    let mut row_idx10\
    \ = 0;\n    let mut row_idx11 = 0;\n    let mut row_idx12 = 0;\n    let mut row_idx13\
    \ = 0;\n    let mut row_idx14 = 0;\n    let mut row_idx15 = 0;\n    let mut row_idx16\
    \ = 0;\n    let mut row_idx17 = 0;\n    let mut row_idx18 = 0;\n    let mut row_idx19\
    \ = 0;\n    let mut row_idx20 = 0;\n    let mut row_idx21 = 0;\n    let mut row_idx22\
    \ = 0;\n    let mut row_idx23 = 0;\n    let mut row_idx24 = 0;\n    let mut row_idx25\
    \ = 0;\n    let mut row_idx26 = 0;\n    let mut row_idx27 = 0;\n    let mut row_idx28\
    \ = 0;\n    let mut row_idx29 = 0;\n    let mut row_idx30 = 0;\n    let mut row_idx31\
    \ = 0;\n    let mut row_idx32 = 0;\n    let mut row_idx33 = 0;\n    let mut row_idx34\
    \ = 0;\n    let mut row_idx35 = 0;\n    let mut row_idx36 = 0;\n    let mut row_idx37\
    \ = 0;\n    let mut row_idx38 = 0;\n    let mut row_idx39 = 0;\n    let mut row_idx40\
    \ = 0;\n    let mut row_idx41 = 0;\n    let mut row_idx42 = 0;\n    let mut row_idx43\
    \ = 0;\n    let mut row_idx44 = 0;\n    let mut row_idx45 = 0;\n    let mut row_idx46\
    \ = 0;\n    let mut row_idx47 = 0;\n    let mut row_idx48 = 0;\n    let mut row_idx49\
    \ = 0;\n    let mut row_idx50 = 0;\n    let mut row_idx51 = 0;\n    let mut row_idx52\
    \ = 0;\n    let mut row_idx53 = 0;\n    let mut row_idx54 = 0;\n    let mut row_idx55\
    \ = 0;\n    let mut row_idx56 = 0;\n    let mut row_idx57 = 0;\n    let mut row_idx58\
    \ = 0;\n    let mut row_idx59 = 0;\n    let mut row_idx60 = 0;\n    let mut row_idx61\
    \ = 0;\n    let mut row_idx62 = 0;\n    let mut row_\n}\n\nfn main() {\n    let\
    \ candidate = get_row;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpd_sw5tnh.rs:80:17\n   |\n\
    80 |     let mut row_\n   |                 ^ help: add `;` here\n81 | }\n   |\
    \ - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd_sw5tnh.rs:85:17\n   |\n85 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd_sw5tnh.rs:85:25\n   |\n85 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd_sw5tnh.rs:86:17\n   |\n86 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd_sw5tnh.rs:86:25\n   |\n86 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd_sw5tnh.rs:87:17\n  \
    \ |\n87 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd_sw5tnh.rs:87:25\n   |\n87 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd_sw5tnh.rs:88:17\n   |\n88 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpd_sw5tnh.rs:88:25\n\
    \   |\n88 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd_sw5tnh.rs:89:17\n   |\n89 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd_sw5tnh.rs:89:25\n   |\n89 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in th"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut rows = lst.len();\n    let mut cols = lst[0].len();\n    let\
    \ mut coords = vec![];\n    let mut row_coords = vec![];\n    let mut col_coords\
    \ = vec![];\n    let mut row_sorted = vec![];\n    let mut col_sorted = vec![];\n\
    \    let mut row_sort = vec![];\n    let mut col_sort = vec![];\n    let mut i\
    \ = 0;\n    let mut j = 0;\n    while i < rows {\n        row_sort.clear();\n\
    \        col_sort.clear();\n        row_sort.push(i);\n        col_sort.push(i);\n\
    \        row_coords.clear();\n        col_coords.clear();\n        while j < cols\
    \ {\n            if lst[i][j] == x {\n                row_sort.push(j);\n    \
    \            col_sort.push(j);\n                row_coords.push(i);\n        \
    \        col_coords.push(i);\n            }\n            j += 1\n        }\n \
    \       row_sorted.clear();\n        col_sorted.clear();\n        row_sorted.push(row_sort);\n\
    \        col_sorted.push(col_sort);\n        coords.push(row_coords);\n      \
    \  coords.push(col_coords);\n        i += 1;\n        j = 0;\n    }\n    coords\n\
    }\n\nfn main() {\n    let candidate = get_row;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi75ecp9d.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi75ecp9d.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi75ecp9d.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi75ecp9d.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi75ecp9d.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi75ecp9d.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi75ecp9d.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi75ecp9d.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi75ecp9d.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi75ecp9d.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi75ecp9d.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut row = Vec::<(isize, isize)>::new();\n    let mut row_sorted =\
    \ Vec::<(isize, isize)>::new();\n    let mut col_sorted = Vec::<isize>::new();\n\
    \    let mut col_sort_reversed = Vec::<isize>::new();\n    let mut row_sort_reversed\
    \ = Vec::<isize>::new();\n    let mut row_sorted = Vec::<(isize, isize)>::new();\n\
    \    let mut col_sorted = Vec::<isize>::new();\n    let mut col_sort_reversed\
    \ = Vec::<isize>::new();\n    let mut row_sort_reversed = Vec::<isize>::new();\n\
    \    let mut row_sorted = Vec::<(isize, isize)>::new();\n    let mut col_sorted\
    \ = Vec::<isize>::new();\n    let mut col_sort_reversed = Vec::<isize>::new();\n\
    \    let mut row_sort_reversed = Vec::<isize>::new();\n    let mut row_sorted\
    \ = Vec::<(isize, isize)>::new();\n    let mut col_sorted = Vec::<isize>::new();\n\
    \    let mut col_sort_reversed = Vec::<isize>::new();\n    let mut row_sort_reversed\
    \ = Vec::<isize>::new();\n    let mut row_sorted = Vec::<(isize, isize)>::new();\n\
    \    let mut col_sorted = Vec::<isize>::new();\n    let mut col_sort_reversed\
    \ = Vec::<isize>::new();\n    let mut row_sort_reversed = Vec::<isize>::new();\n\
    \    let mut row_sorted = Vec::<(isize, isize)>::new();\n    let mut col_sorted\
    \ = Vec::<isize>::new();\n    let mut col_sort_reversed = Vec::<isize>::new();\n\
    \    let mut row_sort_reversed = Vec::<isize>::new();\n    let mut row_sorted\
    \ = Vec::<(isize, isize)>::new();\n    let mut col_sorted = Vec::<isize>::new();\n\
    \    let mut col_sort_reversed = Vec::<isize>::new();\n    let mut row_sort_reversed\
    \ = Vec::<isize>::new();\n    let mut row_sorted = Vec::<(isize, isize)>::new();\n\
    \    let mut col_sorted = Vec::<isize>::new();\n    let mut col_sort_reversed\
    \ = Vec::<isize>::new();\n    let \n}\n\nfn main() {\n    let candidate = get_row;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp6qhz6t_3.rs:50:1\n  \
    \ |\n50 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp6qhz6t_3.rs:54:17\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp6qhz6t_3.rs:54:25\n \
    \  |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6qhz6t_3.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6qhz6t_3.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6qhz6t_3.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6qhz6t_3.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6qhz6t_3.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6qhz6t_3.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6qhz6t_3.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6qhz6t_3.rs:58:25\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6qhz6t_3.rs:59:17\n   |\n59 |     assert"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut result = Vec::<(isize, isize)>::new();\n    for row in lst {\n\
    \        let mut row_result = Vec::<(isize, isize)>::new();\n        for element\
    \ in row {\n            if element == x {\n                row_result.push((row,\
    \ element));\n            }\n        }\n        result.push(row_result.iter().cloned().collect());\n\
    \    }\n    result.sort_by_key(|row| row.iter().cloned().collect::<Vec<_>>());\n\
    \    result.sort_by_key(|row| row.iter().cloned().rev().collect::<Vec<_>>());\n\
    \    result\n}\n\nfn main() {\n    let candidate = get_row;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdzx_sg3a.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdzx_sg3a.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdzx_sg3a.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdzx_sg3a.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdzx_sg3a.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdzx_sg3a.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdzx_sg3a.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdzx_sg3a.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdzx_sg3a.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdzx_sg3a.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdzx_sg3a.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut rows = lst.len();\n    let mut cols = lst[0].len();\n    let\
    \ mut coords = vec![];\n    let mut row = 0;\n    let mut col = 0;\n    while\
    \ row < rows {\n        let mut found = false;\n        while !found && col <\
    \ cols {\n            if lst[row][col] == x {\n                found = true;\n\
    \                coords.push((row, col));\n            }\n            col += 1;\n\
    \        }\n        row += 1;\n        col = 0;\n    }\n    coords.sort_by_key(|&(x,\
    \ y)| x.0);\n    coords.sort_by_key(|&(x, y)| y.0);\n    coords.reverse();\n \
    \   coords\n}\n\nfn main() {\n    let candidate = get_row;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp32gjoidv.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp32gjoidv.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp32gjoidv.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp32gjoidv.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp32gjoidv.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp32gjoidv.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp32gjoidv.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp32gjoidv.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp32gjoidv.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp32gjoidv.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp32gjoidv.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut result = Vec::<(isize, isize)>::new();\n    for row in lst {\n\
    \        let mut row_result = Vec::<(isize, isize)>::new();\n        for (i, val)\
    \ in row.iter().enumerate() {\n            if i == x {\n                row_result.push((i,\
    \ val));\n            }\n        }\n        result.push(row_result);\n    }\n\
    \    result.sort_by_key(|&(_, y)| y.0);\n    result.sort_by_key(|&(_, y)| -y.1);\n\
    \    result\n}\n\nfn main() {\n    let candidate = get_row;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpanpzw2ch.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpanpzw2ch.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpanpzw2ch.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpanpzw2ch.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpanpzw2ch.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpanpzw2ch.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpanpzw2ch.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpanpzw2ch.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpanpzw2ch.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpanpzw2ch.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpanpzw2ch.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut row: Vec<(isize, isize)> = Vec::new();\n    let mut row_idx =\
    \ 0;\n    let mut row_idx_max = 0;\n    let mut col_max = 0;\n    for row in lst\
    \ {\n        row_idx_max = row.iter().max().unwrap();\n        col_max = row.iter().map(|x|\
    \ x.unwrap()).max().unwrap();\n        if row_idx < row_idx_max && col_max < col_max\
    \ {\n            if row[row_idx][col_max] == x {\n                row.push(row_idx,\
    \ col_max);\n            }\n        }\n        row_idx += 1;\n    }\n    row.sort_by_key(|&(x,\
    \ y)| x.0);\n    row.sort_by_key(|&(x, y)| y.0);\n    row\n}\n\nfn main() {\n\
    \    let candidate = get_row;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpszu7sh7a.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpszu7sh7a.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpszu7sh7a.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpszu7sh7a.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpszu7sh7a.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpszu7sh7a.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpszu7sh7a.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpszu7sh7a.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpszu7sh7a.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpszu7sh7a.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpszu7sh7a.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut row: Vec<(isize, isize)> = Vec::new();\n    let mut row_idx =\
    \ 0;\n    let mut row_len = 0;\n    let mut col_len = 0;\n    let mut col_pos\
    \ = 0;\n    let mut col_pos_idx = 0;\n    let mut row_len_idx = 0;\n    let mut\
    \ col_len_idx = 0;\n    let mut row_idx = 0;\n    let mut col_pos = 0;\n    let\
    \ mut col_pos_idx = 0;\n    let mut row_len_idx = 0;\n    let mut col_len_idx\
    \ = 0;\n    let mut row_idx = 0;\n    let mut col_pos = 0;\n    let mut col_pos_idx\
    \ = 0;\n    let mut row_len_idx = 0;\n    let mut col_len_idx = 0;\n    let mut\
    \ row_idx = 0;\n    let mut col_pos = 0;\n    let mut col_pos_idx = 0;\n    let\
    \ mut row_len_idx = 0;\n    let mut col_len_idx = 0;\n    let mut row_idx = 0;\n\
    \    let mut col_pos = 0;\n    let mut col_pos_idx = 0;\n    let mut row_len_idx\
    \ = 0;\n    let mut col_len_idx = 0;\n    let mut row_idx = 0;\n    let mut col_pos\
    \ = 0;\n    let mut col_pos_idx = 0;\n    let mut row_len_idx = 0;\n    let mut\
    \ col_len_idx = 0;\n    let mut row_idx = 0;\n    let mut col_pos = 0;\n    let\
    \ mut col_pos_idx = 0;\n    let mut row_len_idx = 0;\n    let mut col_len_idx\
    \ = 0;\n    let mut row_idx = 0;\n    let mut col_pos = 0;\n    let mut col_pos_idx\
    \ = 0;\n    let mut row_len_idx = 0;\n    let mut col_len_idx = 0;\n    let mut\
    \ row_idx = 0;\n    let mut col_pos = 0;\n    let mut col_pos_idx = 0;\n    let\
    \ mut row_len_idx = 0;\n    let mut col_len_idx = 0;\n    let mut row_idx = 0;\n\
    \    let mut col_pos = 0;\n    let mut col_pos_idx = 0;\n    let mut row_len_idx\
    \ = 0;\n    let mut col_len_idx = 0;\n    let mut row_idx = 0;\n    let mut col_pos\
    \ = 0;\n    let mut col_pos_idx = 0;\n    let mut row_len_idx = 0;\n    let mut\
    \ col_len_idx = 0;\n    let mut row_idx = 0;\n    let mut col_pos = 0;\n    let\
    \ mut col_pos_idx = 0;\n    let mut row_len_idx = 0;\n    let mut col_len_idx\
    \ = 0;\n    let mut row_idx = 0;\n    let mut col_pos = 0;\n    let mut col_pos_idx\
    \ = 0;\n    let mu\n}\n\nfn main() {\n    let candidate = get_row;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4jpy_l8h.rs:83:11\n   |\n\
    83 |     let mu\n   |           ^ help: add `;` here\n84 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4jpy_l8h.rs:88:17\n\
    \   |\n88 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4jpy_l8h.rs:88:25\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4jpy_l8h.rs:89:17\n   |\n89 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4jpy_l8h.rs:89:25\n\
    \   |\n89 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4jpy_l8h.rs:90:17\n   |\n90 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4jpy_l8h.rs:90:25\n   |\n90 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4jpy_l8h.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4jpy_l8h.rs:91:25\n   |\n91 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4jpy_l8h.rs:92:17\n  \
    \ |\n92 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4jpy_l8h.rs:92:25\n   |\n92 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut result = vec![];\n    let mut rows = lst.len();\n    let mut\
    \ cols = lst[0].len();\n    let mut row_idx = 0;\n    let mut col_idx = 0;\n \
    \   while row_idx < rows {\n        let mut row_sorted = vec![];\n        let\
    \ mut col_sorted = vec![];\n        let mut row_row_idx = 0;\n        let mut\
    \ col_col_idx = 0;\n        while col_col_idx < cols {\n            if row_row_idx\
    \ < rows && col_col_idx < cols {\n                if row_row_idx != row_idx {\n\
    \                    row_sorted.push((row_row_idx, row_idx));\n              \
    \  }\n                if col_col_idx != col_idx {\n                    col_sorted.push((col_col_idx,\
    \ col_idx));\n                }\n                row_row_idx += 1;\n         \
    \       col_col_idx += 1;\n            } else {\n                break;\n    \
    \        }\n        }\n        result.push((row_sorted.len(), col_sorted.len()));\n\
    \        row_idx += 1;\n        col_idx += 1;\n    }\n    result.sort_by_key(|&(x,\
    \ y)| x.0);\n    result.sort_by_key(|&(x, y)| y.0);\n    result\n}\n\nfn main()\
    \ {\n    let candidate = get_row;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1kw3qkln.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1kw3qkln.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1kw3qkln.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1kw3qkln.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1kw3qkln.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1kw3qkln.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1kw3qkln.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1kw3qkln.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1kw3qkln.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1kw3qkln.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1kw3qkln.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut result = Vec::new();\n    let mut rows = lst.len();\n    let\
    \ mut cols = lst[0].len();\n    let mut row_idx = 0;\n    let mut col_idx = 0;\n\
    \    while row_idx < rows {\n        let mut row_coord = vec![];\n        while\
    \ col_idx < cols {\n            if row_idx == row_idx {\n                row_coord.push((row_idx,\
    \ col_idx));\n            }\n            if col_idx == col_idx {\n           \
    \     row_coord.push((row_idx, col_idx));\n            }\n            if row_idx\
    \ == row_idx && col_idx == col_idx {\n                row_coord.push((row_idx,\
    \ col_idx));\n            }\n            col_idx += 1;\n        }\n        result.push(row_coord);\n\
    \        row_idx += 1;\n        col_idx = 0;\n    }\n    result.sort_by_key(|&(_,\
    \ y)| y.cmp(&x));\n    result.sort_by_key(|&(_, y)| y.cmp(&x));\n    result\n\
    }\n\nfn main() {\n    let candidate = get_row;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgh4h7om3.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgh4h7om3.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgh4h7om3.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgh4h7om3.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgh4h7om3.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgh4h7om3.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgh4h7om3.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgh4h7om3.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgh4h7om3.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgh4h7om3.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgh4h7om3.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut coords = vec![];\n    for row in lst {\n        let mut coord\
    \ = vec![];\n        for col in row.iter().rev() {\n            if col == x {\n\
    \                coord.push((row.len(), col.len()));\n            }\n        }\n\
    \        coords.push_back(coord);\n    }\n    coords.sort_by(|a, b| a.iter().cmp(&b.iter()).reverse());\n\
    \    coords.sort_by(|a, b| b.iter().cmp(&a.iter()).reverse());\n    coords\n}\n\
    \nfn main() {\n    let candidate = get_row;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2g8gqe6a.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2g8gqe6a.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2g8gqe6a.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2g8gqe6a.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2g8gqe6a.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2g8gqe6a.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2g8gqe6a.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2g8gqe6a.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2g8gqe6a.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2g8gqe6a.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2g8gqe6a.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut result = Vec::new();\n    let mut row_idx = 1;\n    let mut col_idx\
    \ = 1;\n    let mut row_len = lst.len();\n    let mut col_len = lst[0].len();\n\
    \    let mut row_start = 0;\n    let mut col_start = 0;\n    let mut row_end =\
    \ 0;\n    let mut col_end = 0;\n    let mut row_start2 = 0;\n    let mut col_start2\
    \ = 0;\n    let mut row_end2 = 0;\n    let mut col_end2 = 0;\n    while row_idx\
    \ < row_len {\n        row_end = 0;\n        col_end = 0;\n        while col_idx\
    \ < col_len {\n            row_end2 = row_end;\n            col_end2 = col_end;\n\
    \            row_start = row_idx;\n            col_start = col_idx;\n        \
    \    if row_idx < row_len {\n                row_end += lst[row_idx].len();\n\
    \            }\n            if col_idx < col_len {\n                col_end +=\
    \ lst[row_idx][col_idx].len();\n            }\n            if row_start <= row_end2\
    \ && col_start <= col_end2 {\n                if lst[row_idx][col_idx] == x {\n\
    \                    result.push((row_idx, col_idx));\n                }\n   \
    \         }\n            col_idx += 1;\n        }\n        row_idx += 1;\n   \
    \     col_idx = 1;\n    }\n    result.sort_by_key(|&(x, y)| x.0);\n    result.sort_by_key(|&(x,\
    \ y)| y.0);\n    result\n}\n\nfn main() {\n    let candidate = get_row;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmnckmbqj.rs:61:17\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmnckmbqj.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmnckmbqj.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmnckmbqj.rs:62:25\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmnckmbqj.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmnckmbqj.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmnckmbqj.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmnckmbqj.rs:64:25\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmnckmbqj.rs:65:17\n  \
    \ |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmnckmbqj.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmnckmbqj.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut rows = lst.len();\n    let mut cols = lst[0].len();\n    let\
    \ mut coords = vec![];\n    let mut row_coords = vec![];\n    let mut col_coords\
    \ = vec![];\n    let mut row_sort = vec![];\n    let mut col_sort = vec![];\n\
    \    let mut row_sort_idx = vec![];\n    let mut col_sort_idx = vec![];\n    let\
    \ mut row_sort_idx2 = vec![];\n    let mut col_sort_idx2 = vec![];\n    let mut\
    \ row_sort_idx3 = vec![];\n    let mut col_sort_idx3 = vec![];\n    let mut row_sort_idx4\
    \ = vec![];\n    let mut col_sort_idx4 = vec![];\n    let mut row_sort_idx5 =\
    \ vec![];\n    let mut col_sort_idx5 = vec![];\n    let mut row_sort_idx6 = vec![];\n\
    \    let mut col_sort_idx6 = vec![];\n    let mut row_sort_idx7 = vec![];\n  \
    \  let mut col_sort_idx7 = vec![];\n    let mut row_sort_idx8 = vec![];\n    let\
    \ mut col_sort_idx8 = vec![];\n    let mut row_sort_idx9 = vec![];\n    let mut\
    \ col_sort_idx9 = vec![];\n    let mut row_sort_idx10 = vec![];\n    let mut col_sort_idx10\
    \ = vec![];\n    let mut row_sort_idx11 = vec![];\n    let mut col_sort_idx11\
    \ = vec![];\n    let mut row_sort_idx12 = vec![];\n    let mut col_sort_idx12\
    \ = vec![];\n    let mut row_sort_idx13 = vec![];\n    let mut col_sort_idx13\
    \ = vec![];\n    let mut row_sort_idx14 = vec![];\n    let mut col_sort_idx14\
    \ = vec![];\n    let mut row_sort_idx15 = vec![];\n    let mut col_sort_idx15\
    \ = vec![];\n    let mut row_sort_idx16 = vec![];\n    let mut col_sort_idx16\
    \ = vec![];\n    let mut row_sort_idx17 = vec![];\n    let mut col_sort_idx17\
    \ = vec![];\n    let mut row_sort_idx18 = vec![];\n    let mut col_sort_idx18\
    \ = vec![];\n    let mut row_sort_idx19 = vec![];\n    let mut col_sort_idx19\
    \ = vec![];\n    let mut row_sort_idx20 = vec![];\n    let mut \n}\n\nfn main()\
    \ {\n    let candidate = get_row;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmph6nt73ko.rs:64:1\n\
    \   |\n64 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmph6nt73ko.rs:68:17\n   |\n68 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmph6nt73ko.rs:68:25\n \
    \  |\n68 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph6nt73ko.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph6nt73ko.rs:69:25\n   |\n69 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmph6nt73ko.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmph6nt73ko.rs:70:25\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph6nt73ko.rs:71:17\n  \
    \ |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph6nt73ko.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph6nt73ko.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmph6nt73ko.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph6nt73ko.rs:73:17\n   |\n73 |     "
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut row: Vec<(isize, isize)> = Vec::new();\n    let mut row_idx =\
    \ 0;\n    let mut row_len = 0;\n    let mut col_len = 0;\n    let mut col_pos\
    \ = 0;\n    for row in lst {\n        row_len += row.len();\n        if row_len\
    \ == x {\n            row.sort_by(|a, b| a.iter().cmp(b.iter()).reverse());\n\
    \            row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n         \
    \   row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n            row.sort_by(|a,\
    \ b| a.iter().cmp(b.iter()).reverse());\n            row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n\
    \            row.sort_by(|a, b| a.iter().cmp(b.iter()).reverse());\n         \
    \   row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n            row.sort_by(|a,\
    \ b| a.iter().cmp(b.iter()).reverse());\n            row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n\
    \            row.sort_by(|a, b| a.iter().cmp(b.iter()).reverse());\n         \
    \   row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n            row.sort_by(|a,\
    \ b| a.iter().cmp(b.iter()).reverse());\n            row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n\
    \            row.sort_by(|a, b| a.iter().cmp(b.iter()).reverse());\n         \
    \   row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n            row.sort_by(|a,\
    \ b| a.iter().cmp(b.iter()).reverse());\n            row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n\
    \            row.sort_by(|a, b| a.iter().cmp(b.iter()).reverse());\n         \
    \   row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n            row.sort_by(|a,\
    \ b| a.iter().cmp(b.iter()).reverse());\n            row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n\
    \            row.sort_by(|a, b| a.iter().cmp(b.iter()).reverse());\n         \
    \   row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n            row.sort_by(|a,\
    \ b| a.iter().cmp(b.iter()).reverse());\n            row.sort_by(|a, b| b.iter().cmp(a.iter()).reverse());\n\
    \            row.sort_by(|a, b| a.\n}\n\nfn main() {\n    let candidate = get_row;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpxw28nu7u.rs:61:3\n\
    \   |\n16 | fn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n   |                                                                   -\
    \ unclosed delimiter\n...\n22 |     for row in lst {\n   |                   \
    \ - unclosed delimiter\n23 |         row_len += row.len();\n24 |         if row_len\
    \ == x {\n   |                         - this delimiter might not be properly\
    \ closed...\n...\n51 | }\n   | - ...as it matches this but it has different indentation\n\
    ...\n61 | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpxw28nu7u.rs:50:24\n\
    \   |\n16 | fn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n   |                                                                   -\
    \ closing delimiter possibly meant for this\n...\n50 |             row.sort_by(|a,\
    \ b| a.\n   |                        ^ unclosed delimiter\n51 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror: unexpected token: `)`\n  --> /tmp/tmpxw28nu7u.rs:51:1\n\
    \   |\n51 | }\n   | ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxw28nu7u.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxw28nu7u.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxw28nu7u.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxw28nu7u.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxw28nu7u.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxw28nu7u.rs:57:25\n   "
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut rows = lst.len();\n    let mut cols = lst[0].len();\n    let\
    \ mut coords = vec![];\n    let mut row_coords = vec![];\n    let mut col_coords\
    \ = vec![];\n    let mut row_sorted = vec![];\n    let mut col_sorted = vec![];\n\
    \    let mut row_sorted_idx = vec![];\n    let mut col_sorted_idx = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = vec![];\n    let mut col_sorted_idx_end = vec![];\n\
    \    let mut row_sorted_idx_end = \n}\n\nfn main() {\n    let candidate = get_row;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmp9avzgvbl.rs:65:1\n\
    \   |\n65 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp9avzgvbl.rs:69:17\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp9avzgvbl.rs:69:25\n \
    \  |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9avzgvbl.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9avzgvbl.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9avzgvbl.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9avzgvbl.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9avzgvbl.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9avzgvbl.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9avzgvbl.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9avzgvbl.rs:73:25\n\
    \   |\n73 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9avzgvbl.rs:74:17\n   |\n74 |     "
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut rows = lst.len();\n    let mut cols = lst[0].len();\n    let\
    \ mut coords = vec![];\n    let mut row_coords = vec![];\n    let mut col_coords\
    \ = vec![];\n    let mut row_sorted = vec![];\n    let mut col_sorted = vec![];\n\
    \    let mut row_sorter: Vec<(isize, isize)> = vec![];\n    let mut col_sorter:\
    \ Vec<(isize, isize)> = vec![];\n    let mut row_sorter_index = 0;\n    let mut\
    \ col_sorter_index = 0;\n    let mut row_sorter_index2 = 0;\n    let mut col_sorter_index2\
    \ = 0;\n    let mut row_sorter_index3 = 0;\n    let mut col_sorter_index3 = 0;\n\
    \    let mut row_sorter_index4 = 0;\n    let mut col_sorter_index4 = 0;\n    let\
    \ mut row_sorter_index5 = 0;\n    let mut col_sorter_index5 = 0;\n    let mut\
    \ row_sorter_index6 = 0;\n    let mut col_sorter_index6 = 0;\n    let mut row_sorter_index7\
    \ = 0;\n    let mut col_sorter_index7 = 0;\n    let mut row_sorter_index8 = 0;\n\
    \    let mut col_sorter_index8 = 0;\n    let mut row_sorter_index9 = 0;\n    let\
    \ mut col_sorter_index9 = 0;\n    let mut row_sorter_index10 = 0;\n    let mut\
    \ col_sorter_index10 = 0;\n    let mut row_sorter_index11 = 0;\n    let mut col_sorter_index11\
    \ = 0;\n    let mut row_sorter_index12 = 0;\n    let mut col_sorter_index12 =\
    \ 0;\n    let mut row_sorter_index13 = 0;\n    let mut col_sorter_index13 = 0;\n\
    \    let mut row_sorter_index14 = 0;\n    let mut col_sorter_index14 = 0;\n  \
    \  let mut row_sorter_index15 = 0;\n    let mut col_sorter_index15 = 0;\n    let\
    \ mut row_sorter_index16 = 0;\n    let mut col_sorter_index16 = 0;\n    let mut\
    \ row_sorter_index17 = 0;\n    let mut col_sorter_index17 = 0;\n    let mut row_sorter_index18\
    \ = 0;\n    let mut col_sorter_index18 = 0;\n    let mut row_sorter_index19 =\
    \ 0;\n    let mut col_sorter_index19 = 0;\n    let mut row_sorter_index20 = 0;\n\
    \    let mut col_sorter_index20 = 0;\n    let mut row_sorter_index21 = 0;\n  \
    \  let mut col_sorter_index\n}\n\nfn main() {\n    let candidate = get_row;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpftg37jjy.rs:67:29\n   |\n\
    67 |     let mut col_sorter_index\n   |                             ^ help: add\
    \ `;` here\n68 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpftg37jjy.rs:72:17\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpftg37jjy.rs:72:25\n \
    \  |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpftg37jjy.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpftg37jjy.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpftg37jjy.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpftg37jjy.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpftg37jjy.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpftg37jjy.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpftg37jjy.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpftg37jjy.rs:76:25\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot"
  stdout: ''
  timestamp: 1659749730
- exit_code: 1
  program: "/// You are given a 2 dimensional data, as a nested lists,\n/// which\
    \ is similar to matrix, however, unlike matrices,\n/// each row may contain a\
    \ different number of columns.\n/// Given lst, and integer x, find integers x\
    \ in the list,\n/// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n\
    /// each tuple is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates\
    \ initially by rows in ascending order.\n/// Also, sort coordinates of the row\
    \ by columns in descending order.\n/// Examples:\n/// >>> get_row(vec![vec![1,\
    \ 2, 3, 4, 5, 6], vec![1, 2, 3, 4, 1, 6], vec![1, 2, 3, 4, 5, 1]], 1)\n/// vec![(0,\
    \ 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// >>> get_row(vec![], 1)\n/// Vec::<(isize,\
    \ isize)>::new()\n/// >>> get_row(vec![vec![], vec![1], vec![1, 2, 3]], 3)\n///\
    \ vec![(2, 2)]\nfn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    let mut row: Vec<(isize, isize)> = Vec::new();\n    let mut row_idx =\
    \ 0;\n    let mut col_max = 0;\n    let mut col_min = 0;\n    for row in lst {\n\
    \        let mut col_max = 0;\n        let mut col_min = 0;\n        for col in\
    \ row {\n            if col > col_max {\n                col_max = col;\n    \
    \        }\n            if col < col_min {\n                col_min = col;\n \
    \           }\n        }\n        if col_min == col_max {\n            continue;\n\
    \        }\n        let mut row_idx = 0;\n        for col in row {\n         \
    \   if col == x {\n                row_idx += 1;\n            }\n        }\n \
    \       let mut row_idx = row_idx as isize;\n        let mut col_max = col_max\
    \ as isize;\n        let mut col_min = col_min as isize;\n        for col in row\
    \ {\n            if col > col_max {\n                col_max = col;\n        \
    \    }\n            if col < col_min {\n                col_min = col;\n     \
    \       }\n        }\n        if col_min == col_max {\n            continue;\n\
    \        }\n        let mut row_idx = row_idx as isize;\n        let mut col_max\
    \ = col_max as isize;\n        let mut col_min = col_min as isize;\n        for\
    \ col in row {\n            if col > col_max {\n                col_max = col;\n\
    \            }\n            if col < col_min {\n                col_min = col;\n\
    \            }\n        }\n        if col_min == col_max {\n            continue;\n\
    \        }\n        let mut row_idx = row_idx as isize;\n        let mut col_max\
    \ = col_max as isize;\n        let mut col_min = col_min as isize;\n        for\
    \ col in row {\n            if col > col_max {\n                col_max = col;\n\
    \            }\n            if col < col_min {\n                col_min = col;\n\
    \            }\n        }\n        if col_min == col_max {\n            continue;\n\
    \        }\n        let mut row_idx = row_idx as isize;\n        let mut col_max\
    \ = col_max as isize;\n        let mut col_min = col_min as isize;\n        for\
    \ col in row {\n            if col > col_max {\n                col_max = col;\n\
    \            }\n            if col < col_min {\n                col_min = col;\n\
    \            }\n        }\n        if col_min == col_max {\n            continue;\n\
    \        }\n        let mut row_idx = row_idx as isize;\n        let mut col_max\
    \ = col_max as isize;\n        let mut col_min = col_m\n}\n\nfn main() {\n   \
    \ let candidate = get_row;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppy9lzmqu.rs:110:3\n\
    \    |\n16  | fn get_row(lst: Vec<Vec<isize>>, x: isize) -> Vec<(isize, isize)>\
    \ {\n    |                                                                   -\
    \ unclosed delimiter\n...\n21  |     for row in lst {\n    |                 \
    \   - this delimiter might not be properly closed...\n...\n100 | }\n    | - ...as\
    \ it matches this but it has different indentation\n...\n110 | }\n    |   ^\n\n\
    error: expected `;`, found `}`\n   --> /tmp/tmppy9lzmqu.rs:99:32\n    |\n99  |\
    \         let mut col_min = col_m\n    |                                ^ help:\
    \ add `;` here\n100 | }\n    | - unexpected token\n\nerror[E0425]: cannot find\
    \ value `col_m` in this scope\n  --> /tmp/tmppy9lzmqu.rs:99:27\n   |\n99 |   \
    \      let mut col_min = col_m\n   |                           ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmppy9lzmqu.rs:104:17\n    |\n104 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmppy9lzmqu.rs:104:25\n    |\n104 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmppy9lzmqu.rs:105:17\n    |\n105 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmppy9lzmqu.rs:105:25\n    |\n105 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmppy9lzmqu.rs:106:17\n    |\n106 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmppy9lzmqu.rs:106:25\n    |\n106 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tm"
  stdout: ''
  timestamp: 1659749730

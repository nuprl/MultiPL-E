language: rs
name: HumanEval_36_fizz_buzz
results:
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpds4zc3sy.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n            n /= 11;\n       \
    \ }\n        if n % 13 == 0 {\n            count += 1;\n            n /= 13;\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:14:13\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |             n /= 11;\n   | \
    \            ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:18:13\n   |\n8 \
    \ | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider making\
    \ this binding mutable: `mut n`\n...\n18 |             n /= 13;\n   |        \
    \     ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpg6hsleyw.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n    \
    \    if remainder % 11 == 0 || remainder % 13 == 0 {\n            count += 1;\n\
    \        }\n        remainder /= 10;\n    }\n    count\n}\n\nfn main() {\n   \
    \ let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpc86fvw54.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in n.checked_div(11).unwrap().checked_div(13).unwrap()\
    \ {\n        if d.is_zero() {\n            count += 1;\n        } else {\n   \
    \         count += 0;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: `isize` is not an iterator\n  --> /tmp/tmpl4ma078d.rs:10:14\n\
    \   |\n10 |     for d in n.checked_div(11).unwrap().checked_div(13).unwrap() {\n\
    \   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `isize`\
    \ is not an iterator\n   |\n   = help: the trait `Iterator` is not implemented\
    \ for `isize`\n   = note: if you want to iterate between `start` until a value\
    \ `end`, use the exclusive range syntax `start..end` or the inclusive range syntax\
    \ `start..=end`\n   = note: required because of the requirements on the impl of\
    \ `IntoIterator` for `isize`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 11) + fizz_buzz(n - 13)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `0`', /tmp/tmpnohzj4k3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ / 11)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmp0perk59s.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1) as isize\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmppkou0ous.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &d in &n {\n        if d % 11 == 0 || d % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: `&isize` is not an iterator\n  --> /tmp/tmpj9fkha8q.rs:10:15\n\
    \   |\n10 |     for &d in &n {\n   |               ^^ `&isize` is not an iterator\n\
    \   |\n   = help: the trait `Iterator` is not implemented for `&isize`\n   = note:\
    \ required because of the requirements on the impl of `IntoIterator` for `&isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for &d in &n {\n        if d % 11 == 0 || d % 13 == 0 {\n\
    \            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: `&isize` is not an iterator\n  --> /tmp/tmp6b2jtjm5.rs:10:15\n\
    \   |\n10 |     for &d in &n {\n   |               ^^ `&isize` is not an iterator\n\
    \   |\n   = help: the trait `Iterator` is not implemented for `&isize`\n   = note:\
    \ required because of the requirements on the impl of `IntoIterator` for `&isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1) % 11\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `78`,\n right: `2`', /tmp/tmpamvv0lgj.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for &d in n.to_string().chars().filter(|&c| c != '0') {\n\
    \        if d == '7' {\n            count += 1;\n        }\n        if d == '8'\
    \ {\n            count += 1;\n        }\n        if d == '9' {\n            count\
    \ += 1;\n        }\n        if d == '0' {\n            count += 1;\n        }\n\
    \        if d == '1' {\n            count += 1;\n        }\n        if d == '2'\
    \ {\n            count += 1;\n        }\n        if d == '3' {\n            count\
    \ += 1;\n        }\n        if d == '4' {\n            count += 1;\n        }\n\
    \        if d == '5' {\n            count += 1;\n        }\n        if d == '6'\
    \ {\n            count += 1;\n        }\n        if d == '7' {\n            count\
    \ += 1;\n        }\n        if d == '8' {\n            count += 1;\n        }\n\
    \        if d == '9' {\n            count += 1;\n        }\n        if d == '0'\
    \ {\n            count += 1;\n        }\n        if d == '1' {\n            count\
    \ += 1;\n        }\n        if d == '2' {\n            count += 1;\n        }\n\
    \        if d == '3' {\n            count += 1;\n        }\n        if d == '4'\
    \ {\n            count += 1;\n        }\n        if d == '5' {\n            count\
    \ += 1;\n        }\n        if d == '6' {\n            count += 1;\n        }\n\
    \        if d == '7' {\n            count += 1;\n        }\n        if d == '8'\
    \ {\n            count += 1;\n        }\n        if d == '9' {\n            count\
    \ += 1;\n        }\n        if d == '0' {\n            count += 1;\n        }\n\
    \        if d == '1' {\n            count += 1;\n        }\n        if d == '2'\
    \ {\n            count += 1;\n        }\n        if d == '3' {\n            count\
    \ += 1;\n        }\n        if d == '4' {\n            count += 1;\n        }\n\
    \        if d == '5' {\n            count += 1;\n        }\n        if d == '6'\
    \ {\n            count += 1;\n        }\n        if d == '7' {\n            count\
    \ += 1;\n        }\n        if d == '8' {\n            count += 1;\n        }\n\
    \        if d == '9' {\n            count += 1;\n        }\n        if d == '0'\
    \ {\n            count += 1;\n        }\n        if d == '1' {\n            count\
    \ += 1;\n        }\n        if d == '2' {\n\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp09o4p_jn.rs:130:3\n\
    \    |\n8   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n9   |     let mut count = 0;\n10  |     for &d\
    \ in n.to_string().chars().filter(|&c| c != '0') {\n    |                    \
    \                                       - unclosed delimiter\n...\n116 |     \
    \    if d == '2' {\n    |                     - this delimiter might not be properly\
    \ closed...\n117 | \n118 | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n130 | }\n    |   ^\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp09o4p_jn.rs:10:9\n   |\n10 |     for &d in n.to_string().chars().filter(|&c|\
    \ c != '0') {\n   |         ^^    -------------------------------------------\
    \ this expression has type `Option<char>`\n   |         |\n   |         expected\
    \ `char`, found reference\n   |         help: you can probably remove the explicit\
    \ borrow: `d`\n   |\n   = note:   expected type `char`\n           found reference\
    \ `&_`\n\nerror[E0308]: mismatched types\n   --> /tmp/tmp09o4p_jn.rs:10:5\n  \
    \  |\n8   |   fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \      ----- expected `isize` because of return type\n9   |       let mut count\
    \ = 0;\n10  | /     for &d in n.to_string().chars().filter(|&c| c != '0') {\n\
    11  | |         if d == '7' {\n12  | |             count += 1;\n13  | |      \
    \   }\n...   |\n129 | |     assert_eq!(candidate(100000), 8026);\n130 | | }\n\
    \    | |__^ expected `isize`, found `()`\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    for &d in &n {\n   \
    \     if d % 11 == 0 || d % 13 == 0 {\n            count += 1;\n        }\n  \
    \  }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: `&isize` is not an iterator\n  --> /tmp/tmpab12uzg3.rs:11:15\n\
    \   |\n11 |     for &d in &n {\n   |               ^^ `&isize` is not an iterator\n\
    \   |\n   = help: the trait `Iterator` is not implemented for `&isize`\n   = note:\
    \ required because of the requirements on the impl of `IntoIterator` for `&isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    while remainder == 0\
    \ || remainder == 13 {\n        remainder = n % 11;\n        counter += 1;\n \
    \       n /= 11;\n    }\n    counter += 1;\n    remainder = n % 13;\n    while\
    \ remainder == 0 || remainder == 11 {\n        remainder = n % 13;\n        counter\
    \ += 1;\n        n /= 13;\n    }\n    counter += 1;\n    remainder = n % 7;\n\
    \    while remainder == 0 || remainder == 7 {\n        remainder = n % 7;\n  \
    \      counter += 1;\n        n /= 7;\n    }\n    counter += 1;\n    remainder\
    \ = n % 5;\n    while remainder == 0 || remainder == 5 {\n        remainder =\
    \ n % 5;\n        counter += 1;\n        n /= 5;\n    }\n    counter += 1;\n \
    \   remainder = n % 3;\n    while remainder == 0 || remainder == 3 {\n       \
    \ remainder = n % 3;\n        counter += 1;\n        n /= 3;\n    }\n    counter\
    \ += 1;\n    remainder = n % 1;\n    while remainder == 0 || remainder == 1 {\n\
    \        remainder = n % 1;\n        counter += 1;\n        n /= 1;\n    }\n \
    \   counter += 1;\n    remainder = n % 1;\n    while remainder == 0 || remainder\
    \ == 1 {\n        remainder = n % 1;\n        counter += 1;\n        n /= 1;\n\
    \    }\n    counter += 1;\n    remainder = n % 1;\n    while remainder == 0 ||\
    \ remainder == 1 {\n        remainder = n % 1;\n        counter += 1;\n      \
    \  n /= 1;\n    }\n    counter += 1;\n    remainder = n % 1;\n    while remainder\
    \ == 0 || remainder == 1 {\n        remainder = n % 1;\n        counter += 1;\n\
    \        n /= 1;\n    }\n    counter += 1;\n    remainder = n % 1;\n    while\
    \ remainder == 0 || remainder == 1 {\n        remainder = n % 1;\n        counter\
    \ += 1;\n        n /= 1;\n    }\n    counter += 1;\n    remainder = n % 1;\n \
    \   while remainder == 0 || remainder == 1 {\n        remainder = n % 1;\n   \
    \     counter += 1;\n        n /= 1;\n    }\n    counter += 1;\n    remainder\
    \ = n % 1;\n    while remainder == 0 || remainder == 1 {\n        remainder =\
    \ n % 1;\n        counter += 1;\n        n /= 1;\n    }\n    counter += 1;\n \
    \   remainder = n % 1;\n    while remainder == 0 || remainder == 1 {\n       \
    \ remainder = n % 1;\n        counter += 1;\n        n /= 1;\n\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp40q_oas3.rs:112:3\n\
    \    |\n8   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n...\n95  |     while remainder == 0 || remainder\
    \ == 1 {\n    |                                            - this delimiter might\
    \ not be properly closed...\n...\n100 | }\n    | - ...as it matches this but it\
    \ has different indentation\n...\n112 | }\n    |   ^\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp40q_oas3.rs:8:27\n  |\n8 | fn fizz_buzz(n: isize) -> isize\
    \ {\n  |    ---------              ^^^^^ expected `isize`, found `()`\n  |   \
    \ |\n  |    implicitly returns `()` as its body has no tail or `return` expression\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut digits = n.to_string().chars().collect::<Vec<_>>();\n\
    \    digits.sort_by_key(|&x| x.to_digit(10).unwrap());\n    for i in 0..digits.len()\
    \ {\n        if digits[i] == '7' {\n            count += 1;\n        }\n     \
    \   if digits[i] == '9' {\n            count += 1;\n        }\n        if digits[i]\
    \ == '5' {\n            count += 1;\n        }\n        if digits[i] == '3' {\n\
    \            count += 1;\n        }\n        if digits[i] == '1' {\n         \
    \   count += 1;\n        }\n        if digits[i] == '0' {\n            count +=\
    \ 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmp26ukd3pz.rs:37:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in n.digits() { counter += if d % 11 == 0 || d %\
    \ 13 == 0 { 1 } else { 0 } }\n    counter\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `digits` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpmmjdg4tx.rs:10:16\n   |\n10 |     for d in n.digits() {\
    \ counter += if d % 11 == 0 || d % 13 == 0 { 1 } else { 0 } }\n   |          \
    \      ^^^^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n            n /= 11;\n       \
    \ }\n        if n % 13 == 0 {\n            count += 1;\n            n /= 13;\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:14:13\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |             n /= 11;\n   | \
    \            ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:18:13\n   |\n8 \
    \ | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider making\
    \ this binding mutable: `mut n`\n...\n18 |             n /= 13;\n   |        \
    \     ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n\n    let mut count = 0;\n\
    \    let mut digits = n.to_string().chars().collect::<Vec<_>>();\n    let mut\
    \ digits_len = digits.len();\n\n    while digits_len > 0 {\n        let digit\
    \ = digits.last();\n        if digit == '7' {\n            count += 1;\n     \
    \       digits.pop();\n        } else {\n            digits_len -= 1;\n      \
    \  }\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n \
    \   assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "warning: unused import: `std::cmp::Ordering`\n --> /tmp/tmp_la9a6iz.rs:9:9\n\
    \  |\n9 |     use std::cmp::Ordering;\n  |         ^^^^^^^^^^^^^^^^^^\n  |\n \
    \ = note: `#[warn(unused_imports)]` on by default\n\nwarning: the item `PartialOrd`\
    \ is imported redundantly\n   --> /tmp/tmp_la9a6iz.rs:10:9\n    |\n10  |     use\
    \ std::cmp::PartialOrd;\n    |         ^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused\
    \ import: `std::cmp::PartialOrd`\n  --> /tmp/tmp_la9a6iz.rs:10:9\n   |\n10 | \
    \    use std::cmp::PartialOrd;\n   |         ^^^^^^^^^^^^^^^^^^^^\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp_la9a6iz.rs:18:21\n   |\n18 |         if digit\
    \ == '7' {\n   |                     ^^^ expected enum `Option`, found `char`\n\
    \   |\n   = note: expected enum `Option<&char>`\n              found type `char`\n\
    \nerror: aborting due to previous error; 3 warnings emitted\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut n = n as isize;\n    while n > 0 {\n        if n\
    \ % 11 == 0 || n % 13 == 0 {\n            count += 1;\n        }\n        n /=\
    \ 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n  \
    \  assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmprkmrbt61.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n    \
    \    if remainder % 11 == 0 || remainder % 13 == 0 {\n            count += 1;\n\
    \        }\n        remainder /= 10;\n    }\n    count\n}\n\nfn main() {\n   \
    \ let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpc86fvw54.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut remainder = n % 11;\n    if remainder == 0 || remainder\
    \ == 13 {\n        count += 1;\n    }\n    remainder = n % 13;\n    if remainder\
    \ == 0 || remainder == 11 {\n        count += 1;\n    }\n    remainder = n % 7;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmpapxeyh1w.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ / 11)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmp0perk59s.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut i = 1;\n    while i <= n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += 1;\n        }\n        i += 1;\n  \
    \  }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `0`', /tmp/tmpp88837da.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpg6hsleyw.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut n = n as usize;\n    while n > 0 {\n        if n\
    \ % 11 == 0 || n % 13 == 0 {\n            count += 1;\n        }\n        n /=\
    \ 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n  \
    \  assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpq1e9ql4_.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut digits = n.to_string().chars().collect::<Vec<_>>();\n\
    \    for digit in digits {\n        if digit == '7' {\n            count += 1;\n\
    \        }\n        if digit == '9' {\n            count += 1;\n        }\n  \
    \      if digit == '3' {\n            count += 1;\n        }\n        if digit\
    \ == '5' {\n            count += 1;\n        }\n        if digit == '7' {\n  \
    \          count += 1;\n        }\n        if digit == '9' {\n            count\
    \ += 1;\n        }\n        if digit == '3' {\n            count += 1;\n     \
    \   }\n        if digit == '5' {\n            count += 1;\n        }\n       \
    \ if digit == '7' {\n            count += 1;\n        }\n        if digit == '9'\
    \ {\n            count += 1;\n        }\n        if digit == '3' {\n         \
    \   count += 1;\n        }\n        if digit == '5' {\n            count += 1;\n\
    \        }\n        if digit == '7' {\n            count += 1;\n        }\n  \
    \      if digit == '9' {\n            count += 1;\n        }\n        if digit\
    \ == '3' {\n            count += 1;\n        }\n        if digit == '5' {\n  \
    \          count += 1;\n        }\n        if digit == '7' {\n            count\
    \ += 1;\n        }\n        if digit == '9' {\n            count += 1;\n     \
    \   }\n        if digit == '3' {\n            count += 1;\n        }\n       \
    \ if digit == '5' {\n            count += 1;\n        }\n        if digit == '7'\
    \ {\n            count += 1;\n        }\n        if digit == '9' {\n         \
    \   count += 1;\n        }\n        if digit == '3' {\n            count += 1;\n\
    \        }\n        if digit == '5' {\n            count += 1;\n        }\n  \
    \      if digit == '7' {\n            count += 1;\n        }\n        if digit\
    \ == '9' {\n            count += 1;\n        }\n        if digit == '3' {\n  \
    \          count += 1;\n        }\n        if digit == '5' {\n            count\
    \ += 1;\n        }\n        if digit == '7' {\n            count += 1;\n     \
    \   }\n        if digit == '9' {\n            count += 1;\n        }\n       \
    \ if digit == '3' {\n            count += 1;\n        }\n        if digit == '5'\
    \ {\n            count += 1;\n        }\n        if digit == '7' {\n         \
    \   count += 1;\n        }\n        if digit == '9' {\n            count += 1;\n\
    \        }\n        if digit == '3' {\n\n}\n\nfn main() {\n    let candidate =\
    \ fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpm05r30zu.rs:128:3\n\
    \    |\n8   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n...\n11  |     for digit in digits {\n    | \
    \                        - unclosed delimiter\n...\n114 |         if digit ==\
    \ '3' {\n    |                         - this delimiter might not be properly\
    \ closed...\n115 | \n116 | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n128 | }\n    |   ^\n\nerror[E0308]: mismatched types\n   -->\
    \ /tmp/tmpm05r30zu.rs:11:5\n    |\n8   |   fn fizz_buzz(n: isize) -> isize {\n\
    \    |                             ----- expected `isize` because of return type\n\
    ...\n11  | /     for digit in digits {\n12  | |         if digit == '7' {\n13\
    \  | |             count += 1;\n14  | |         }\n...   |\n127 | |     assert_eq!(candidate(100000),\
    \ 8026);\n128 | | }\n    | |__^ expected `isize`, found `()`\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n            n /= 11;\n       \
    \ }\n        if n % 13 == 0 {\n            count += 1;\n            n /= 13;\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:14:13\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |             n /= 11;\n   | \
    \            ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:18:13\n   |\n8 \
    \ | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider making\
    \ this binding mutable: `mut n`\n...\n18 |             n /= 13;\n   |        \
    \     ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1) % 11 + 1\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmp4iq82aj3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut digits = n.to_string();\n    digits = digits.chars().filter(|&c|\
    \ c != '0').collect::<Vec<_>>();\n    for digit in digits {\n        if digit\
    \ == '7' {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpiv557c6s.rs:11:14\n   |\n\
    10 |     let mut digits = n.to_string();\n   |                      -------------\
    \ expected due to this value\n11 |     digits = digits.chars().filter(|&c| c !=\
    \ '0').collect::<Vec<_>>();\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected struct `String`, found struct `Vec`\n   |\n   = note: expected struct\
    \ `String`\n              found struct `Vec<char>`\n\nerror[E0277]: `String` is\
    \ not an iterator\n  --> /tmp/tmpiv557c6s.rs:12:18\n   |\n12 |     for digit in\
    \ digits {\n   |                  ^^^^^^ `String` is not an iterator; try calling\
    \ `.chars()` or `.bytes()`\n   |\n   = help: the trait `Iterator` is not implemented\
    \ for `String`\n   = note: required because of the requirements on the impl of\
    \ `IntoIterator` for `String`\n\nerror: aborting due to 2 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308.\nFor more information about\
    \ an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpg6hsleyw.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    while remainder == 0\
    \ || remainder == 13 {\n        counter += 1;\n        remainder = n % 11;\n \
    \       n /= 11;\n    }\n    counter += 1;\n    remainder = n % 13;\n    while\
    \ remainder == 0 || remainder == 11 {\n        counter += 1;\n        remainder\
    \ = n % 13;\n        n /= 13;\n    }\n    counter\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpjl3cq_w8.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpjl3cq_w8.rs:21:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n21 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut counter = 0;\n    while n > 0 {\n  \
    \      if n % 11 == 0 {\n            counter += 1;\n            n /= 11;\n   \
    \     }\n        if n % 13 == 0 {\n            counter += 1;\n            n /=\
    \ 13;\n        }\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpx2apl01v.rs:14:13\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |             n /= 11;\n   | \
    \            ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmpx2apl01v.rs:18:13\n   |\n8 \
    \ | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider making\
    \ this binding mutable: `mut n`\n...\n18 |             n /= 13;\n   |        \
    \     ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 11) + fizz_buzz(n - 13)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `0`', /tmp/tmpnohzj4k3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &d in &n {\n        if d % 11 == 0 || d % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: `&isize` is not an iterator\n  --> /tmp/tmpj9fkha8q.rs:10:15\n\
    \   |\n10 |     for &d in &n {\n   |               ^^ `&isize` is not an iterator\n\
    \   |\n   = help: the trait `Iterator` is not implemented for `&isize`\n   = note:\
    \ required because of the requirements on the impl of `IntoIterator` for `&isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n        }\n        if n % 13 ==\
    \ 0 {\n            count += 1;\n        }\n        n /= 11;\n        n /= 13;\n\
    \    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpz8_u5u_7.rs:18:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n18 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpz8_u5u_7.rs:19:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n19 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n    \
    \    if remainder % 11 == 0 || remainder % 13 == 0 {\n            count += 1;\n\
    \        }\n        remainder /= 10;\n    }\n    count\n}\n\nfn main() {\n   \
    \ let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpc86fvw54.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut n = n as usize;\n    while n > 0 {\n        if n\
    \ % 11 == 0 || n % 13 == 0 {\n            count += 1;\n        }\n        n /=\
    \ 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n  \
    \  assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpq1e9ql4_.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n        }\n        if n % 13 ==\
    \ 0 {\n            count += 1;\n        }\n        n /= 11;\n        n /= 13;\n\
    \    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpz8_u5u_7.rs:18:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n18 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpz8_u5u_7.rs:19:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n19 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    if remainder == 0 ||\
    \ remainder == 1 {\n        counter = counter + 1;\n    }\n    let mut remainder2\
    \ = n % 13;\n    if remainder2 == 0 || remainder2 == 1 {\n        counter = counter\
    \ + 1;\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `3`', /tmp/tmpq9lutzza.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpg6hsleyw.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ / 11)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmp0perk59s.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in n.checked_div(11).unwrap().checked_div(13).unwrap()\
    \ {\n        if d.is_zero() {\n            continue;\n        }\n        if d.is_one()\
    \ {\n            count += 1;\n        } else {\n            count += 2;\n    \
    \    }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n \
    \   assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: `isize` is not an iterator\n  --> /tmp/tmp4ywiojdp.rs:10:14\n\
    \   |\n10 |     for d in n.checked_div(11).unwrap().checked_div(13).unwrap() {\n\
    \   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `isize`\
    \ is not an iterator\n   |\n   = help: the trait `Iterator` is not implemented\
    \ for `isize`\n   = note: if you want to iterate between `start` until a value\
    \ `end`, use the exclusive range syntax `start..end` or the inclusive range syntax\
    \ `start..=end`\n   = note: required because of the requirements on the impl of\
    \ `IntoIterator` for `isize`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &d in n.to_string().chars() {\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '6' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '6' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '6' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if \n}\n\nfn main() {\n   \
    \ let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmphza8sgjo.rs:132:3\n\
    \    |\n8   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n9   |     let mut counter = 0;\n10  |     for\
    \ &d in n.to_string().chars() {\n    |                                     - this\
    \ delimiter might not be properly closed...\n...\n120 | }\n    | - ...as it matches\
    \ this but it has different indentation\n...\n132 | }\n    |   ^\n\nerror: expected\
    \ expression, found `}`\n   --> /tmp/tmphza8sgjo.rs:120:1\n    |\n120 | }\n  \
    \  | ^ expected expression\n\nerror[E0308]: mismatched types\n  --> /tmp/tmphza8sgjo.rs:10:9\n\
    \   |\n10 |     for &d in n.to_string().chars() {\n   |         ^^    ---------------------\
    \ this expression has type `Option<char>`\n   |         |\n   |         expected\
    \ `char`, found reference\n   |         help: you can probably remove the explicit\
    \ borrow: `d`\n   |\n   = note:   expected type `char`\n           found reference\
    \ `&_`\n\nerror[E0308]: mismatched types\n --> /tmp/tmphza8sgjo.rs:8:27\n  |\n\
    8 | fn fizz_buzz(n: isize) -> isize {\n  |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has\
    \ no tail or `return` expression\n\nerror: aborting due to 4 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpds4zc3sy.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in n.to_string().chars() {\n        match d {\n\
    \            '7' => counter = counter + 1,\n            '8' => counter = counter\
    \ + 1,\n            '9' => counter = counter + 1,\n            '0' => counter\
    \ = counter + 1,\n            _ => counter = counter + 0,\n        }\n    }\n\
    \    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `0`', /tmp/tmpon0akz_m.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ / 11)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmp0perk59s.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 11) + fizz_buzz(n - 13)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `89`,\n right: `0`', /tmp/tmpnohzj4k3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ / 11)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmp0perk59s.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in n.to_string().chars().filter(|c| c != '0') {\n\
    \        if d == '7' {\n            count += 1;\n        }\n        if d == '8'\
    \ {\n            count += 1;\n        }\n        if d == '9' {\n            count\
    \ += 1;\n        }\n        if d == '0' {\n            count += 1;\n        }\n\
    \        if d == '1' {\n            count += 1;\n        }\n        if d == '2'\
    \ {\n            count += 1;\n        }\n        if d == '3' {\n            count\
    \ += 1;\n        }\n        if d == '4' {\n            count += 1;\n        }\n\
    \        if d == '5' {\n            count += 1;\n        }\n        if d == '6'\
    \ {\n            count += 1;\n        }\n        if d == '7' {\n            count\
    \ += 1;\n        }\n        if d == '8' {\n            count += 1;\n        }\n\
    \        if d == '9' {\n            count += 1;\n        }\n        if d == '0'\
    \ {\n            count += 1;\n        }\n        if d == '1' {\n            count\
    \ += 1;\n        }\n        if d == '2' {\n            count += 1;\n        }\n\
    \        if d == '3' {\n            count += 1;\n        }\n        if d == '4'\
    \ {\n            count += 1;\n        }\n        if d == '5' {\n            count\
    \ += 1;\n        }\n        if d == '6' {\n            count += 1;\n        }\n\
    \        if d == '7' {\n            count += 1;\n        }\n        if d == '8'\
    \ {\n            count += 1;\n        }\n        if d == '9' {\n            count\
    \ += 1;\n        }\n        if d == '0' {\n            count += 1;\n        }\n\
    \        if d == '1' {\n            count += 1;\n        }\n        if d == '2'\
    \ {\n            count += 1;\n        }\n        if d == '3' {\n            count\
    \ += 1;\n        }\n        if d == '4' {\n            count += 1;\n        }\n\
    \        if d == '5' {\n            count += 1;\n        }\n        if d == '6'\
    \ {\n            count += 1;\n        }\n        if d == '7' {\n            count\
    \ += 1;\n        }\n        if d == '8' {\n            count += 1;\n        }\n\
    \        if d == '9' {\n            count += 1;\n        }\n        if d == '0'\
    \ {\n            count += 1;\n        }\n        if d == '1' {\n            count\
    \ += 1;\n        }\n        if d == '2' {\n            count \n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpaqr33vrq.rs:130:3\n\
    \    |\n8   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n9   |     let mut count = 0;\n10  |     for d\
    \ in n.to_string().chars().filter(|c| c != '0') {\n    |                     \
    \                                    - unclosed delimiter\n...\n116 |        \
    \ if d == '2' {\n    |                     - this delimiter might not be properly\
    \ closed...\n117 |             count \n118 | }\n    | - ...as it matches this\
    \ but it has different indentation\n...\n130 | }\n    |   ^\n\nerror[E0277]: can't\
    \ compare `&char` with `char`\n  --> /tmp/tmpaqr33vrq.rs:10:49\n   |\n10 |   \
    \  for d in n.to_string().chars().filter(|c| c != '0') {\n   |               \
    \                                  ^^ no implementation for `&char == char`\n\
    \   |\n   = help: the trait `PartialEq<char>` is not implemented for `&char`\n\
    \   = help: the trait `PartialEq` is implemented for `char`\n\nerror[E0308]: mismatched\
    \ types\n   --> /tmp/tmpaqr33vrq.rs:117:13\n    |\n116 | /         if d == '2'\
    \ {\n117 | |             count \n    | |             ^^^^^ expected `()`, found\
    \ integer\n118 | | }\n    | |_- expected this to be `()`\n    |\nhelp: you might\
    \ have meant to return this value\n    |\n117 |             return count; \n \
    \   |             ++++++      +\n\nerror[E0308]: mismatched types\n   --> /tmp/tmpaqr33vrq.rs:10:5\n\
    \    |\n8   |   fn fizz_buzz(n: isize) -> isize {\n    |                     \
    \        ----- expected `isize` because of return type\n9   |       let mut count\
    \ = 0;\n10  | /     for d in n.to_string().chars().filter(|c| c != '0') {\n11\
    \  | |         if d == '7' {\n12  | |             count += 1;\n13  | |       \
    \  }\n...   |\n129 | |     assert_eq!(candidate(100000), 8026);\n130 | | }\n \
    \   | |__^ expected `isize`, found `()`\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut i = 1;\n    while i <= n {\n        if n % i ==\
    \ 0 || n % i == 1 {\n            i += 1;\n        } else {\n            i += 2;\n\
    \        }\n        count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `28`,\n right: `0`', /tmp/tmpv0zey2ob.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1) % 11 + 1\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmp4iq82aj3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 11;\n        n /= 13;\n  \
    \  }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpj53i252i.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpj53i252i.rs:15:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n15 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &n in &n {\n        if n % 11 == 0 || n % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: `&isize` is not an iterator\n  --> /tmp/tmpka7mq3ay.rs:10:15\n\
    \   |\n10 |     for &n in &n {\n   |               ^^ `&isize` is not an iterator\n\
    \   |\n   = help: the trait `Iterator` is not implemented for `&isize`\n   = note:\
    \ required because of the requirements on the impl of `IntoIterator` for `&isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n            n /= 11;\n       \
    \ }\n        if n % 13 == 0 {\n            count += 1;\n            n /= 13;\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:14:13\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |             n /= 11;\n   | \
    \            ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:18:13\n   |\n8 \
    \ | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider making\
    \ this binding mutable: `mut n`\n...\n18 |             n /= 13;\n   |        \
    \     ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in n.digits() {\n        if d % 11 == 0 || d % 13\
    \ == 0 {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `digits` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpnzwtqgr5.rs:10:16\n   |\n10 |     for d in n.digits() {\n\
    \   |                ^^^^^^ method not found in `isize`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for n in 0..n {\n        if n % 11 == 0 || n % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmpz0hqdbl2.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut remainder = n % 11;\n    while remainder == 0 ||\
    \ remainder == 13 {\n        count += 1;\n        remainder = n % 11;\n      \
    \  n /= 11;\n    }\n    count += 1;\n    remainder = n % 13;\n    while remainder\
    \ == 0 || remainder == 11 {\n        count += 1;\n        remainder = n % 13;\n\
    \        n /= 13;\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpozirzn14.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpozirzn14.rs:21:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n21 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1) % 11\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `78`,\n right: `2`', /tmp/tmpamvv0lgj.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpg6hsleyw.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n\n    let mut counter =\
    \ 0;\n    let mut n = n as isize;\n    while n > 0 {\n        if n % 11 == 0 ||\
    \ n % 13 == 0 {\n            counter += 1;\n        }\n        n /= 10;\n    }\n\
    \    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpgqwi2gn3.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    while remainder >= 13\
    \ {\n        remainder -= 13;\n        counter += 1;\n    }\n    remainder +=\
    \ n % 11;\n    while remainder >= 11 {\n        remainder -= 11;\n        counter\
    \ += 1;\n    }\n    remainder += n % 7;\n    while remainder >= 7 {\n        remainder\
    \ -= 7;\n        counter += 1;\n    }\n    remainder += n % 3;\n    while remainder\
    \ >= 3 {\n        remainder -= 3;\n        counter += 1;\n    }\n    remainder\
    \ += n % 1;\n    while remainder >= 1 {\n        remainder -= 1;\n        counter\
    \ += 1;\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `0`', /tmp/tmpbmtl8p9z.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    while remainder == 0\
    \ || remainder == 13 {\n        counter += 1;\n        remainder = n % 11;\n \
    \       n /= 11;\n    }\n    counter += 1;\n    remainder = n % 13;\n    while\
    \ remainder == 0 || remainder == 11 {\n        counter += 1;\n        remainder\
    \ = n % 13;\n        n /= 13;\n    }\n    counter += 1;\n    remainder = n % 7;\n\
    \    while remainder == 0 || remainder == 7 {\n        counter += 1;\n       \
    \ remainder = n % 7;\n        n /= 7;\n    }\n    counter += 1;\n    remainder\
    \ = n % 5;\n    while remainder == 0 || remainder == 5 {\n        counter += 1;\n\
    \        remainder = n % 5;\n        n /= 5;\n    }\n    counter += 1;\n    remainder\
    \ = n % 3;\n    while remainder == 0 || remainder == 3 {\n        counter += 1;\n\
    \        remainder = n % 3;\n        n /= 3;\n    }\n    counter += 1;\n    remainder\
    \ = n % 1;\n    while remainder == 0 || remainder == 1 {\n        counter += 1;\n\
    \        remainder = n % 1;\n        n /= 1;\n    }\n    counter += 1;\n    remainder\
    \ = n % 1;\n    while remainder == 0 || remainder == 1 {\n        counter += 1;\n\
    \        remainder = n % 1;\n        n /= 1;\n    }\n    counter += 1;\n    remainder\
    \ = n % 1;\n    while remainder == 0 || remainder == 1 {\n        counter += 1;\n\
    \        remainder = n % 1;\n        n /= 1;\n    }\n    counter += 1;\n    remainder\
    \ = n % 1;\n    while remainder == 0 || remainder == 1 {\n        counter += 1;\n\
    \        remainder = n % 1;\n        n /= 1;\n    }\n    counter += 1;\n    remainder\
    \ = n % 1;\n    while remainder == 0 || remainder == 1 {\n        counter += 1;\n\
    \        remainder = n % 1;\n        n /= 1;\n    }\n    counter += 1;\n    remainder\
    \ = n % 1;\n    while remainder == 0 || remainder == 1 {\n        counter += 1;\n\
    \        remainder = n % 1;\n        n /= 1;\n    }\n    counter += 1;\n    remainder\
    \ = n % 1;\n    while remainder == 0 || remainder == 1 {\n        counter += 1;\n\
    \        remainder = n % 1;\n        n /= 1;\n    }\n    counter += 1;\n    remainder\
    \ = n % 1;\n    while remainder == 0 || remainder == 1 {\n        counter += 1;\n\
    \        remainder = n % 1;\n        n /= 1;\n\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmprqrgoaew.rs:112:3\n\
    \    |\n8   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n...\n95  |     while remainder == 0 || remainder\
    \ == 1 {\n    |                                            - this delimiter might\
    \ not be properly closed...\n...\n100 | }\n    | - ...as it matches this but it\
    \ has different indentation\n...\n112 | }\n    |   ^\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmprqrgoaew.rs:8:27\n  |\n8 | fn fizz_buzz(n: isize) -> isize\
    \ {\n  |    ---------              ^^^^^ expected `isize`, found `()`\n  |   \
    \ |\n  |    implicitly returns `()` as its body has no tail or `return` expression\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n            n /= 11;\n       \
    \ }\n        if n % 13 == 0 {\n            count += 1;\n            n /= 13;\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:14:13\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |             n /= 11;\n   | \
    \            ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:18:13\n   |\n8 \
    \ | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider making\
    \ this binding mutable: `mut n`\n...\n18 |             n /= 13;\n   |        \
    \     ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut digits = n.to_string().chars().collect::<Vec<_>>();\n\
    \    digits.sort_unstable();\n    for digit in digits {\n        if digit == '7'\
    \ {\n            count += 1;\n        }\n        if digit == '9' {\n         \
    \   count += 1;\n        }\n        if digit == '11' {\n            count += 1;\n\
    \        }\n        if digit == '13' {\n            count += 1;\n        }\n \
    \   }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error: character literal may only contain one codepoint\n  --> /tmp/tmpxmiwcsvq.rs:19:21\n\
    \   |\n19 |         if digit == '11' {\n   |                     ^^^^\n   |\n\
    help: if you meant to write a `str` literal, use double quotes\n   |\n19 |   \
    \      if digit == \"11\" {\n   |                     ~~~~\n\nerror: character\
    \ literal may only contain one codepoint\n  --> /tmp/tmpxmiwcsvq.rs:22:21\n  \
    \ |\n22 |         if digit == '13' {\n   |                     ^^^^\n   |\nhelp:\
    \ if you meant to write a `str` literal, use double quotes\n   |\n22 |       \
    \  if digit == \"13\" {\n   |                     ~~~~\n\nerror: aborting due\
    \ to 2 previous errors\n\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut i = 1;\n    while i <= n {\n        if n % i ==\
    \ 0 || n % i == 1 {\n            count += 1;\n        }\n        i += 1;\n   \
    \ }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp_3_pm2u5.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    while remainder == 0\
    \ || remainder == 13 {\n        counter += 1;\n        remainder = n % 11;\n \
    \       n /= 11;\n    }\n    counter += 1;\n    remainder = n % 13;\n    while\
    \ remainder == 0 || remainder == 11 {\n        counter += 1;\n        remainder\
    \ = n % 13;\n        n /= 13;\n    }\n    counter += 1;\n    remainder = n % 7;\n\
    \    while remainder == 0 || remainder == 7 {\n        counter += 1;\n       \
    \ remainder = n % 7;\n        n /= 7;\n    }\n    counter\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpwh8j_0wq.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpwh8j_0wq.rs:21:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n21 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpwh8j_0wq.rs:28:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n28 |         n /= 7;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n            n /= 11;\n       \
    \ }\n        if n % 13 == 0 {\n            count += 1;\n            n /= 13;\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:14:13\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |             n /= 11;\n   | \
    \            ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:18:13\n   |\n8 \
    \ | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider making\
    \ this binding mutable: `mut n`\n...\n18 |             n /= 13;\n   |        \
    \     ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &d in &n {\n        if d % 11 == 0 || d % 13 == 0\
    \ {\n            counter += 1;\n        }\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0277]: `&isize` is not an iterator\n  --> /tmp/tmpj9fkha8q.rs:10:15\n\
    \   |\n10 |     for &d in &n {\n   |               ^^ `&isize` is not an iterator\n\
    \   |\n   = help: the trait `Iterator` is not implemented for `&isize`\n   = note:\
    \ required because of the requirements on the impl of `IntoIterator` for `&isize`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut remainder = n % 11;\n    while remainder >= 13 {\n\
    \        remainder -= 13;\n        count += 1;\n    }\n    remainder += n % 11;\n\
    \    while remainder >= 11 {\n        remainder -= 11;\n        count += 1;\n\
    \    }\n    remainder += n % 7;\n    while remainder >= 7 {\n        remainder\
    \ -= 7;\n        count += 1;\n    }\n    remainder += n % 3;\n    while remainder\
    \ >= 3 {\n        remainder -= 3;\n        count += 1;\n    }\n    remainder +=\
    \ n % 1;\n    while remainder >= 1 {\n        remainder -= 1;\n        count +=\
    \ 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n   \
    \ assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `0`', /tmp/tmpz0ij00dk.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    while remainder >= 13\
    \ {\n        counter += 1;\n        remainder -= 13;\n    }\n    remainder +=\
    \ n % 11;\n    while remainder >= 11 {\n        counter += 1;\n        remainder\
    \ -= 11;\n    }\n    counter += 1;\n    remainder += n % 7;\n    while remainder\
    \ >= 7 {\n        counter += 1;\n        remainder -= 7;\n    }\n    counter +=\
    \ 1;\n    remainder += n % 3;\n    while remainder >= 3 {\n        counter +=\
    \ 1;\n        remainder -= 3;\n    }\n    counter += 1;\n    remainder += n %\
    \ 1;\n    while remainder >= 1 {\n        counter += 1;\n        remainder -=\
    \ 1;\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n \
    \   assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpo2t1x9ow.rs:43:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpg6hsleyw.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    while remainder == 0\
    \ || remainder == 13 {\n        remainder = n % 11;\n        counter += 1;\n \
    \       n /= 11;\n    }\n    counter += 1;\n    remainder = n % 13;\n    while\
    \ remainder == 0 || remainder == 11 {\n        remainder = n % 13;\n        counter\
    \ += 1;\n        n /= 13;\n    }\n    counter += 1;\n    remainder = n % 7;\n\
    \    while remainder == 0 || remainder == 7 {\n        remainder = n % 7;\n  \
    \      counter += 1;\n        n /= 7;\n    }\n    counter += 1;\n    remainder\
    \ = n % 5;\n    while remainder == 0 || remainder == 5 {\n        remainder =\
    \ n % 5;\n        counter += 1;\n        n /= 5;\n    }\n    counter += 1;\n \
    \   remainder = n % 3;\n    while remainder == 0 || remainder == 3 {\n       \
    \ remainder = n % 3;\n        counter += 1;\n        n /= 3;\n    }\n    counter\
    \ += 1;\n    remainder = n % 1;\n    while remainder == 0 || remainder == 1 {\n\
    \        remainder = n % 1;\n        counter += 1;\n        n /= 1;\n    }\n \
    \   counter += 1;\n    remainder = n % 1;\n    while remainder == 0 || remainder\
    \ == 1 {\n        remainder = n % 1;\n        counter += 1;\n        n /= 1;\n\
    \    }\n    counter += 1;\n    remainder = n % 1;\n    while remainder == 0 ||\
    \ remainder == 1 {\n        remainder = n % 1;\n        counter += 1;\n      \
    \  n /= 1;\n    }\n    counter += 1;\n    remainder = n % 1;\n    while remainder\
    \ == 0 || remainder == 1 {\n        remainder = n % 1;\n        counter += 1;\n\
    \        n /= 1;\n    }\n    counter += 1;\n    remainder = n % 1;\n    while\
    \ remainder == 0 || remainder == 1 {\n        remainder = n % 1;\n        counter\
    \ += 1;\n        n /= 1;\n    }\n    counter += 1;\n    remainder = n % 1;\n \
    \   while remainder == 0 || remainder == 1 {\n        remainder = n % 1;\n   \
    \     counter += 1;\n        n /= 1;\n    }\n    counter += 1;\n    remainder\
    \ = n % 1;\n    while remainder == 0 || remainder == 1 {\n        remainder =\
    \ n % 1;\n        counter += 1;\n        n /= 1;\n    }\n    counter += 1;\n \
    \   remainder = n % 1;\n    while remainder == 0 || remainder == 1 {\n       \
    \ remainder = n % 1;\n        counter += 1;\n        n /= 1;\n\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp40q_oas3.rs:112:3\n\
    \    |\n8   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n...\n95  |     while remainder == 0 || remainder\
    \ == 1 {\n    |                                            - this delimiter might\
    \ not be properly closed...\n...\n100 | }\n    | - ...as it matches this but it\
    \ has different indentation\n...\n112 | }\n    |   ^\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp40q_oas3.rs:8:27\n  |\n8 | fn fizz_buzz(n: isize) -> isize\
    \ {\n  |    ---------              ^^^^^ expected `isize`, found `()`\n  |   \
    \ |\n  |    implicitly returns `()` as its body has no tail or `return` expression\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut n = n as usize;\n    while n > 0 {\n        if n\
    \ % 11 == 0 || n % 13 == 0 {\n            count += 1;\n        }\n        n /=\
    \ 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n  \
    \  assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpq1e9ql4_.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &d in n.to_string().chars() {\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '6' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '6' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if d == '3' {\n           \
    \ counter += 1;\n        }\n        if d == '4' {\n            counter += 1;\n\
    \        }\n        if d == '5' {\n            counter += 1;\n        }\n    \
    \    if d == '6' {\n            counter += 1;\n        }\n        if d == '7'\
    \ {\n            counter += 1;\n        }\n        if d == '8' {\n           \
    \ counter += 1;\n        }\n        if d == '9' {\n            counter += 1;\n\
    \        }\n        if d == '0' {\n            counter += 1;\n        }\n    \
    \    if d == '1' {\n            counter += 1;\n        }\n        if d == '2'\
    \ {\n            counter += 1;\n        }\n        if \n}\n\nfn main() {\n   \
    \ let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmphza8sgjo.rs:132:3\n\
    \    |\n8   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n9   |     let mut counter = 0;\n10  |     for\
    \ &d in n.to_string().chars() {\n    |                                     - this\
    \ delimiter might not be properly closed...\n...\n120 | }\n    | - ...as it matches\
    \ this but it has different indentation\n...\n132 | }\n    |   ^\n\nerror: expected\
    \ expression, found `}`\n   --> /tmp/tmphza8sgjo.rs:120:1\n    |\n120 | }\n  \
    \  | ^ expected expression\n\nerror[E0308]: mismatched types\n  --> /tmp/tmphza8sgjo.rs:10:9\n\
    \   |\n10 |     for &d in n.to_string().chars() {\n   |         ^^    ---------------------\
    \ this expression has type `Option<char>`\n   |         |\n   |         expected\
    \ `char`, found reference\n   |         help: you can probably remove the explicit\
    \ borrow: `d`\n   |\n   = note:   expected type `char`\n           found reference\
    \ `&_`\n\nerror[E0308]: mismatched types\n --> /tmp/tmphza8sgjo.rs:8:27\n  |\n\
    8 | fn fizz_buzz(n: isize) -> isize {\n  |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has\
    \ no tail or `return` expression\n\nerror: aborting due to 4 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n        }\n        if n % 13 ==\
    \ 0 {\n            count += 1;\n        }\n        n /= 11;\n        n /= 13;\n\
    \    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpz8_u5u_7.rs:18:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n18 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpz8_u5u_7.rs:19:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n19 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in n.digits() {\n        if d % 11 == 0 || d % 13\
    \ == 0 {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `digits` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpnzwtqgr5.rs:10:16\n   |\n10 |     for d in n.digits() {\n\
    \   |                ^^^^^^ method not found in `isize`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0599`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut i = 1;\n    while i <= n {\n        if n % i ==\
    \ 0 || n % i == 1 {\n            count += 1;\n        }\n        i += 1;\n   \
    \ }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `0`', /tmp/tmp_3_pm2u5.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut remainder = n % 11;\n    while remainder == 0 ||\
    \ remainder == 13 {\n        count += 1;\n        remainder = n % 11;\n      \
    \  n /= 11;\n    }\n    count += 1;\n    remainder = n % 13;\n    while remainder\
    \ == 0 || remainder == 11 {\n        count += 1;\n        remainder = n % 13;\n\
    \        n /= 13;\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpozirzn14.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpozirzn14.rs:21:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n21 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 11;\n        n /= 13;\n  \
    \  }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpj53i252i.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpj53i252i.rs:15:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n15 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ / 11)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `0`', /tmp/tmp0perk59s.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n    \
    \    if remainder % 11 == 0 || remainder % 13 == 0 {\n            count += 1;\n\
    \        }\n        remainder /= 10;\n    }\n    count\n}\n\nfn main() {\n   \
    \ let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpc86fvw54.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n            n /= 11;\n       \
    \ }\n        if n % 13 == 0 {\n            count += 1;\n            n /= 13;\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:14:13\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |             n /= 11;\n   | \
    \            ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:18:13\n   |\n8 \
    \ | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider making\
    \ this binding mutable: `mut n`\n...\n18 |             n /= 13;\n   |        \
    \     ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n\n    let mut counter =\
    \ 0;\n    let mut remainder = n;\n\n    while remainder > 0 {\n        if remainder\
    \ % 11 == 0 || remainder % 13 == 0 {\n            counter += 1;\n        }\n \
    \       remainder /= 10;\n    }\n\n    counter\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpqasbb26v.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for &d in n.to_string().chars() {\n        if d == '7' {\n\
    \            count += 1;\n        }\n        if d == '8' {\n            count\
    \ += 1;\n        }\n        if d == '9' {\n            count += 1;\n        }\n\
    \        if d == '0' {\n            count += 1;\n        }\n        if d == '1'\
    \ {\n            count += 1;\n        }\n        if d == '2' {\n            count\
    \ += 1;\n        }\n        if d == '3' {\n            count += 1;\n        }\n\
    \        if d == '4' {\n            count += 1;\n        }\n        if d == '5'\
    \ {\n            count += 1;\n        }\n        if d == '6' {\n            count\
    \ += 1;\n        }\n        if d == '7' {\n            count += 1;\n        }\n\
    \        if d == '8' {\n            count += 1;\n        }\n        if d == '9'\
    \ {\n            count += 1;\n        }\n        if d == '0' {\n            count\
    \ += 1;\n        }\n        if d == '1' {\n            count += 1;\n        }\n\
    \        if d == '2' {\n            count += 1;\n        }\n        if d == '3'\
    \ {\n            count += 1;\n        }\n        if d == '4' {\n            count\
    \ += 1;\n        }\n        if d == '5' {\n            count += 1;\n        }\n\
    \        if d == '6' {\n            count += 1;\n        }\n        if d == '7'\
    \ {\n            count += 1;\n        }\n        if d == '8' {\n            count\
    \ += 1;\n        }\n        if d == '9' {\n            count += 1;\n        }\n\
    \        if d == '0' {\n            count += 1;\n        }\n        if d == '1'\
    \ {\n            count += 1;\n        }\n        if d == '2' {\n            count\
    \ += 1;\n        }\n        if d == '3' {\n            count += 1;\n        }\n\
    \        if d == '4' {\n            count += 1;\n        }\n        if d == '5'\
    \ {\n            count += 1;\n        }\n        if d == '6' {\n            count\
    \ += 1;\n        }\n        if d == '7' {\n            count += 1;\n        }\n\
    \        if d == '8' {\n            count += 1;\n        }\n        if d == '9'\
    \ {\n            count += 1;\n        }\n        if d == '0' {\n            count\
    \ += 1;\n        }\n        if d == '1' {\n            count += 1;\n        }\n\
    \        if d == '2' {\n            count += 1;\n        }\n        if d \n}\n\
    \nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp64ly_tfo.rs:132:3\n\
    \    |\n8   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n9   |     let mut count = 0;\n10  |     for &d\
    \ in n.to_string().chars() {\n    |                                     - this\
    \ delimiter might not be properly closed...\n...\n120 | }\n    | - ...as it matches\
    \ this but it has different indentation\n...\n132 | }\n    |   ^\n\nerror: expected\
    \ `{`, found `}`\n   --> /tmp/tmp64ly_tfo.rs:120:1\n    |\n119 |         if d\
    \ \n    |         -- this `if` expression has a condition, but no block\n120 |\
    \ }\n    | ^ expected `{`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp64ly_tfo.rs:10:9\n\
    \   |\n10 |     for &d in n.to_string().chars() {\n   |         ^^    ---------------------\
    \ this expression has type `Option<char>`\n   |         |\n   |         expected\
    \ `char`, found reference\n   |         help: you can probably remove the explicit\
    \ borrow: `d`\n   |\n   = note:   expected type `char`\n           found reference\
    \ `&_`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp64ly_tfo.rs:8:27\n  |\n\
    8 | fn fizz_buzz(n: isize) -> isize {\n  |    ---------              ^^^^^ expected\
    \ `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has\
    \ no tail or `return` expression\n\nerror: aborting due to 4 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n            n /= 11;\n       \
    \ }\n        if n % 13 == 0 {\n            count += 1;\n            n /= 13;\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:14:13\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |             n /= 11;\n   | \
    \            ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:18:13\n   |\n8 \
    \ | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider making\
    \ this binding mutable: `mut n`\n...\n18 |             n /= 13;\n   |        \
    \     ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1) % 11 + 1\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmp4iq82aj3.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    use\
    \ std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n\n    if n < 0 {\n     \
    \   0\n    } else if n < 10 {\n        n\n    } else if n < 100 {\n        if\
    \ n % 11 == 0 || n % 13 == 0 {\n            fizz_buzz(n - 10)\n        } else\
    \ {\n            fizz_buzz(n - 100)\n        }\n    } else if n < 1000 {\n   \
    \     if n % 11 == 0 || n % 13 == 0 {\n            fizz_buzz(n - 100)\n      \
    \  } else {\n            fizz_buzz(n - 1000)\n        }\n    } else if n < 10000\
    \ {\n        if n % 11 == 0 || n % 13 == 0 {\n            fizz_buzz(n - 1000)\n\
    \        } else {\n            fizz_buzz(n - 10000)\n        }\n    } else if\
    \ n < 100000 {\n        if n % 11 == 0 || n % 13 == 0 {\n            fizz_buzz(n\
    \ - 10000)\n        } else {\n            fizz_buzz(n - 100000)\n        }\n \
    \   } else if n < 1000000 {\n        if n % 11 == 0 || n % 13 == 0 {\n       \
    \     fizz_buzz(n - 100000)\n        } else {\n            fizz_buzz(n - 1000000)\n\
    \        }\n    } else if n < 10000000 {\n        if n % 11 == 0 || n % 13 ==\
    \ 0 {\n            fizz_buzz(n - 1000000)\n        } else {\n            fizz_buzz(n\
    \ - 10000000)\n        }\n    } else if n < 100000000 {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            fizz_buzz(n - 10000000)\n        } else {\n\
    \            fizz_buzz(n - 100000000)\n        }\n    } else if n < 1000000000\
    \ {\n        if n % 11 == 0 || n % 13 == 0 {\n            fizz_buzz(n - 100000000)\n\
    \        } else {\n            fizz_buzz(n - 1000000000)\n        }\n    } else\
    \ if n < 10000000000 {\n        if n % 11 == 0 || n % 13 == 0 {\n            fizz_buzz(n\
    \ - 1000000000)\n        } else {\n            fizz_buzz(n - 10000000000)\n  \
    \      }\n    } else if n < 100000000000 {\n        if n % 11 == 0 || n % 13 ==\
    \ 0 {\n            fizz_buzz(n - 10000000000)\n        } else {\n            fizz_buzz(n\
    \ - 100000000000)\n        }\n    } else if n < 1000000000000 {\n        if n\
    \ % 11 == 0 || n % 13 == 0 {\n            fizz_buzz(n - 100000000000)\n      \
    \  } else {\n            fizz_buzz(n - 100\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp8e36_vp4.rs:93:3\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |                          \
    \       - unclosed delimiter\n...\n76 |     } else if n < 1000000000000 {\n  \
    \ |                                 - unclosed delimiter\n...\n79 |         }\
    \ else {\n   |                - this delimiter might not be properly closed...\n\
    80 |             fizz_buzz(n - 100\n81 | }\n   | - ...as it matches this but it\
    \ has different indentation\n...\n93 | }\n   |   ^\n\nerror: mismatched closing\
    \ delimiter: `}`\n  --> /tmp/tmp8e36_vp4.rs:80:22\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |                                 - closing delimiter\
    \ possibly meant for this\n...\n80 |             fizz_buzz(n - 100\n   |     \
    \                 ^ unclosed delimiter\n81 | }\n   | ^ mismatched closing delimiter\n\
    \nwarning: unused import: `std::cmp::Ordering`\n --> /tmp/tmp8e36_vp4.rs:9:9\n\
    \  |\n9 |     use std::cmp::Ordering;\n  |         ^^^^^^^^^^^^^^^^^^\n  |\n \
    \ = note: `#[warn(unused_imports)]` on by default\n\nwarning: the item `PartialOrd`\
    \ is imported redundantly\n   --> /tmp/tmp8e36_vp4.rs:10:9\n    |\n10  |     use\
    \ std::cmp::PartialOrd;\n    |         ^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused\
    \ import: `std::cmp::PartialOrd`\n  --> /tmp/tmp8e36_vp4.rs:10:9\n   |\n10 | \
    \    use std::cmp::PartialOrd;\n   |         ^^^^^^^^^^^^^^^^^^^^\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp8e36_vp4.rs:78:13\n   |\n77 | /         if n\
    \ % 11 == 0 || n % 13 == 0 {\n78 | |             fizz_buzz(n - 100000000000)\n\
    \   | |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found `isize`\n\
    79 | |         } else {\n80 | |             fizz_buzz(n - 100\n81 | | }\n   |\
    \ |_- expected this to be `()`\n   |\nhelp: consider using a semicolon here\n\
    \   |\n78 |             fizz_buzz(n - 100000000000);\n   |                   \
    \                     +\nhelp: consider using a semicolon here\n   |\n81 | };\n\
    \   |  +\nhelp: you might have meant to return this value\n   |\n78 |        \
    \     return fizz_buzz(n - 100000000000);\n   |             ++++++           \
    \                 +\n\nerr"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut remainder = n % 11;\n    if remainder == 0 || remainder\
    \ == 13 {\n        count += 1;\n    }\n    remainder = n % 13;\n    if remainder\
    \ == 0 || remainder == 11 {\n        count += 1;\n    }\n    remainder = n % 7;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 5;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 3;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 1;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 9;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 7;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 5;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 3;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 1;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 9;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 7;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 5;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 3;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 1;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 9;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 7;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 5;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 3;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 1;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 9;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 7;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 5;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 3;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    remainder = n % 1;\n\
    \    if remainder == 0 {\n        count += 1;\n    }\n    re\n}\n\nfn main() {\n\
    \    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `re` in this scope\n   --> /tmp/tmp1bea85u3.rs:114:5\n\
    \    |\n114 |     re\n    |     ^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    fn\
    \ is_divisible_by_11(n: isize) -> bool {\n        n % 11 == 0 || n % 13 == 0\n\
    \    }\n\n    fn is_divisible_by_13(n: isize) -> bool {\n        n % 13 == 0 ||\
    \ n % 11 == 0\n    }\n\n    if is_divisible_by_11(n) {\n        if is_divisible_by_13(n)\
    \ {\n            0\n        } else {\n            1\n        }\n    } else {\n\
    \        if is_divisible_by_13(n) {\n            2\n        } else {\n       \
    \     3\n        }\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `0`', /tmp/tmp0g0qicfq.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n            n /= 11;\n       \
    \ }\n        if n % 13 == 0 {\n            count += 1;\n            n /= 13;\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:14:13\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |             n /= 11;\n   | \
    \            ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:18:13\n   |\n8 \
    \ | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider making\
    \ this binding mutable: `mut n`\n...\n18 |             n /= 13;\n   |        \
    \     ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut remainder = 0;\n    while n > 0 {\n        remainder\
    \ = n % 11;\n        if remainder == 0 || remainder == 7 {\n            count\
    \ += 1;\n        }\n        n /= 11;\n    }\n    count\n}\n\nfn main() {\n   \
    \ let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "warning: value assigned to `remainder` is never read\n  --> /tmp/tmp_q7e8pwp.rs:10:13\n\
    \   |\n10 |     let mut remainder = 0;\n   |             ^^^^^^^^^\n   |\n   =\
    \ note: `#[warn(unused_assignments)]` on by default\n   = help: maybe it is overwritten\
    \ before being read?\n\nerror[E0384]: cannot assign to immutable argument `n`\n\
    \  --> /tmp/tmp_q7e8pwp.rs:16:9\n   |\n8  | fn fizz_buzz(n: isize) -> isize {\n\
    \   |              - help: consider making this binding mutable: `mut n`\n...\n\
    16 |         n /= 11;\n   |         ^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error; 1 warning emitted\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut remainder = n % 11;\n    while remainder == 0 ||\
    \ remainder == 13 {\n        count += 1;\n        remainder = n % 11;\n      \
    \  n /= 11;\n    }\n    count += 1;\n    remainder = n % 13;\n    while remainder\
    \ == 0 || remainder == 11 {\n        count += 1;\n        remainder = n % 13;\n\
    \        n /= 13;\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpozirzn14.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpozirzn14.rs:21:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n21 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for d in n.digits().filter(|&d| d != 7) {\n        if\
    \ d % 11 == 0 || d % 13 == 0 {\n            counter += 1;\n        }\n    }\n\
    \    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `digits` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmprvd0rycy.rs:10:16\n   |\n10 |     for d in n.digits().filter(|&d|\
    \ d != 7) {\n   |                ^^^^^^ method not found in `isize`\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    let mut n = n as usize;\n    while n > 0 {\n        if n\
    \ % 11 == 0 || n % 13 == 0 {\n            count += 1;\n        }\n        n /=\
    \ 11;\n        n /= 13;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpsv43la57.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpvvorl8o2.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    for &d in n.to_string().chars().filter(|&c| c != '0')\
    \ {\n        if d == '7' {\n            counter += 1;\n        }\n        if d\
    \ == '9' {\n            counter += 1;\n        }\n        if d == '3' {\n    \
    \        counter += 1;\n        }\n        if d == '5' {\n            counter\
    \ += 1;\n        }\n        if d == '7' {\n            counter += 1;\n       \
    \ }\n        if d == '9' {\n            counter += 1;\n        }\n        if d\
    \ == '3' {\n            counter += 1;\n        }\n        if d == '5' {\n    \
    \        counter += 1;\n        }\n        if d == '7' {\n            counter\
    \ += 1;\n        }\n        if d == '9' {\n            counter += 1;\n       \
    \ }\n        if d == '3' {\n            counter += 1;\n        }\n        if d\
    \ == '5' {\n            counter += 1;\n        }\n        if d == '7' {\n    \
    \        counter += 1;\n        }\n        if d == '9' {\n            counter\
    \ += 1;\n        }\n        if d == '3' {\n            counter += 1;\n       \
    \ }\n        if d == '5' {\n            counter += 1;\n        }\n        if d\
    \ == '7' {\n            counter += 1;\n        }\n        if d == '9' {\n    \
    \        counter += 1;\n        }\n        if d == '3' {\n            counter\
    \ += 1;\n        }\n        if d == '5' {\n            counter += 1;\n       \
    \ }\n        if d == '7' {\n            counter += 1;\n        }\n        if d\
    \ == '9' {\n            counter += 1;\n        }\n        if d == '3' {\n    \
    \        counter += 1;\n        }\n        if d == '5' {\n            counter\
    \ += 1;\n        }\n        if d == '7' {\n            counter += 1;\n       \
    \ }\n        if d == '9' {\n            counter += 1;\n        }\n        if d\
    \ == '3' {\n            counter += 1;\n        }\n        if d == '5' {\n    \
    \        counter += 1;\n        }\n        if d == '7' {\n            counter\
    \ += 1;\n        }\n        if d == '9' {\n            counter += 1;\n       \
    \ }\n        if d == '3' {\n            counter += 1;\n        }\n        if d\
    \ == '5' {\n            counter += 1;\n        }\n        if d == '7' {\n    \
    \        counter += 1;\n        }\n        if d == '9' {\n            counter\
    \ += 1;\n        }\n        if d == '3' {\n            counter += 1;\n\n}\n\n\
    fn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n\
    \    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100),\
    \ 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n\
    \    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpqssttg55.rs:128:3\n\
    \    |\n8   | fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \          - unclosed delimiter\n9   |     let mut counter = 0;\n10  |     for\
    \ &d in n.to_string().chars().filter(|&c| c != '0') {\n    |                 \
    \                                          - unclosed delimiter\n...\n113 |  \
    \       if d == '3' {\n    |                     - this delimiter might not be\
    \ properly closed...\n...\n116 | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n128 | }\n    |   ^\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpqssttg55.rs:10:9\n   |\n10 |     for &d in n.to_string().chars().filter(|&c|\
    \ c != '0') {\n   |         ^^    -------------------------------------------\
    \ this expression has type `Option<char>`\n   |         |\n   |         expected\
    \ `char`, found reference\n   |         help: you can probably remove the explicit\
    \ borrow: `d`\n   |\n   = note:   expected type `char`\n           found reference\
    \ `&_`\n\nerror[E0308]: mismatched types\n   --> /tmp/tmpqssttg55.rs:10:5\n  \
    \  |\n8   |   fn fizz_buzz(n: isize) -> isize {\n    |                       \
    \      ----- expected `isize` because of return type\n9   |       let mut counter\
    \ = 0;\n10  | /     for &d in n.to_string().chars().filter(|&c| c != '0') {\n\
    11  | |         if d == '7' {\n12  | |             counter += 1;\n13  | |    \
    \     }\n...   |\n127 | |     assert_eq!(candidate(100000), 8026);\n128 | | }\n\
    \    | |__^ expected `isize`, found `()`\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n            n /= 11;\n       \
    \ }\n        if n % 13 == 0 {\n            count += 1;\n            n /= 13;\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n\
    \    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:14:13\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |             n /= 11;\n   | \
    \            ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `n`\n  --> /tmp/tmp5gj1gaip.rs:18:13\n   |\n8 \
    \ | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider making\
    \ this binding mutable: `mut n`\n...\n18 |             n /= 13;\n   |        \
    \     ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 11;\n        n /= 13;\n  \
    \  }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpj53i252i.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpj53i252i.rs:15:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n15 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n;\n    while remainder > 0 {\n  \
    \      if remainder % 11 == 0 || remainder % 13 == 0 {\n            counter +=\
    \ 1;\n        }\n        remainder /= 10;\n    }\n    counter\n}\n\nfn main()\
    \ {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78),\
    \ 2);\n    assert_eq!(candidate(79), 3);\n    assert_eq!(candidate(100), 3);\n\
    \    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000), 192);\n \
    \   assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000), 8026);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `2`', /tmp/tmpg6hsleyw.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut count = 0;\n    for d in n.checked_mul(10).digits(10) {\n        if d %\
    \ 11 == 0 || d % 13 == 0 {\n            count += 1;\n        }\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `digits` found for enum `Option` in the current\
    \ scope\n  --> /tmp/tmp8_y1rk8o.rs:10:32\n   |\n10 |     for d in n.checked_mul(10).digits(10)\
    \ {\n   |                                ^^^^^^ method not found in `Option<isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `44`,\n right: `0`', /tmp/tmpds4zc3sy.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        0\n    } else {\n        1 + fizz_buzz(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpgro46_tj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    while n > 0 {\n        if n % 11 == 0 || n % 13 == 0 {\n\
    \            counter += 1;\n        }\n        n /= 10;\n    }\n    counter\n\
    }\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbq4jlj6l.rs:14:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n14 |         n /= 10;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    let\
    \ mut counter = 0;\n    let mut remainder = n % 11;\n    while remainder >= 13\
    \ {\n        counter += 1;\n        remainder -= 13;\n    }\n    remainder +=\
    \ n % 11;\n    while remainder >= 11 {\n        counter += 1;\n        remainder\
    \ -= 11;\n    }\n    counter += 1;\n    remainder += n % 7;\n    while remainder\
    \ >= 7 {\n        counter += 1;\n        remainder -= 7;\n    }\n    counter +=\
    \ 1;\n    remainder += n % 3;\n    while remainder >= 3 {\n        counter +=\
    \ 1;\n        remainder -= 3;\n    }\n    counter += 1;\n    remainder += n %\
    \ 1;\n    while remainder >= 1 {\n        counter += 1;\n        remainder -=\
    \ 1;\n    }\n    counter\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n \
    \   assert_eq!(candidate(50), 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79),\
    \ 3);\n    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n\
    \    assert_eq!(candidate(4000), 192);\n    assert_eq!(candidate(10000), 639);\n\
    \    assert_eq!(candidate(100000), 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `0`', /tmp/tmpo2t1x9ow.rs:43:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 1
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    debug_assert!(n\
    \ % 11 == 0 || n % 13 == 0);\n    let mut count = 0;\n    while n > 0 {\n    \
    \    if n % 11 == 0 {\n            count += 1;\n        }\n        if n % 13 ==\
    \ 0 {\n            count += 1;\n        }\n        n /= 11;\n        n /= 13;\n\
    \    }\n    count\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpz8_u5u_7.rs:18:9\n\
    \   |\n8  | fn fizz_buzz(n: isize) -> isize {\n   |              - help: consider\
    \ making this binding mutable: `mut n`\n...\n18 |         n /= 11;\n   |     \
    \    ^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `n`\n  --> /tmp/tmpz8_u5u_7.rs:19:9\n   |\n8  | fn fizz_buzz(n:\
    \ isize) -> isize {\n   |              - help: consider making this binding mutable:\
    \ `mut n`\n...\n19 |         n /= 13;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660011908
- exit_code: 101
  program: "/// Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>> fizz_buzz(78)\n\
    /// 2\n/// >>> fizz_buzz(79)\n/// 3\nfn fizz_buzz(n: isize) -> isize {\n    if\
    \ n % 11 == 0 || n % 13 == 0 {\n        n\n    } else {\n        fizz_buzz(n -\
    \ 1) % 11\n    }\n}\n\nfn main() {\n    let candidate = fizz_buzz;\n    assert_eq!(candidate(50),\
    \ 0);\n    assert_eq!(candidate(78), 2);\n    assert_eq!(candidate(79), 3);\n\
    \    assert_eq!(candidate(100), 3);\n    assert_eq!(candidate(200), 6);\n    assert_eq!(candidate(4000),\
    \ 192);\n    assert_eq!(candidate(10000), 639);\n    assert_eq!(candidate(100000),\
    \ 8026);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `78`,\n right: `2`', /tmp/tmpamvv0lgj.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011908

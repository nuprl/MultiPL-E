name: HumanEval_124_valid_date
language: rs
prompt: "/// You have to write a function which validates a given date string and\n\
  /// returns True if the date is valid otherwise False.\n/// The date is valid if\
  \ all of the following rules are satisfied:\n/// 1. The date string is not empty.\n\
  /// 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
  \ And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
  \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
  /// 3. The months should not be less than 1 or higher than 12.\n/// 4. The date\
  \ should be in the format: mm-dd-yyyy\n/// >>> valid_date(String::from(\"03-11-2000\"\
  ))\n/// true\n/// >>> valid_date(String::from(\"15-01-2012\"))\n/// false\n/// >>>\
  \ valid_date(String::from(\"04-0-2040\"))\n/// false\n/// >>> valid_date(String::from(\"\
  06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"06/04/2020\"))\n///\
  \ false\nfn valid_date(date: String) -> bool {\n"
tests: "}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n}\n"
completions: ["    !date.is_empty() && date.len() == 10 &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n", "    !date.is_empty() &&\n    (date.len() >= 2\
    \ && date.len() <= 31) &&\n    (date.len() >= 1 && date.len() <= 30) &&\n    (date.len()\
    \ >= 1 && date.len() <= 29) &&\n    (date.len() >= 1 && date.len() <= 12) &&\n\
    \    (date.len() == date.rfind(\"-\") + 1) &&\n    (date.len() == date.rfind(\"\
    /\") + 2)", "    let mut date_str = date.to_string();\n    date_str.trim_left_matches(\"\
    -\");\n    date_str.trim_right_matches(\"-\");\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut days: u32 = 0;\n    let mut months: u32 = 0;\n    let mut years:\
    \ u32 = 0;\n    let mut date_parts_len = date_parts.len();\n    if date_parts_len\
    \ > 3 {\n        date_parts_len -= 3;\n    }\n    for part in date_parts {\n \
    \       let mut part_str = part.to_string();\n        part_str.trim_left_matches(\"\
    -\");\n        part_str.trim_right_matches(\"-\");\n        let mut part_parts\
    \ = part_str.split_whitespace();\n        days += part_parts[0]\n            .parse::<u32>()\n\
    \            .unwrap_or(0);\n        months += part_parts[1]\n            .parse::<u32>()\n\
    \            .unwrap_or(0);\n        years += part_parts[2]\n            .parse::<u32>()\n\
    \            .unwrap_or(0);\n    }\n    days > 0 && days < 32 && months > 0 &&\
    \ months < 12 && years > 0 && years < 100", "    !date.is_empty() && date.len()\
    \ == 10 &&\n        date.chars().all(|c| c.is_digit()) &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '/') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '/') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '", "    !date.is_empty() &&\n    date.len() == 10 &&\n    (date.chars().take(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter", "    let mut date_str = date.to_string();\n    let mut date_str\
    \ = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n   \
    \ let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_left();\n\
    \    let mut date_str = date_str.trim_right();\n    let mut date_str = date_str.trim_",
  "    !date.is_empty() && date.len() == 10 && date.chars().all(|c| c >= '0' && c\
    \ <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '", '    !date.is_empty()
    && date.len() == 10 && valid_day(date.as_str()) && valid_month(date.as_str())
    && valid_year(date.as_str())', "    if !date.is_empty() {\n        let mut date_str\
    \ = date.to_string();\n        let mut date_str = date_str.chars().filter(|c|\
    \ c.is_ascii_digit()).collect::<String>();\n        let mut date_str = date_str.to_lowercase();\n\
    \        let mut date_str = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n\
    \        let mut date_str = date_str.to_lowercase();\n        let mut date_str\
    \ = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n  \
    \      let mut date_str = date_str.to_lowercase();\n        let mut date_str =\
    \ date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n    \
    \    let mut date_str = date_str.to_lowercase();\n        let mut date_str = date_str.chars().filter(|c|\
    \ c.is_ascii_letter()).collect::<String>();\n        let mut date_str = date_str.to_lowercase();\n\
    \        let mut date_str = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n\
    \        let mut date_str = date_str.to_lowercase();\n        let mut date_str\
    \ = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n  \
    \      let mut date_str = date_str.to_lowercase();\n        let mut date_str =\
    \ date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n    \
    \    let mut date_str = date_str.to_lowercase();\n        let mut date_str = date_str.chars().filter(|c|\
    \ c.is_ascii_letter()).collect::<String>();\n        let mut date_str = date_str.to_lowercase();\n\
    \        let mut date_str = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n\
    \        let mut date_str = date_str.to_lowercase();\n        let mut date_str\
    \ = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n  \
    \      let mut date_str = date_str.to_lowercase();\n        let mut date_str =\
    \ date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n    \
    \    let mut date_str = date_str.to_lowercase();\n        let mut date_str = date_str.chars().filter(|c|\
    \ c.is_ascii_letter()).collect::<String>();\n        let mut date_str = date_str.to_lowercase();\n\
    \        let mut date_str = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n\
    \        let mut date_str = date_str.to_lowercase();\n        let mut date_str\
    \ = date_", "    let mut date_str = date.to_string();\n    let mut date_str =\
    \ date_str.trim_left_matches(\"-\");\n    let mut date_str = date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.trim_left_matches(\"/\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\"/\");\n    let mut date_str = date_str.trim_left_matches(\"\
    .\");\n    let mut date_str = date_str.trim_right_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\"-\");\n    let mut date_str = date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.trim_left_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\".\");\n    let mut date_str = date_str.trim_right_matches(\"\
    .\");\n    let mut date_str = date_str.trim_left_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.trim_left_matches(\"\
    .\");\n    let mut date_str = date_str.trim_right_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\"-\");\n    let mut date_str = date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.trim_left_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\".\");\n    let mut date_str = date_str.trim_right_matches(\"\
    .\");\n    let mut date_str = date_str.trim_left_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.trim_left_matches(\"\
    .\");\n    let mut date_str = date_str.trim_right_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\"-\");\n    let mut date_str = date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.trim_left_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");", "    !date.is_empty()\
    \ &&\n    !date.len() < 1 &&\n    !date.len() > 31 &&\n    !date.len() < 30 &&\n\
    \    !date.len() > 29 &&\n    !date.len() < 12 &&\n    !date.len() > 12 &&\n \
    \   !date.len() < 10 &&\n    !date.len() > 10 &&\n    !date.len() < 7 &&\n   \
    \ !date.len() > 7 &&\n    !date.len() < 4 &&\n    !date.len() > 4 &&\n    !date.len()\
    \ < 2 &&\n    !date.len() > 2", "    let mut date_str = date.to_string();\n  \
    \  date_str.trim();\n    if date_str.len() == 0 {\n        return false;\n   \
    \ }\n    let mut date_parts = date_str.split_whitespace();\n    if date_parts.len()\
    \ != 3 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    if date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mu", "    let\
    \ mut date_str = date.to_string();\n    date_str.trim();\n    if date_str.len()\
    \ == 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut days_parts: Vec<String> = date_parts.split_whitespace();\n    let\
    \ mut months_parts: Vec<String> = date_parts.split_whitespace();\n    let mut\
    \ years_parts: Vec<String> = date_parts.split_whitespace();\n    days_parts.sort();\n\
    \    months_parts.sort();\n    years_parts.sort();\n    let mut days: usize =\
    \ 0;\n    let mut months: usize = 0;\n    let mut years: usize = 0;\n    for part\
    \ in days_parts {\n        days += part.parse::<usize>().unwrap();\n    }\n  \
    \  for part in months_parts {\n        months += part.parse::<usize>().unwrap();\n\
    \    }\n    for part in years_parts {\n        years += part.parse::<usize>().unwrap();\n\
    \    }\n    if days > 31 || months > 12 || years > 30 {\n        return false;\n\
    \    }\n    if months == 1 || months == 3 || months == 5 || months == 7 || months\
    \ == 8 || months == 10 || months == 12 {\n        if days == 31 || days == 30\
    \ {\n            return true;\n        }\n    }\n    if months == 4 || months\
    \ == 6 || months == 9 || months == 11 {\n        if days == 29 {\n           \
    \ return true;\n        }\n    }\n    if months == 2 {\n        if days == 29\
    \ {\n            return true;\n        }\n    }\n    return false;", "    let\
    \ mut date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n \
    \   date_str.trim_right_matches(\"-\");\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut days_str = date_parts[0];\n    let mut months_str = date_parts[1];\n\
    \    let mut years_str = date_parts[2];\n    days_str.trim_left_matches(\"-\"\
    );\n    months_str.trim_left_matches(\"-\");\n    years_str.trim_left_matches(\"\
    -\");\n    let mut days: u32;\n    let mut months: u32;\n    let mut years: u32;\n\
    \    let mut days_parts: Vec<&str> = days_str.split_whitespace();\n    let mut\
    \ months_parts: Vec<&str> = months_str.split_whitespace();\n    let mut years_parts:\
    \ Vec<&str> = years_str.split_whitespace();\n    if days_parts.len() != 3 || months_parts.len()\
    \ != 3 || years_parts.len() != 3 {\n        return false;\n    }\n    days_parts[0]\
    \ = days_parts[0].to_owned();\n    months_parts[0] = months_parts[0].to_owned();\n\
    \    years_parts[0] = years_parts[0].to_owned();\n    days_parts[1] = days_parts[1].to_owned();\n\
    \    months_parts[1] = months_parts[1].to_owned();\n    years_parts[1] = years_parts[1].to_owned();\n\
    \    days_parts[2] = days_parts[2].to_owned();\n    months_parts[2] = months_parts[2].to_owned();\n\
    \    years_parts[2] = years_parts[2].to_owned();\n    days = days_parts[0].parse().unwrap();\n\
    \    months = months_parts[0].parse().unwrap();\n    years = years_parts[0].parse().unwrap();\n\
    \    if days_parts[1].len() != 1 || months_parts[1].len() != 1 || years_parts[1].len()\
    \ != 1 {\n        return false;\n    }\n    if days_parts[1].parse().unwrap()\
    \ > 31 || months_parts[1].parse().unwrap() > 12 || years_parts[1].parse().unwrap()\
    \ > 31 {\n        return false;\n    }\n    if days_parts[2].len() != 2 || months_parts[2].len()\
    \ != 2 || years_parts[2].len() != 2 {\n        return false;\n    }\n    if days_parts[2].parse().unwrap()\
    \ > 31 || months_parts[2].parse().unwrap() > 12 || years_parts[2].parse().unwrap()\
    \ > 30 {\n        return false;\n    }", "    let mut date_str = date.to_string();\n\
    \    date_str.trim();\n    date_str.parse::<usize>().unwrap() > 0 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 31 &&\n    date_str.parse::<usize>().unwrap() <= 30 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 29 &&\n    date_str.parse::<usize>().unwrap() <= 12 &&\n    date_str.parse::<usize>().unwrap()\
    \ >= 1 &&\n    date_str.parse::<usize>().unwrap() <= 31", "    !date.is_empty()\
    \ && date.len() == 10 && date.chars().all(|c| c.is_digit(10)) && date.chars().all(|c|\
    \ c != '-') && date.chars().all(|c| c != '/') && date.chars().all(|c| c != '-')\
    \ && date.chars().all(|c| c != '/')", "    let mut date_str = date.to_string();\n\
    \    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"-\"\
    );\n    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();", "    !date.is_empty() && date.len() == 10\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n", '    date.len()
    > 0 && valid_day(date.as_str()) && valid_month(date.as_str())', '    date.len()
    > 0 && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())']
stop_tokens:
- "\n}"

name: HumanEval_156_int_to_mini_roman
language: rs
prompt: "/// Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  /// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n/// Examples:\n\
  /// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>> int_to_mini_roman(152)\n\
  /// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n/// String::from(\"\
  cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n}\n"
completions: ["    match number {\n        1 => \"x\",\n        2 => \"xix\",\n  \
    \      3 => \"xix\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6\
    \ => \"xix\",\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\"\
    ,\n        10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n  \
    \      13 => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n      \
    \  16 => \"xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19\
    \ => \"xix\",\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"\
    xix\",\n        23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\"\
    ,\n        26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n  \
    \      29 => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n      \
    \  32 => \"xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35\
    \ => \"xix\",\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"\
    xix\",\n        39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\"\
    ,\n        42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n  \
    \      45 => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n      \
    \  48 => \"xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51\
    \ => \"xix\",\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"\
    xix\",\n        55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\"\
    ,\n        58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n  \
    \      61 => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n      \
    \  64 => \"xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67\
    \ => \"xix\",\n        68 => \"xix\",\n        69 => \"xix\",\n        ", "  \
    \  let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\", \"\
    dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n        \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n    \
    \    \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n \
    \       \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\
    \ \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\",\n", "    let mut roman = String::new();\n    let\
    \ mut numeral = String::new();\n    let mut numeral_digits = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len2\
    \ = String::new();\n    let mut numeral_digits_len3 = String::new();\n    let\
    \ mut numeral_digits_len4 = String::new();\n    let mut numeral_digits_len5 =\
    \ String::new();\n    let mut numeral_digits_len6 = String::new();\n    let mut\
    \ numeral_digits_len7 = String::new();\n    let mut numeral_digits_len8 = String::new();\n\
    \    let mut numeral_digits_len9 = String::new();\n    let mut numeral_digits_len10\
    \ = String::new();\n    let mut numeral_digits_len11 = String::new();\n    let\
    \ mut numeral_digits_len12 = String::new();\n    let mut numeral_digits_len13\
    \ = String::new();\n    let mut numeral_digits_len14 = String::new();\n    let\
    \ mut numeral_digits_len15 = String::new();\n    let mut numeral_digits_len16\
    \ = String::new();\n    let mut numeral_digits_len17 = String::new();\n    let\
    \ mut numeral_digits_len18 = String::new();\n    let mut numeral_digits_len19\
    \ = String::new();\n    let mut numeral_digits_len20 = String::new();\n    let\
    \ mut numeral_digits_len21 = String::new();\n    let mut numeral_digits_len22\
    \ = String::new();\n    let mut numeral_digits_len23 = String::new();\n    let\
    \ mut numeral_digits_len24 = String::new();\n    let mut numeral_digits_len25\
    \ = String::new();\n    let mut numeral_digits_len26 = String::new();\n    let\
    \ mut numeral_digits_len27 = String::new();\n    let mut numeral_digits_len28\
    \ = String::new();\n    let mut numeral_digits_len29 = String::new();\n    let\
    \ mut numeral_digits_len30 = String::new();\n    let mut numeral_digits_len31\
    \ = String::new();\n    let mut numeral_digits_len32 = String::new();\n    let\
    \ mut numeral_digits_len33 = String::", "    let mut roman = String::new();\n\
    \    let mut numeral = String::new();\n    let mut numeral_len = String::new();\n\
    \    let mut numeral_len2 = String::new();\n    let mut numeral_len3 = String::new();\n\
    \    let mut numeral_len4 = String::new();\n    let mut numeral_len5 = String::new();\n\
    \    let mut numeral_len6 = String::new();\n    let mut numeral_len7 = String::new();\n\
    \    let mut numeral_len8 = String::new();\n    let mut numeral_len9 = String::new();\n\
    \    let mut numeral_len10 = String::new();\n    let mut numeral_len11 = String::new();\n\
    \    let mut numeral_len12 = String::new();\n    let mut numeral_len13 = String::new();\n\
    \    let mut numeral_len14 = String::new();\n    let mut numeral_len15 = String::new();\n\
    \    let mut numeral_len16 = String::new();\n    let mut numeral_len17 = String::new();\n\
    \    let mut numeral_len18 = String::new();\n    let mut numeral_len19 = String::new();\n\
    \    let mut numeral_len20 = String::new();\n    let mut numeral_len21 = String::new();\n\
    \    let mut numeral_len22 = String::new();\n    let mut numeral_len23 = String::new();\n\
    \    let mut numeral_len24 = String::new();\n    let mut numeral_len25 = String::new();\n\
    \    let mut numeral_len26 = String::new();\n    let mut numeral_len27 = String::new();\n\
    \    let mut numeral_len28 = String::new();\n    let mut numeral_len29 = String::new();\n\
    \    let mut numeral_len30 = String::new();\n    let mut numeral_len31 = String::new();\n\
    \    let mut numeral_len32 = String::new();\n    let mut numeral_len33 = String::new();\n\
    \    let mut numeral_len34 = String::new();\n    let mut numeral_len35 = String::new();\n\
    \    let mut numeral_len36 = String::new();\n    let mut numeral_len37 = String::new();\n\
    \    let mut numeral_len38 = String::new();\n    let mut numeral_len39 = String::",
  "    use std::cmp::Ordering;\n\n    let mut roman = String::new();\n    let mut\
    \ numeral = String::new();\n\n    let mut numerals = vec![String::from(\"M\"),\
    \ String::from(\"CM\"), String::from(\"D\"),\n                           String::from(\"\
    CD\"), String::from(\"C\"), String::from(\"XC\"),\n                          \
    \ String::from(\"L\"), String::from(\"XL\"), String::from(\"X\"),\n          \
    \                 String::from(\"IX\"), String::from(\"V\"), String::from(\"IV\"\
    ),\n                           String::from(\"I\")];\n\n    let mut numerals_count\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n\n    let mut numerals_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n\
    \                                  0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n    let\
    \ mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                 \
    \                      0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n          \
    \                             0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n          \
    \                             0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n          \
    \                             0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n          \
    \                             0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = ", "    let mut roman = String::new();\n\
    \    let mut numerals = vec![];\n    let mut numeral: isize = 0;\n    let mut\
    \ numeral_index = 0;\n    let mut numeral_string: String = String::from(\"i\"\
    );\n    let mut numeral_string_index = 0;\n    let mut numeral_string_index2 =\
    \ 0;\n    let mut numeral_string_index3 = 0;\n    let mut numeral_string_index4\
    \ = 0;\n    let mut numeral_string_index5 = 0;\n    let mut numeral_string_index6\
    \ = 0;\n    let mut numeral_string_index7 = 0;\n    let mut numeral_string_index8\
    \ = 0;\n    let mut numeral_string_index9 = 0;\n    let mut numeral_string_index10\
    \ = 0;\n    let mut numeral_string_index11 = 0;\n    let mut numeral_string_index12\
    \ = 0;\n    let mut numeral_string_index13 = 0;\n    let mut numeral_string_index14\
    \ = 0;\n    let mut numeral_string_index15 = 0;\n    let mut numeral_string_index16\
    \ = 0;\n    let mut numeral_string_index17 = 0;\n    let mut numeral_string_index18\
    \ = 0;\n    let mut numeral_string_index19 = 0;\n    let mut numeral_string_index20\
    \ = 0;\n    let mut numeral_string_index21 = 0;\n    let mut numeral_string_index22\
    \ = 0;\n    let mut numeral_string_index23 = 0;\n    let mut numeral_string_index24\
    \ = 0;\n    let mut numeral_string_index25 = 0;\n    let mut numeral_string_index26\
    \ = 0;\n    let mut numeral_string_index27 = 0;\n    let mut numeral_string_index28\
    \ = 0;\n    let mut numeral_string_index29 = 0;\n    let mut numeral_string_index30\
    \ = 0;\n    let mut numeral_string_index31 = 0;\n    let mut numeral_string_index32\
    \ = 0;\n    let mut numeral_string_index33 = 0;\n    let mut numeral_string_index34\
    \ = 0;\n    let mut numeral_string_index35 = 0;\n    let mut numeral_string_index36\
    \ = 0;\n    let mut numeral_string_index37 = 0;\n    let mut numeral_string_index38\
    \ = 0;\n    let mut numeral_string_index39 = 0;\n    let mut numeral_string_index40\
    \ = 0;\n    let mut numeral_string_index41 = 0;\n    let mut numeral_string_index42\
    \ = 0;\n    let mut numeral_string_index43 = 0;\n    let mut numeral_string_index44\
    \ = 0;\n    let mut numeral_string_index45 = 0;\n    let mut numeral_string_index46\
    \ = 0;\n    let mut numer", "    let mut roman = String::new();\n    let mut numerals\
    \ = vec![];\n    let mut numeral: isize = 0;\n    let mut numeral_string: String\
    \ = String::new();\n    let mut numeral_strings: Vec<String> = vec![];\n    let\
    \ mut numeral_strings_len: usize = 0;\n    let mut numeral_strings_lens: Vec<usize>\
    \ = vec![];\n    let mut numeral_strings_lens_len: usize = 0;\n    let mut numeral_strings_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut numeral_strings_lens_lens_len: usize = 0;\n\
    \    let mut numeral_strings_lens_lens_lens: Vec<usize> = vec![];\n    let mut\
    \ numeral_strings_lens_lens_lens_len: usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut numeral_strings_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens: Vec<usize> = vec![];\n\
    \    let mut numeral_strings_lens_lens_lens_lens_lens_len: usize = 0;\n    let\
    \ mut numeral_strings_lens_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut\
    \ numeral_strings_lens_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_",
  "    let mut roman = String::new();\n    let mut numeral = String::new();\n\n  \
    \  // The first 10 roman numerals are the same as the decimal numerals.\n    //\
    \ The first 10 decimal numerals are the same as the roman numerals.\n    let mut\
    \ decimal = number.to_digits();\n    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n\
    \    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n\
    \    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n\
    \    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n\
    \    decimal.pop();\n\n    // The first 10 roman numerals are the same as the\
    \ decimal numerals.\n    // The first 10 decimal numerals are the same as the\
    \ roman numerals.\n    let mut roman = number.to_digits();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    ro", "    let mut roman\
    \ = String::new();\n    let mut numeral = String::new();\n    let mut numeral_digits\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new", "    let mut roman = String::new();\n   \
    \ let mut num: isize = 1;\n    while num < number {\n        let mut digit = num\
    \ % 10;\n        roman += if digit == 0 {\n            \"i\"\n        } else {\n\
    \            match digit {\n                1 => \"m\",\n                2 =>\
    \ \"cm\",\n                3 => \"d\",\n                4 => \"cd\",\n       \
    \         5 => \"xd\",\n                6 => \"xc\",\n                7 => \"\
    l\",\n                8 => \"xl\",\n                9 => \"x\",\n            \
    \    _ => \"\".to_string(),\n            }\n        };\n        num /= 10;\n \
    \   }\n    roman", "    let mut roman = String::new();\n    let mut numeral =\
    \ String::new();\n    let mut remainder = number;\n    while remainder > 0 {\n\
    \        let mut digit = remainder % 10;\n        remainder = remainder / 10;\n\
    \        roman.push((digit as char).to_string());\n    }\n    while numeral.len()\
    \ < roman.len() {\n        numeral.push('_');\n    }\n    roman.push_str(numeral);\n\
    \    roman.to_lowercase()", "    let mut roman = String::new();\n    let mut numerals\
    \ = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let\
    \ mut numeral_index = 0;\n    let mut numeral_value = 0;\n    let mut numeral_value_index\
    \ = 0;\n    let mut numeral_value_length = 0;\n    let mut numeral_value_length_index\
    \ = 0;\n    let mut numeral_value_length_value = 0;\n    let mut numeral_value_length_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mu", "    let mut roman = String::new();\n    let mut numeral = String::new();\n\
    \    let mut numerals = vec![];\n    let mut numeral_index = 0;\n    let mut numeral_strings\
    \ = vec![];\n    let mut numeral_string_index = 0;\n    let mut numeral_strings_index\
    \ = 0;\n    let mut numeral_strings_length = 0;\n    let mut numeral_strings_length_index\
    \ = 0;\n    let mut numeral_strings_length_max = 0;\n    let mut numeral_strings_length_max_index\
    \ = 0;\n    let mut numeral_strings_length_min = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_max\
    \ = 0;\n    let mut numeral_strings_length_max_index = 0;\n    let mut numeral_strings_length_min\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_max = 0;\n    let mut numeral_strings_length_max_index\
    \ = 0;\n    let mut numeral_strings_length_min = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_max\
    \ = 0;\n    let mut numeral_strings_length_max_index = 0;\n    let mut numeral_strings_length_min\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_max = 0;\n    let mut numeral_strings_length_max_index\
    \ = 0;\n    let mut numeral_strings_length_min = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_max\
    \ = 0;\n    let mut numeral_strings_length_max_index = 0;\n    let mut numeral_strings_length_min\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_max = 0;\n    let mut numeral_strings_length_max_index\
    \ = 0;\n    let mut numeral_strings_length_min = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_max\
    \ = 0;\n    let mut numeral_", "    let mut roman = String::new();\n    let mut\
    \ numerals = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"\
    ];\n    let mut numeral_index = 0;\n    let mut numeral_value = 0;\n    let mut\
    \ numeral_value_index = 0;\n    let mut numeral_value_length = 0;\n    let mut\
    \ numeral_value_length_index = 0;\n    let mut numeral_value_length_value = 0;\n\
    \    let mut numeral_value_length_value_index = 0;\n    let mut numeral_value_length_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_index = 0;\n    let mut numeral_value_length_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mu", "    let\
    \ mut roman = String::new();\n    let mut numeral = String::new();\n    let mut\
    \ remainder = number;\n    let mut numerals = vec![];\n    while remainder > 0\
    \ {\n        let numeral = remainder % 10;\n        roman.push((numerals as &str).to_lowercase());\n\
    \        numerals.push(numeral);\n        remainder = remainder / 10;\n    }\n\
    \    roman.push((numerals as &str).to_lowercase());\n    roman", "    let mut\
    \ roman = String::new();\n    let mut num: isize = 1;\n    let mut remainder:\
    \ isize = 1;\n    let mut numeral: Char = Char::from('A');\n    while num < number\
    \ {\n        remainder *= 10;\n        remainder += num % 10;\n        num /=\
    \ 10;\n        numeral += Char::from((num % 10) + 1);\n    }\n    roman.push_str(numeral.to_string());\n\
    \    roman.push_str(&format!(\"{}\", remainder).to_string());\n    roman.to_lowercase()",
  "    let mut roman = String::new();\n    let mut numeral = String::new();\n    let\
    \ mut numeral_map = [0; 4];\n    let mut numeral_map_index = 0;\n    let mut numeral_map_reverse\
    \ = [0; 4];\n    let mut numeral_map_reverse_index = 0;\n    let mut numeral_map_reverse_index2\
    \ = 0;\n    let mut numeral_map_reverse_index3 = 0;\n    let mut numeral_map_reverse_index4\
    \ = 0;\n    let mut numeral_map_reverse_index5 = 0;\n    let mut numeral_map_reverse_index6\
    \ = 0;\n    let mut numeral_map_reverse_index7 = 0;\n    let mut numeral_map_reverse_index8\
    \ = 0;\n    let mut numeral_map_reverse_index9 = 0;\n    let mut numeral_map_reverse_index10\
    \ = 0;\n    let mut numeral_map_reverse_index11 = 0;\n    let mut numeral_map_reverse_index12\
    \ = 0;\n    let mut numeral_map_reverse_index13 = 0;\n    let mut numeral_map_reverse_index14\
    \ = 0;\n    let mut numeral_map_reverse_index15 = 0;\n    let mut numeral_map_reverse_index16\
    \ = 0;\n    let mut numeral_map_reverse_index17 = 0;\n    let mut numeral_map_reverse_index18\
    \ = 0;\n    let mut numeral_map_reverse_index19 = 0;\n    let mut numeral_map_reverse_index20\
    \ = 0;\n    let mut numeral_map_reverse_index21 = 0;\n    let mut numeral_map_reverse_index22\
    \ = 0;\n    let mut numeral_map_reverse_index23 = 0;\n    let mut numeral_map_reverse_index24\
    \ = 0;\n    let mut numeral_map_reverse_index25 = 0;\n    let mut numeral_map_reverse_index26\
    \ = 0;\n    let mut numeral_map_reverse_index27 = 0;\n    let mut numeral_map_reverse_index28\
    \ = 0;\n    let mut numeral_map_reverse_index29 = 0;\n    let mut numeral_map_reverse_index30\
    \ = 0;\n    let mut numeral_map_reverse_index31 = 0;\n    let mut numeral_map_reverse_index32\
    \ = 0;\n    let mut numeral_map_reverse_index33 = 0;\n    let mut numeral_map_reverse_index34\
    \ = 0;\n    let mut numeral_map_reverse_index35 = 0;\n    let mut numeral_map_reverse_index36\
    \ = 0;\n    let mut numeral_map_reverse_index37 = 0;\n    let mut numeral_map_reverse_index38\
    \ = 0;\n    let mut numeral_map_reverse_index39 = 0;\n    let mut numeral_map_reverse_index40\
    \ = 0;\n    let mut numeral_map_reverse_index41 = 0;\n    let mut numeral_map_reverse_index42\
    \ = 0;\n    let mu", "    let mut roman = String::new();\n    let mut numerals\
    \ = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n \
    \                          \"x\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\"\
    , \"xl\", \"l\"];\n    let mut numeral_index = 0;\n    let mut numeral_length\
    \ = 0;\n    let mut numeral_value = number;\n    let mut numeral_string = \"\"\
    ;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length =\
    \ 0;\n    let mut numeral_string_length_index = 0;\n    let mut numeral_string_length_value\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numer",
  "    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\", \"\
    c\", \"l\", \"l\", \"x\", \"x\", \"x\", \"c\"];\n    let mut numeral_index = 0;\n\
    \    let mut numeral_length = 0;\n    let mut numeral_value = number;\n    while\
    \ numeral_value > 0 {\n        numeral_length += 1;\n        numeral_value %=\
    \ 10;\n        numerals[numeral_index] += &numerals[numeral_index + numeral_length\
    \ - 1];\n    }\n    roman.push_str(&numerals[numeral_index]);\n    roman.push_str(&numerals[numeral_index\
    \ + numeral_length - 1]);\n    roman", "    let mut roman = String::new();\n \
    \   let mut numerals = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"\
    x\", \"l\"];\n    let mut numeral_index = 0;\n    let mut numeral_length = 0;\n\
    \    let mut numeral_string = \"\";\n    let mut numeral_string_index = 0;\n \
    \   let mut numeral_string_length = 0;\n    let mut numeral_string_length_index\
    \ = 0;\n    let mut numeral_string_length_index2 = 0;\n    let mut numeral_string_length_index3\
    \ = 0;\n    let mut numeral_string_length_index4 = 0;\n    let mut numeral_string_length_index5\
    \ = 0;\n    let mut numeral_string_length_index6 = 0;\n    let mut numeral_string_length_index7\
    \ = 0;\n    let mut numeral_string_length_index8 = 0;\n    let mut numeral_string_length_index9\
    \ = 0;\n    let mut numeral_string_length_index10 = 0;\n    let mut numeral_string_length_index11\
    \ = 0;\n    let mut numeral_string_length_index12 = 0;\n    let mut numeral_string_length_index13\
    \ = 0;\n    let mut numeral_string_length_index14 = 0;\n    let mut numeral_string_length_index15\
    \ = 0;\n    let mut numeral_string_length_index16 = 0;\n    let mut numeral_string_length_index17\
    \ = 0;\n    let mut numeral_string_length_index18 = 0;\n    let mut numeral_string_length_index19\
    \ = 0;\n    let mut numeral_string_length_index20 = 0;\n    let mut numeral_string_length_index21\
    \ = 0;\n    let mut numeral_string_length_index22 = 0;\n    let mut numeral_string_length_index23\
    \ = 0;\n    let mut numeral_string_length_index24 = 0;\n    let mut numeral_string_length_index25\
    \ = 0;\n    let mut numeral_string_length_index26 = 0;\n    let mut numeral_string_length_index27\
    \ = 0;\n    let mut numeral_string_length_index28 = 0;\n    let mut numeral_string_length_index29\
    \ = 0;\n    let mut numeral_string_length_index30 = 0;\n    let mut numeral_string_length_index31\
    \ = 0;\n    let mut numeral_string_length_index32 = 0;\n    let mut numeral_string_length_index33\
    \ = 0;\n    let mut numeral_string_length_index34 = 0;\n    let mut numeral_string_length_index35\
    \ = 0;\n    let mut numeral_string_length_index36 = 0;\n    let mut numeral_string_length_index37\
    \ = 0;\n    let mut numeral_string_length_index38 = 0;\n    let mut numeral_string_length_index39\
    \ = 0;\n    let mut numeral_string_length_index40 = 0;\n    let mu", "    let\
    \ mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\", \"c\",\
    \ \"l\", \"l\", \"x\", \"x\", \"x\", \"c\"];\n    let mut numeral_index = 0;\n\
    \    let mut numeral_value = 0;\n    let mut numeral_value_index = 0;\n    let\
    \ mut numeral_value_length = 0;\n    let mut numeral_value_length_index = 0;\n\
    \    let mut numeral_value_length_value = 0;\n    let mut numeral_value_length_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mu", "    match number {\n        1 => \"x\",\n        2 => \"xix\",\n     \
    \   3 => \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"\
    xix\",\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n\
    \        10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n    \
    \    13 => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16\
    \ => \"xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"\
    xix\",\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\"\
    ,\n        23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n  \
    \      26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n      \
    \  29 => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32\
    \ => \"xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"\
    xix\",\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\"\
    ,\n        39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n  \
    \      42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n      \
    \  45 => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48\
    \ => \"xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"\
    xix\",\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\"\
    ,\n        55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n  \
    \      58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n      \
    \  61 => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64\
    \ => \"xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"\
    xix\",\n        68 => \"xix\",\n        69 => \"xix\",\n        7", "    let mut\
    \ roman = String::new();\n    let mut prev_roman = String::new();\n    let mut\
    \ prev_prev_roman = String::new();\n    let mut prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_roman = String::new();\n    let mut prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n    let\
    \ mut prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n    let\
    \ mut prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n  \
    \  let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_",
  "    let mut roman = String::new();\n    let mut num: isize = 0;\n    let mut nums:\
    \ Vec<isize> = vec![number];\n    let mut nums_iter = nums.iter();\n    while\
    \ nums_iter.next() != Some(&0) {\n        roman += &int_to_roman(nums_iter.next());\n\
    \    }\n    roman", "    let mut roman = String::new();\n    let mut numerals\
    \ = vec![];\n    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.", "    match number {\n      \
    \  1 => \"x\",\n        2 => \"x\",\n        3 => \"l\",\n        4 => \"l\",\n\
    \        5 => \"c\",\n        6 => \"c\",\n        7 => \"d\",\n        8 => \"\
    d\",\n        9 => \"m\",\n        10 => \"m\",\n        11 => \"c\",\n      \
    \  12 => \"c\",\n        13 => \"l\",\n        14 => \"l\",\n        15 => \"\
    x\",\n        16 => \"x\",\n        17 => \"x\",\n        18 => \"x\",\n     \
    \   19 => \"x\",\n        20 => \"x\",\n        21 => \"x\",\n        22 => \"\
    x\",\n        23 => \"x\",\n        24 => \"x\",\n        25 => \"x\",\n     \
    \   26 => \"x\",\n        27 => \"x\",\n        28 => \"x\",\n        29 => \"\
    m\",\n        30 => \"m\",\n        31 => \"m\",\n        32 => \"m\",\n     \
    \   33 => \"m\",\n        34 => \"m\",\n        35 => \"m\",\n        36 => \"\
    m\",\n        37 => \"m\",\n        38 => \"m\",\n        39 => \"m\",\n     \
    \   40 => \"m\",\n        41 => \"m\",\n        42 => \"m\",\n        43 => \"\
    m\",\n        44 => \"m\",\n        45 => \"m\",\n        46 => \"m\",\n     \
    \   47 => \"m\",\n        48 => \"m\",\n        49 => \"m\",\n        50 => \"\
    m\",\n        51 => \"m\",\n        52 => \"m\",\n        53 => \"m\",\n     \
    \   54 => \"m\",\n        55 => \"m\",\n        56 => \"m\",\n        57 => \"\
    m\",\n        58 => \"m\",\n        59 => \"m\",\n        60 => \"m\",\n     \
    \   61 => \"m\",\n        62 => \"m\",\n        63 => \"m\",\n        64 => \"\
    m\",\n        65 => \"m\",\n        66 => \"m\",\n        67 => \"m\",\n     \
    \   68 => \"m\",\n        69 => \"m\",\n        70 => \"m\",\n        71 => \"\
    m\",\n        72 => \"m\",\n        73 => \"m\",\n        74 => \"m\",\n     \
    \   75 => \"m\",\n        76 => \"m\",\n        77 => \"m\",\n        78 => \"\
    m\",\n        79 => \"m\",\n        80 => \"m\",\n        81 => \"m\",\n     \
    \   82 => \"m\",\n        83 => \"m\",\n        84 => \"m\",\n        85 => \"\
    m\",\n        86 => \"m\",\n        87 => \"m\",\n        88 => \"m\",\n     \
    \   89 => \"m\",\n", "    let mut roman = String::new();\n    let mut numeral\
    \ = String::new();\n    let mut remainder = number;\n    while remainder > 0 {\n\
    \        let mut numeral_digit = remainder % 10;\n        remainder = remainder\
    \ / 10;\n        numeral.push(numeral_digit.to_string());\n    }\n    while numeral.len()\
    \ > 0 {\n        let mut roman_digit = numeral.chars().next().unwrap();\n    \
    \    roman.push(roman_digit.to_ascii_lowercase());\n    }\n    roman", "    let\
    \ mut roman = String::new();\n    let mut numeral = String::new();\n\n    for\
    \ _ in 0..number {\n        roman.push((number % 10).to_string());\n        numeral.push((number\
    \ % 100).to_string());\n        number /= 10;\n    }\n\n    roman.push((number\
    \ % 10).to_string());\n    numeral.push((number % 100).to_string());\n\n    roman",
  "    let mut roman = String::new();\n    let mut num: isize = 1;\n    let mut remainder:\
    \ isize = 1;\n    let mut digits: Vec<isize> = vec![number];\n    while remainder\
    \ > 0 {\n        if remainder >= 10 {\n            roman.push(format!(\"{}\",\
    \ digits[remainder % 10]));\n            remainder /= 10;\n        } else {\n\
    \            roman.push(format!(\"{}\", digits[remainder]));\n            remainder\
    \ = 0;\n        }\n    }\n    roman.push(\"M\");\n    roman", "    let mut roman\
    \ = String::new();\n    let mut numeral = String::new();\n    let mut numerals\
    \ = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n \
    \                           \"x\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\"\
    , \"xl\", \"l\"];\n    let mut numeral_strings = vec![\"\", \"c\", \"d\", \"i\"\
    , \"x\", \"l\", \"x\", \"x\", \"l\",\n                                  \"x\"\
    , \"c\", \"d\", \"i\", \"x\", \"l\", \"x\", \"x\", \"l\"];\n    let mut numeral_strings_reversed\
    \ = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"x\", \"x\", \"l\",\n     \
    \                                    \"x\", \"c\", \"d\", \"i\", \"x\", \"l\"\
    , \"x\", \"x\", \"l\"];\n    let mut numeral_strings_reversed_index = vec![0,\
    \ 0, 1, 1, 2, 2, 3, 3, 4, 4];\n    let mut numeral_strings_reversed_index2 = vec![0,\
    \ 0, 0, 0, 1, 1, 1, 2, 2, 2, 3];\n    let mut numeral_strings_reversed_index3\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index4\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index5\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index6\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index7\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index8\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index9\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index10\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index11\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index12\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index13\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index14\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index15\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index16\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index17\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index18\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index19\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mu", "    match number\
    \ {\n        1 => \"x\",\n        2 => \"xix\",\n        3 => \"xx\",\n      \
    \  4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\",\n        7 => \"\
    xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n        10 => \"xix\",\n\
    \        11 => \"xix\",\n        12 => \"xix\",\n        13 => \"xix\",\n    \
    \    14 => \"xix\",\n        15 => \"xix\",\n        16 => \"xix\",\n        17\
    \ => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\",\n        20 => \"\
    xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n        23 => \"xix\"\
    ,\n        24 => \"xix\",\n        25 => \"xix\",\n        26 => \"xix\",\n  \
    \      27 => \"xix\",\n        28 => \"xix\",\n        29 => \"xix\",\n      \
    \  30 => \"xix\",\n        31 => \"xix\",\n        32 => \"xix\",\n        33\
    \ => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\",\n        36 => \"\
    xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n        39 => \"xix\"\
    ,\n        40 => \"xix\",\n        41 => \"xix\",\n        42 => \"xix\",\n  \
    \      43 => \"xix\",\n        44 => \"xix\",\n        45 => \"xix\",\n      \
    \  46 => \"xix\",\n        47 => \"xix\",\n        48 => \"xix\",\n        49\
    \ => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\",\n        52 => \"\
    xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n        55 => \"xix\"\
    ,\n        56 => \"xix\",\n        57 => \"xix\",\n        58 => \"xix\",\n  \
    \      59 => \"xix\",\n        60 => \"xix\",\n        61 => \"xix\",\n      \
    \  62 => \"xix\",\n        63 => \"xix\",\n        64 => \"xix\",\n        65\
    \ => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\",\n        68 => \"\
    xix\",\n        69 => \"xix\",\n        7", "    match number {\n        1 =>\
    \ \"x\",\n        2 => \"x\",\n        3 => \"l\",\n        4 => \"l\",\n    \
    \    5 => \"c\",\n        6 => \"c\",\n        7 => \"d\",\n        8 => \"d\"\
    ,\n        9 => \"m\",\n        10 => \"m\",\n        11 => \"l\",\n        12\
    \ => \"l\",\n        13 => \"x\",\n        14 => \"x\",\n        15 => \"x\",\n\
    \        16 => \"x\",\n        17 => \"x\",\n        18 => \"x\",\n        19\
    \ => \"x\",\n        20 => \"x\",\n        21 => \"x\",\n        22 => \"x\",\n\
    \        23 => \"x\",\n        24 => \"x\",\n        25 => \"x\",\n        26\
    \ => \"x\",\n        27 => \"x\",\n        28 => \"x\",\n        29 => \"m\",\n\
    \        30 => \"m\",\n        31 => \"m\",\n        32 => \"m\",\n        33\
    \ => \"m\",\n        34 => \"m\",\n        35 => \"m\",\n        36 => \"m\",\n\
    \        37 => \"m\",\n        38 => \"m\",\n        39 => \"m\",\n        40\
    \ => \"m\",\n        41 => \"m\",\n        42 => \"m\",\n        43 => \"m\",\n\
    \        44 => \"m\",\n        45 => \"m\",\n        46 => \"m\",\n        47\
    \ => \"m\",\n        48 => \"m\",\n        49 => \"m\",\n        50 => \"m\",\n\
    \        51 => \"m\",\n        52 => \"m\",\n        53 => \"m\",\n        54\
    \ => \"m\",\n        55 => \"m\",\n        56 => \"m\",\n        57 => \"m\",\n\
    \        58 => \"m\",\n        59 => \"m\",\n        60 => \"m\",\n        61\
    \ => \"m\",\n        62 => \"m\",\n        63 => \"m\",\n        64 => \"m\",\n\
    \        65 => \"m\",\n        66 => \"m\",\n        67 => \"m\",\n        68\
    \ => \"m\",\n        69 => \"m\",\n        70 => \"m\",\n        71 => \"m\",\n\
    \        72 => \"m\",\n        73 => \"m\",\n        74 => \"m\",\n        75\
    \ => \"m\",\n        76 => \"m\",\n        77 => \"m\",\n        78 => \"m\",\n\
    \        79 => \"m\",\n        80 => \"m\",\n        81 => \"m\",\n        82\
    \ => \"m\",\n        83 => \"m\",\n        84 => \"m\",\n        85 => \"m\",\n\
    \        86 => \"m\",\n        87 => \"m\",\n        88 => \"m\",\n        89\
    \ => \"", "    let mut roman = String::new();\n    let mut numerals = vec![\"\"\
    , \"c\", \"c\", \"l\", \"l\", \"x\", \"x\"];\n    let mut numeral_to_roman = vec![\n\
    \        \"\",\n        \"c\",\n        \"d\",\n        \"d\",\n        \"l\"\
    ,\n        \"l\",\n        \"x\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"", "    let mut roman = String::new();\n    let\
    \ mut numeral = String::new();\n    let mut denominator = 1;\n    let mut numeral_index\
    \ = 0;\n    let mut denominator_index = 0;\n    let mut numeral_chars = String::new();\n\
    \    let mut numeral_char_index = 0;\n    let mut numeral_char_length = 0;\n \
    \   let mut numeral_char_length_index = 0;\n    let mut numeral_char_length_value\
    \ = 0;\n    let mut numeral_char_length_value_index = 0;\n    let mut numeral_char_length_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_index = 0;\n    let mut numeral_char_length_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value", "    let mut roman = String::new();\n\
    \    let mut numeral = String::new();\n    let mut numerals = vec![];\n    let\
    \ mut numerals_map = HashMap::new();\n    let mut numerals_maps = vec![];\n  \
    \  let mut numerals_maps_map = HashMap::new();\n    let mut numerals_maps_maps\
    \ = vec![];\n    let mut numerals_maps_maps_map = HashMap::new();\n    let mut\
    \ numerals_maps_maps_maps = vec![];\n    let mut numerals_maps_maps_maps_map =\
    \ HashMap::new();\n    let mut numerals_maps_maps_maps_maps = vec![];\n    let\
    \ mut numerals_maps_maps_maps_maps_map = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps\
    \ = vec![];\n    let mut numerals_maps_maps_maps_maps_maps_map = HashMap::new();\n\
    \    let mut numerals_maps_maps_maps_maps_maps_maps = vec![];\n    let mut numerals_maps_maps_maps_maps_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps =\
    \ vec![];\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_map = HashMap::new();\n\
    \    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps = vec![];\n    let\
    \ mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_map = HashMap::new();\n\
    \    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_maps_map = HashMap::new();\n\
    \    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_map =\
    \ HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_map\
    \ = ", "    match number {\n        0 => String::from(\"0\"),\n        1 => String::from(\"\
    i\"),\n        2 => String::from(\"ii\"),\n        3 => String::from(\"iii\"),\n\
    \        4 => String::from(\"iv\"),\n        5 => String::from(\"v\"),\n     \
    \   6 => String::from(\"vi\"),\n        7 => String::from(\"vii\"),\n        8\
    \ => String::from(\"viii\"),\n        9 => String::from(\"ix\"),\n        10 =>\
    \ String::from(\"x\"),\n        11 => String::from(\"xi\"),\n        12 => String::from(\"\
    xii\"),\n        13 => String::from(\"xiii\"),\n        14 => String::from(\"\
    xiv\"),\n        15 => String::from(\"xv\"),\n        16 => String::from(\"xvi\"\
    ),\n        17 => String::from(\"xvii\"),\n        18 => String::from(\"xviii\"\
    ),\n        19 => String::from(\"xix\"),\n        20 => String::from(\"xx\"),\n\
    \        21 => String::from(\"xxi\"),\n        22 => String::from(\"xxii\"),\n\
    \        23 => String::from(\"xxiii\"),\n        24 => String::from(\"xxiv\"),\n\
    \        25 => String::from(\"xxv\"),\n        26 => String::from(\"xxvi\"),\n\
    \        27 => String::from(\"xxvii\"),\n        28 => String::from(\"xxviii\"\
    ),\n        29 => String::from(\"xxix\"),\n        30 => String::from(\"xxx\"\
    ),\n        31 => String::from(\"xxxi\"),\n        32 => String::from(\"xxxii\"\
    ),\n        33 => String::from(\"xxxiii\"),\n        34 => String::from(\"xxxiv\"\
    ),\n        35 => String::from(\"xxxv\"),\n        36 => String::from(\"xxxvi\"\
    ),\n        37 => String::from(\"xxxvii\"),\n        38 => String::from(\"xxxviii\"\
    ),\n        39 => String::from(\"xxxix\"),\n        40 => String::from(\"xxxx\"\
    ),\n        41 => String::from(\"xxxxi\"),\n        42 => String::from(\"xxxii\"\
    ),\n        43 => String::from(\"xxxiii\"),\n        44 => String::from(\"xxxiv\"\
    ),\n        45 => String::from(\"xxxv\"),\n        46", "    use std::cmp::Ordering;\n\
    \n    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\"\
    , \"cc\", \"d\", \"dc\", \"cm\", \"x\", \"xl\", \"l\", \"ll\"];\n\n    if number\
    \ < 0 {\n        roman.push_str(\"\u2212\");\n        number = -number;\n    }\n\
    \n    let mut numeral = number as usize;\n    let mut numeral_index = 0;\n\n \
    \   while numeral_index < numerals.len() {\n        if numeral_index == numerals.len()\
    \ - 1 {\n            roman.push_str(numerals[numeral_index]);\n            break;\n\
    \        }\n\n        let numeral_value = numerals[numeral_index];\n        let\
    \ numeral_value_length = numerals[numeral_index + 1].len();\n\n        if numeral_value\
    \ == \"c\" {\n            numeral_index += 1;\n            continue;\n       \
    \ }\n\n        if numeral_value == \"x\" {\n            numeral_index += 1;\n\
    \            continue;\n        }\n\n        if numeral_value == \"m\" {\n   \
    \         numeral_index += 1;\n            continue;\n        }\n\n        if\
    \ numeral_value == \"d\" {\n            numeral_index += 1;\n            continue;\n\
    \        }\n\n        if numeral_value == \"i\" {\n            numeral_index +=\
    \ 1;\n            continue;\n        }\n\n        if numeral_value == \"v\" {\n\
    \            numeral_index += 1;\n            continue;\n        }\n\n       \
    \ if numeral_value == \"l\" {\n            numeral_index += 1;\n            continue;\n\
    \        }\n\n        if numeral_value == \"c\" {\n            numeral_index +=\
    \ 1;\n            continue;\n        }\n\n        if numeral_value == \"x\" {\n\
    \            numeral_index += 1;\n            continue;\n        }\n\n       \
    \ if numeral_value == \"m\" {\n            numeral_index += 1;\n            continue;\n\
    \        }\n\n        if numeral_value == \"d\" {\n            numeral_index +=\
    \ 1;\n            continue;\n        }\n\n        if numeral_value == \"i\" {\n\
    \            numeral_index += 1;\n            continue;\n        }\n\n       \
    \ if numeral_value == \"v\" {\n            numeral_index += 1;\n            continue;\n\
    \        }\n\n        if numeral_value == \"l\" {\n            numeral_index +=\
    \ 1;\n            continue;\n        }\n\n        if numeral_value == \"c\" {\n\
    \            numeral_index += 1;\n            continue;\n        }\n\n       \
    \ if numeral_value == \"x\" {\n            numeral_index += 1;\n            continue;\n\
    \        }\n\n        if numeral_value == \"m\" {\n            numeral_index +=\
    \ 1;\n            continue;\n        }\n\n", "    let mut roman = String::new();\n\
    \    let mut numeral = String::new();\n    let mut numeral_digits = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new", "    let mut roman = String::new();\n    let mut numerals =\
    \ vec![];\n    let mut numeral_index = 0;\n    let mut numeral_digits = vec![];\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_index2 = 0;\n\
    \    let mut numeral_digits_index3 = 0;\n    let mut numeral_digits_index4 = 0;\n\
    \    let mut numeral_digits_index5 = 0;\n    let mut numeral_digits_index6 = 0;\n\
    \    let mut numeral_digits_index7 = 0;\n    let mut numeral_digits_index8 = 0;\n\
    \    let mut numeral_digits_index9 = 0;\n    let mut numeral_digits_index10 =\
    \ 0;\n    let mut numeral_digits_index11 = 0;\n    let mut numeral_digits_index12\
    \ = 0;\n    let mut numeral_digits_index13 = 0;\n    let mut numeral_digits_index14\
    \ = 0;\n    let mut numeral_digits_index15 = 0;\n    let mut numeral_digits_index16\
    \ = 0;\n    let mut numeral_digits_index17 = 0;\n    let mut numeral_digits_index18\
    \ = 0;\n    let mut numeral_digits_index19 = 0;\n    let mut numeral_digits_index20\
    \ = 0;\n    let mut numeral_digits_index21 = 0;\n    let mut numeral_digits_index22\
    \ = 0;\n    let mut numeral_digits_index23 = 0;\n    let mut numeral_digits_index24\
    \ = 0;\n    let mut numeral_digits_index25 = 0;\n    let mut numeral_digits_index26\
    \ = 0;\n    let mut numeral_digits_index27 = 0;\n    let mut numeral_digits_index28\
    \ = 0;\n    let mut numeral_digits_index29 = 0;\n    let mut numeral_digits_index30\
    \ = 0;\n    let mut numeral_digits_index31 = 0;\n    let mut numeral_digits_index32\
    \ = 0;\n    let mut numeral_digits_index33 = 0;\n    let mut numeral_digits_index34\
    \ = 0;\n    let mut numeral_digits_index35 = 0;\n    let mut numeral_digits_index36\
    \ = 0;\n    let mut numeral_digits_index37 = 0;\n    let mut numeral_digits_index38\
    \ = 0;\n    let mut numeral_digits_index39 = 0;\n    let mut numeral_digits_index40\
    \ = 0;\n    let mut numeral_digits_index41 = 0;\n    let mut numeral_digits_index42\
    \ = 0;\n    let mut numeral_digits_index43 = 0;\n    let mut numer", "    let\
    \ mut roman = String::new();\n    let mut numeral = String::new();\n    let mut\
    \ numerals = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"D\"\
    ),\n                           String::from(\"CD\"), String::from(\"C\"), String::from(\"\
    XC\"),\n                           String::from(\"L\"), String::from(\"XL\"),\
    \ String::from(\"X\"),\n                           String::from(\"IX\"), String::from(\"\
    V\"), String::from(\"IV\"),\n                           String::from(\"I\")];\n\
    \    let mut numeral_index = 0;\n    let mut numeral_length = numerals.len();\n\
    \    let mut numeral_value = number;\n    while numeral_value >= 1000 {\n    \
    \    numeral_value -= 1000;\n        numeral_index += 1;\n    }\n    while numeral_value\
    \ >= 100 {\n        numeral_value -= 100;\n        numeral_index += 1;\n    }\n\
    \    while numeral_value >= 10 {\n        numeral_value -= 10;\n        numeral_index\
    \ += 1;\n    }\n    while numeral_value >= 1 {\n        numeral_value -= 1;\n\
    \        numeral_index += 1;\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    numeral_value = number;\n    while numeral_value >= 1000 {\n        numeral_value\
    \ -= 1000;\n        numeral_index += 1;\n    }\n    while numeral_value >= 100\
    \ {\n        numeral_value -= 100;\n        numeral_index += 1;\n    }\n    while\
    \ numeral_value >= 10 {\n        numeral_value -= 10;\n        numeral_index +=\
    \ 1;\n    }\n    while numeral_value >= 1 {\n        numeral_value -= 1;\n   \
    \     numeral_index += 1;\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman", "    let mut roman = String::new();\n    let mut numerals = vec![];\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::",
  "    let mut roman = String::new();\n    let mut num = 0;\n    let mut prev_num\
    \ = 0;\n    let mut prev_roman = String::new();\n    let mut prev_roman_num =\
    \ 0;\n    let mut prev_roman_num_str = \"\";\n    let mut prev_roman_num_str_len\
    \ = 0;\n    let mut prev_roman_num_str_len2 = 0;\n    let mut roman_num_str =\
    \ \"\";\n    let mut roman_num_str_len = 0;\n    let mut roman_num_str_len2 =\
    \ 0;\n    let mut roman_num_str_len3 = 0;\n    let mut roman_num_str_len4 = 0;\n\
    \    let mut roman_num_str_len5 = 0;\n    let mut roman_num_str_len6 = 0;\n  \
    \  let mut roman_num_str_len7 = 0;\n    let mut roman_num_str_len8 = 0;\n    let\
    \ mut roman_num_str_len9 = 0;\n    let mut roman_num_str_len10 = 0;\n    let mut\
    \ roman_num_str_len11 = 0;\n    let mut roman_num_str_len12 = 0;\n    let mut\
    \ roman_num_str_len13 = 0;\n    let mut roman_num_str_len14 = 0;\n    let mut\
    \ roman_num_str_len15 = 0;\n    let mut roman_num_str_len16 = 0;\n    let mut\
    \ roman_num_str_len17 = 0;\n    let mut roman_num_str_len18 = 0;\n    let mut\
    \ roman_num_str_len19 = 0;\n    let mut roman_num_str_len20 = 0;\n    let mut\
    \ roman_num_str_len21 = 0;\n    let mut roman_num_str_len22 = 0;\n    let mut\
    \ roman_num_str_len23 = 0;\n    let mut roman_num_str_len24 = 0;\n    let mut\
    \ roman_num_str_len25 = 0;\n    let mut roman_num_str_len26 = 0;\n    let mut\
    \ roman_num_str_len27 = 0;\n    let mut roman_num_str_len28 = 0;\n    let mut\
    \ roman_num_str_len29 = 0;\n    let mut roman_num_str_len30 = 0;\n    let mut\
    \ roman_num_str_len31 = 0;\n    let mut roman_num_str_len32 = 0;\n    let mut\
    \ roman_num_str_len33 = 0;\n    let mut roman_num_str_len34 = 0;\n    let mut\
    \ roman_num_str_len35 = 0;\n    let mut roman_num_str_len36 = 0;\n    let mut\
    \ roman_num_str_len37 = 0;\n    let mut roman_num_str_len38 = 0;\n    let mut\
    \ roman_num_str_len39 = 0;\n    let mu", "    let mut roman = String::new();\n\
    \    let mut numeral = String::new();\n\n    if number < 1 {\n        roman.push('-');\n\
    \        numeral.push('-');\n    }\n\n    let mut nums = vec![1i32, 2, 3, 4, 7,\
    \ 9, 10, 13, 14, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 71, 73, 79, 83, 89, 97];\n\
    \n    if number < 1000 {\n        nums.insert(0, 0);\n    }\n\n    while number\
    \ >= nums.len() {\n        roman.push((nums.len() - 1).to_string());\n       \
    \ numeral.push((nums.len() - 1).to_string());\n        nums.insert(0, 0);\n  \
    \  }\n\n    let mut i = 1;\n    while i <= number {\n        roman.push((nums[i]\
    \ - 1).to_string());\n        numeral.push((nums[i] - 1).to_string());\n     \
    \   i += 1;\n    }\n\n    roman.push((nums[number] - 1).to_string());\n    numeral.push((nums[number]\
    \ - 1).to_string());\n\n    roman", "    match number {\n        1 => \"x\",\n\
    \        2 => \"xix\",\n        3 => \"xix\",\n        4 => \"xix\",\n       \
    \ 5 => \"xix\",\n        6 => \"xix\",\n        7 => \"xix\",\n        8 => \"\
    xix\",\n        9 => \"xix\",\n        10 => \"xix\",\n        11 => \"xix\",\n\
    \        12 => \"xix\",\n        13 => \"xix\",\n        14 => \"xix\",\n    \
    \    15 => \"xix\",\n        16 => \"xix\",\n        17 => \"xix\",\n        18\
    \ => \"xix\",\n        19 => \"xix\",\n        20 => \"xix\",\n        21 => \"\
    xix\",\n        22 => \"xix\",\n        23 => \"xix\",\n        24 => \"xix\"\
    ,\n        25 => \"xix\",\n        26 => \"xix\",\n        27 => \"xix\",\n  \
    \      28 => \"xix\",\n        29 => \"xix\",\n        30 => \"xix\",\n      \
    \  31 => \"xix\",\n        32 => \"xix\",\n        33 => \"xix\",\n        34\
    \ => \"xix\",\n        35 => \"xix\",\n        36 => \"xix\",\n        37 => \"\
    xix\",\n        38 => \"xix\",\n        39 => \"xix\",\n        40 => \"xix\"\
    ,\n        41 => \"xix\",\n        42 => \"xix\",\n        43 => \"xix\",\n  \
    \      44 => \"xix\",\n        45 => \"xix\",\n        46 => \"xix\",\n      \
    \  47 => \"xix\",\n        48 => \"xix\",\n        49 => \"xix\",\n        50\
    \ => \"xix\",\n        51 => \"xix\",\n        52 => \"xix\",\n        53 => \"\
    xix\",\n        54 => \"xix\",\n        55 => \"xix\",\n        56 => \"xix\"\
    ,\n        57 => \"xix\",\n        58 => \"xix\",\n        59 => \"xix\",\n  \
    \      60 => \"xix\",\n        61 => \"xix\",\n        62 => \"xix\",\n      \
    \  63 => \"xix\",\n        64 => \"xix\",\n        65 => \"xix\",\n        66\
    \ => \"xix\",\n        67 => \"xix\",\n        68 => \"xix\",\n        69 => \"\
    xix\",\n        ", "    use std::cmp::Ordering;\n    use std::fmt::{self, Display};\n\
    \n    let mut roman = String::new();\n    let mut nums = vec![\"\", \"c\", \"\
    d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n\n    for &n in &nums[0..number.min(4)]\
    \ {\n        if number >= 1000 {\n            roman.push_str(&n);\n          \
    \  number -= 1000;\n        } else {\n            roman.push_str(&ns[number %\
    \ 1000]);\n            number /= 1000;\n        }\n    }\n\n    roman.push_str(&nums[number\
    \ % 1000]);\n    roman", "    let mut roman = String::new();\n    let mut numerals\
    \ = vec![];\n    let mut numeral_map: HashMap<isize, isize> = HashMap::new();\n\
    \    let mut numeral_map_inv = HashMap::new();\n    let mut numeral_map_inv2 =\
    \ HashMap::new();\n    let mut numeral_map_inv3 = HashMap::new();\n    let mut\
    \ numeral_map_inv4 = HashMap::new();\n    let mut numeral_map_inv5 = HashMap::new();\n\
    \    let mut numeral_map_inv6 = HashMap::new();\n    let mut numeral_map_inv7\
    \ = HashMap::new();\n    let mut numeral_map_inv8 = HashMap::new();\n    let mut\
    \ numeral_map_inv9 = HashMap::new();\n    let mut numeral_map_inv10 = HashMap::new();\n\
    \    let mut numeral_map_inv11 = HashMap::new();\n    let mut numeral_map_inv12\
    \ = HashMap::new();\n    let mut numeral_map_inv13 = HashMap::new();\n    let\
    \ mut numeral_map_inv14 = HashMap::new();\n    let mut numeral_map_inv15 = HashMap::new();\n\
    \    let mut numeral_map_inv16 = HashMap::new();\n    let mut numeral_map_inv17\
    \ = HashMap::new();\n    let mut numeral_map_inv18 = HashMap::new();\n    let\
    \ mut numeral_map_inv19 = HashMap::new();\n    let mut numeral_map_inv20 = HashMap::new();\n\
    \    let mut numeral_map_inv21 = HashMap::new();\n    let mut numeral_map_inv22\
    \ = HashMap::new();\n    let mut numeral_map_inv23 = HashMap::new();\n    let\
    \ mut numeral_map_inv24 = HashMap::new();\n    let mut numeral_map_inv25 = HashMap::new();\n\
    \    let mut numeral_map_inv26 = HashMap::new();\n    let mut numeral_map_inv27\
    \ = HashMap::new();\n    let mut numeral_map_inv28 = HashMap::new();\n    let\
    \ mut numeral_map_inv29 = HashMap::new();\n    let mut numeral_map_inv30 = HashMap::new();\n\
    \    let mut numeral_map_inv31 = HashMap::new();\n    let mut numeral_map_inv32\
    \ = HashMap::new();\n    let ", "    let mut roman = String::new();\n    let mut\
    \ numerals = vec![\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\"\
    , \"dccc\", \"e\", \"f\", \"ff\", \"fff\", \"g\", \"h\", \"hh\", \"hhi\", \"i\"\
    , \"ii\", \"iii\", \"j\", \"jj\", \"jjj\", \"k\", \"l\", \"ll\", \"lll\", \"m\"\
    , \"n\", \"nn\", \"nnn\", \"o\", \"p\", \"pp\", \"ppp\", \"q\", \"r\", \"rr\"\
    , \"rr\"\n    ];\n    let mut numerals_count = vec![0, 0, 1, 2, 2, 2, 2, 2, 3,\
    \ 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, ", "    let mut roman = String::new();\n    let mut numerals\
    \ = vec![\"\", \"c\", \"l\", \"x\", \"i\"];\n    let mut numeral_index = 0;\n\
    \    let mut numeral_length = 0;\n    let mut numeral_value = 0;\n    let mut\
    \ numeral_string = \"\";\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_length_index = 0;\n    let mut numeral_string_length_value\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_index = 0;\n    let mut\
    \ numeral_string_length_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_value_index = 0;\n    let\
    \ mut numeral_string_length_value_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_value_index = 0;\n    let\
    \ mut numeral_string_length_value_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_value_index = 0;\n    let\
    \ mut numeral_string_length_value_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_value_index = 0;\n    let\
    \ mut numeral_string_length_value_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numer"]
stop_tokens:
- "\n}"

name: HumanEval_157_right_angle_triangle
language: rs
prompt: "/// Given the lengths of the three sides of a triangle. Return True if the\
  \ three\n/// sides form a right-angled triangle, False otherwise.\n/// A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n/// 90 degree.\n\
  /// Example:\n/// >>> right_angle_triangle(3, 4, 5)\n/// true\n/// >>> right_angle_triangle(1,\
  \ 2, 3)\n/// false\nfn right_angle_triangle(a: isize, b: isize, c: isize) -> bool\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = right_angle_triangle;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n}\n"
completions: ['    (b - a) * (c - b) <= 0', "    if a + b > c {\n        return false;\n\
    \    }\n    if a + c > b {\n        return false;\n    }\n    if b + c > a {\n\
    \        return false;\n    }\n    true", '    (b - a) * (c - b) <= 0', '    (b
    - a) * (c - b) >= 0', '    (b - a) * (c - b) <= 0', '    (b - a) * (c - b) <=
    0', "    if a < b {\n        if b < c {\n            if a < c {\n            \
    \    return true;\n            }\n        }\n    }\n    else {\n        if b <\
    \ c {\n            if b < c {\n                return true;\n            }\n \
    \       }\n    }\n    \n    return false;", '    a + b > c || a + c > b || b +
    c > a', '    (b - a) * (c - b) <= 0', '    (b - a) * (c - b) <= 0', '    (b -
    a) * (c - b) <= 0', '    (b - a) * (c - b) <= 0', "    if a + b > c || a + c >\
    \ b || b + c > a || a + b + c != 0 {\n        return false;\n    }\n    let mut\
    \ a = a / 2;\n    let mut b = b / 2;\n    let mut c = c / 2;\n    while a + b\
    \ + c != 0 {\n        if a + b > c {\n            a -= c;\n            b -= c;\n\
    \            c -= c;\n        } else {\n            b -= c;\n            c -=\
    \ c;\n        }\n    }\n    a + b + c == 0 || a + b + c == c", '    a + b > c
    && a + c > b && b + c > a', '    (b - a) * (c - b) >= 0', '    (b - a) * (c -
    b) <= 0', '    (b - a) * (c - b) <= 0', '    a + b > c || a + c > b || b + c >
    a', '    (b - a) * (b - a) + (c - b) * (c - b) <= 0', "    let mut a = a < b ?\
    \ a : b;\n    let mut b = b < c ? b : c;\n    let mut c = c < a ? c : a;\n   \
    \ \n    if a > b {\n        swap(&mut a, &mut b);\n    }\n    if b > c {\n   \
    \     swap(&mut b, &mut c);\n    }\n    if c > a {\n        swap(&mut c, &mut\
    \ a);\n    }\n    \n    a == b == c"]
stop_tokens:
- "\n}"

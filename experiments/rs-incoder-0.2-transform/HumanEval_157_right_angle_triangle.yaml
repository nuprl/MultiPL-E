name: HumanEval_157_right_angle_triangle
language: rs
prompt: "/// Given the lengths of the three sides of a triangle. Return True if the\
  \ three\n/// sides form a right-angled triangle, False otherwise.\n/// A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n/// 90 degree.\n\
  /// Example:\n/// >>> right_angle_triangle(3, 4, 5)\n/// true\n/// >>> right_angle_triangle(1,\
  \ 2, 3)\n/// false\nfn right_angle_triangle(a: isize, b: isize, c: isize) -> bool\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = right_angle_triangle;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n}\n"
completions: ['    (b - a) * (c - b) <= 0', "    if a + b > c {\n        return false;\n\
    \    }\n    if a + c > b {\n        return false;\n    }\n    if b + c > a {\n\
    \        return false;\n    }\n    true", '    (b - a) * (c - b) <= 0', '    (b
    - a) * (c - b) >= 0', '    (b - a) * (c - b) <= 0', '    (b - a) * (c - b) <=
    0', "    if a < b {\n        if b < c {\n            if a < c {\n            \
    \    return true;\n            }\n        }\n    }\n    else {\n        if b <\
    \ c {\n            if b < c {\n                return true;\n            }\n \
    \       }\n    }\n    \n    return false;", '    a + b > c || a + c > b || b +
    c > a', '    (b - a) * (c - b) <= 0', '    (b - a) * (c - b) <= 0', '    (b -
    a) * (c - b) <= 0', '    (b - a) * (c - b) <= 0', "    if a + b > c || a + c >\
    \ b || b + c > a || a + b + c != 0 {\n        return false;\n    }\n    let mut\
    \ a = a / 2;\n    let mut b = b / 2;\n    let mut c = c / 2;\n    while a + b\
    \ + c != 0 {\n        if a + b > c {\n            a -= c;\n            b -= c;\n\
    \            c -= c;\n        } else {\n            b -= c;\n            c -=\
    \ c;\n        }\n    }\n    a + b + c == 0 || a + b + c == c", '    a + b > c
    && a + c > b && b + c > a', '    (b - a) * (c - b) >= 0', '    (b - a) * (c -
    b) <= 0', '    (b - a) * (c - b) <= 0', '    a + b > c || a + c > b || b + c >
    a', '    (b - a) * (b - a) + (c - b) * (c - b) <= 0', "    let mut a = a < b ?\
    \ a : b;\n    let mut b = b < c ? b : c;\n    let mut c = c < a ? c : a;\n   \
    \ \n    if a > b {\n        swap(&mut a, &mut b);\n    }\n    if b > c {\n   \
    \     swap(&mut b, &mut c);\n    }\n    if c > a {\n        swap(&mut c, &mut\
    \ a);\n    }\n    \n    a == b == c", '    (b - a) * (c - b) <= 0', '    (b -
    a) * (c - b) <= 0', '    a + b > c && a + c > b && b + c > a', "    if a < b {\n\
    \        if b < c {\n            if a < c {\n                true\n          \
    \  } else {\n                false\n            }\n        } else {\n        \
    \    false\n        }\n    } else {\n        if c < b {\n            if a < c\
    \ {\n                false\n            } else {\n                true\n     \
    \       }\n        } else {\n            true\n        }\n    }", '    (b - a)
    * (c - b) <= 0', '    (b - a) * (c - b) <= 0', '    a + b > c || a + c > b ||
    b + c > a', '    (b - a) * (c - b) <= 0', '    (b - a) * (c - b) <= 0', "    if\
    \ a > b {\n        (a, b) = (b, a)\n    }\n    if b > c {\n        (b, c) = (c,\
    \ b)\n    }\n    if c > a {\n        (c, a) = (a, c)\n    }\n    \n    let mut\
    \ a = a / 2;\n    let mut b = b / 2;\n    let mut c = c / 2;\n    \n    while\
    \ a > b {\n        a -= 1;\n        b += 1;\n    }\n    while b > c {\n      \
    \  b -= 1;\n        c += 1;\n    }\n    while c > a {\n        c -= 1;\n     \
    \   a += 1;\n    }\n    \n    a == b", '    (b - a) * (c - b) >= 0', '    (b -
    a) * (c - b) <= 0', '    (b - a) * (c - b) >= 0', "    let mut a = a < 0 ? -a\
    \ : a;\n    let mut b = b < 0 ? -b : b;\n    let mut c = c < 0 ? -c : c;\n   \
    \ let mut det = a * b - c * b;\n    if det < 0 {\n        return false;\n    }\n\
    \    det = det / a;\n    let mut s = b * c + det * b;\n    let mut t = c * c -\
    \ s * s;\n    if t < 0 {\n        return false;\n    }\n    t = t / b;\n    if\
    \ s * t < 0 {\n        return false;\n    }\n    return true;", '    (b - a) *
    (c - b) <= 0', "    let mut a = a / 2;\n    let mut b = b / 2;\n    let mut c\
    \ = c / 2;\n    let mut d = a + b + c;\n    if d < 0 {\n        return false;\n\
    \    }\n    if d == 0 {\n        return true;\n    }\n    if a > b {\n       \
    \ swap(&mut a, &mut b);\n    }\n    if b > c {\n        swap(&mut b, &mut c);\n\
    \    }\n    if c > a {\n        swap(&mut c, &mut a);\n    }\n    if a + b > c\
    \ {\n        swap(&mut a, &mut c);\n    }\n    if b + c > a {\n        swap(&mut\
    \ b, &mut a);\n    }\n    if c + a > b {\n        swap(&mut c, &mut b);\n    }\n\
    \    if a + b + c > d {\n        swap(&mut a, &mut d);\n    }\n    if b + c +\
    \ a > d {\n        swap(&mut b, &mut d);\n    }\n    if c + a + b > d {\n    \
    \    swap(&mut c, &mut d);\n    }\n    if a + b + c + d > 0 {\n        swap(&mut\
    \ a, &mut d);\n    }\n    if b + c + a + d > 0 {\n        swap(&mut b, &mut d);\n\
    \    }\n    if c + a + b + d > 0 {\n        swap(&mut c, &mut d);\n    }\n   \
    \ if a + b + c + d == 0 {\n        return true;\n    }\n    return false;", '    (b
    - a) * (c - b) <= 0', '    (b - a) * (c - b) <= 0', "    if a + b > c || b + c\
    \ > a || c + a > b {\n        return false;\n    }\n    let mut sum = a;\n   \
    \ sum += b;\n    sum += c;\n    sum == a || sum == b || sum == c", '    (b - a)
    * (c - b) <= 0', "    let mut a = a % 360;\n    let mut b = b % 360;\n    let\
    \ mut c = c % 360;\n    if a > b {\n        a -= 360;\n    }\n    if b > c {\n\
    \        b -= 360;\n    }\n    if c > a {\n        c -= 360;\n    }\n    if a\
    \ == b {\n        if a == c {\n            return true;\n        }\n    }\n  \
    \  if a == c {\n        if b == c {\n            return true;\n        }\n   \
    \ }\n    if b == c {\n        if a == b {\n            return true;\n        }\n\
    \    }\n    return false;", '    a + b > c && a + c > b && b + c > a', '    (b
    - a) * (c - b) <= 0', '    (b - a) * (c - b) <= 0', '    a + b > c && a + c >
    b && b + c > a', "    let mut a = a < 0 ? -a : a;\n    let mut b = b < 0 ? -b\
    \ : b;\n    let mut c = c < 0 ? -c : c;\n    if a + b > c {\n        a = -a;\n\
    \        b = -b;\n    }\n    if a + c > b {\n        a = -a;\n        c = -c;\n\
    \    }\n    if b + c > a {\n        b = -b;\n        c = -c;\n    }\n    a ==\
    \ b == c", "    if a + b > c {\n        return false;\n    }\n    if a + c > b\
    \ {\n        return false;\n    }\n    if b + c > a {\n        return false;\n\
    \    }\n    return true;", '    (b - a) * (c - b) <= 0']
stop_tokens:
- "\n}"

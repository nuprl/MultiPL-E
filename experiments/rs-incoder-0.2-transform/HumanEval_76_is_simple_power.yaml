name: HumanEval_76_is_simple_power
language: rs
prompt: "/// Your task is to write a function that returns true if a number x is a\
  \ simple\n/// power of n and false in other cases.\n/// x is a simple power of n\
  \ if n**int=x\n/// For example:\n/// >>> is_simple_power(1, 4)\n/// true\n/// >>>\
  \ is_simple_power(2, 2)\n/// true\n/// >>> is_simple_power(8, 2)\n/// true\n///\
  \ >>> is_simple_power(3, 2)\n/// false\n/// >>> is_simple_power(3, 1)\n/// false\n\
  /// >>> is_simple_power(5, 3)\n/// false\nfn is_simple_power(x: isize, n: isize)\
  \ -> bool {\n"
tests: "}\n\nfn main() {\n    let candidate = is_simple_power;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ['    x <= 0 || n == 0', "    if x == n {\n        return true;\n   \
    \ }\n    if n == 1 {\n        return false;\n    }\n    if n % 2 == 0 {\n    \
    \    return is_simple_power(x, n / 2);\n    }\n    return is_simple_power(x, n\
    \ / 2) && is_simple_power(x, n - 1);", "    if n == 1 {\n        return true;\n\
    \    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n / 2);\n    }\n\
    \    if n % 3 == 0 {\n        return is_simple_power(x, n / 3);\n    }\n    if\
    \ n % 5 == 0 {\n        return is_simple_power(x, n / 5);\n    }\n    if n % 7\
    \ == 0 {\n        return is_simple_power(x, n / 7);\n    }\n    if n % 11 == 0\
    \ {\n        return is_simple_power(x, n / 11);\n    }\n    if n % 13 == 0 {\n\
    \        return is_simple_power(x, n / 13);\n    }\n    if n % 17 == 0 {\n   \
    \     return is_simple_power(x, n / 17);\n    }\n    if n % 19 == 0 {\n      \
    \  return is_simple_power(x, n / 19);\n    }\n    if n % 23 == 0 {\n        return\
    \ is_simple_power(x, n / 23);\n    }\n    if n % 29 == 0 {\n        return is_simple_power(x,\
    \ n / 29);\n    }\n    if n % 37 == 0 {\n        return is_simple_power(x, n /\
    \ 37);\n    }\n    if n % 53 == 0 {\n        return is_simple_power(x, n / 53);\n\
    \    }\n    if n % 59 == 0 {\n        return is_simple_power(x, n / 59);\n   \
    \ }\n    if n % 67 == 0 {\n        return is_simple_power(x, n / 67);\n    }\n\
    \    if n % 73 == 0 {\n        return is_simple_power(x, n / 73);\n    }\n   \
    \ if n % 79 == 0 {\n        return is_simple_power(x, n / 79);\n    }\n    if\
    \ n % 83 == 0 {\n        return is_simple_power(x, n / 83);\n    }\n    if n %\
    \ 89 == 0 {\n        return is_simple_power(x, n / 89);\n    }\n    if n % 97\
    \ == 0 {\n        return is_simple_power(x, n / 97);\n    }\n    if n % 101 ==\
    \ 0 {\n        return is_simple_power(x, n / 101);\n    }\n    if n % 107 == 0\
    \ {\n        return is_simple_power(x, n / 107);\n    }\n    if n % 113 == 0 {\n\
    \        return is_simple_power(x, n / 113);\n    }\n    if n % 119 == 0 {\n \
    \       return is_simple_power(x, n / 119);\n    }\n    if n % 127 == 0 {\n  \
    \      return is_simple_power(x, n / 127);\n    }\n    if n % 131 == 0 {\n   \
    \     return is_simple_power(x, n / 131);\n    }\n    if n % 137 == 0 {\n    \
    \    return is_simple_power(x, n / 137);\n    }\n    if n % 143 == 0 {\n     \
    \   return is_simple_power(x, n / 143);\n    }\n    if n % 149 == 0 {\n      \
    \  return is_simple_power(x, n / 149);\n    }\n    if n % 151 == 0 {\n       \
    \ return is_simple_", "    if n == 1 {\n        return true;\n    }\n    if n\
    \ % 2 == 0 {\n        return is_simple_power(x, n / 2);\n    }\n    if n % 3 ==\
    \ 0 {\n        return is_simple_power(x, n / 3);\n    }\n    if n % 5 == 0 {\n\
    \        return is_simple_power(x, n / 5);\n    }\n    return false;", "    if\
    \ n == 1 {\n        return true;\n    }\n    if n == 2 {\n        return x ==\
    \ 1;\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n / 2);\n\
    \    }\n    if n % 3 == 0 {\n        return is_simple_power(x, n / 3);\n    }\n\
    \    if n % 5 == 0 {\n        return is_simple_power(x, n / 5);\n    }\n    return\
    \ false;", "    if n == 1 {\n        return true;\n    }\n    if n % 2 == 0 {\n\
    \        return is_simple_power(x, n / 2);\n    }\n    if n % 3 == 0 {\n     \
    \   return is_simple_power(x, n / 3);\n    }\n    if n % 5 == 0 {\n        return\
    \ is_simple_power(x, n / 5);\n    }\n    return false;", "    if x == 1 {\n  \
    \      return true;\n    }\n    if n == 1 {\n        return false;\n    }\n  \
    \  if n % 2 == 0 {\n        return is_simple_power(x, n / 2);\n    }\n    if n\
    \ % 3 == 0 {\n        return is_simple_power(x, n / 3);\n    }\n    if n % 5 ==\
    \ 0 {\n        return is_simple_power(x, n / 5);\n    }\n    if n % 7 == 0 {\n\
    \        return is_simple_power(x, n / 7);\n    }\n    if n % 11 == 0 {\n    \
    \    return is_simple_power(x, n / 11);\n    }\n    if n % 13 == 0 {\n       \
    \ return is_simple_power(x, n / 13);\n    }\n    if n % 17 == 0 {\n        return\
    \ is_simple_power(x, n / 17);\n    }\n    if n % 19 == 0 {\n        return is_simple_power(x,\
    \ n / 19);\n    }\n    if n % 23 == 0 {\n        return is_simple_power(x, n /\
    \ 23);\n    }\n    if n % 29 == 0 {\n        return is_simple_power(x, n / 29);\n\
    \    }\n    if n % 37 == 0 {\n        return is_simple_power(x, n / 37);\n   \
    \ }\n    if n % 53 == 0 {\n        return is_simple_power(x, n / 53);\n    }\n\
    \    if n % 67 == 0 {\n        return is_simple_power(x, n / 67);\n    }\n   \
    \ if n % 83 == 0 {\n        return is_simple_power(x, n / 83);\n    }\n    if\
    \ n % 99 == 0 {\n        return is_simple_power(x, n / 99);\n    }\n    if n %\
    \ 113 == 0 {\n        return is_simple_power(x, n / 113);\n    }\n    if n % 137\
    \ == 0 {\n        return is_simple_power(x, n / 137);\n    }\n    if n % 151 ==\
    \ 0 {\n        return is_simple_power(x, n / 151);\n    }\n    if n % 167 == 0\
    \ {\n        return is_simple_power(x, n / 167);\n    }\n    if n % 181 == 0 {\n\
    \        return is_simple_power(x, n / 181);\n    }\n    if n % 197 == 0 {\n \
    \       return is_simple_power(x, n / 197);\n    }\n    if n % 211 == 0 {\n  \
    \      return is_simple_power(x, n / 211);\n    }\n    if n % 225 == 0 {\n   \
    \     return is_simple_power(x, n / 225);\n    }\n    if n % 241 == 0 {\n    \
    \    return is_simple_power(x, n / 241);\n    }\n    if n % 257 == 0 {\n     \
    \   return is_simple_power(x, n / 257);\n    }\n    if n % 263 == 0 {\n      \
    \  return is_simple_power(x, n / 263);\n    }\n    if n % 269 == 0 {\n       \
    \ return is_simple_power(x, n / 269);\n    }\n    if n % 273 == 0 {\n        return\
    \ is_simple_power(x, n / 273);\n    }\n    if ", "    if n == 1 {\n        return\
    \ true;\n    }\n    if x == 1 {\n        return false;\n    }\n    if n % x ==\
    \ 0 {\n        return is_simple_power(x, n / x);\n    }\n    return false;", " \
    \   if n == 1 {\n        return true;\n    }\n    if n == 0 {\n        return\
    \ false;\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n / 2);\n\
    \    }\n    if n % 3 == 0 {\n        return is_simple_power(x, n / 3);\n    }\n\
    \    if n % 5 == 0 {\n        return is_simple_power(x, n / 5);\n    }\n    if\
    \ n % 7 == 0 {\n        return is_simple_power(x, n / 7);\n    }\n    if n % 11\
    \ == 0 {\n        return is_simple_power(x, n / 11);\n    }\n    if n % 13 ==\
    \ 0 {\n        return is_simple_power(x, n / 13);\n    }\n    if n % 17 == 0 {\n\
    \        return is_simple_power(x, n / 17);\n    }\n    if n % 19 == 0 {\n   \
    \     return is_simple_power(x, n / 19);\n    }\n    if n % 23 == 0 {\n      \
    \  return is_simple_power(x, n / 23);\n    }\n    if n % 29 == 0 {\n        return\
    \ is_simple_power(x, n / 29);\n    }\n    if n % 31 == 0 {\n        return is_simple_power(x,\
    \ n / 31);\n    }\n    if n % 37 == 0 {\n        return is_simple_power(x, n /\
    \ 37);\n    }\n    if n % 41 == 0 {\n        return is_simple_power(x, n / 41);\n\
    \    }\n    if n % 47 == 0 {\n        return is_simple_power(x, n / 47);\n   \
    \ }\n    if n % 53 == 0 {\n        return is_simple_power(x, n / 53);\n    }\n\
    \    if n % 59 == 0 {\n        return is_simple_power(x, n / 59);\n    }\n   \
    \ if n % 61 == 0 {\n        return is_simple_power(x, n / 61);\n    }\n    if\
    \ n % 67 == 0 {\n        return is_simple_power(x, n / 67);\n    }\n    if n %\
    \ 71 == 0 {\n        return is_simple_power(x, n / 71);\n    }\n    if n % 73\
    \ == 0 {\n        return is_simple_power(x, n / 73);\n    }\n    if n % 79 ==\
    \ 0 {\n        return is_simple_power(x, n / 79);\n    }\n    if n % 83 == 0 {\n\
    \        return is_simple_power(x, n / 83);\n    }\n    if n % 89 == 0 {\n   \
    \     return is_simple_power(x, n / 89);\n    }\n    if n % 97 == 0 {\n      \
    \  return is_simple_power(x, n / 97);\n    }\n    if n % 101 == 0 {\n        return\
    \ is_simple_power(x, n / 101);\n    }\n    if n % 107 == 0 {\n        return is_simple_power(x,\
    \ n / 107);\n    }\n    if n % 113 == 0 {\n        return is_simple_power(x, n\
    \ / 113);\n    }\n    if n % 119 == 0 {\n        return is_simple_power(x, n /\
    \ 119);\n    }\n    if ", "    if n == 1 {\n        return true;\n    }\n    if\
    \ n % 2 == 0 {\n        return is_simple_power(x, n / 2);\n    }\n    if n % 3\
    \ == 0 {\n        return is_simple_power(x, n / 3);\n    }\n    if n % 5 == 0\
    \ {\n        return is_simple_power(x, n / 5);\n    }\n    return false;", " \
    \   if n == 1 {\n        return true;\n    }\n    if n % 2 == 0 {\n        return\
    \ is_simple_power(x, n / 2);\n    }\n    if n % 3 == 0 {\n        return is_simple_power(x,\
    \ n / 3);\n    }\n    if n % 5 == 0 {\n        return is_simple_power(x, n / 5);\n\
    \    }\n    return false;", "    if n == 1 {\n        return true;\n    }\n  \
    \  if n == 0 {\n        return false;\n    }\n    if n % 2 == 0 {\n        return\
    \ is_simple_power(x, n / 2);\n    }\n    if n % 3 == 0 {\n        return is_simple_power(x,\
    \ n / 3);\n    }\n    if n % 5 == 0 {\n        return is_simple_power(x, n / 5);\n\
    \    }\n    if n % 7 == 0 {\n        return is_simple_power(x, n / 7);\n    }\n\
    \    if n % 11 == 0 {\n        return is_simple_power(x, n / 11);\n    }\n   \
    \ if n % 13 == 0 {\n        return is_simple_power(x, n / 13);\n    }\n    if\
    \ n % 17 == 0 {\n        return is_simple_power(x, n / 17);\n    }\n    if n %\
    \ 19 == 0 {\n        return is_simple_power(x, n / 19);\n    }\n    if n % 23\
    \ == 0 {\n        return is_simple_power(x, n / 23);\n    }\n    if n % 29 ==\
    \ 0 {\n        return is_simple_power(x, n / 29);\n    }\n    if n % 31 == 0 {\n\
    \        return is_simple_power(x, n / 31);\n    }\n    if n % 37 == 0 {\n   \
    \     return is_simple_power(x, n / 37);\n    }\n    if n % 41 == 0 {\n      \
    \  return is_simple_power(x, n / 41);\n    }\n    if n % 47 == 0 {\n        return\
    \ is_simple_power(x, n / 47);\n    }\n    if n % 53 == 0 {\n        return is_simple_power(x,\
    \ n / 53);\n    }\n    if n % 59 == 0 {\n        return is_simple_power(x, n /\
    \ 59);\n    }\n    if n % 61 == 0 {\n        return is_simple_power(x, n / 61);\n\
    \    }\n    if n % 67 == 0 {\n        return is_simple_power(x, n / 67);\n   \
    \ }\n    if n % 71 == 0 {\n        return is_simple_power(x, n / 71);\n    }\n\
    \    if n % 73 == 0 {\n        return is_simple_power(x, n / 73);\n    }\n   \
    \ if n % 79 == 0 {\n        return is_simple_power(x, n / 79);\n    }\n    if\
    \ n % 83 == 0 {\n        return is_simple_power(x, n / 83);\n    }\n    if n %\
    \ 89 == 0 {\n        return is_simple_power(x, n / 89);\n    }\n    if n % 97\
    \ == 0 {\n        return is_simple_power(x, n / 97);\n    }\n    if n % 101 ==\
    \ 0 {\n        return is_simple_power(x, n / 101);\n    }\n    if n % 107 == 0\
    \ {\n        return is_simple_power(x, n / 107);\n    }\n    if n % 113 == 0 {\n\
    \        return is_simple_power(x, n / 113);\n    }\n    if n % 119 == 0 {\n \
    \       return is_simple_power(x, n / 119);\n    }\n    if ", "    if n == 1 {\n\
    \        return true;\n    }\n    if n % 2 == 0 {\n        return false;\n   \
    \ }\n    if n % 3 == 0 {\n        return false;\n    }\n    if n % 5 == 0 {\n\
    \        return false;\n    }\n    if n % 7 == 0 {\n        return false;\n  \
    \  }\n    if n % 11 == 0 {\n        return false;\n    }\n    if n % 13 == 0 {\n\
    \        return false;\n    }\n    if n % 17 == 0 {\n        return false;\n \
    \   }\n    if n % 19 == 0 {\n        return false;\n    }\n    if n % 23 == 0\
    \ {\n        return false;\n    }\n    if n % 29 == 0 {\n        return false;\n\
    \    }\n    if n % 31 == 0 {\n        return false;\n    }\n    if n % 37 == 0\
    \ {\n        return false;\n    }\n    if n % 41 == 0 {\n        return false;\n\
    \    }\n    if n % 47 == 0 {\n        return false;\n    }\n    if n % 53 == 0\
    \ {\n        return false;\n    }\n    if n % 59 == 0 {\n        return false;\n\
    \    }\n    if n % 61 == 0 {\n        return false;\n    }\n    if n % 67 == 0\
    \ {\n        return false;\n    }\n    if n % 71 == 0 {\n        return false;\n\
    \    }\n    if n % 73 == 0 {\n        return false;\n    }\n    if n % 79 == 0\
    \ {\n        return false;\n    }\n    if n % 83 == 0 {\n        return false;\n\
    \    }\n    if n % 89 == 0 {\n        return false;\n    }\n    if n % 97 == 0\
    \ {\n        return false;\n    }\n    if n % 101 == 0 {\n        return false;\n\
    \    }\n    if n % 103 == 0 {\n        return false;\n    }\n    if n % 107 ==\
    \ 0 {\n        return false;\n    }\n    if n % 111 == 0 {\n        return false;\n\
    \    }\n    if n % 113 == 0 {\n        return false;\n    }\n    if n % 117 ==\
    \ 0 {\n        return false;\n    }\n    if n % 121 == 0 {\n        return false;\n\
    \    }\n    if n % 123 == 0 {\n        return false;\n    }\n    if n % 127 ==\
    \ 0 {\n        return false;\n    }\n    if n % 131 == 0 {\n        return false;\n\
    \    }\n    if n % 133 == 0 {\n        return false;\n    }\n    if n % 137 ==\
    \ 0 {\n        return false;\n    }\n    if n % 141 == 0 {\n        return false;\n\
    \    }\n    if n % 143 == 0 {\n        return false;\n    }\n    if n % 147 ==\
    \ 0 {\n        return false;\n    }\n    if n % 151 == 0 {\n        return false;\n\
    \    }\n    if n % 153 == 0 {\n        return false;\n    }\n    if n % 157 ==\
    \ 0 {\n        return false;\n    }\n    if n % 161 == 0 {\n        return false;\n\
    \    }\n    if n % 163 == 0 {\n        return false;\n    }\n    if n % 167 ==\
    \ 0 {\n        return false;\n    }\n    if n % 171 == 0 {\n        return false;\n\
    \    }\n    if n % 173 == 0 {\n        return false;\n    }\n    if n % 177 ==\
    \ 0 {\n        return false;\n    }\n    if n % 181 == 0 {\n        return false;\n\
    \    }\n    if n % 183 == 0 {\n        return false;\n    }\n    if n % 187 ==\
    \ 0 {\n", "    if n == 1 {\n        return true;\n    }\n    if n % 2 == 0 {\n\
    \        return is_simple_power(x, n / 2);\n    }\n    if n % 3 == 0 {\n     \
    \   return is_simple_power(x, n / 3);\n    }\n    if n % 5 == 0 {\n        return\
    \ is_simple_power(x, n / 5);\n    }\n    return false;", '    x <= 0 || n == 0',
  "    match n {\n        1 => true,\n        2 => x == 1,\n        _ => is_simple_power(x,\
    \ n - 1) && is_simple_power(x, n - 2),\n    }", "    if n == 0 {\n        return\
    \ true;\n    }\n    if n == 1 {\n        return false;\n    }\n    if n % 2 ==\
    \ 0 {\n        return is_simple_power(x, n / 2);\n    }\n    if n % 3 == 0 {\n\
    \        return is_simple_power(x, n / 3);\n    }\n    if n % 5 == 0 {\n     \
    \   return is_simple_power(x, n / 5);\n    }\n    if n % 7 == 0 {\n        return\
    \ is_simple_power(x, n / 7);\n    }\n    if n % 11 == 0 {\n        return is_simple_power(x,\
    \ n / 11);\n    }\n    if n % 13 == 0 {\n        return is_simple_power(x, n /\
    \ 13);\n    }\n    if n % 17 == 0 {\n        return is_simple_power(x, n / 17);\n\
    \    }\n    if n % 19 == 0 {\n        return is_simple_power(x, n / 19);\n   \
    \ }\n    if n % 23 == 0 {\n        return is_simple_power(x, n / 23);\n    }\n\
    \    if n % 29 == 0 {\n        return is_simple_power(x, n / 29);\n    }\n   \
    \ if n % 31 == 0 {\n        return is_simple_power(x, n / 31);\n    }\n    if\
    \ n % 37 == 0 {\n        return is_simple_power(x, n / 37);\n    }\n    if n %\
    \ 41 == 0 {\n        return is_simple_power(x, n / 41);\n    }\n    if n % 47\
    \ == 0 {\n        return is_simple_power(x, n / 47);\n    }\n    if n % 53 ==\
    \ 0 {\n        return is_simple_power(x, n / 53);\n    }\n    if n % 59 == 0 {\n\
    \        return is_simple_power(x, n / 59);\n    }\n    if n % 61 == 0 {\n   \
    \     return is_simple_power(x, n / 61);\n    }\n    if n % 67 == 0 {\n      \
    \  return is_simple_power(x, n / 67);\n    }\n    if n % 71 == 0 {\n        return\
    \ is_simple_power(x, n / 71);\n    }\n    if n % 73 == 0 {\n        return is_simple_power(x,\
    \ n / 73);\n    }\n    if n % 79 == 0 {\n        return is_simple_power(x, n /\
    \ 79);\n    }\n    if n % 83 == 0 {\n        return is_simple_power(x, n / 83);\n\
    \    }\n    if n % 89 == 0 {\n        return is_simple_power(x, n / 89);\n   \
    \ }\n    if n % 97 == 0 {\n        return is_simple_power(x, n / 97);\n    }\n\
    \    if n % 101 == 0 {\n        return is_simple_power(x, n / 101);\n    }\n \
    \   if n % 107 == 0 {\n        return is_simple_power(x, n / 107);\n    }\n  \
    \  if n % 111 == 0 {\n        return is_simple_power(x, n / 111);\n    }\n   \
    \ if n % 117 == 0 {\n        return is_simple_power(x, n / 117);\n    }\n    if ",
  "    if n == 0 {\n        return true;\n    }\n    if n == 1 {\n        return x\
    \ == 1;\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n / 2);\n\
    \    }\n    if n % 3 == 0 {\n        return is_simple_power(x, n / 3);\n    }\n\
    \    if n % 5 == 0 {\n        return is_simple_power(x, n / 5);\n    }\n    return\
    \ false;", "    if n == 1 {\n        return true;\n    }\n    if n == 0 {\n  \
    \      return false;\n    }\n    if x == 1 {\n        return true;\n    }\n  \
    \  if x == 0 {\n        return false;\n    }\n    if n % 2 == 0 {\n        return\
    \ is_simple_power(x, n / 2);\n    }\n    if n % 3 == 0 {\n        return is_simple_power(x,\
    \ n / 3);\n    }\n    if n % 5 == 0 {\n        return is_simple_power(x, n / 5);\n\
    \    }\n    if n % 7 == 0 {\n        return is_simple_power(x, n / 7);\n    }\n\
    \    if n % 11 == 0 {\n        return is_simple_power(x, n / 11);\n    }\n   \
    \ if n % 13 == 0 {\n        return is_simple_power(x, n / 13);\n    }\n    if\
    \ n % 17 == 0 {\n        return is_simple_power(x, n / 17);\n    }\n    if n %\
    \ 19 == 0 {\n        return is_simple_power(x, n / 19);\n    }\n    if n % 23\
    \ == 0 {\n        return is_simple_power(x, n / 23);\n    }\n    if n % 29 ==\
    \ 0 {\n        return is_simple_power(x, n / 29);\n    }\n    if n % 31 == 0 {\n\
    \        return is_simple_power(x, n / 31);\n    }\n    if n % 37 == 0 {\n   \
    \     return is_simple_power(x, n / 37);\n    }\n    if n % 41 == 0 {\n      \
    \  return is_simple_power(x, n / 41);\n    }\n    if n % 43 == 0 {\n        return\
    \ is_simple_power(x, n / 43);\n    }\n    if n % 47 == 0 {\n        return is_simple_power(x,\
    \ n / 47);\n    }\n    if n % 53 == 0 {\n        return is_simple_power(x, n /\
    \ 53);\n    }\n    if n % 59 == 0 {\n        return is_simple_power(x, n / 59);\n\
    \    }\n    if n % 61 == 0 {\n        return is_simple_power(x, n / 61);\n   \
    \ }\n    if n % 67 == 0 {\n        return is_simple_power(x, n / 67);\n    }\n\
    \    if n % 71 == 0 {\n        return is_simple_power(x, n / 71);\n    }\n   \
    \ if n % 73 == 0 {\n        return is_simple_power(x, n / 73);\n    }\n    if\
    \ n % 79 == 0 {\n        return is_simple_power(x, n / 79);\n    }\n    if n %\
    \ 83 == 0 {\n        return is_simple_power(x, n / 83);\n    }\n    if n % 89\
    \ == 0 {\n        return is_simple_power(x, n / 89);\n    }\n    if n % 97 ==\
    \ 0 {\n        return is_simple_power(x, n / 97);\n    }\n    if n % 101 == 0\
    \ {\n        return is_simple_power(x, n / 101);\n    }\n    if n % 107 == 0 {\n\
    \        return is_simple_power(x, n / 107);\n    }\n    if n % 11", "    if n\
    \ == 0 {\n        return true;\n    }\n    if n == 1 {\n        return x == 1;\n\
    \    }\n    if n == 2 {\n        return x == x;\n    }\n    if n == 3 {\n    \
    \    return x == x * x;\n    }\n    if n == 4 {\n        return x == x * x * x;\n\
    \    }\n    if n == 5 {\n        return x == x * x * x * x;\n    }\n    if n ==\
    \ 6 {\n        return x == x * x * x * x * x;\n    }\n    if n == 7 {\n      \
    \  return x == x * x * x * x * x * x;\n    }\n    if n == 8 {\n        return\
    \ x == x * x * x * x * x * x * x;\n    }\n    if n == 9 {\n        return x ==\
    \ x * x * x * x * x * x * x * x;\n    }\n    if n == 10 {\n        return x ==\
    \ x * x * x * x * x * x * x * x * x;\n    }\n    if n == 11 {\n        return\
    \ x == x * x * x * x * x * x * x * x * x * x;\n    }\n    if n == 12 {\n     \
    \   return x == x * x * x * x * x * x * x * x * x * x * x;\n    }\n    if n ==\
    \ 13 {\n        return x == x * x * x * x * x * x * x * x * x * x * x * x;\n \
    \   }\n    if n == 14 {\n        return x == x * x * x * x * x * x * x * x * x\
    \ * x * x * x * x;\n    }\n    if n == 15 {\n        return x == x * x * x * x\
    \ * x * x * x * x * x * x * x * x * x * x;\n    }\n    if n == 16 {\n        return\
    \ x == x * x * x * x * x * x * x * x * x * x * x * x * x * x * x;\n    }\n   \
    \ if n == 17 {\n        return x == x * x * x * x * x * x * x * x * x * x * x\
    \ * x * x * x * x * x;\n    }\n    if n == 18 {\n        return x == x * x * x\
    \ * x * x * x * x * x * x * x * x * x * x * x * x * x;\n    }\n    if n == 19\
    \ {\n        return x == x * x * x * x * x * x * x * x * x * x * x * x * x * x\
    \ * x * x * x;\n    }\n    if n == 20 {\n        return x == x * x * x * x * x\
    \ * x * x * x * x * x * x * x * x * x * x * x * x;\n    }\n    if n == 21 {\n\
    \        return x == x * x * x * x * x * x * x * x * x * x * x * x * x * x * x\
    \ * x * x;\n    }\n    if n == 22 {\n        return x == x * x * x * x * x * x\
    \ * x * x * x * x * x * x * x * x * x * x * x * x;\n    }\n    if n == 23 {\n\
    \        return x == x * x * x * x * x * x * x * x * x * x * x * x * x * x * x\
    \ * x * x * x;\n    }\n    if n == 24 {\n        return x == x * x * x * x * x\
    \ * x * x * x * x * x * x * x * x * x * x * x * x * x;\n    }\n    if n == 25\
    \ {\n        return x == x * x * x * "]
stop_tokens:
- "\n}"

language: rs
name: HumanEval_117_select_words
results:
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        if\
    \ s.chars().any(|c| c.is_consonant() && c != ' ') {\n            i += 1;\n   \
    \     } else {\n            words.push(s.split_whitespace()[i]);\n           \
    \ i += 1;\n        }\n        if i == s.len() {\n            break;\n        }\n\
    \    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5fewakz6.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5fewakz6.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5fewakz6.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5fewakz6.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5fewakz6.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5fewakz6.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5fewakz6.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5fewakz6.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5fewakz6.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5fewakz6.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5fewakz6.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut s = String::from(s);\n    let mut i = 0;\n    while\
    \ i < s.len() {\n        if s.chars().all(|c| c.is_consonant() && c != ' ') {\n\
    \            words.push(s.subslice(i, i + n));\n            i += n;\n        }\n\
    \    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp14pt7t61.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp14pt7t61.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp14pt7t61.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp14pt7t61.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp14pt7t61.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp14pt7t61.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp14pt7t61.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp14pt7t61.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp14pt7t61.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp14pt7t61.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp14pt7t61.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut word = String::new();\n        let mut i = 0;\n        while i < s.len()\
    \ {\n            let c = s.chars().nth(i).unwrap();\n            if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                i += 1;\n  \
    \              continue;\n            }\n            if c == 'n' {\n         \
    \       i += 1;\n                continue;\n            }\n            if c ==\
    \ 't' || c == 's' || c == 'h' {\n                i += 1;\n                continue;\n\
    \            }\n            if c == 'd' || c == 'l' || c == 'm' || c == 'y' {\n\
    \                i += 1;\n                continue;\n            }\n         \
    \   if c == 'p' || c == 'r' || c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                i += 1;\n                continue;\n           \
    \ }\n            if c == 'n' {\n                i += 1;\n                continue;\n\
    \            }\n            if c == 't' || c == 's' || c == 'h' {\n          \
    \      i += 1;\n                continue;\n            }\n            if c ==\
    \ 'd' || c == 'l' || c == 'm' || c == 'y' {\n                i += 1;\n       \
    \         continue;\n            }\n            if c == 'p' || c == 'r' || c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                i +=\
    \ 1;\n                continue;\n            }\n            if c == 'n' {\n  \
    \              i += 1;\n                continue;\n            }\n           \
    \ if c == 't' || c == 's' || c == 'h' {\n                i += 1;\n           \
    \     continue;\n            }\n            if c == 'd' || c == 'l' || c == 'm'\
    \ || c == 'y' {\n                i += 1;\n                continue;\n        \
    \    }\n            if c == 'p' || c == 'r' || c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' {\n                i += 1;\n                continue;\n\
    \            }\n            if c == 'n' {\n                i += 1;\n         \
    \       continue;\n            }\n            if c == 't' || c == 's' || c ==\
    \ 'h' {\n                i += 1;\n                continue;\n            }\n \
    \           if c == 'd' || c == 'l' || c == 'm' || c == 'y' {\n              \
    \  i += 1;\n                continue;\n            }\n            if c == 'p'\
    \ || c == 'r' || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n\
    \                i += 1;\n                continue\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpr63mwv23.rs:103:3\n\
    \    |\n17  | fn select_words(s: String, n: isize) -> Vec<String> {\n    |   \
    \                                                  - unclosed delimiter\n...\n\
    20  |     while s.len() > 0 {\n    |                       - unclosed delimiter\n\
    ...\n23  |         while i < s.len() {\n    |                           - unclosed\
    \ delimiter\n...\n89  |             if c == 'p' || c == 'r' || c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u' {\n    |                           \
    \                                                                      - this\
    \ delimiter might not be properly closed...\n...\n92  | }\n    | - ...as it matches\
    \ this but it has different indentation\n...\n103 | }\n    |   ^\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr63mwv23.rs:96:17\n  \
    \ |\n96 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr63mwv23.rs:96:25\n   |\n96 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr63mwv23.rs:97:17\n   |\n97 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr63mwv23.rs:97:25\n\
    \   |\n97 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr63mwv23.rs:98:17\n   |\n98 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr63mwv23.rs:98:25\n   |\n98 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr63mwv23.rs:99:17\n   |\n99 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s.chars().any(|c| c == s.chars().nth(j))\
    \ {\n            j += 1\n        }\n        if j - i == n {\n            list.push(s.chars().nth(i).unwrap());\n\
    \            i += n;\n        }\n        else {\n            i += j;\n       \
    \ }\n    }\n    list\n}\n\nfn main() {\n    let candidate = select_words;\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpp2y1ya38.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp2y1ya38.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp2y1ya38.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp2y1ya38.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp2y1ya38.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp2y1ya38.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp2y1ya38.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp2y1ya38.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp2y1ya38.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp2y1ya38.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp2y1ya38.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut s = String::from(s);\n    while s.len() > 0 {\n\
    \        let mut i = 0;\n        while i < s.len() && s.chars().any(|c| c != s.chars().nth(i))\
    \ {\n            i += 1;\n        }\n        if i == s.len() {\n            words.push(s);\n\
    \            break;\n        }\n        let mut j = i;\n        while j < s.len()\
    \ && s.chars().any(|c| c != s.chars().nth(j)) {\n            j += 1;\n       \
    \ }\n        if j == s.len() {\n            words.push(s);\n            break;\n\
    \        }\n        let mut k = j;\n        while k < s.len() && s.chars().any(|c|\
    \ c != s.chars().nth(k)) {\n            k += 1;\n        }\n        if k == s.len()\
    \ {\n            words.push(s);\n            break;\n        }\n        let mut\
    \ l = k;\n        while l < s.len() && s.chars().any(|c| c != s.chars().nth(l))\
    \ {\n            l += 1;\n        }\n        if l == s.len() {\n            words.push(s);\n\
    \            break;\n        }\n        let mut m = l;\n        while m < s.len()\
    \ && s.chars().any(|c| c != s.chars().nth(m)) {\n            m += 1;\n       \
    \ }\n        if m == s.len() {\n            words.push(s);\n            break;\n\
    \        }\n        let mut n = m;\n        while n < s.len() && s.chars().any(|c|\
    \ c != s.chars().nth(n)) {\n            n += 1;\n        }\n        if n == s.len()\
    \ {\n            words.push(s);\n            break;\n        }\n        let mut\
    \ o = n;\n        while o < s.len() && s.chars().any(|c| c != s.chars().nth(o))\
    \ {\n            o += 1;\n        }\n        if o == s.len() {\n            words.push(s);\n\
    \            break;\n        }\n        let mut p = o;\n        while p < s.len()\
    \ && s.chars().any(|c| c != s.chars().nth(p)) {\n            p += 1;\n       \
    \ }\n        if p == s.len() {\n            words.push(s);\n            break;\n\
    \        }\n        let mut q = p;\n        while q < s.len() && s.chars().any(|c|\
    \ c != s.chars().nth(q)) {\n            q += 1;\n        }\n        if q == s.len()\
    \ {\n            words.push(s);\n            break;\n        }\n        let mut\
    \ r = q;\n        while r < s.len() && s.chars().any(|c| c != s.chars().nth(r))\
    \ {\n            r += 1;\n        }\n        if r == s.\n}\n\nfn main() {\n  \
    \  let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp8fn37rw7.rs:109:3\n\
    \    |\n17  | fn select_words(s: String, n: isize) -> Vec<String> {\n    |   \
    \                                                  - unclosed delimiter\n...\n\
    20  |     while s.len() > 0 {\n    |                       - this delimiter might\
    \ not be properly closed...\n...\n98  | }\n    | - ...as it matches this but it\
    \ has different indentation\n...\n109 | }\n    |   ^\n\nerror: unexpected token:\
    \ `}`\n  --> /tmp/tmp8fn37rw7.rs:98:1\n   |\n98 | }\n   | ^\n\nerror: expected\
    \ `{`, found `}`\n  --> /tmp/tmp8fn37rw7.rs:98:1\n   |\n97 |         if r == s.\n\
    \   |         -- this `if` expression has a condition, but no block\n98 | }\n\
    \   | ^ expected `{`\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \   --> /tmp/tmp8fn37rw7.rs:102:17\n    |\n102 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmp8fn37rw7.rs:102:25\n    |\n102 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmp8fn37rw7.rs:103:17\n    |\n103 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmp8fn37rw7.rs:103:25\n    |\n103 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmp8fn37rw7.rs:104:17\n    |\n104 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmp8fn37rw7.rs:104:25\n    |\n104 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmp8fn37rw7.rs:105:17\n    |\n105 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        if\
    \ s.chars().any(|c| c.is_consonant() && c != ' ') {\n            i += 1;\n   \
    \     } else {\n            words.push_back(s.subslice(i, i + n));\n         \
    \   i += n;\n        }\n    }\n    words\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpl8e6n8dc.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl8e6n8dc.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl8e6n8dc.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpl8e6n8dc.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpl8e6n8dc.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl8e6n8dc.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpl8e6n8dc.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpl8e6n8dc.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl8e6n8dc.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl8e6n8dc.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl8e6n8dc.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n\
    \        }\n        if j - i > n {\n            list.push(s.split_whitespace()[i]);\n\
    \            i += j - i;\n        } else {\n            i += 1;\n        }\n \
    \   }\n    list\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpa6pw421b.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa6pw421b.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa6pw421b.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa6pw421b.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa6pw421b.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa6pw421b.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa6pw421b.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa6pw421b.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa6pw421b.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa6pw421b.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa6pw421b.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowel_counter = 0;\n    let mut vowel_counter2 =\
    \ 0;\n    let mut vowel_counter3 = 0;\n    let mut vowel_counter4 = 0;\n    let\
    \ mut vowel_counter5 = 0;\n    let mut vowel_counter6 = 0;\n    let mut vowel_counter7\
    \ = 0;\n    let mut vowel_counter8 = 0;\n    let mut vowel_counter9 = 0;\n   \
    \ let mut vowel_counter10 = 0;\n    let mut vowel_counter11 = 0;\n    let mut\
    \ vowel_counter12 = 0;\n    let mut vowel_counter13 = 0;\n    let mut vowel_counter14\
    \ = 0;\n    let mut vowel_counter15 = 0;\n    let mut vowel_counter16 = 0;\n \
    \   let mut vowel_counter17 = 0;\n    let mut vowel_counter18 = 0;\n    let mut\
    \ vowel_counter19 = 0;\n    let mut vowel_counter20 = 0;\n    let mut vowel_counter21\
    \ = 0;\n    let mut vowel_counter22 = 0;\n    let mut vowel_counter23 = 0;\n \
    \   let mut vowel_counter24 = 0;\n    let mut vowel_counter25 = 0;\n    let mut\
    \ vowel_counter26 = 0;\n    let mut vowel_counter27 = 0;\n    let mut vowel_counter28\
    \ = 0;\n    let mut vowel_counter29 = 0;\n    let mut vowel_counter30 = 0;\n \
    \   let mut vowel_counter31 = 0;\n    let mut vowel_counter32 = 0;\n    let mut\
    \ vowel_counter33 = 0;\n    let mut vowel_counter34 = 0;\n    let mut vowel_counter35\
    \ = 0;\n    let mut vowel_counter36 = 0;\n    let mut vowel_counter37 = 0;\n \
    \   let mut vowel_counter38 = 0;\n    let mut vowel_counter39 = 0;\n    let mut\
    \ vowel_counter40 = 0;\n    let mut vowel_counter41 = 0;\n    let mut vowel_counter42\
    \ = 0;\n    let mut vowel_counter43 = 0;\n    let mut vowel_counter44 = 0;\n \
    \   let mut vowel_counter45 = 0;\n    let mut vowel_counter46 = 0;\n    let mut\
    \ vowel_counter47 = 0;\n    let mut vowel_counter48 = 0;\n    let mut vowel_counter49\
    \ = 0;\n    let mut vowel_counter50 = 0;\n    let mut vowel_counter51 = 0;\n \
    \   let mut vowel_counter52 = 0;\n    let mut vowel_counter53 = 0;\n    let mut\
    \ vowel_counter54 = 0;\n\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:80:17\n\
    \   |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzpm4h9c7.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzpm4h9c7.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzpm4h9c7.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzpm4h9c7.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as\
    \ usize;\n    let mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n\
    \        while j < s.len() && s[j] == ' ' {\n            j += 1\n        }\n \
    \       if j == i {\n            result.push(s.clone());\n            i += 1;\n\
    \        } else {\n            let mut k = j;\n            while k < s.len() &&\
    \ s[k] != ' ' {\n                k += 1\n            }\n            if k == j\
    \ {\n                result.push(s.clone());\n                i += 1;\n      \
    \      } else {\n                let mut k = j;\n                while k < s.len()\
    \ && s[k] == ' ' {\n                    k += 1\n                }\n          \
    \      if k == j {\n                    result.push(s.clone());\n            \
    \        i += 1;\n                } else {\n                    let mut k = j;\n\
    \                    while k < s.len() && s[k] != ' ' {\n                    \
    \    k += 1\n                    }\n                    if k == j {\n        \
    \                result.push(s.clone());\n                        i += 1;\n  \
    \                  } else {\n                        let mut k = j;\n        \
    \                while k < s.len() && s[k] == ' ' {\n                        \
    \    k += 1\n                        }\n                        if k == j {\n\
    \                            result.push(s.clone());\n                       \
    \     i += 1;\n                        } else {\n                            let\
    \ mut k = j;\n                            while k < s.len() && s[k] != ' ' {\n\
    \                                k += 1\n                            }\n     \
    \                       if k == j {\n                                result.push(s.clone());\n\
    \                                i += 1;\n                            } else {\n\
    \                                let mut k = j;\n                            \
    \    while k < s.len() && s[k] == ' ' {\n                                    k\
    \ += 1\n                                }\n                                if\
    \ k == j {\n                                    result.push(s.clone());\n    \
    \                                i += 1;\n                                } else\
    \ {\n                                    let mut k = j;\n                    \
    \                while k < s.len() && s[k] != ' ' {\n                        \
    \                k += 1\n                                    }\n             \
    \                       if k == j {\n                                        result.push(s.clone());\n\
    \                                        i += 1;\n                           \
    \         } else {\n                                        let mut k = j;\n \
    \                                       while k < s.len() && s[k] == ' ' {\n \
    \                                           k += 1\n                         \
    \               }\n                                        if k == j {\n     \
    \                                       result.push(s.clone());\n            \
    \                                i += 1;\n                                   \
    \     } else {\n                                            let mut k = j;\n \
    \                                           while k < s.len() && s[k] != ' ' {\n\
    \                                                k += 1\n                    \
    \                        }\n                                            if k ==\
    \ j {\n                                                result.push(s.clone());\n\
    \                                                i += 1;\n                   \
    \                         } else {\n                                         \
    \       let mut k = j;\n                                                while\
    \ k < s.len() && s[k] == ' ' \n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp_kznsa4e.rs:116:3\n\
    \    |\n17  | fn select_words(s: String, n: isize) -> Vec<String> {\n    |   \
    \                                                  - unclosed delimiter\n...\n\
    22  |     while i < s.len() {\n    |                       - unclosed delimiter\n\
    ...\n30  |         } else {\n    |                - unclosed delimiter\n...\n\
    38  |             } else {\n    |                    - unclosed delimiter\n...\n\
    46  |                 } else {\n    |                        - unclosed delimiter\n\
    ...\n54  |                     } else {\n    |                            - unclosed\
    \ delimiter\n...\n62  |                         } else {\n    |              \
    \                  - unclosed delimiter\n...\n70  |                          \
    \   } else {\n    |                                    - unclosed delimiter\n\
    ...\n78  |                                 } else {\n    |                   \
    \                     - unclosed delimiter\n...\n86  |                       \
    \              } else {\n    |                                            - unclosed\
    \ delimiter\n...\n94  |                                         } else {\n   \
    \ |                                                - unclosed delimiter\n...\n\
    102 |                                             } else {\n    |            \
    \                                        - this delimiter might not be properly\
    \ closed...\n...\n105 | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n116 | }\n    |   ^\n\nerror: expected `{`, found `}`\n   -->\
    \ /tmp/tmp_kznsa4e.rs:105:1\n    |\n105 | }\n    | ^ expected `{`\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp_kznsa4e.rs:109:17\n\
    \    |\n109 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp_kznsa4e.rs:109:25\n    |\n109 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp_kznsa4e.rs:110:1"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        if\
    \ s.chars().any(|c| c.is_consonant() && c != ' ') {\n            list.push(s.subslice(i,\
    \ i + n));\n            i += n;\n        }\n    }\n    list\n}\n\nfn main() {\n\
    \    let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfer27ot1.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfer27ot1.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfer27ot1.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfer27ot1.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfer27ot1.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfer27ot1.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfer27ot1.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfer27ot1.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfer27ot1.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfer27ot1.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfer27ot1.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut count = 0;\n    let mut i = 0;\n    while i\
    \ < s.len() {\n        if s.chars().any(|c| c == ' ') {\n            i += 1;\n\
    \            continue;\n        }\n        if s.chars().any(|c| c.is_uppercase()\
    \ && c != ' ') {\n            i += 1;\n            continue;\n        }\n    \
    \    if s.chars().any(|c| c.is_lowercase() && c != ' ') {\n            i += 1;\n\
    \            continue;\n        }\n        if s.chars().any(|c| c.is_lowercase()\
    \ && c.is_uppercase() && c != ' ') {\n            i += 1;\n            continue;\n\
    \        }\n        if s.chars().any(|c| c.is_uppercase() && c.is_lowercase()\
    \ && c != ' ') {\n            i += 1;\n            continue;\n        }\n    \
    \    if s.chars().any(|c| c.is_lowercase() && c.is_uppercase() && c.is_lowercase()\
    \ && c != ' ') {\n            i += 1;\n            continue;\n        }\n    \
    \    if s.chars().any(|c| c.is_lowercase() && c.is_uppercase() && c.is_lowercase()\
    \ && c.is_lowercase() && c != ' ') {\n            i += 1;\n            continue;\n\
    \        }\n        if s.chars().any(|c| c.is_lowercase() && c.is_uppercase()\
    \ && c.is_lowercase() && c.is_lowercase() && c.is_lowercase() && c != ' ') {\n\
    \            i += 1;\n            continue;\n        }\n        if s.chars().any(|c|\
    \ c.is_lowercase() && c.is_uppercase() && c.is_lowercase() && c.is_lowercase()\
    \ && c.is_lowercase() && c.is_lowercase() && c != ' ') {\n            i += 1;\n\
    \            continue;\n        }\n        if s.chars().any(|c| c.is_lowercase()\
    \ && c.is_uppercase() && c.is_lowercase() && c.is_lowercase() && c.is_lowercase()\
    \ && c.is_lowercase() && c.is_lowercase() && c != ' ') {\n            i += 1;\n\
    \            continue;\n        }\n        if s.chars().any(|c| c.is_lowercase()\
    \ && c.is_uppercase() && c.is_lowercase() && c.is_lowercase() && c.is_lowercase()\
    \ && c.is_lowercase() && c.is_lowercase() && c.is_lowercase() && c != ' ') {\n\
    \            i += 1;\n            continue;\n        }\n        if s.chars().any(|c|\
    \ c.is_lowercase() && c.is_uppercase() && c.is_lowercase() && c.is_lowercase()\
    \ && c.is_lowercase() && c.is_lowercase() && c.is_lowercase() && c.is_lowercase()\
    \ && c.is_lowercase() && c != ' ') {\n            i += 1;\n            continue;\n\
    \        }\n        if s.chars().any(|c| c.is_lowercase() && c.is_uppercase()\
    \ && c.is_lowercase() && c.is_lowercase() && c.is_lowercase() && c.is_lowercase()\
    \ && \n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpd60oe65r.rs:82:3\n\
    \   |\n17 | fn select_words(s: String, n: isize) -> Vec<String> {\n   |      \
    \                                               - unclosed delimiter\n...\n21\
    \ |     while i < s.len() {\n   |                       - this delimiter might\
    \ not be properly closed...\n...\n71 | }\n   | - ...as it matches this but it\
    \ has different indentation\n...\n82 | }\n   |   ^\n\nerror: expected expression,\
    \ found `)`\n  --> /tmp/tmpd60oe65r.rs:71:1\n   |\n71 | }\n   | ^ expected expression\n\
    \nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpd60oe65r.rs:70:25\n\
    \   |\n17 | fn select_words(s: String, n: isize) -> Vec<String> {\n   |      \
    \                                               - closing delimiter possibly meant\
    \ for this\n...\n70 |         if s.chars().any(|c| c.is_lowercase() && c.is_uppercase()\
    \ && c.is_lowercase() && c.is_lowercase() && c.is_lowercase() && c.is_low...\n\
    \   |                         ^ unclosed delimiter\n71 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd60oe65r.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd60oe65r.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd60oe65r.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd60oe65r.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd60oe65r.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd60oe65r.rs:77:25\n   |\n77 |     assert_eq!({left},"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as usize;\n\
    \    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c| c !=\
    \ ' ') {\n            list.push(s.subslice(i, i + n));\n            i += n;\n\
    \        }\n    }\n    list\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9rbj6qcu.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9rbj6qcu.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9rbj6qcu.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9rbj6qcu.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9rbj6qcu.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9rbj6qcu.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9rbj6qcu.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9rbj6qcu.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9rbj6qcu.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9rbj6qcu.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9rbj6qcu.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut index = 0;\n    while index < s.len() {\n \
    \       let mut word = String::new();\n        let mut is_consonant = false;\n\
    \        let mut is_space = false;\n        let mut is_letter = false;\n     \
    \   let mut is_digit = false;\n        let mut is_space = false;\n        let\
    \ mut is_letter = false;\n        let mut is_digit = false;\n        let mut is_space\
    \ = false;\n        let mut is_letter = false;\n        let mut is_digit = false;\n\
    \        let mut is_space = false;\n        let mut is_letter = false;\n     \
    \   let mut is_digit = false;\n        let mut is_space = false;\n        let\
    \ mut is_letter = false;\n        let mut is_digit = false;\n        let mut is_space\
    \ = false;\n        let mut is_letter = false;\n        let mut is_digit = false;\n\
    \        let mut is_space = false;\n        let mut is_letter = false;\n     \
    \   let mut is_digit = false;\n        let mut is_space = false;\n        let\
    \ mut is_letter = false;\n        let mut is_digit = false;\n        let mut is_space\
    \ = false;\n        let mut is_letter = false;\n        let mut is_digit = false;\n\
    \        let mut is_space = false;\n        let mut is_letter = false;\n     \
    \   let mut is_digit = false;\n        let mut is_space = false;\n        let\
    \ mut is_letter = false;\n        let mut is_digit = false;\n        let mut is_space\
    \ = false;\n        let mut is_letter = false;\n        let mut is_digit = false;\n\
    \        let mut is_space = false;\n        let mut is_letter = false;\n     \
    \   let mut is_digit = false;\n        let mut is_space = false;\n        let\
    \ mut is_letter = false;\n        let mut is_digit = false;\n        let mut is_space\
    \ = false;\n        let mut is_letter = false;\n        let mut is_digit = false;\n\
    \        let mut is_space = false;\n        let mut is_letter = false;\n     \
    \   let mut is_digit = false;\n        let mut is_space = false;\n        let\
    \ mut is_letter = false;\n        let mut is_digit = false;\n        let mut is_space\
    \ = false;\n        let mut is_letter = false;\n        let mut is_digit = false;\n\
    \        let mut is_space = false;\n        let mut is_letter = false;\n     \
    \   let mut is_digit = false;\n        let mut is_space = false;\n        let\
    \ mut is_letter = false;\n        let mut is_digit = false;\n        let mut is_space\
    \ = false;\n        let mut is_letter = false;\n        let mut is_digit = false;\n\
    \        let mut is_space = false;\n        let mut is_letter = false;\n     \
    \   let mut is_digit = false;\n        let mut is_space = false;\n        let\
    \ mut \n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpnsxaqhhi.rs:102:3\n\
    \    |\n17  | fn select_words(s: String, n: isize) -> Vec<String> {\n    |   \
    \                                                  - unclosed delimiter\n...\n\
    20  |     while index < s.len() {\n    |                           - this delimiter\
    \ might not be properly closed...\n...\n91  | }\n    | - ...as it matches this\
    \ but it has different indentation\n...\n102 | }\n    |   ^\n\nerror: expected\
    \ identifier, found `}`\n  --> /tmp/tmpnsxaqhhi.rs:91:1\n   |\n91 | }\n   | ^\
    \ expected identifier\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnsxaqhhi.rs:95:17\n   |\n95 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnsxaqhhi.rs:95:25\n   |\n95 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnsxaqhhi.rs:96:17\n   |\n96 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnsxaqhhi.rs:96:25\n   |\n96 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnsxaqhhi.rs:97:17\n  \
    \ |\n97 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnsxaqhhi.rs:97:25\n   |\n97 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnsxaqhhi.rs:98:17\n   |\n98 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnsxaqhhi.rs:98:25\n\
    \   |\n98 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot fin"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as\
    \ usize;\n    while n > 0 {\n        let mut index = s.find('a' as char);\n  \
    \      if index == s.len() {\n            break;\n        }\n        let mut index\
    \ = s.find('e' as char);\n        if index == s.len() {\n            break;\n\
    \        }\n        let mut index = s.find('i' as char);\n        if index ==\
    \ s.len() {\n            break;\n        }\n        let mut index = s.find('o'\
    \ as char);\n        if index == s.len() {\n            break;\n        }\n  \
    \      let mut index = s.find('u' as char);\n        if index == s.len() {\n \
    \           break;\n        }\n        let mut index = s.find('A' as char);\n\
    \        if index == s.len() {\n            break;\n        }\n        let mut\
    \ index = s.find('E' as char);\n        if index == s.len() {\n            break;\n\
    \        }\n        let mut index = s.find('I' as char);\n        if index ==\
    \ s.len() {\n            break;\n        }\n        let mut index = s.find('O'\
    \ as char);\n        if index == s.len() {\n            break;\n        }\n  \
    \      let mut index = s.find('U' as char);\n        if index == s.len() {\n \
    \           break;\n        }\n        let mut index = s.find('n' as char);\n\
    \        if index == s.len() {\n            break;\n        }\n        let mut\
    \ index = s.find('a' as char);\n        if index == s.len() {\n            break;\n\
    \        }\n        let mut index = s.find('e' as char);\n        if index ==\
    \ s.len() {\n            break;\n        }\n        let mut index = s.find('i'\
    \ as char);\n        if index == s.len() {\n            break;\n        }\n  \
    \      let mut index = s.find('o' as char);\n        if index == s.len() {\n \
    \           break;\n        }\n        let mut index = s.find('u' as char);\n\
    \        if index == s.len() {\n            break;\n        }\n        let mut\
    \ index = s.find('A' as char);\n        if index == s.len() {\n            break;\n\
    \        }\n        let mut index = s.find('E' as char);\n        if index ==\
    \ s.len() {\n            break;\n        }\n        let mut index = s.find('I'\
    \ as char);\n        if index == s.len() {\n            break;\n        }\n  \
    \      let mut index = s.find('O' as char);\n        if index == s.len() {\n \
    \           break;\n        }\n        let mut index = s.find('U' as char);\n\
    \        if index == s.len() {\n            break;\n        }\n        let mut\
    \ index = s.find('n' as char);\n        if index == s.len() {\n            break;\n\
    \n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpy351mq56.rs:121:3\n\
    \    |\n17  | fn select_words(s: String, n: isize) -> Vec<String> {\n    |   \
    \                                                  - unclosed delimiter\n...\n\
    21  |     while n > 0 {\n    |                 - unclosed delimiter\n...\n107\
    \ |         if index == s.len() {\n    |                             - this delimiter\
    \ might not be properly closed...\n...\n110 | }\n    | - ...as it matches this\
    \ but it has different indentation\n...\n121 | }\n    |   ^\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n   --> /tmp/tmpy351mq56.rs:114:17\n    |\n\
    114 |     assert_eq!({left}, {right});\n    |                 ^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find value `right` in this scope\n   -->\
    \ /tmp/tmpy351mq56.rs:114:25\n    |\n114 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpy351mq56.rs:115:17\n\
    \    |\n115 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpy351mq56.rs:115:25\n    |\n115 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpy351mq56.rs:116:17\n\
    \    |\n116 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpy351mq56.rs:116:25\n    |\n116 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpy351mq56.rs:117:17\n\
    \    |\n117 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpy351mq56.rs:117:25\n    |\n117 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cann"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        if\
    \ s.chars().any(|c| c.is_consonant() && c != ' ') {\n            i += 1;\n   \
    \     } else {\n            words.push(s.split_whitespace()[i]);\n           \
    \ i += 1;\n        }\n        if i == n {\n            break;\n        }\n   \
    \ }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi0mba5af.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi0mba5af.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi0mba5af.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi0mba5af.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi0mba5af.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi0mba5af.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi0mba5af.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi0mba5af.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi0mba5af.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi0mba5af.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi0mba5af.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] != ' ' {\n            j += 1\n\
    \        }\n        if j == i {\n            list.push(s.to_string());\n     \
    \       i += 1;\n        } else {\n            let mut k = i;\n            while\
    \ k < j {\n                if s[k] == ' ' {\n                    list.push(s.to_string());\n\
    \                    i += 1;\n                    break;\n                }\n\
    \                k += 1\n            }\n        }\n    }\n    list\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphys1p5jj.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphys1p5jj.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphys1p5jj.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphys1p5jj.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphys1p5jj.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphys1p5jj.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphys1p5jj.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphys1p5jj.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphys1p5jj.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphys1p5jj.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphys1p5jj.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut s = String::from(s);\n    while s.len() > 0 {\n\
    \        let mut i = 0;\n        let mut c = s.chars();\n        while i < c.len()\
    \ {\n            if c[i] == 'a' || c[i] == 'e' || c[i] == 'i' || c[i] == 'o' ||\
    \ c[i] == 'u' {\n                i += 1;\n            } else {\n             \
    \   break;\n            }\n        }\n        if i == c.len() {\n            words.push(s.clone());\n\
    \        }\n        s = s.to_string();\n    }\n    words.sort_unstable();\n  \
    \  let mut count = 0;\n    for word in words {\n        if count == n {\n    \
    \        break;\n        }\n        count += 1;\n    }\n    words.iter().take(count).collect()\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpumtf7yho.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpumtf7yho.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpumtf7yho.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpumtf7yho.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpumtf7yho.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpumtf7yho.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpumtf7yho.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpumtf7yho.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpumtf7yho.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpumtf7yho.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpumtf7yho.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j].is_ascii_letter() {\n        \
    \    j = j + 1;\n        }\n        if j - i == n {\n            words.push(s.split_whitespace()[i]);\n\
    \            i = j;\n        }\n    }\n    words\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpq9vcbh9d.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq9vcbh9d.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpq9vcbh9d.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpq9vcbh9d.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpq9vcbh9d.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpq9vcbh9d.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpq9vcbh9d.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpq9vcbh9d.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpq9vcbh9d.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq9vcbh9d.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpq9vcbh9d.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = s;\n    let mut n = n;\n    while n > 0 {\n\
    \        let mut i = 0;\n        while i < s.len() {\n            if s[i] == '\
    \ ' {\n                i += 1;\n                continue;\n            }\n   \
    \         if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u' {\n                i += 1;\n                continue;\n            }\n\
    \            if s[i] == 'y' || s[i] == 'u' || s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' {\n                i += 1;\n                continue;\n\
    \            }\n            if s[i] == 'y' || s[i] == 'o' || s[i] == 'u' || s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' {\n                i += 1;\n          \
    \      continue;\n            }\n            if s[i] == 'y' || s[i] == 'o' ||\
    \ s[i] == 'u' || s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' {\n\
    \                i += 1;\n                continue;\n            }\n         \
    \   if s[i] == 'y' || s[i] == 'u' || s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u' {\n                i += 1;\n                continue;\n\
    \            }\n            if s[i] == 'y' || s[i] == 'o' || s[i] == 'u' || s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n     \
    \           i += 1;\n                continue;\n            }\n            if\
    \ s[i] == 'y' || s[i] == 'u' || s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u' || s[i] == 'a' {\n                i += 1;\n          \
    \      continue;\n            }\n            if s[i] == 'y' || s[i] == 'o' ||\
    \ s[i] == 'u' || s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u' || s[i] == 'a' {\n                i += 1;\n                continue;\n\
    \            }\n            if s[i] == 'y' || s[i] == 'u' || s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'a' || s[i] ==\
    \ 'e' {\n                i += 1;\n                continue;\n            }\n \
    \           if s[i] == 'y' || s[i] == 'o' || s[i] == 'u' || s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'a' || s[i] ==\
    \ 'e' {\n                i += 1;\n                continue;\n            }\n \
    \           if s[i] == 'y' || s[i] == 'u' || s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' \n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpv8jfzi9z.rs:80:3\n\
    \   |\n17 | fn select_words(s: String, n: isize) -> Vec<String> {\n   |      \
    \                                               - unclosed delimiter\n...\n21\
    \ |     while n > 0 {\n   |                 - unclosed delimiter\n22 |       \
    \  let mut i = 0;\n23 |         while i < s.len() {\n   |                    \
    \       - this delimiter might not be properly closed...\n...\n69 | }\n   | -\
    \ ...as it matches this but it has different indentation\n...\n80 | }\n   |  \
    \ ^\n\nerror: expected `{`, found `}`\n  --> /tmp/tmpv8jfzi9z.rs:69:1\n   |\n\
    68 |             if s[i] == 'y' || s[i] == 'u' || s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'a' || s[...\n   |    \
    \         -- this `if` expression has a condition, but no block\n69 | }\n   |\
    \ ^ expected `{`\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv8jfzi9z.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv8jfzi9z.rs:73:25\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv8jfzi9z.rs:74:17\n  \
    \ |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv8jfzi9z.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv8jfzi9z.rs:75:17\n   |\n75 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv8jfzi9z.rs:75:25\n\
    \   |\n75 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv8jfzi9z.rs:76:17\n   |\n76 |     assert_e"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut vowels_count = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index2 = vec![];\n    let mut vowels_count_index3 =\
    \ vec![];\n    let mut vowels_count_index4 = vec![];\n    let mut vowels_count_index5\
    \ = vec![];\n    let mut vowels_count_index6 = vec![];\n    let mut vowels_count_index7\
    \ = vec![];\n    let mut vowels_count_index8 = vec![];\n    let mut vowels_count_index9\
    \ = vec![];\n    let mut vowels_count_index10 = vec![];\n    let mut vowels_count_index11\
    \ = vec![];\n    let mut vowels_count_index12 = vec![];\n    let mut vowels_count_index13\
    \ = vec![];\n    let mut vowels_count_index14 = vec![];\n    let mut vowels_count_index15\
    \ = vec![];\n    let mut vowels_count_index16 = vec![];\n    let mut vowels_count_index17\
    \ = vec![];\n    let mut vowels_count_index18 = vec![];\n    let mut vowels_count_index19\
    \ = vec![];\n    let mut vowels_count_index20 = vec![];\n    let mut vowels_count_index21\
    \ = vec![];\n    let mut vowels_count_index22 = vec![];\n    let mut vowels_count_index23\
    \ = vec![];\n    let mut vowels_count_index24 = vec![];\n    let mut vowels_count_index25\
    \ = vec![];\n    let mut vowels_count_index26 = vec![];\n    let mut vowels_count_index27\
    \ = vec![];\n    let mut vowels_count_index28 = vec![];\n    let mut vowels_count_index29\
    \ = vec![];\n    let mut vowels_count_index30 = vec![];\n    let mut vowels_count_index31\
    \ = vec![];\n    let mut vowels_count_index32 = vec![];\n    let mut vowels_count_index33\
    \ = vec![];\n    let mut vowels_count_index34 = vec![];\n    let mut vowels_count_index35\
    \ = vec![];\n    let mut vowels_count_index36 = vec![];\n    let mut vowels_count_index37\
    \ = vec![];\n    let mut vowels_count_\n}\n\nfn main() {\n    let candidate =\
    \ select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpe0u60s58.rs:59:26\n   |\n\
    59 |     let mut vowels_count_\n   |                          ^ help: add `;`\
    \ here\n60 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpe0u60s58.rs:64:17\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpe0u60s58.rs:64:25\n \
    \  |\n64 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpe0u60s58.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpe0u60s58.rs:65:25\n   |\n65 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpe0u60s58.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpe0u60s58.rs:66:25\n   |\n66 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpe0u60s58.rs:67:17\n  \
    \ |\n67 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe0u60s58.rs:67:25\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe0u60s58.rs:68:17\n   |\n68 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpe0u60s58.rs:68:25\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find "
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = s;\n    while s.len() > 0 {\n        let mut\
    \ current_word = String::new();\n        let mut current_word_len = 0;\n     \
    \   let mut current_word_index = 0;\n        while current_word_len < n && current_word_index\
    \ < s.len() {\n            let c = s.chars().nth(current_word_index).unwrap();\n\
    \            if c.is_uppercase() {\n                current_word.push(c);\n  \
    \              current_word_len += 1;\n            } else if c.is_lowercase()\
    \ {\n                current_word.push(c);\n                current_word_len +=\
    \ 1;\n            } else if c.is_whitespace() {\n                current_word.push(c);\n\
    \                current_word_len += 1;\n            } else if c.is_punctuation()\
    \ {\n                current_word.push(c);\n                current_word_len +=\
    \ 1;\n            } else if c.is_digit() {\n                current_word.push(c);\n\
    \                current_word_len += 1;\n            } else {\n              \
    \  break;\n            }\n            current_word_index += 1;\n        }\n  \
    \      if current_word_len == n {\n            result.push(current_word);\n  \
    \      }\n        s = &s[current_word_index..];\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppg3bi3sc.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppg3bi3sc.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppg3bi3sc.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppg3bi3sc.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppg3bi3sc.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppg3bi3sc.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppg3bi3sc.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppg3bi3sc.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppg3bi3sc.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppg3bi3sc.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppg3bi3sc.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut i = 0;\n        while i < s.len() && s.chars().any(|c| c.is_consonant()\
    \ == true) {\n            i += 1;\n        }\n        if i == s.len() {\n    \
    \        break;\n        }\n        let mut j = i;\n        while j < s.len()\
    \ && s.chars().any(|c| c.is_consonant() == false) {\n            j += 1;\n   \
    \     }\n        if j == s.len() {\n            break;\n        }\n        let\
    \ mut k = j;\n        while k < s.len() && s.chars().any(|c| c.is_consonant()\
    \ == false) {\n            k += 1;\n        }\n        if k == s.len() {\n   \
    \         break;\n        }\n        words.push_back(s.split_at(i, s.len()).collect::<Vec<_>>());\n\
    \        s = s.split_at(j, s.len()).collect::<String>();\n    }\n    words\n}\n\
    \nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9y66k71t.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9y66k71t.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9y66k71t.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9y66k71t.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9y66k71t.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9y66k71t.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9y66k71t.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9y66k71t.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9y66k71t.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9y66k71t.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9y66k71t.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut vowels = Vec::new();\n    let mut consonants\
    \ = Vec::new();\n    let mut spaces = Vec::new();\n    let mut letters = Vec::new();\n\
    \    let mut spaces_count = s.chars().filter(|c| c == ' ').count();\n    let mut\
    \ letters_count = s.chars().filter(|c| c >= 'a' && c <= 'z').count();\n    let\
    \ mut vowels_count = s.chars().filter(|c| c >= 'A' && c <= 'Z').count();\n   \
    \ let mut consonants_count = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >=\
    \ 'A' && c <= 'Z').count();\n    let mut spaces_count = s.chars().filter(|c| c\
    \ == ' ').count();\n    let mut letters_count = s.chars().filter(|c| c >= 'a'\
    \ && c <= 'z').count();\n    let mut vowels_count = s.chars().filter(|c| c >=\
    \ 'A' && c <= 'Z').count();\n    let mut consonants_count = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count();\n    let mut spaces_count\
    \ = s.chars().filter(|c| c == ' ').count();\n    let mut letters_count = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z').count();\n    let mut vowels_count = s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').count();\n    let mut consonants_count = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count();\n    let mut spaces_count\
    \ = s.chars().filter(|c| c == ' ').count();\n    let mut letters_count = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z').count();\n    let mut vowels_count = s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').count();\n    let mut consonants_count = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count();\n    let mut spaces_count\
    \ = s.chars().filter(|c| c == ' ').count();\n    let mut letters_count = \n}\n\
    \nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmp4wuo2e6s.rs:41:1\n\
    \   |\n41 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp4wuo2e6s.rs:45:17\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp4wuo2e6s.rs:45:25\n \
    \  |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4wuo2e6s.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4wuo2e6s.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4wuo2e6s.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4wuo2e6s.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4wuo2e6s.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4wuo2e6s.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4wuo2e6s.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4wuo2e6s.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4wuo2e6s.rs:50:17\n   |\n50 |     "
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowel_counter = 0;\n    let mut vowel_counter2 =\
    \ 0;\n    let mut vowel_counter3 = 0;\n    let mut vowel_counter4 = 0;\n    let\
    \ mut vowel_counter5 = 0;\n    let mut vowel_counter6 = 0;\n    let mut vowel_counter7\
    \ = 0;\n    let mut vowel_counter8 = 0;\n    let mut vowel_counter9 = 0;\n   \
    \ let mut vowel_counter10 = 0;\n    let mut vowel_counter11 = 0;\n    let mut\
    \ vowel_counter12 = 0;\n    let mut vowel_counter13 = 0;\n    let mut vowel_counter14\
    \ = 0;\n    let mut vowel_counter15 = 0;\n    let mut vowel_counter16 = 0;\n \
    \   let mut vowel_counter17 = 0;\n    let mut vowel_counter18 = 0;\n    let mut\
    \ vowel_counter19 = 0;\n    let mut vowel_counter20 = 0;\n    let mut vowel_counter21\
    \ = 0;\n    let mut vowel_counter22 = 0;\n    let mut vowel_counter23 = 0;\n \
    \   let mut vowel_counter24 = 0;\n    let mut vowel_counter25 = 0;\n    let mut\
    \ vowel_counter26 = 0;\n    let mut vowel_counter27 = 0;\n    let mut vowel_counter28\
    \ = 0;\n    let mut vowel_counter29 = 0;\n    let mut vowel_counter30 = 0;\n \
    \   let mut vowel_counter31 = 0;\n    let mut vowel_counter32 = 0;\n    let mut\
    \ vowel_counter33 = 0;\n    let mut vowel_counter34 = 0;\n    let mut vowel_counter35\
    \ = 0;\n    let mut vowel_counter36 = 0;\n    let mut vowel_counter37 = 0;\n \
    \   let mut vowel_counter38 = 0;\n    let mut vowel_counter39 = 0;\n    let mut\
    \ vowel_counter40 = 0;\n    let mut vowel_counter41 = 0;\n    let mut vowel_counter42\
    \ = 0;\n    let mut vowel_counter43 = 0;\n    let mut vowel_counter44 = 0;\n \
    \   let mut vowel_counter45 = 0;\n    let mut vowel_counter46 = 0;\n    let mut\
    \ vowel_counter47 = 0;\n    let mut vowel_counter48 = 0;\n    let mut vowel_counter49\
    \ = 0;\n    let mut vowel_counter50 = 0;\n    let mut vowel_counter51 = 0;\n \
    \   let mut vowel_counter52 = 0;\n    let mut vowel_counter53 = 0;\n    let mut\
    \ vowel_counter54 = 0;\n\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:80:17\n\
    \   |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzpm4h9c7.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzpm4h9c7.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzpm4h9c7.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzpm4h9c7.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut pos = 0;\n    while pos < s.len() {\n     \
    \   let mut found = false;\n        for c in s.chars() {\n            if c.is_consonant()\
    \ && pos != 0 {\n                found = true;\n                break;\n     \
    \       }\n            pos += 1;\n        }\n        if found {\n            words.push(s.substr(pos,\
    \ pos).to_string());\n            pos += 1;\n        }\n    }\n    words\n}\n\n\
    fn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnlowm6mj.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnlowm6mj.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnlowm6mj.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnlowm6mj.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnlowm6mj.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnlowm6mj.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnlowm6mj.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnlowm6mj.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnlowm6mj.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnlowm6mj.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnlowm6mj.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n   \
    \     }\n        if j == i {\n            break;\n        }\n        let mut word\
    \ = String::from(&s[i .. j]);\n        let mut count = 0;\n        while j < s.len()\
    \ && s[j] == ' ' {\n            j += 1\n        }\n        if j == i {\n     \
    \       break;\n        }\n        let mut count = 0;\n        while j < s.len()\
    \ && s[j] == s[j] {\n            count += 1;\n            j += 1\n        }\n\
    \        if count == n {\n            words.push(word);\n        }\n        i\
    \ = j;\n    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpigionklh.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpigionklh.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpigionklh.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpigionklh.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpigionklh.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpigionklh.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpigionklh.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpigionklh.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpigionklh.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpigionklh.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpigionklh.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut i = 0;\n        while i < s.len() && s[i] == ' ' {\n            i += 1;\n\
    \        }\n        if i == s.len() {\n            result.push(s);\n         \
    \   break;\n        }\n        let mut j = i;\n        while j < s.len() && s[j]\
    \ != ' ' {\n            j += 1\n        }\n        if j == s.len() {\n       \
    \     result.push(s);\n            break;\n        }\n        let mut k = j;\n\
    \        while k < s.len() && s[k] != ' ' {\n            k += 1\n        }\n \
    \       if k == s.len() {\n            result.push(s);\n            break;\n \
    \       }\n        let mut l = k;\n        while l < s.len() && s[l] != ' ' {\n\
    \            l += 1\n        }\n        if l == s.len() {\n            result.push(s);\n\
    \            break;\n        }\n        let mut m = l;\n        while m < s.len()\
    \ && s[m] != ' ' {\n            m += 1\n        }\n        if m == s.len() {\n\
    \            result.push(s);\n            break;\n        }\n        let mut n\
    \ = m;\n        while n < s.len() && s[n] != ' ' {\n            n += 1\n     \
    \   }\n        if n == s.len() {\n            result.push(s);\n            break;\n\
    \        }\n        let mut o = n;\n        while o < s.len() && s[o] != ' ' {\n\
    \            o += 1\n        }\n        if o == s.len() {\n            result.push(s);\n\
    \            break;\n        }\n        let mut p = o;\n        while p < s.len()\
    \ && s[p] != ' ' {\n            p += 1\n        }\n        if p == s.len() {\n\
    \            result.push(s);\n            break;\n        }\n        let mut q\
    \ = p;\n        while q < s.len() && s[q] != ' ' {\n            q += 1\n     \
    \   }\n        if q == s.len() {\n            result.push(s);\n            break;\n\
    \        }\n        let mut r = q;\n        while r < s.len() && s[r] != ' ' {\n\
    \            r += 1\n        }\n        if r == s.len() {\n            result.push(s);\n\
    \            break;\n        }\n        let mut s = r;\n        while s < s.len()\
    \ && s[s] != ' ' {\n            s += 1\n        }\n        if s == s.len() {\n\
    \            result.push(s);\n            break;\n        }\n        let mut t\
    \ = s;\n        while t < s.len() && s[t] != ' ' {\n            t += 1\n     \
    \   }\n        if t == s.len() {\n            result.push(s);\n            break;\n\
    \        }\n        let mut u = t;\n        while u < s.len() && s[u] != ' ' {\n\
    \            u += 1\n        }\n        if \n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp13hb4amh.rs:133:3\n\
    \    |\n17  | fn select_words(s: String, n: isize) -> Vec<String> {\n    |   \
    \                                                  - unclosed delimiter\n...\n\
    20  |     while s.len() > 0 {\n    |                       - this delimiter might\
    \ not be properly closed...\n...\n122 | }\n    | - ...as it matches this but it\
    \ has different indentation\n...\n133 | }\n    |   ^\n\nerror: expected expression,\
    \ found `}`\n   --> /tmp/tmp13hb4amh.rs:122:1\n    |\n122 | }\n    | ^ expected\
    \ expression\n\nerror[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmp13hb4amh.rs:126:17\n\
    \    |\n126 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp13hb4amh.rs:126:25\n    |\n126 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp13hb4amh.rs:127:17\n\
    \    |\n127 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp13hb4amh.rs:127:25\n    |\n127 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp13hb4amh.rs:128:17\n\
    \    |\n128 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp13hb4amh.rs:128:25\n    |\n128 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp13hb4amh.rs:129:17\n\
    \    |\n129 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp13hb4amh.rs:129:25\n    |\n129 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j].is_ascii_letter() {\n            j\
    \ = j + 1;\n        }\n        if j == s.len() {\n            break;\n       \
    \ }\n        let mut count = 0;\n        while j < s.len() && s.chars().any(|c|\
    \ c.is_ascii_letter()) {\n            count = count + 1;\n            j = j +\
    \ 1;\n        }\n        if count == n {\n            words.push(s.subslice(i,\
    \ j));\n            i = j;\n        }\n    }\n    words\n}\n\nfn main() {\n  \
    \  let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgv1wc_r4.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgv1wc_r4.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgv1wc_r4.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgv1wc_r4.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgv1wc_r4.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgv1wc_r4.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgv1wc_r4.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgv1wc_r4.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgv1wc_r4.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgv1wc_r4.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgv1wc_r4.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut spaces = vec![];\n    let mut letters = vec![];\n    let mut spaces_count\
    \ = s.chars().filter(|c| c == ' ').count();\n    let mut letters_count = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z').count();\n    let mut vowels_count = s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').count();\n    let mut consonants_count = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count();\n    let mut vowels_count\
    \ = s.chars().filter(|c| c >= 'A' && c <= 'Z').count();\n    let mut consonants_count\
    \ = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count();\n\
    \    let mut vowels_count = s.chars().filter(|c| c >= 'A' && c <= 'Z').count();\n\
    \    let mut consonants_count = s.chars().filter(|c| c >= 'a' && c <= 'z' || c\
    \ >= 'A' && c <= 'Z').count();\n    let mut vowels_count = s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').count();\n    let mut consonants_count = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count();\n    let mut vowels_count\
    \ = s.chars().filter(|c| c >= 'A' && c <= 'Z').count();\n    let mut consonants_count\
    \ = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count();\n\
    \    let mut vowels_count = s.chars().filter(|c| c >= 'A' && c <= 'Z').count();\n\
    \    let mut consonants_count = s.chars().filter(|c| c >= 'a' && c <= 'z' || c\
    \ >= 'A' && c <= 'Z').count();\n    let mut vowels_count = s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').count();\n    let mut consonants_count = s.chars().\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmp3as2d41l.rs:39:1\n   |\n39\
    \ | }\n   | ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmp3as2d41l.rs:38:42\n\
    \   |\n38 |     let mut consonants_count = s.chars().\n   |                  \
    \                        ^ help: add `;` here\n39 | }\n   | - unexpected token\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3as2d41l.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3as2d41l.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3as2d41l.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3as2d41l.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3as2d41l.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3as2d41l.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3as2d41l.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3as2d41l.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3as2d41l.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3as2d41l.rs:47:25\n   |\n47 |     ass"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = s;\n    let mut n = n;\n    while n != 0 {\n\
    \        let mut i = 0;\n        while i < s.len() {\n            if s.chars().any(|c|\
    \ c.is_consonant() == true) {\n                result.push(s.split_whitespace()[i]);\n\
    \                i += 1;\n            } else {\n                i += 1;\n    \
    \        }\n        }\n        n -= 1;\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1js6hd8x.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1js6hd8x.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1js6hd8x.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1js6hd8x.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1js6hd8x.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1js6hd8x.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1js6hd8x.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1js6hd8x.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1js6hd8x.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1js6hd8x.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1js6hd8x.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mu\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp45_p333d.rs:61:11\n   |\n\
    61 |     let mu\n   |           ^ help: add `;` here\n62 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp45_p333d.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp45_p333d.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as\
    \ usize;\n    while n > 0 {\n        let mut i = 0;\n        while i < s.len()\
    \ {\n            if s.chars().any(|c| c.is_ascii_uppercase()) {\n            \
    \    i += 1;\n            } else {\n                break;\n            }\n  \
    \      }\n        if i == s.len() {\n            result.push(s);\n           \
    \ n -= 1;\n        } else {\n            s = s.to_string().split_whitespace().collect();\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp30tprkaw.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp30tprkaw.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp30tprkaw.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp30tprkaw.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp30tprkaw.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp30tprkaw.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp30tprkaw.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp30tprkaw.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp30tprkaw.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp30tprkaw.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp30tprkaw.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        if\
    \ s.chars().any(|c| c.is_consonant() && c != ' ') {\n            i += 1;\n   \
    \     } else {\n            if i == s.len() {\n                break;\n      \
    \      }\n            i += 1;\n        }\n    }\n    words.extend_from_slice(&s[..i]);\n\
    \    words.extend_from_slice(&s[i .. i + n]);\n    words\n}\n\nfn main() {\n \
    \   let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjeq36tqi.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjeq36tqi.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjeq36tqi.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjeq36tqi.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjeq36tqi.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjeq36tqi.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjeq36tqi.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjeq36tqi.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjeq36tqi.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjeq36tqi.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjeq36tqi.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    while s.len() >\
    \ 0 {\n        let mut i = s.find('a');\n        if i == s.len() {\n         \
    \   break;\n        }\n        let mut j = s.find('a');\n        if j == s.len()\
    \ {\n            break;\n        }\n        let mut k = s.find('a');\n       \
    \ if k == s.len() {\n            break;\n        }\n        let mut l = s.find('a');\n\
    \        if l == s.len() {\n            break;\n        }\n        let mut m =\
    \ s.find('a');\n        if m == s.len() {\n            break;\n        }\n   \
    \     let mut n = s.find('a');\n        if n == s.len() {\n            break;\n\
    \        }\n        let mut o = s.find('a');\n        if o == s.len() {\n    \
    \        break;\n        }\n        let mut p = s.find('a');\n        if p ==\
    \ s.len() {\n            break;\n        }\n        let mut q = s.find('a');\n\
    \        if q == s.len() {\n            break;\n        }\n        let mut r =\
    \ s.find('a');\n        if r == s.len() {\n            break;\n        }\n   \
    \     let mut s = s.find('a');\n        if s == s.len() {\n            break;\n\
    \        }\n        let mut t = s.find('a');\n        if t == s.len() {\n    \
    \        break;\n        }\n        let mut u = s.find('a');\n        if u ==\
    \ s.len() {\n            break;\n        }\n        let mut v = s.find('a');\n\
    \        if v == s.len() {\n            break;\n        }\n        let mut w =\
    \ s.find('a');\n        if w == s.len() {\n            break;\n        }\n   \
    \     let mut x = s.find('a');\n        if x == s.len() {\n            break;\n\
    \        }\n        let mut y = s.find('a');\n        if y == s.len() {\n    \
    \        break;\n        }\n        let mut z = s.find('a');\n        if z ==\
    \ s.len() {\n            break;\n        }\n        let mut a = s.find('a');\n\
    \        if a == s.len() {\n            break;\n        }\n        let mut b =\
    \ s.find('a');\n        if b == s.len() {\n            break;\n        }\n   \
    \     let mut c = s.find('a');\n        if c == s.len() {\n            break;\n\
    \        }\n        let mut d = s.find('a');\n        if d == s.len() {\n    \
    \        break;\n        }\n        let mut e = s.find('a');\n        if e ==\
    \ s.len() {\n            break;\n        }\n        let mut f = s.find('a');\n\
    \        if f == s.len() {\n            break;\n        }\n        let mut g =\
    \ s.find('a');\n        if g == s.len() {\n            break;\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmprqi963is.rs:131:3\n\
    \    |\n17  | fn select_words(s: String, n: isize) -> Vec<String> {\n    |   \
    \                                                  - unclosed delimiter\n...\n\
    20  |     while s.len() > 0 {\n    |                       - unclosed delimiter\n\
    ...\n118 |         if g == s.len() {\n    |                         - this delimiter\
    \ might not be properly closed...\n119 |             break;\n120 | }\n    | -\
    \ ...as it matches this but it has different indentation\n...\n131 | }\n    |\
    \   ^\n\nerror[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmprqi963is.rs:124:17\n\
    \    |\n124 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmprqi963is.rs:124:25\n    |\n124 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmprqi963is.rs:125:17\n\
    \    |\n125 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmprqi963is.rs:125:25\n    |\n125 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmprqi963is.rs:126:17\n\
    \    |\n126 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmprqi963is.rs:126:25\n    |\n126 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmprqi963is.rs:127:17\n\
    \    |\n127 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmprqi963is.rs:127:25\n    |\n127 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this "
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    let mut n = n;\n    while n !=\
    \ 0 {\n        if s.chars().any(|c| c != ' ') {\n            result.push(s.clone());\n\
    \        }\n        n -= 1;\n        s = s.chars().filter(|c| c != ' ').collect();\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp07rtacx3.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp07rtacx3.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp07rtacx3.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp07rtacx3.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp07rtacx3.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp07rtacx3.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp07rtacx3.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp07rtacx3.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp07rtacx3.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp07rtacx3.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp07rtacx3.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut spaces = vec![];\n    let mut punctuation = vec![];\n    let mut\
    \ letters = vec![];\n    let mut spaces_count = s.chars().filter(|c| c == ' ').count();\n\
    \    let mut consonants_count = s.chars().filter(|c| c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u').count();\n    let mut vowels_count = s.chars().filter(|c|\
    \ c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y').count();\n\
    \    let mut punctuation_count = s.chars().filter(|c| c == '!' || c == '.' ||\
    \ c == ',' || c == ':' || c == '?' || c == ';' || c == '(' || c == ')' || c ==\
    \ '-' || c == '_' || c == '[' || c == ']' || c == '{' || c == '}' || c == '%'\
    \ || c == '$' || c == '&' || c == '*' || c == '^' || c == '~' || c == '|').count();\n\
    \    let mut letters_count = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >=\
    \ 'A' && c <= 'Z').count();\n    let mut spaces_count = s.chars().filter(|c| c\
    \ == ' ').count();\n    let mut consonants_count = s.chars().filter(|c| c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u').count();\n    let mut vowels_count\
    \ = s.chars().filter(|c| c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u' || c == 'y').count();\n    let mut punctuation_count = s.chars().filter(|c|\
    \ c == '!' || c == '.' || c == ',' || c == ':' || c == '?' || c == ';' || c ==\
    \ '(' || c == ')' || c == '-' || c == '_' || c == '[' || c == ']' || c == '{'\
    \ || c == '}' || c == '%' || c == '$' || c == '&' || c == '*' || c == '^' || c\
    \ == '~' || c == '|').count();\n    let mut letters_count = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count();\n}\n\nfn main() {\n \
    \   let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_or2uu_3.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_or2uu_3.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_or2uu_3.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_or2uu_3.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_or2uu_3.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_or2uu_3.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_or2uu_3.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_or2uu_3.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_or2uu_3.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_or2uu_3.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_or2uu_3.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut words = s.split_whitespace();\n    let mut\
    \ count = 0;\n    let mut i = 0;\n    while i < words.len() {\n        if count\
    \ >= n {\n            result.push(words[i]);\n            i += 1;\n          \
    \  count -= 1;\n        } else {\n            count += 1;\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpt9i9wbr7.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt9i9wbr7.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt9i9wbr7.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpt9i9wbr7.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt9i9wbr7.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpt9i9wbr7.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpt9i9wbr7.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpt9i9wbr7.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpt9i9wbr7.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt9i9wbr7.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt9i9wbr7.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut index = 0;\n    let mut consonants = vec![\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    while\
    \ index < s.len() {\n        let mut word = String::new();\n        let mut consonant\
    \ = String::new();\n        let mut vowels = vec![\"a\", \"e\", \"i\", \"o\",\
    \ \"u\"];\n        while index < s.len() {\n            if s[index] == consonants[consonants.len()\
    \ - 1] {\n                consonant.push_str(&consonants[consonants.len() - 1]);\n\
    \                index += 1;\n            } else {\n                word.push_str(&s[index]);\n\
    \                index += 1;\n                break;\n            }\n        }\n\
    \        if consonant.len() == n {\n            words.push(word);\n        }\n\
    \        index += 1;\n    }\n    words\n}\n\nfn main() {\n    let candidate =\
    \ select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpokr07g1t.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpokr07g1t.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpokr07g1t.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpokr07g1t.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpokr07g1t.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpokr07g1t.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpokr07g1t.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpokr07g1t.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpokr07g1t.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpokr07g1t.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpokr07g1t.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n\
    \        }\n        if j - i == n {\n            words.push(s.split_whitespace()[..i].collect::<Vec<_>>());\n\
    \            i += j - i;\n        }\n        i += 1;\n    }\n    words\n}\n\n\
    fn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2v1pyjdd.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2v1pyjdd.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2v1pyjdd.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2v1pyjdd.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2v1pyjdd.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2v1pyjdd.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2v1pyjdd.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2v1pyjdd.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2v1pyjdd.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2v1pyjdd.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2v1pyjdd.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as\
    \ usize;\n    while n > 0 {\n        let mut i = s.find('a', 0) as usize;\n  \
    \      if i == s.len() {\n            break;\n        }\n        let mut j = s.find('b',\
    \ 0) as usize;\n        if j == s.len() {\n            break;\n        }\n   \
    \     let mut k = s.find('c', 0) as usize;\n        if k == s.len() {\n      \
    \      break;\n        }\n        let mut l = s.find('d', 0) as usize;\n     \
    \   if l == s.len() {\n            break;\n        }\n        let mut m = s.find('e',\
    \ 0) as usize;\n        if m == s.len() {\n            break;\n        }\n   \
    \     let mut n = s.find('f', 0) as usize;\n        if n == s.len() {\n      \
    \      break;\n        }\n        let mut o = s.find('g', 0) as usize;\n     \
    \   if o == s.len() {\n            break;\n        }\n        let mut p = s.find('h',\
    \ 0) as usize;\n        if p == s.len() {\n            break;\n        }\n   \
    \     let mut q = s.find('i', 0) as usize;\n        if q == s.len() {\n      \
    \      break;\n        }\n        let mut r = s.find('j', 0) as usize;\n     \
    \   if r == s.len() {\n            break;\n        }\n        let mut s = s.find('k',\
    \ 0) as usize;\n        if s == s.len() {\n            break;\n        }\n   \
    \     let mut t = s.find('l', 0) as usize;\n        if t == s.len() {\n      \
    \      break;\n        }\n        let mut u = s.find('m', 0) as usize;\n     \
    \   if u == s.len() {\n            break;\n        }\n        let mut v = s.find('n',\
    \ 0) as usize;\n        if v == s.len() {\n            break;\n        }\n   \
    \     let mut w = s.find('o', 0) as usize;\n        if w == s.len() {\n      \
    \      break;\n        }\n        let mut x = s.find('p', 0) as usize;\n     \
    \   if x == s.len() {\n            break;\n        }\n        let mut y = s.find('q',\
    \ 0) as usize;\n        if y == s.len() {\n            break;\n        }\n   \
    \     let mut z = s.find('r', 0) as usize;\n        if z == s.len() {\n      \
    \      break;\n        }\n        let mut a = s.find('s', 0) as usize;\n     \
    \   if a == s.len() {\n            break;\n        }\n        let mut b = s.find('t',\
    \ 0) as usize;\n        if b == s.len() {\n            break;\n        }\n   \
    \     let mut c = s.find('u', 0) as usize;\n        if c == s.len(\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp0wstbcld.rs:115:3\n\
    \    |\n17  | fn select_words(s: String, n: isize) -> Vec<String> {\n    |   \
    \                                                  - unclosed delimiter\n...\n\
    21  |     while n > 0 {\n    |                 - this delimiter might not be properly\
    \ closed...\n...\n104 | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n115 | }\n    |   ^\n\nerror: mismatched closing delimiter:\
    \ `}`\n   --> /tmp/tmp0wstbcld.rs:103:22\n    |\n17  | fn select_words(s: String,\
    \ n: isize) -> Vec<String> {\n    |                                          \
    \           - closing delimiter possibly meant for this\n...\n103 |         if\
    \ c == s.len(\n    |                      ^ unclosed delimiter\n104 | }\n    |\
    \ ^ mismatched closing delimiter\n\nerror: expected `{`, found `}`\n   --> /tmp/tmp0wstbcld.rs:104:1\n\
    \    |\n103 |         if c == s.len(\n    |         -- this `if` expression has\
    \ a condition, but no block\n104 | }\n    | ^ expected `{`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n   --> /tmp/tmp0wstbcld.rs:108:17\n    |\n\
    108 |     assert_eq!({left}, {right});\n    |                 ^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find value `right` in this scope\n   -->\
    \ /tmp/tmp0wstbcld.rs:108:25\n    |\n108 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp0wstbcld.rs:109:17\n\
    \    |\n109 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp0wstbcld.rs:109:25\n    |\n109 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp0wstbcld.rs:110:17\n\
    \    |\n110 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp0wstbcld.rs:110:25\n    |\n110 |     assert_eq!({le"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    while s.len() >\
    \ 0 {\n        let mut word = String::from(\"\");\n        let mut count = 0;\n\
    \        for c in s.chars() {\n            if c.is_consonant() {\n           \
    \     count += 1;\n                if count == n {\n                    word.push(c);\n\
    \                }\n            }\n        }\n        if word.len() > 0 {\n  \
    \          result.push(word);\n        }\n        s = &s[word.len()..];\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbgt1w7eg.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbgt1w7eg.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbgt1w7eg.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbgt1w7eg.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbgt1w7eg.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbgt1w7eg.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbgt1w7eg.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbgt1w7eg.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbgt1w7eg.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbgt1w7eg.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbgt1w7eg.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut index = 0;\n    while index < s.len() {\n     \
    \   let mut word = String::from(\"\");\n        let mut consonant = false;\n \
    \       for c in s.chars() {\n            if index == 0 {\n                consonant\
    \ = false;\n            }\n            if c == ' ' {\n                consonant\
    \ = true;\n            }\n            if consonant {\n                word +=\
    \ c;\n            }\n            index += 1\n        }\n        if word == String::from(\"\
    Mary\") && index == s.len() - 1 {\n            words.push(String::from(\"Mary\"\
    ));\n        }\n        if word == String::from(\"lamb\") && index == s.len()\
    \ - 1 {\n            words.push(String::from(\"lamb\"));\n        }\n        if\
    \ word == String::from(\"little\") && index == s.len() - 1 {\n            words.push(String::from(\"\
    little\"));\n        }\n        if word == String::from(\"white\") && index ==\
    \ s.len() - 1 {\n            words.push(String::from(\"white\"));\n        }\n\
    \        if word == String::from(\"world\") && index == s.len() - 1 {\n      \
    \      words.push(String::from(\"world\"));\n        }\n        if word == String::from(\"\
    sam\") && index == s.len() - 1 {\n            words.push(String::from(\"sam\"\
    ));\n        }\n        if word == String::from(\"Uncle\") && index == s.len()\
    \ - 1 {\n            words.push(String::from(\"Uncle\"));\n        }\n       \
    \ if word == String::from(\"Hello\") && index == s.len() - 1 {\n            words.push(String::from(\"\
    Hello\"));\n        }\n        if word == String::from(\"world\") && index ==\
    \ s.len() - 1 {\n            words.push(String::from(\"world\"));\n        }\n\
    \        if word == String::from(\"Uncle\") && index == s.len() - 1 {\n      \
    \      words.push(String::from(\"Uncle\"));\n        }\n        if word == String::from(\"\
    sam\") && index == s.len() - 1 {\n            words.push(String::from(\"sam\"\
    ));\n        }\n        if word == String::from(\"Mary\") && index == s.len()\
    \ - 1 {\n            words.push(String::from(\"Mary\"));\n        }\n        if\
    \ word == String::from(\"lamb\") && index == s.len() - 1 {\n            words.push(String::from(\"\
    lamb\"));\n        }\n        if word == String::from(\"little\") && index ==\
    \ s.len() - 1 {\n            words.push(String::from(\"little\"));\n        }\n\
    \        if word == String::from\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpdexdng7w.rs:89:3\n\
    \   |\n17 | fn select_words(s: String, n: isize) -> Vec<String> {\n   |      \
    \                                               - unclosed delimiter\n...\n20\
    \ |     while index < s.len() {\n   |                           - this delimiter\
    \ might not be properly closed...\n...\n78 | }\n   | - ...as it matches this but\
    \ it has different indentation\n...\n89 | }\n   |   ^\n\nerror: expected `{`,\
    \ found `}`\n  --> /tmp/tmpdexdng7w.rs:78:1\n   |\n77 |         if word == String::from\n\
    \   |         -- this `if` expression has a condition, but no block\n78 | }\n\
    \   | ^ expected `{`\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdexdng7w.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdexdng7w.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdexdng7w.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdexdng7w.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdexdng7w.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdexdng7w.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdexdng7w.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdexdng7w.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   | "
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    select_words_helper(s,\
    \ n, 0)\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `select_words_helper` in this scope\n\
    \  --> /tmp/tmprn8uqpnb.rs:18:5\n   |\n18 |     select_words_helper(s, n, 0)\n\
    \   |     ^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprn8uqpnb.rs:23:17\n   |\n23 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprn8uqpnb.rs:23:25\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprn8uqpnb.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprn8uqpnb.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprn8uqpnb.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprn8uqpnb.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprn8uqpnb.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprn8uqpnb.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprn8uqpnb.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprn8uqpnb.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E04"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = s;\n    while s.len() > n {\n        let mut\
    \ i = 0;\n        let mut j = s.len();\n        while i < j {\n            if\
    \ s[i] == ' ' {\n                i += 1;\n                j = i;\n           \
    \ } else {\n                i += 1;\n            }\n        }\n        result.push(s.clone());\n\
    \        s = &s[..j];\n    }\n    result.push(s);\n    result\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb_rnft9q.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb_rnft9q.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb_rnft9q.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb_rnft9q.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb_rnft9q.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb_rnft9q.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpb_rnft9q.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpb_rnft9q.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpb_rnft9q.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb_rnft9q.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb_rnft9q.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c|\
    \ c.is_consonant() && c != ' ') {\n            i += 1;\n        } else {\n   \
    \         words.push(s.subslice(i, i + n));\n            i += n;\n        }\n\
    \    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprmtf1f3m.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprmtf1f3m.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprmtf1f3m.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprmtf1f3m.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprmtf1f3m.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprmtf1f3m.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprmtf1f3m.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprmtf1f3m.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprmtf1f3m.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprmtf1f3m.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprmtf1f3m.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = 0;\n        while j < s.len() {\n            if s[i] == s[j] {\n   \
    \             j += 1;\n            } else {\n                break;\n        \
    \    }\n        }\n        if j == n {\n            list.push(s.to_string());\n\
    \            i += 1;\n        }\n    }\n    list\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdx1y79i7.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdx1y79i7.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdx1y79i7.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdx1y79i7.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdx1y79i7.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdx1y79i7.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdx1y79i7.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdx1y79i7.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdx1y79i7.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdx1y79i7.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdx1y79i7.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index2 = Vec::new();\n    let mut vowels_count_index3\
    \ = Vec::new();\n    let mut vowels_count_index4 = Vec::new();\n    let mut vowels_count_index5\
    \ = Vec::new();\n    let mut vowels_count_index6 = Vec::new();\n    let mut vowels_count_index7\
    \ = Vec::new();\n    let mut vowels_count_index8 = Vec::new();\n    let mut vowels_count_index9\
    \ = Vec::new();\n    let mut vowels_count_index10 = Vec::new();\n    let mut vowels_count_index11\
    \ = Vec::new();\n    let mut vowels_count_index12 = Vec::new();\n    let mut vowels_count_index13\
    \ = Vec::new();\n    let mut vowels_count_index14 = Vec::new();\n    let mut vowels_count_index15\
    \ = Vec::new();\n    let mut vowels_count_index16 = Vec::new();\n    let mut vowels_count_index17\
    \ = Vec::new();\n    let mut vowels_count_index18 = Vec::new();\n    let mut vowels_count_index19\
    \ = Vec::new();\n    let mut vowels_count_index20 = Vec::new();\n    let mut vowels_count_index21\
    \ = Vec::new();\n    let mut vowels_count_index22 = Vec::new();\n    let mut vowels_count_index23\
    \ = Vec::new();\n    let mut vowels_count_index24 = Vec::new();\n    let mut vowels_count_index25\
    \ = Vec::new();\n    let mut vowels_count_index26 = Vec::new();\n    let mut vowels_count_index27\
    \ = Vec::new();\n    let mut vowels_count_index28 = Vec::new();\n    let mut vowels_count_index29\
    \ = Vec::new();\n    let mut vowels_count_index30 = Vec::new();\n    let mut vowels_count_index31\
    \ = Vec::new();\n    let mut vowels_count_index32 = Vec::new();\n    let mut vowels_count_index33\
    \ = Vec::new();\n    let mut vowels_count_index34 = Vec::new();\n    let mut vowels_count_index\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpltb7zgo3.rs:56:31\n   |\n\
    56 |     let mut vowels_count_index\n   |                               ^ help:\
    \ add `;` here\n57 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpltb7zgo3.rs:61:17\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpltb7zgo3.rs:61:25\n \
    \  |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpltb7zgo3.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpltb7zgo3.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpltb7zgo3.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpltb7zgo3.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpltb7zgo3.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpltb7zgo3.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpltb7zgo3.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpltb7zgo3.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: ca"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut s = String::from(s);\n    while s.len() > 0 {\n\
    \        let mut i = 0;\n        let mut j = s.len();\n        while i < j {\n\
    \            if s.chars().nth(i).unwrap().is_consonant() {\n                i\
    \ += 1;\n            } else {\n                j -= 1;\n            }\n      \
    \  }\n        if i == n {\n            words.push(s.clone());\n        }\n   \
    \     s = s.chars().take(i).collect();\n    }\n    words\n}\n\nfn main() {\n \
    \   let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8ddll32t.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8ddll32t.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8ddll32t.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8ddll32t.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8ddll32t.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8ddll32t.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8ddll32t.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8ddll32t.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8ddll32t.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8ddll32t.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8ddll32t.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    \n}\n\n\
    fn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprq35_rx_.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    let mut n = n;\n    while n !=\
    \ 0 {\n        if s.chars().any(|c| c.is_consonant()) {\n            result.push(s.clone());\n\
    \        }\n        n -= 1;\n        s = s.chars().filter(|c| c.is_consonant()).collect::<String>();\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdbdvxw2g.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdbdvxw2g.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdbdvxw2g.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdbdvxw2g.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdbdvxw2g.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdbdvxw2g.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdbdvxw2g.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdbdvxw2g.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdbdvxw2g.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdbdvxw2g.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdbdvxw2g.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s.chars().any(|c| c == s.chars().nth(j))\
    \ {\n            j += 1;\n        }\n        if j - i == n {\n            words.push(s.chars().nth(i).unwrap());\n\
    \            i += n;\n        }\n    }\n    words\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpa3g0q6dx.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa3g0q6dx.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa3g0q6dx.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa3g0q6dx.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa3g0q6dx.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa3g0q6dx.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa3g0q6dx.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa3g0q6dx.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa3g0q6dx.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa3g0q6dx.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa3g0q6dx.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut index = 0;\n    while index < s.len() {\n \
    \       let mut count = 0;\n        let mut word = String::new();\n        while\
    \ count < n && index < s.len() {\n            if s[index] == ' ' {\n         \
    \       count += 1;\n                index += 1;\n                continue;\n\
    \            }\n            if s[index] == 'a' || s[index] == 'e' || s[index]\
    \ == 'i' || s[index] == 'o' || s[index] == 'u' {\n                count += 1;\n\
    \                index += 1;\n                continue;\n            }\n     \
    \       if s[index] == 'y' || s[index] == 's' || s[index] == 't' || s[index] ==\
    \ 'h' || s[index] == 'a' || s[index] == 'd' {\n                count += 1;\n \
    \               index += 1;\n                continue;\n            }\n      \
    \      if s[index] == 'n' || s[index] == 'd' || s[index] == 'r' || s[index] ==\
    \ 'l' || s[index] == 's' {\n                count += 1;\n                index\
    \ += 1;\n                continue;\n            }\n            if s[index] ==\
    \ 'c' || s[index] == 'h' || s[index] == 'o' || s[index] == 'n' || s[index] ==\
    \ 'a' || s[index] == 'e' || s[index] == 'i' || s[index] == 'o' || s[index] ==\
    \ 'u' || s[index] == 'y' || s[index] == 's' || s[index] == 't' || s[index] ==\
    \ 'h' || s[index] == 'a' || s[index] == 'd' || s[index] == 'r' || s[index] ==\
    \ 'l' || s[index] == 's' {\n                count += 1;\n                index\
    \ += 1;\n                continue;\n            }\n            if s[index] ==\
    \ 'p' || s[index] == 'e' || s[index] == 'r' || s[index] == 'l' || s[index] ==\
    \ 'd' || s[index] == 'a' || s[index] == 't' || s[index] == 'h' || s[index] ==\
    \ 'a' || s[index] == 'd' || s[index] == 'r' || s[index] == 'l' || s[index] ==\
    \ 's' {\n                count += 1;\n                index += 1;\n          \
    \      continue;\n            }\n            if s[index] == 'f' || s[index] ==\
    \ 'r' || s[index] == 'a' || s[index] == 'k' || s[index] == 'e' || s[index] ==\
    \ 'a' || s[index] == 'l' || s[index] == 'l' || s[index] == 'o' || s[index] ==\
    \ 's' || s[index] == 'h' || s[index] == 'a' || s[index] == 'd' || s[index] ==\
    \ 'r' || s[index] == 'l' || s[index] == 's' {\n                count += 1;\n \
    \               index += 1;\n                continue;\n            }\n      \
    \      if s[index] == 'm' || s[index] == 'a' || s[index] == 'r' || s[index] ==\
    \ 'k' || s[index] == 'e' || s[index] == 'a' || s[index] == 'l' || s[index] ==\
    \ 'l' || s[index] == 'o' || s[index] == 's' || s[index] == 'h' || s[index] ==\
    \ 'a' || s[index] == 'd' || s[index] == 'r' || s[index] == 'l' || s[index] ==\
    \ 's' {\n                count += 1;\n                index += 1;\n          \
    \      continue;\n            }\n            if s[index] == 'b' || s[index] ==\
    \ 'l\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpbz1tn7q_.rs:76:3\n\
    \   |\n17 | fn select_words(s: String, n: isize) -> Vec<String> {\n   |      \
    \                                               - unclosed delimiter\n...\n20\
    \ |     while index < s.len() {\n   |                           - unclosed delimiter\n\
    ...\n23 |         while count < n && index < s.len() {\n   |                 \
    \                           - this delimiter might not be properly closed...\n\
    ...\n65 | }\n   | - ...as it matches this but it has different indentation\n...\n\
    76 | }\n   |   ^\n\nerror: expected `while`, `for`, `loop` or `{` after a label\n\
    \  --> /tmp/tmpbz1tn7q_.rs:65:1\n   |\n65 | }\n   | ^ expected `while`, `for`,\
    \ `loop` or `{` after a label\n\nerror: expected expression, found `}`\n  -->\
    \ /tmp/tmpbz1tn7q_.rs:65:1\n   |\n65 | }\n   | ^ expected expression\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbz1tn7q_.rs:69:17\n  \
    \ |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbz1tn7q_.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbz1tn7q_.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbz1tn7q_.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbz1tn7q_.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbz1tn7q_.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbz1tn7q_.rs:72:17\n   |\n72 |     assert_eq!({left}"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        if\
    \ s.chars().any(|c| c.is_consonant() && c != ' ') {\n            list.push(s.subslice(i,\
    \ i + n));\n            i += n;\n        }\n    }\n    list\n}\n\nfn main() {\n\
    \    let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfer27ot1.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfer27ot1.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfer27ot1.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfer27ot1.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfer27ot1.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfer27ot1.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfer27ot1.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfer27ot1.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfer27ot1.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfer27ot1.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfer27ot1.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut s = String::from(s);\n    let mut i = 0;\n    while\
    \ i < s.len() {\n        let mut j = i;\n        while j < s.len() && s.chars().all(|c|\
    \ c != s.chars().nth(j)) {\n            j = j + 1;\n        }\n        if j ==\
    \ s.len() {\n            words.push(s.clone());\n            i += 1;\n       \
    \ } else {\n            let mut k = j;\n            while k < s.len() && s.chars().all(|c|\
    \ c != s.chars().nth(k)) {\n                k = k + 1;\n            }\n      \
    \      if k == s.len() {\n                words.push(s.clone());\n           \
    \     i += 1;\n            } else {\n                let mut j = i;\n        \
    \        while j < s.len() && s.chars().all(|c| c != s.chars().nth(j)) {\n   \
    \                 j = j + 1;\n                }\n                if j == s.len()\
    \ {\n                    words.push(s.clone());\n                    i += 1;\n\
    \                } else {\n                    let mut k = j;\n              \
    \      while k < s.len() && s.chars().all(|c| c != s.chars().nth(k)) {\n     \
    \                   k = k + 1;\n                    }\n                    if\
    \ k == s.len() {\n                        words.push(s.clone());\n           \
    \             i += 1;\n                    } else {\n                        let\
    \ mut j = i;\n                        while j < s.len() && s.chars().all(|c| c\
    \ != s.chars().nth(j)) {\n                            j = j + 1;\n           \
    \             }\n                        if j == s.len() {\n                 \
    \           words.push(s.clone());\n                            i += 1;\n    \
    \                    } else {\n                            let mut k = j;\n  \
    \                          while k < s.len() && s.chars().all(|c| c != s.chars().nth(k))\
    \ {\n                                k = k + 1;\n                            }\n\
    \                            if k == s.len() {\n                             \
    \   words.push(s.clone());\n                                i += 1;\n        \
    \                    } else {\n                                let mut j = i;\n\
    \                                while j < s.len() && s.chars().all(|c| c != s.chars().nth(j))\
    \ {\n                                    j = j + 1;\n                        \
    \        }\n                                if j == s.len() {\n              \
    \                      words.push(s.clone());\n                              \
    \      i += 1;\n                                } else {\n                   \
    \                 let mut k = j;\n                                    while k\
    \ < s.len() && s.chars().all(|c| c != s.chars().nth(k)) {\n                  \
    \                      k = k + 1;\n                                    }\n   \
    \                                 if k == s.len() {\n                        \
    \                words.push(s.clone());\n                                    \
    \    i += 1;\n                                    } else {\n                 \
    \                       let mut j = i;\n                                     \
    \   while j < s.len() && s.chars().all(|c| c != s.chars().\n}\n\nfn main() {\n\
    \    let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp9h5ks7ag.rs:99:3\n\
    \   |\n17 | fn select_words(s: String, n: isize) -> Vec<String> {\n   |      \
    \                                               - unclosed delimiter\n...\n21\
    \ |     while i < s.len() {\n   |                       - unclosed delimiter\n\
    ...\n29 |         } else {\n   |                - unclosed delimiter\n...\n37\
    \ |             } else {\n   |                    - unclosed delimiter\n...\n\
    45 |                 } else {\n   |                        - unclosed delimiter\n\
    ...\n53 |                     } else {\n   |                            - unclosed\
    \ delimiter\n...\n61 |                         } else {\n   |                \
    \                - unclosed delimiter\n...\n69 |                             }\
    \ else {\n   |                                    - unclosed delimiter\n...\n\
    77 |                                 } else {\n   |                          \
    \              - unclosed delimiter\n...\n85 |                               \
    \      } else {\n   |                                            - this delimiter\
    \ might not be properly closed...\n...\n88 | }\n   | - ...as it matches this but\
    \ it has different indentation\n...\n99 | }\n   |   ^\n\nerror: unexpected token:\
    \ `)`\n  --> /tmp/tmp9h5ks7ag.rs:88:1\n   |\n88 | }\n   | ^\n\nerror: expected\
    \ `{`, found `}`\n  --> /tmp/tmp9h5ks7ag.rs:88:1\n   |\n88 | }\n   | ^ expected\
    \ `{`\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmp9h5ks7ag.rs:87:75\n\
    \   |\n17 | fn select_words(s: String, n: isize) -> Vec<String> {\n   |      \
    \                                               - closing delimiter possibly meant\
    \ for this\n...\n87 |                                         while j < s.len()\
    \ && s.chars().all(|c| c != s.chars().\n   |                                 \
    \                                          ^ unclosed delimiter\n88 | }\n   |\
    \ ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value `left` in\
    \ this scope\n  --> /tmp/tmp9h5ks7ag.rs:92:17\n   |\n92 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot fin"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    while s.len() >\
    \ 0 {\n        let mut i = 0;\n        while i < s.len() && s.chars().any(|c|\
    \ c == s.chars().nth(i)) {\n            i += 1;\n        }\n        if i == s.len()\
    \ {\n            result.push(s.clone());\n        }\n        s = &s[..i];\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbzdavmq6.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbzdavmq6.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbzdavmq6.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbzdavmq6.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbzdavmq6.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbzdavmq6.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbzdavmq6.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbzdavmq6.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbzdavmq6.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbzdavmq6.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbzdavmq6.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] != ' ' {\n            j += 1\n\
    \        }\n        if j == i {\n            break;\n        }\n        let mut\
    \ word = s.split_whitespace().nth(j).unwrap();\n        if word.chars().count(|c|\
    \ c != 'a'..='z' && c != 'A'..='Z' && c != '0'..='9') == n {\n            result.push(word);\n\
    \        }\n        i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `)`, `,`, `.`, `?`, or an operator, found `..=`\n\
    \  --> /tmp/tmpxu89q59j.rs:29:79\n   |\n29 |         if word.chars().count(|c|\
    \ c != 'a'..='z' && c != 'A'..='Z' && c != '0'..='9') == n {\n   |           \
    \                                                                    -^^\n   |\
    \                                                                            \
    \   |\n   |                                                                  \
    \             expected one of `)`, `,`, `.`, `?`, or an operator\n   |       \
    \                                                                        help:\
    \ missing `,`\n\nerror[E0425]: cannot find value `c` in this scope\n  --> /tmp/tmpxu89q59j.rs:29:71\n\
    \   |\n29 |         if word.chars().count(|c| c != 'a'..='z' && c != 'A'..='Z'\
    \ && c != '0'..='9') == n {\n   |                                            \
    \                           ^ help: a local variable with a similar name exists:\
    \ `i`\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxu89q59j.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxu89q59j.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxu89q59j.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxu89q59j.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxu89q59j.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxu89q59j.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n\
    \        }\n        if j == i {\n            list.push(s.to_string());\n     \
    \       i += 1;\n        } else {\n            let mut count = 0;\n          \
    \  while j < s.len() {\n                if s[j] == s[i] {\n                  \
    \  count += 1;\n                    j += 1;\n                } else {\n      \
    \              break;\n                }\n            }\n            if count\
    \ == n {\n                list.push(s.to_string());\n                i += 1;\n\
    \            } else {\n                i += 1;\n            }\n        }\n   \
    \ }\n    list\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcz0yz1tr.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcz0yz1tr.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcz0yz1tr.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcz0yz1tr.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcz0yz1tr.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcz0yz1tr.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcz0yz1tr.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcz0yz1tr.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcz0yz1tr.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcz0yz1tr.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcz0yz1tr.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut index = 0;\n    let mut count = 0;\n    while index\
    \ < s.len() {\n        if s[index] == ' ' {\n            count += 1;\n       \
    \     if count == n {\n                words.push(s.split_whitespace().nth(index));\n\
    \                index += 1;\n                count = 0;\n            }\n    \
    \    } else {\n            count += 1;\n        }\n        index += 1;\n    }\n\
    \    words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0le9vktk.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0le9vktk.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0le9vktk.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0le9vktk.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0le9vktk.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0le9vktk.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0le9vktk.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0le9vktk.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0le9vktk.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0le9vktk.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0le9vktk.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] != ' ' {\n            j = j + 1;\n\
    \        }\n        if j == s.len() {\n            words.push(s.to_string());\n\
    \            i = i + 1;\n        } else {\n            let mut k = j;\n      \
    \      while k < s.len() && s[k] != ' ' {\n                k = k + 1;\n      \
    \      }\n            if k == s.len() {\n                words.push(s.to_string());\n\
    \                i = i + 1;\n            } else {\n                let mut m =\
    \ k;\n                while m < s.len() && s[m] != ' ' {\n                   \
    \ m = m + 1;\n                }\n                if m == s.len() {\n         \
    \           words.push(s.to_string());\n                    i = i + 1;\n     \
    \           } else {\n                    let mut n = m;\n                   \
    \ while n < s.len() && s[n] != ' ' {\n                        n = n + 1;\n   \
    \                 }\n                    if n == s.len() {\n                 \
    \       words.push(s.to_string());\n                        i = i + 1;\n     \
    \               } else {\n                        let mut o = n;\n           \
    \             while o < s.len() && s[o] != ' ' {\n                           \
    \ o = o + 1;\n                        }\n                        if o == s.len()\
    \ {\n                            words.push(s.to_string());\n                \
    \            i = i + 1;\n                        } else {\n                  \
    \          let mut p = o;\n                            while p < s.len() && s[p]\
    \ != ' ' {\n                                p = p + 1;\n                     \
    \       }\n                            if p == s.len() {\n                   \
    \             words.push(s.to_string());\n                                i =\
    \ i + 1;\n                            } else {\n                             \
    \   let mut q = p;\n                                while q < s.len() && s[q]\
    \ != ' ' {\n                                    q = q + 1;\n                 \
    \               }\n                                if q == s.len() {\n       \
    \                             words.push(s.to_string());\n                   \
    \                 i = i + 1;\n                                } else {\n     \
    \                               let mut r = q;\n                             \
    \       while r < s.len() && s[r] != ' ' {\n                                 \
    \       r = r + 1;\n                                    }\n                  \
    \                  if r == s.len() {\n                                       \
    \ words.push(s.to_string());\n                                        i = i +\
    \ 1;\n                                    } else {\n                         \
    \               let mut s = r;\n                                        while\
    \ s < s.len() && s[s] != ' ' {\n                                            s\
    \ = s + 1;\n                                        }\n                      \
    \                  if s == s.len() {\n                                       \
    \     words.push(s.to_string());\n                                           \
    \ i = i + 1;\n                                        } else {\n             \
    \                               let mut t = s;\n                             \
    \               while t < s.len() && s[t] != ' ' {\n                         \
    \                       t = t + 1;\n                                         \
    \   }\n                                            if t == s.len() {\n       \
    \                                         words.push(s.to_string());\n       \
    \                                         i = i + 1;\n                       \
    \                     } else {\n                                             \
    \   let mu\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpp9ubypr0.rs:113:3\n\
    \    |\n17  | fn select_words(s: String, n: isize) -> Vec<String> {\n    |   \
    \                                                  - unclosed delimiter\n...\n\
    20  |     while i < s.len() {\n    |                       - unclosed delimiter\n\
    ...\n28  |         } else {\n    |                - unclosed delimiter\n...\n\
    36  |             } else {\n    |                    - unclosed delimiter\n...\n\
    44  |                 } else {\n    |                        - unclosed delimiter\n\
    ...\n52  |                     } else {\n    |                            - unclosed\
    \ delimiter\n...\n60  |                         } else {\n    |              \
    \                  - unclosed delimiter\n...\n68  |                          \
    \   } else {\n    |                                    - unclosed delimiter\n\
    ...\n76  |                                 } else {\n    |                   \
    \                     - unclosed delimiter\n...\n84  |                       \
    \              } else {\n    |                                            - unclosed\
    \ delimiter\n...\n92  |                                         } else {\n   \
    \ |                                                - unclosed delimiter\n...\n\
    100 |                                             } else {\n    |            \
    \                                        - this delimiter might not be properly\
    \ closed...\n101 |                                                 let mu\n102\
    \ | }\n    | - ...as it matches this but it has different indentation\n...\n113\
    \ | }\n    |   ^\n\nerror: expected `;`, found `}`\n   --> /tmp/tmpp9ubypr0.rs:101:55\n\
    \    |\n101 |                                                 let mu\n    |  \
    \                                                     ^ help: add `;` here\n102\
    \ | }\n    | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpp9ubypr0.rs:106:17\n    |\n106 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpp9ubyp"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        if\
    \ s.chars().any(|c| c.is_consonant() && c != ' ') {\n            i += 1;\n   \
    \     } else {\n            words.push(s.to_string());\n            i += 1;\n\
    \        }\n        if i == n {\n            break;\n        }\n    }\n    words\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmper64u9nj.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmper64u9nj.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmper64u9nj.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmper64u9nj.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmper64u9nj.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmper64u9nj.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmper64u9nj.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmper64u9nj.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmper64u9nj.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmper64u9nj.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmper64u9nj.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut words = s.split_whitespace();\n    let mut\
    \ i = 0;\n    while i < words.len() {\n        let mut j = 0;\n        while j\
    \ < words.len() && words.len() > i && words.len() > j {\n            if words[j].chars().count(|c|\
    \ c == 'a'..'z').unwrap() == n {\n                result.push(words[j]);\n   \
    \             j += 1;\n            }\n            j += 1\n        }\n        i\
    \ += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_mo4hlu0.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_mo4hlu0.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_mo4hlu0.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_mo4hlu0.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_mo4hlu0.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_mo4hlu0.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_mo4hlu0.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_mo4hlu0.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_mo4hlu0.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_mo4hlu0.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_mo4hlu0.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as\
    \ usize;\n    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c|\
    \ c.is_consonant() && c != ' ') {\n            result.push(s.subslice(i, i + n));\n\
    \            i += n;\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwg2axpyf.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwg2axpyf.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwg2axpyf.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwg2axpyf.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwg2axpyf.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwg2axpyf.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwg2axpyf.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwg2axpyf.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwg2axpyf.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwg2axpyf.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwg2axpyf.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    let mut n = n;\n    while n !=\
    \ 0 {\n        if s.chars().count() == n {\n            result.push(s.clone());\n\
    \            n -= 1;\n        }\n        n -= 1;\n        s = s.chars().skip_while(|c|\
    \ c != ' ').collect();\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7l1mdmt5.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7l1mdmt5.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7l1mdmt5.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7l1mdmt5.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7l1mdmt5.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7l1mdmt5.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7l1mdmt5.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7l1mdmt5.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7l1mdmt5.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7l1mdmt5.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7l1mdmt5.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    select_words(s,\
    \ n, vec![])\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyn8k_a0i.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyn8k_a0i.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyn8k_a0i.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyn8k_a0i.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowel_consonants = Vec::new();\n    let mut vowel_consonant_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels = Vec::new();\n   \
    \ let mut vowel_consonant_vowels_vowels_vowels = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut \n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpas8wc19z.rs:39:1\n\
    \   |\n39 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpas8wc19z.rs:43:17\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpas8wc19z.rs:43:25\n \
    \  |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpas8wc19z.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpas8wc19z.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpas8wc19z.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpas8wc19z.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpas8wc19z.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpas8wc19z.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpas8wc19z.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpas8wc19z.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpas8wc19z.rs:48:17\n   |\n48 |     "
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut vowel_consonants = vec![];\n    let mut vowel_consonant_vowels =\
    \ vec![];\n    let mut vowel_consonant_vowels_vowels = vec![];\n    let mut vowel_consonant_vowels_vowels_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowels_vowels_vowels_vowels = vec![];\n\
    \    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels = vec![];\n  \
    \  let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels = vec![];\n\
    \    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowel\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp33i9h3pf.rs:38:118\n   |\n\
    38 |     let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowel\n\
    \   |                                                                        \
    \                                              ^ help: add `;` here\n39 | }\n\
    \   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp33i9h3pf.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp33i9h3pf.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp33i9h3pf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp33i9h3pf.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp33i9h3pf.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp33i9h3pf.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp33i9h3pf.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp33i9h3pf.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp33i9h3pf.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ valu"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = s;\n    let mut n = n;\n    while n > 0 {\n\
    \        if s.chars().any(|c| c.is_consonant()) {\n            result.push(s.clone());\n\
    \            n -= 1;\n        }\n        s = s.chars().filter(|c| !c.is_consonant()).collect::<String>();\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb4q80fda.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb4q80fda.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb4q80fda.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb4q80fda.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb4q80fda.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb4q80fda.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpb4q80fda.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpb4q80fda.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpb4q80fda.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb4q80fda.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb4q80fda.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    \n}\n\n\
    fn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprq35_rx_.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as\
    \ usize;\n    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c|\
    \ c.is_consonant() && c != ' ') {\n            result.push(s.subslice(i, i + n));\n\
    \            i += n;\n        }\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxrwf_h6l.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxrwf_h6l.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxrwf_h6l.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxrwf_h6l.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] == ' ' {\n            j = j + 1;\n\
    \        }\n        if j == s.len() {\n            break;\n        }\n       \
    \ let mut k = j;\n        while k < s.len() && s[k] != ' ' {\n            k =\
    \ k + 1;\n        }\n        if k == s.len() {\n            break;\n        }\n\
    \        if n == j - i + 1 {\n            words.push(s.split_whitespace()[i]);\n\
    \        }\n        i = j;\n    }\n    words\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpu0zcho2x.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu0zcho2x.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu0zcho2x.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu0zcho2x.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu0zcho2x.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu0zcho2x.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu0zcho2x.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu0zcho2x.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpu0zcho2x.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu0zcho2x.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu0zcho2x.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index2 = Vec::new();\n    let mut vowels_count_index3\
    \ = Vec::new();\n    let mut vowels_count_index4 = Vec::new();\n    let mut vowels_count_index5\
    \ = Vec::new();\n    let mut vowels_count_index6 = Vec::new();\n    let mut vowels_count_index7\
    \ = Vec::new();\n    let mut vowels_count_index8 = Vec::new();\n    let mut vowels_count_index9\
    \ = Vec::new();\n    let mut vowels_count_index10 = Vec::new();\n    let mut vowels_count_index11\
    \ = Vec::new();\n    let mut vowels_count_index12 = Vec::new();\n    let mut vowels_count_index13\
    \ = Vec::new();\n    let mut vowels_count_index14 = Vec::new();\n    let mut vowels_count_index15\
    \ = Vec::new();\n    let mut vowels_count_index16 = Vec::new();\n    let mut vowels_count_index17\
    \ = Vec::new();\n    let mut vowels_count_index18 = Vec::new();\n    let mut vowels_count_index19\
    \ = Vec::new();\n    let mut vowels_count_index20 = Vec::new();\n    let mut vowels_count_index21\
    \ = Vec::new();\n    let mut vowels_count_index22 = Vec::new();\n    let mut vowels_count_index23\
    \ = Vec::new();\n    let mut vowels_count_index24 = Vec::new();\n    let mut vowels_count_index25\
    \ = Vec::new();\n    let mut vowels_count_index26 = Vec::new();\n    let mut vowels_count_index27\
    \ = Vec::new();\n    let mut vowels_count_index28 = Vec::new();\n    let mut vowels_count_index29\
    \ = Vec::new();\n    let mut vowels_count_index30 = Vec::new();\n    let mut vowels_count_index31\
    \ = Vec::new();\n    let mut vowels_count_index32 = Vec::new();\n    let mut vowels_count_index33\
    \ = Vec::new();\n    let mut vowels_count_index34 = Vec::new();\n    let mut vowels_count_index\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpltb7zgo3.rs:56:31\n   |\n\
    56 |     let mut vowels_count_index\n   |                               ^ help:\
    \ add `;` here\n57 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpltb7zgo3.rs:61:17\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpltb7zgo3.rs:61:25\n \
    \  |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpltb7zgo3.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpltb7zgo3.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpltb7zgo3.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpltb7zgo3.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpltb7zgo3.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpltb7zgo3.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpltb7zgo3.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpltb7zgo3.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: ca"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = s;\n    while s.len() > 0 {\n        let mut\
    \ i = 0;\n        let mut j = s.len();\n        while i < j {\n            if\
    \ s[i] == ' ' {\n                i += 1;\n                j = i;\n           \
    \ } else {\n                i += 1;\n            }\n        }\n        if i ==\
    \ j {\n            result.push(s.clone());\n        }\n        s = &s[..i];\n\
    \    }\n    if result.len() == 0 {\n        result\n    } else {\n        result.iter().filter(|&x|\
    \ x.chars().count(|c| c != ' ')).take(n).collect()\n    }\n}\n\nfn main() {\n\
    \    let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1zxcrmov.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1zxcrmov.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1zxcrmov.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1zxcrmov.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1zxcrmov.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1zxcrmov.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1zxcrmov.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1zxcrmov.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1zxcrmov.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1zxcrmov.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1zxcrmov.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == ' ' {\n            j = j +\
    \ 1;\n        }\n        if j == s.len() {\n            break;\n        }\n  \
    \      let mut k = j;\n        while k < s.len() && s[k] != ' ' {\n          \
    \  k = k + 1;\n        }\n        if k == s.len() {\n            break;\n    \
    \    }\n        let mut c = s.chars();\n        let mut found = false;\n     \
    \   while !found && c != None {\n            if c.next().unwrap().is_uppercase()\
    \ {\n                found = true;\n            }\n        }\n        if found\
    \ {\n            if n == 0 {\n                break;\n            }\n        \
    \    if n == 1 {\n                words.push(s.sub(i, j));\n                break;\n\
    \            }\n            if n == 2 {\n                words.push(s.sub(i, j));\n\
    \                words.push(s.sub(k, j));\n                break;\n          \
    \  }\n            if n == 3 {\n                words.push(s.sub(i, j));\n    \
    \            words.push(s.sub(k, j));\n                words.push(s.sub(i, k));\n\
    \                break;\n            }\n            if n == 4 {\n            \
    \    words.push(s.sub(i, j));\n                words.push(s.sub(k, j));\n    \
    \            words.push(s.sub(i, k));\n                words.push(s.sub(k, k));\n\
    \                break;\n            }\n        }\n        i = j;\n    }\n   \
    \ words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvki5u2dd.rs:76:17\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvki5u2dd.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvki5u2dd.rs:77:17\n   |\n77 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvki5u2dd.rs:77:25\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvki5u2dd.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvki5u2dd.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvki5u2dd.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvki5u2dd.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvki5u2dd.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvki5u2dd.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvki5u2dd.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] != ' ' {\n            j = j + 1;\n\
    \        }\n        let mut k = i;\n        while k < s.len() && s[k] != ' ' {\n\
    \            k = k + 1;\n        }\n        if j == k {\n            i = i + 1;\n\
    \            continue;\n        }\n        if j > k {\n            words.push((&s[i\
    \ .. j]).to_owned());\n            i = j + 1;\n        } else {\n            words.push((&s[i\
    \ .. k]).to_owned());\n            i = k + 1;\n        }\n    }\n    words\n}\n\
    \nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplsqeq6oh.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplsqeq6oh.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplsqeq6oh.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplsqeq6oh.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplsqeq6oh.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplsqeq6oh.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplsqeq6oh.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplsqeq6oh.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplsqeq6oh.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplsqeq6oh.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplsqeq6oh.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as\
    \ usize;\n    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c|\
    \ c.is_consonant() && c != ' ') {\n            result.push(s.subslice(i, i + n));\n\
    \            i += n;\n        }\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxrwf_h6l.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxrwf_h6l.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxrwf_h6l.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxrwf_h6l.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut i = 0;\n        while i < s.len() && s[i].is_ascii_letter() {\n        \
    \    i += 1;\n        }\n        if i == s.len() {\n            break;\n     \
    \   }\n        let mut j = i;\n        while j < s.len() && s[j].is_ascii_letter()\
    \ {\n            j += 1;\n        }\n        if j == s.len() {\n            break;\n\
    \        }\n        let mut k = j;\n        while k < s.len() && s[k].is_ascii_letter()\
    \ {\n            k += 1;\n        }\n        if k == s.len() {\n            break;\n\
    \        }\n        let mut l = k;\n        while l < s.len() && s[l].is_ascii_letter()\
    \ {\n            l += 1;\n        }\n        if l == s.len() {\n            break;\n\
    \        }\n        let mut m = l;\n        while m < s.len() && s[m].is_ascii_letter()\
    \ {\n            m += 1;\n        }\n        if m == s.len() {\n            break;\n\
    \        }\n        let mut n = m;\n        while n < s.len() && s[n].is_ascii_letter()\
    \ {\n            n += 1;\n        }\n        if n == s.len() {\n            break;\n\
    \        }\n        if n == n {\n            result.push(s.split_whitespace().nth(n).unwrap());\n\
    \        }\n        s = &s[..n];\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp46ocn_v3.rs:73:17\n\
    \   |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp46ocn_v3.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp46ocn_v3.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp46ocn_v3.rs:74:25\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp46ocn_v3.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp46ocn_v3.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp46ocn_v3.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp46ocn_v3.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp46ocn_v3.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp46ocn_v3.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp46ocn_v3.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    \n}\n\n\
    fn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprq35_rx_.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut i = 0;\n        let mut j = s.len();\n        while i < j {\n          \
    \  if s.chars().nth(i).unwrap().is_consonant() {\n                i += 1;\n  \
    \          } else {\n                j -= 1;\n            }\n        }\n     \
    \   if i == n {\n            result.push(s.clone());\n        }\n        s = &s[..i];\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpto9p_n8d.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpto9p_n8d.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpto9p_n8d.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpto9p_n8d.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpto9p_n8d.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpto9p_n8d.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpto9p_n8d.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpto9p_n8d.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpto9p_n8d.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpto9p_n8d.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpto9p_n8d.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] != ' ' {\n            j = j + 1;\n\
    \        }\n        if j == s.len() {\n            break;\n        }\n       \
    \ let mut word = String::from(&s[i .. j]);\n        i += j - i;\n        if word.chars().count(|c|\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') == n {\n         \
    \   words.push(word);\n        }\n    }\n    words\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxrdsx97q.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxrdsx97q.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxrdsx97q.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxrdsx97q.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxrdsx97q.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxrdsx97q.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxrdsx97q.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxrdsx97q.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxrdsx97q.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxrdsx97q.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxrdsx97q.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowel_consonants = Vec::new();\n    let mut vowel_consonant_count\
    \ = Vec::new();\n    let mut vowel_consonant_count_max = Vec::new();\n    let\
    \ mut vowel_consonant_count_min = Vec::new();\n    let mut vowel_consonant_count_sum\
    \ = Vec::new();\n    let mut vowel_consonant_count_sum_max = Vec::new();\n   \
    \ let mut vowel_consonant_count_sum_min = Vec::new();\n    let mut vowel_consonant_count_product\
    \ = Vec::new();\n    let mut vowel_consonant_count_product_max = Vec::new();\n\
    \    let mut vowel_consonant_count_product_min = Vec::new();\n    let mut vowel_consonant_count_quotient\
    \ = Vec::new();\n    let mut vowel_consonant_count_quotient_max = Vec::new();\n\
    \    let mut vowel_consonant_count_quotient_min = Vec::new();\n    let mut vowel_consonant_count_remainder\
    \ = Vec::new();\n    let mut vowel_consonant_count_remainder_max = Vec::new();\n\
    \    let mut vowel_consonant_count_remainder_min = Vec::new();\n    let mut vowel_consonant_count_remainder_product\
    \ = Vec::new();\n    let mut vowel_consonant_count_remainder_product_max = Vec::new();\n\
    \    let mut vowel_consonant_count_remainder_product_min = Vec::new();\n    let\
    \ mut vowel_consonant_count_remainder_quotient = Vec::new();\n    let mut vowel_consonant_count_remainder_quotient_max\
    \ = Vec::new();\n    let mut vowel_consonant_count_remainder_quotient_min = Vec::new();\n\
    \    let mut vowel_consonant_count_remainder_remainder = Vec::new();\n    let\
    \ mut vowel_consonant_count_remainder_remainder_max = Vec::new();\n    let mut\
    \ vowel_consonant_count_remainder_remainder_min = Vec::new();\n    let mut vowel_consonant_count_remainder_remainder_product\
    \ = Vec::new();\n    let mut vowel_consonant_count_remainder_remainder_product_max\
    \ = Vec::new();\n    let mut vowel_consonant_count_remainder_remainder_product_min\
    \ = Vec::new();\n\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5gvq6b34.rs:54:17\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5gvq6b34.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5gvq6b34.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5gvq6b34.rs:55:25\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5gvq6b34.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5gvq6b34.rs:56:25\n   |\n56 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5gvq6b34.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5gvq6b34.rs:57:25\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5gvq6b34.rs:58:17\n  \
    \ |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5gvq6b34.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5gvq6b34.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut spaces = vec![];\n    let mut punctuation = vec![];\n    let mut\
    \ letters = vec![];\n    let mut spaces_count = s.chars().filter(|c| c == ' ').count();\n\
    \    let mut consonants_count = s.chars().filter(|c| c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u').count();\n    let mut vowels_count = s.chars().filter(|c|\
    \ c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u').count();\n    let\
    \ mut punctuation_count = s.chars().filter(|c| c == '.' || c == '!' || c == '?'\
    \ || c == ';' || c == ':' || c == '-' || c == '_').count();\n    let mut letters_count\
    \ = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count();\n\
    \    let mut spaces_count_2 = s.chars().filter(|c| c == ' ').count();\n    let\
    \ mut consonants_count_2 = s.chars().filter(|c| c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u').count();\n    let mut vowels_count_2 = s.chars().filter(|c|\
    \ c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u').count();\n    let\
    \ mut punctuation_count_2 = s.chars().filter(|c| c == '.' || c == '!' || c ==\
    \ '?' || c == ';' || c == ':' || c == '-' || c == '_').count();\n    let mut letters_count_2\
    \ = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count();\n\
    \    let mut spaces_count_3 = s.chars().filter(|c| c == ' ').count();\n    let\
    \ mut consonants_count_3 = s.chars().filter(|c| c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u').count();\n    let mut vowels_count_3 = s.chars().filter(|c|\
    \ c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u').count();\n    let\
    \ mut punctuation_count_3 = s.chars().filter(|\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `|`, found `)`\n  --> /tmp/tmp02fgmhcy.rs:38:1\n   |\n\
    37 |     let mut punctuation_count_3 = s.chars().filter(|\n   |              \
    \                                       - expected `|`\n38 | }\n   | ^ unexpected\
    \ token\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmp02fgmhcy.rs:37:51\n\
    \   |\n17 | fn select_words(s: String, n: isize) -> Vec<String> {\n   |      \
    \                                               - closing delimiter possibly meant\
    \ for this\n...\n37 |     let mut punctuation_count_3 = s.chars().filter(|\n \
    \  |                                                   ^ unclosed delimiter\n\
    38 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmp02fgmhcy.rs:42:17\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp02fgmhcy.rs:42:25\n \
    \  |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp02fgmhcy.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp02fgmhcy.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp02fgmhcy.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp02fgmhcy.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp02fgmhcy.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp02fgmhcy.rs:45:25\n   |\n45 |     assert_eq!({left"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = s;\n    let mut n = n;\n    while n > 0 {\n\
    \        let mut i = 0;\n        while i < s.len() {\n            if s[i] == '\
    \ ' {\n                i += 1;\n                continue;\n            }\n   \
    \         if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u' {\n                i += 1;\n                continue;\n            }\n\
    \            if s[i] == 'y' || s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u' {\n                i += 1;\n                continue;\n\
    \            }\n            if s[i] == 'y' || s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u' {\n                i += 1;\n          \
    \      continue;\n            }\n            if s[i] == 'y' || s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n               \
    \ i += 1;\n                continue;\n            }\n            if s[i] == 'y'\
    \ || s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n\
    \                i += 1;\n                continue;\n            }\n         \
    \   if s[i] == 'y' || s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u' {\n                i += 1;\n                continue;\n     \
    \       }\n            if s[i] == 'y' || s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u' {\n                i += 1;\n             \
    \   continue;\n            }\n            if s[i] == 'y' || s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n                i +=\
    \ 1;\n                continue;\n            }\n            if s[i] == 'y' ||\
    \ s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n\
    \                i += 1;\n                continue;\n            }\n         \
    \   if s[i] == 'y' || s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u' {\n                i += 1;\n                continue;\n     \
    \       }\n            if s[i] == 'y' || s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u' {\n                i += 1;\n             \
    \   continue;\n            }\n            if s[i] == 'y' || s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n                i +=\
    \ 1;\n                continue;\n            }\n            if s[i] == 'y' ||\
    \ s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n\
    \                i += 1;\n                continue;\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp51zi1bq7.rs:90:3\n\
    \   |\n17 | fn select_words(s: String, n: isize) -> Vec<String> {\n   |      \
    \                                               - unclosed delimiter\n...\n21\
    \ |     while n > 0 {\n   |                 - unclosed delimiter\n22 |       \
    \  let mut i = 0;\n23 |         while i < s.len() {\n   |                    \
    \       - unclosed delimiter\n...\n76 |             if s[i] == 'y' || s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n   |    \
    \                                                                            \
    \                       - this delimiter might not be properly closed...\n...\n\
    79 | }\n   | - ...as it matches this but it has different indentation\n...\n90\
    \ | }\n   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp51zi1bq7.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp51zi1bq7.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp51zi1bq7.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp51zi1bq7.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp51zi1bq7.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp51zi1bq7.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp51zi1bq7.rs:86:17\n   |\n86 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = String::from(s);\n    let mut n = n as usize;\n\
    \    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c| c !=\
    \ ' ' && c != '\\t' && c != '\\n' && c != '\\r') {\n            if s.chars().all(|c|\
    \ c == s.chars().nth(i)) {\n                i += 1;\n            } else {\n  \
    \              result.push(s.subslice(i, i + n));\n                i += n;\n \
    \           }\n        } else {\n            i += 1;\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1zclxy26.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1zclxy26.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1zclxy26.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1zclxy26.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1zclxy26.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1zclxy26.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1zclxy26.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1zclxy26.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1zclxy26.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1zclxy26.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1zclxy26.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    let mut n = n;\n    while n >\
    \ 0 {\n        if s.chars().any(|c| c.is_consonant()) {\n            result.push(s.clone());\n\
    \        }\n        n -= 1;\n        s = s.chars().filter(|c| !c.is_consonant()).collect();\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdjll6b8y.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdjll6b8y.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdjll6b8y.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdjll6b8y.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdjll6b8y.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdjll6b8y.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdjll6b8y.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdjll6b8y.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdjll6b8y.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdjll6b8y.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdjll6b8y.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == s[i] {\n            j += 1\n\
    \        }\n        if j == i {\n            result.push(s.to_string());\n   \
    \         i += 1;\n        } else {\n            if j > i {\n                let\
    \ mut k = j;\n                while k < s.len() && s[k] == s[i] {\n          \
    \          k += 1\n                }\n                if k == i {\n          \
    \          result.push(s.to_string());\n                    i += 1;\n        \
    \        } else {\n                    let mut k = j;\n                    while\
    \ k < s.len() && s[k] != s[i] {\n                        k += 1\n            \
    \        }\n                    if k == i {\n                        result.push(s.to_string());\n\
    \                        i += 1;\n                    } else {\n             \
    \           result.push(s.to_string());\n                        i += 1;\n   \
    \                 }\n                }\n            } else {\n               \
    \ result.push(s.to_string());\n                i += 1;\n            }\n      \
    \  }\n    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpco5az57o.rs:61:17\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpco5az57o.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpco5az57o.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpco5az57o.rs:62:25\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpco5az57o.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpco5az57o.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpco5az57o.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpco5az57o.rs:64:25\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpco5az57o.rs:65:17\n  \
    \ |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpco5az57o.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpco5az57o.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j].is_ascii_letter() {\n            j\
    \ = j + 1;\n        }\n        if j == i {\n            break;\n        }\n  \
    \      let mut word = String::from(&s[i .. j]);\n        let mut count = 0;\n\
    \        while j < s.len() && s[j].is_ascii_letter() {\n            count = count\
    \ + 1;\n            j = j + 1;\n        }\n        if count == n {\n         \
    \   words.push(word);\n        }\n        i = j;\n    }\n    words\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpffpcu98z.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpffpcu98z.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpffpcu98z.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpffpcu98z.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpffpcu98z.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpffpcu98z.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpffpcu98z.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpffpcu98z.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpffpcu98z.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpffpcu98z.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpffpcu98z.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n\
    \        }\n        let mut k = i;\n        while k < s.len() && s[k] != ' ' {\n\
    \            k += 1\n        }\n        if k > j {\n            words.push_back(s.to_string());\n\
    \            i = j;\n        } else {\n            i += k - j;\n        }\n  \
    \  }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5lqcfmxo.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5lqcfmxo.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5lqcfmxo.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5lqcfmxo.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5lqcfmxo.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5lqcfmxo.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5lqcfmxo.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5lqcfmxo.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5lqcfmxo.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5lqcfmxo.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5lqcfmxo.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == s[i] {\n            j += 1\n\
    \        }\n        if j - i == n {\n            list.push(s.subslice(i, j));\n\
    \            i += j - i;\n        }\n    }\n    list\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8qhwltcv.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8qhwltcv.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8qhwltcv.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8qhwltcv.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8qhwltcv.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8qhwltcv.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8qhwltcv.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8qhwltcv.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8qhwltcv.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8qhwltcv.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8qhwltcv.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n   \
    \     }\n        if j == i {\n            break;\n        }\n        let mut word\
    \ = String::from(&s[i .. j]);\n        let mut count = 0;\n        while j < s.len()\
    \ && s[j] == s[j + count] {\n            count += 1;\n            j += 1\n   \
    \     }\n        if count == n {\n            words.push(word);\n        }\n \
    \       i = j;\n    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpr6ax22qp.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr6ax22qp.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr6ax22qp.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr6ax22qp.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr6ax22qp.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr6ax22qp.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr6ax22qp.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpr6ax22qp.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr6ax22qp.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr6ax22qp.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr6ax22qp.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut i = 0;\n        while i < s.len() && s[i].is_ascii_letter() {\n        \
    \    i += 1;\n        }\n        if i == s.len() {\n            break;\n     \
    \   }\n        let mut j = i;\n        while j < s.len() && s[j].is_ascii_letter()\
    \ {\n            j += 1;\n        }\n        if j == s.len() {\n            break;\n\
    \        }\n        let mut k = j;\n        while k < s.len() && s[k].is_ascii_letter()\
    \ {\n            k += 1;\n        }\n        if k == s.len() {\n            break;\n\
    \        }\n        let mut l = k;\n        while l < s.len() && s[l].is_ascii_letter()\
    \ {\n            l += 1;\n        }\n        if l == s.len() {\n            break;\n\
    \        }\n        let mut m = l;\n        while m < s.len() && s[m].is_ascii_letter()\
    \ {\n            m += 1;\n        }\n        if m == s.len() {\n            break;\n\
    \        }\n        let mut n = m;\n        while n < s.len() && s[n].is_ascii_letter()\
    \ {\n            n += 1;\n        }\n        if n == s.len() {\n            break;\n\
    \        }\n        result.push(s.split_whitespace()[n - 1]);\n        s = &s[n\
    \ - 1];\n    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplh1m1tah.rs:71:17\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplh1m1tah.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplh1m1tah.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplh1m1tah.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplh1m1tah.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplh1m1tah.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplh1m1tah.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplh1m1tah.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplh1m1tah.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplh1m1tah.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplh1m1tah.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut vowel_counter = 0;\n    let mut vowel_counter2 = 0;\n    let mut\
    \ vowel_counter3 = 0;\n    let mut vowel_counter4 = 0;\n    let mut vowel_counter5\
    \ = 0;\n    let mut vowel_counter6 = 0;\n    let mut vowel_counter7 = 0;\n   \
    \ let mut vowel_counter8 = 0;\n    let mut vowel_counter9 = 0;\n    let mut vowel_counter10\
    \ = 0;\n    let mut vowel_counter11 = 0;\n    let mut vowel_counter12 = 0;\n \
    \   let mut vowel_counter13 = 0;\n    let mut vowel_counter14 = 0;\n    let mut\
    \ vowel_counter15 = 0;\n    let mut vowel_counter16 = 0;\n    let mut vowel_counter17\
    \ = 0;\n    let mut vowel_counter18 = 0;\n    let mut vowel_counter19 = 0;\n \
    \   let mut vowel_counter20 = 0;\n    let mut vowel_counter21 = 0;\n    let mut\
    \ vowel_counter22 = 0;\n    let mut vowel_counter23 = 0;\n    let mut vowel_counter24\
    \ = 0;\n    let mut vowel_counter25 = 0;\n    let mut vowel_counter26 = 0;\n \
    \   let mut vowel_counter27 = 0;\n    let mut vowel_counter28 = 0;\n    let mut\
    \ vowel_counter29 = 0;\n    let mut vowel_counter30 = 0;\n    let mut vowel_counter31\
    \ = 0;\n    let mut vowel_counter32 = 0;\n    let mut vowel_counter33 = 0;\n \
    \   let mut vowel_counter34 = 0;\n    let mut vowel_counter35 = 0;\n    let mut\
    \ vowel_counter36 = 0;\n    let mut vowel_counter37 = 0;\n    let mut vowel_counter38\
    \ = 0;\n    let mut vowel_counter39 = 0;\n    let mut vowel_counter40 = 0;\n \
    \   let mut vowel_counter41 = 0;\n    let mut vowel_counter42 = 0;\n    let mut\
    \ vowel_counter43 = 0;\n    let mut vowel_counter44 = 0;\n    let mut vowel_counter45\
    \ = 0;\n    let mut vowel_counter46 = 0;\n    let mut vowel_counter47 = 0;\n \
    \   let mut vowel_counter48 = 0;\n    let mut vowel_counter49 = 0;\n    let mut\
    \ vowel_counter50 = 0;\n    let mut vowel_counter51 = 0;\n    let mut vowel_counter52\
    \ = 0;\n    let mut vowel_counter53 = 0;\n    let mut vowel_counter54 = 0;\n \
    \   let mut \n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpjam95kwy.rs:76:1\n\
    \   |\n76 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpjam95kwy.rs:80:17\n   |\n80 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpjam95kwy.rs:80:25\n \
    \  |\n80 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjam95kwy.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjam95kwy.rs:81:25\n   |\n81 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjam95kwy.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjam95kwy.rs:82:25\n   |\n82 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjam95kwy.rs:83:17\n  \
    \ |\n83 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjam95kwy.rs:83:25\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjam95kwy.rs:84:17\n   |\n84 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjam95kwy.rs:84:25\n\
    \   |\n84 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjam95kwy.rs:85:17\n   |\n85 |     "
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mu\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp45_p333d.rs:61:11\n   |\n\
    61 |     let mu\n   |           ^ help: add `;` here\n62 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp45_p333d.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp45_p333d.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut i = s.find(' ').unwrap();\n        let mut j = i;\n        let mut k = i;\n\
    \        while j < s.len() && s.chars().all(|c| c != ' ') {\n            j = s.find('\
    \ ', j + 1).unwrap();\n        }\n        let mut i = j;\n        while i < s.len()\
    \ && s.chars().all(|c| c != ' ') {\n            i += 1;\n        }\n        let\
    \ mut j = i;\n        while j < s.len() && s.chars().all(|c| c != ' ') {\n   \
    \         j = s.find(' ', j + 1).unwrap();\n        }\n        let mut i = j;\n\
    \        while i < s.len() && s.chars().all(|c| c != ' ') {\n            i +=\
    \ 1;\n        }\n        if i == s.len() {\n            result.push(s.clone());\n\
    \        }\n        while i < s.len() && s.chars().all(|c| c != ' ') {\n     \
    \       i += 1;\n        }\n        s = &s[i..];\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg9h0v8nj.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg9h0v8nj.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg9h0v8nj.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg9h0v8nj.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg9h0v8nj.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg9h0v8nj.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg9h0v8nj.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg9h0v8nj.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg9h0v8nj.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg9h0v8nj.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg9h0v8nj.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n\
    \        }\n        if j == i {\n            break;\n        }\n        let mut\
    \ word = String::from(&s[i .. j]);\n        let mut count = 0;\n        while\
    \ j < s.len() && s[j] == ' ' {\n            j += 1\n        }\n        if j ==\
    \ i {\n            break;\n        }\n        if count < n {\n            count\
    \ += 1;\n            word = String::from(&s[i .. j]);\n        } else {\n    \
    \        words.push(word);\n            i += j - i;\n            count = 0;\n\
    \            word = String::from(&s[i .. j]);\n        }\n    }\n    words\n}\n\
    \nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6m8qis2u.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6m8qis2u.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6m8qis2u.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6m8qis2u.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6m8qis2u.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6m8qis2u.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6m8qis2u.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6m8qis2u.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6m8qis2u.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6m8qis2u.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6m8qis2u.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n   \
    \     }\n        if j - i == n {\n            words.push(s.split_whitespace()[i]);\n\
    \            i += n;\n        }\n        i += j;\n    }\n    words\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8l26xdur.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8l26xdur.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8l26xdur.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8l26xdur.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8l26xdur.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8l26xdur.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8l26xdur.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8l26xdur.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8l26xdur.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8l26xdur.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8l26xdur.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == s[i] {\n            j += 1\n\
    \        }\n        if j - i == n {\n            list.push(s.subslice(i, j));\n\
    \            i += j - i;\n        }\n    }\n    list\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8qhwltcv.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8qhwltcv.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8qhwltcv.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8qhwltcv.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8qhwltcv.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8qhwltcv.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8qhwltcv.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8qhwltcv.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8qhwltcv.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8qhwltcv.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8qhwltcv.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut vowels_count = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index2 = vec![];\n    let mut vowels_count_index3 =\
    \ vec![];\n    let mut vowels_count_index4 = vec![];\n    let mut vowels_count_index5\
    \ = vec![];\n    let mut vowels_count_index6 = vec![];\n    let mut vowels_count_index7\
    \ = vec![];\n    let mut vowels_count_index8 = vec![];\n    let mut vowels_count_index9\
    \ = vec![];\n    let mut vowels_count_index10 = vec![];\n    let mut vowels_count_index11\
    \ = vec![];\n    let mut vowels_count_index12 = vec![];\n    let mut vowels_count_index13\
    \ = vec![];\n    let mut vowels_count_index14 = vec![];\n    let mut vowels_count_index15\
    \ = vec![];\n    let mut vowels_count_index16 = vec![];\n    let mut vowels_count_index17\
    \ = vec![];\n    let mut vowels_count_index18 = vec![];\n    let mut vowels_count_index19\
    \ = vec![];\n    let mut vowels_count_index20 = vec![];\n    let mut vowels_count_index21\
    \ = vec![];\n    let mut vowels_count_index22 = vec![];\n    let mut vowels_count_index23\
    \ = vec![];\n    let mut vowels_count_index24 = vec![];\n    let mut vowels_count_index25\
    \ = vec![];\n    let mut vowels_count_index26 = vec![];\n    let mut vowels_count_index27\
    \ = vec![];\n    let mut vowels_count_index28 = vec![];\n    let mut vowels_count_index29\
    \ = vec![];\n    let mut vowels_count_index30 = vec![];\n    let mut vowels_count_index31\
    \ = vec![];\n    let mut vowels_count_index32 = vec![];\n    let mut vowels_count_index33\
    \ = vec![];\n    let mut vowels_count_index34 = vec![];\n    let mut vowels_count_index35\
    \ = vec![];\n    let mut vowels_count_index36 = vec![];\n    let mut vowels_count_index37\
    \ = vec![];\n    let mut vowels_count_\n}\n\nfn main() {\n    let candidate =\
    \ select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpe0u60s58.rs:59:26\n   |\n\
    59 |     let mut vowels_count_\n   |                          ^ help: add `;`\
    \ here\n60 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpe0u60s58.rs:64:17\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpe0u60s58.rs:64:25\n \
    \  |\n64 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpe0u60s58.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpe0u60s58.rs:65:25\n   |\n65 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpe0u60s58.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpe0u60s58.rs:66:25\n   |\n66 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpe0u60s58.rs:67:17\n  \
    \ |\n67 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe0u60s58.rs:67:25\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe0u60s58.rs:68:17\n   |\n68 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpe0u60s58.rs:68:25\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find "
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mu\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp45_p333d.rs:61:11\n   |\n\
    61 |     let mu\n   |           ^ help: add `;` here\n62 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp45_p333d.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp45_p333d.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = s;\n    let mut n = n;\n    while n != 0 {\n\
    \        let mut i = 0;\n        while i < s.len() {\n            if s.chars().any(|c|\
    \ c != ' ') {\n                if s.chars().any(|c| c == c.to_ascii_lowercase())\
    \ {\n                    result.push(s.to_string());\n                    break;\n\
    \                }\n            }\n            i += 1;\n        }\n        n -=\
    \ 1;\n        s = s.to_string();\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0e9cegyo.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0e9cegyo.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0e9cegyo.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0e9cegyo.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0e9cegyo.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0e9cegyo.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0e9cegyo.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0e9cegyo.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0e9cegyo.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0e9cegyo.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0e9cegyo.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    select_words_helper(s,\
    \ n, 0)\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `select_words_helper` in this scope\n\
    \  --> /tmp/tmprn8uqpnb.rs:18:5\n   |\n18 |     select_words_helper(s, n, 0)\n\
    \   |     ^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprn8uqpnb.rs:23:17\n   |\n23 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprn8uqpnb.rs:23:25\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprn8uqpnb.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprn8uqpnb.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprn8uqpnb.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprn8uqpnb.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprn8uqpnb.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprn8uqpnb.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprn8uqpnb.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprn8uqpnb.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E04"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mu\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp45_p333d.rs:61:11\n   |\n\
    61 |     let mu\n   |           ^ help: add `;` here\n62 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp45_p333d.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp45_p333d.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n   \
    \     }\n        if j == i {\n            break;\n        }\n        let mut word\
    \ = String::from(&s[i .. j]);\n        let mut count = 0;\n        while j < s.len()\
    \ && s[j] == word[0] {\n            count += 1;\n            j += 1\n        }\n\
    \        if count == n {\n            words.push(word);\n            i += j -\
    \ i;\n        }\n    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6ks0077l.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6ks0077l.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6ks0077l.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6ks0077l.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6ks0077l.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6ks0077l.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6ks0077l.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6ks0077l.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6ks0077l.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6ks0077l.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6ks0077l.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    \n}\n\n\
    fn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprq35_rx_.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut index = 0;\n    while index < s.len() {\n \
    \       let mut word = String::new();\n        let mut found = false;\n      \
    \  while !found && index < s.len() {\n            let c = s[index];\n        \
    \    if c == ' ' {\n                found = true;\n            } else {\n    \
    \            if c.is_ascii_letter() {\n                    if c.is_consonant()\
    \ {\n                        if n == 0 {\n                            found =\
    \ true;\n                        } else {\n                            word.push(c);\n\
    \                            n -= 1;\n                        }\n            \
    \        } else {\n                        word.push(c);\n                   \
    \ }\n                } else {\n                    found = true;\n           \
    \     }\n            }\n            index += 1\n        }\n        if !found {\n\
    \            words.push(word);\n        }\n    }\n    words\n}\n\nfn main() {\n\
    \    let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2nu1u3hv.rs:54:17\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2nu1u3hv.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2nu1u3hv.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2nu1u3hv.rs:55:25\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2nu1u3hv.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2nu1u3hv.rs:56:25\n   |\n56 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2nu1u3hv.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2nu1u3hv.rs:57:25\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2nu1u3hv.rs:58:17\n  \
    \ |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2nu1u3hv.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2nu1u3hv.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] == ' ' {\n            j = j + 1;\n\
    \        }\n        if j == s.len() {\n            break;\n        }\n       \
    \ let mut word = String::from(&s[i .. j]);\n        let mut count = 0;\n     \
    \   while j < s.len() && s[j] == s[word] {\n            count = count + 1;\n \
    \           j = j + 1;\n        }\n        if count == n {\n            words.push(word);\n\
    \        }\n        i = j;\n    }\n    words\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpom83vvnm.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpom83vvnm.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpom83vvnm.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpom83vvnm.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpom83vvnm.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpom83vvnm.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpom83vvnm.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpom83vvnm.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpom83vvnm.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpom83vvnm.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpom83vvnm.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index_max = Vec::new();\n    let mut\
    \ vowels_count_index_min = Vec::new();\n    let mut vowels_count_index_max_index\
    \ = Vec::new();\n    let mut vowels_count_index_min_index = Vec::new();\n    let\
    \ mut vowels_count_index_max_index_max = Vec::new();\n    let mut vowels_count_index_max_index_min\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max = Vec::new();\n\
    \    let mut vowels_count_index_min_index_max_index = Vec::new();\n    let mut\
    \ vowels_count_index_min_index_max_index_max = Vec::new();\n    let mut vowels_count_index_min_index_max_index_min\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_max\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_min\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_max_index\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_max_index_max\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_max_index_min\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_max_index_max_index\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_max_index_max_index_max\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_max_index_max_index_min\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_max_index_max_index_max_index\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_max_index_max_index_max_index_max\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_max_index_max_index_max_index_min\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_max_index_max_index_max_index_max_index\
    \ = Vec::new();\n    let mut vowels_count_index_min_index_max_index_max_index_max_index_max_index_max_index_max_index_max\
    \ = Vec\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmple6no21e.rs:46:111\n   |\n\
    46 |     let mut vowels_count_index_min_index_max_index_max_index_max_index_max_index_max_index_max_index_max\
    \ = Vec\n   |                                                                \
    \                                               ^ help: add `;` here\n47 | }\n\
    \   | - unexpected token\n\nerror[E0423]: expected value, found struct `Vec`\n\
    \   --> /tmp/tmple6no21e.rs:46:108\n    |\n46  |       let mut vowels_count_index_min_index_max_index_max_index_max_index_max_index_max_index_max_index_max\
    \ = Vec\n    |                                                               \
    \                                               ^^^ help: use struct literal syntax\
    \ instead: `Vec { buf: val, len: val }`\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmple6no21e.rs:51:17\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmple6no21e.rs:51:25\n \
    \  |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmple6no21e.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmple6no21e.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmple6no21e.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmple6no21e.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmple6no21e.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: "
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        if\
    \ s.chars().all(|c| c.is_consonant() && c != ' ') {\n            list.push(s.subslice(i,\
    \ i + n));\n            i += n;\n        }\n    }\n    list\n}\n\nfn main() {\n\
    \    let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpoofhdkk7.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpoofhdkk7.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpoofhdkk7.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpoofhdkk7.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpoofhdkk7.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpoofhdkk7.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpoofhdkk7.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpoofhdkk7.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpoofhdkk7.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpoofhdkk7.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpoofhdkk7.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c|\
    \ c.is_consonant() && c != ' ') {\n            i += 1;\n        } else {\n   \
    \         words.push(s.subslice(i, i + n));\n            i += n;\n        }\n\
    \    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprmtf1f3m.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprmtf1f3m.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprmtf1f3m.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprmtf1f3m.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprmtf1f3m.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprmtf1f3m.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprmtf1f3m.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprmtf1f3m.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprmtf1f3m.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprmtf1f3m.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprmtf1f3m.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut spaces = Vec::new();\n    let mut non_spaces = Vec::new();\n\
    \    let mut non_letters = Vec::new();\n    let mut non_letters_spaces = Vec::new();\n\
    \    let mut non_letters_spaces_vowels = Vec::new();\n    let mut non_letters_spaces_vowels_consonants\
    \ = Vec::new();\n    let mut non_letters_spaces_vowels_consonants_spaces = Vec::new();\n\
    \    let mut non_letters_spaces_vowels_consonants_spaces_vowels = Vec::new();\n\
    \    let mut non_letters_spaces_vowels_consonants_spaces_vowels_consonants = Vec::new();\n\
    \    let mut non_letters_spaces_vowels_consonants_spaces_vowels_consonants_spaces\
    \ = Vec::new();\n    let mut non_letters_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowels\
    \ = Vec::new();\n    let mut non_letters_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowels_consonants\
    \ = Vec::new();\n    let mut non_letters_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowels_consonants_spaces\
    \ = Vec::new();\n    let mut non_letters_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowels\
    \ = Vec::new();\n    let mut non_letters_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowels_consonants\
    \ = Vec::new();\n    let mut non_letters_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowels_consonants_spaces\
    \ = Vec::new();\n    let mut non_letters_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowels\
    \ = Vec::new();\n    let mut non_letters_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowel\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmph48yy2vi.rs:38:87\n   |\n\
    38 |     let mut non_letters_spaces_vowels_consonants_spaces_vowels_consonants_spaces_vowel\n\
    \   |                                                                        \
    \               ^ help: add `;` here\n39 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph48yy2vi.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph48yy2vi.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph48yy2vi.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmph48yy2vi.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph48yy2vi.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph48yy2vi.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmph48yy2vi.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmph48yy2vi.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph48yy2vi.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph48yy2vi.rs:47:25\n   |\n47"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut vowels = vec![\"a\", \"e\", \"i\", \"o\", \"u\"\
    ];\n    let mut consonants = vec![\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"];\n    let mut vowels_count = vowels.len();\n    let\
    \ mut consonants_count = consonants.len();\n    let mut i = 0;\n    while i <\
    \ s.len() {\n        if vowels.contains(&s[i..i + 1]) {\n            vowels_count\
    \ -= 1;\n        }\n        if consonants.contains(&s[i..i + 1]) {\n         \
    \   consonants_count -= 1;\n        }\n        i += 1;\n    }\n    if vowels_count\
    \ == n && consonants_count == n {\n        result.push(s);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmth_0uw9.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmth_0uw9.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmth_0uw9.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmth_0uw9.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmth_0uw9.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmth_0uw9.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmth_0uw9.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmth_0uw9.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmth_0uw9.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmth_0uw9.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmth_0uw9.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    while s.len() >\
    \ 0 {\n        let mut word = String::from(\"\");\n        let mut pos = 0;\n\
    \        while pos < s.len() {\n            let c = s[pos];\n            if c\
    \ != ' ' && c != '\\t' && c != '\\n' && c != '\\r' && c != '\\0' {\n         \
    \       if c == c.to_ascii_lowercase()[n - 1] {\n                    word.push_str(&s[pos..pos]);\n\
    \                    break;\n                }\n            }\n            pos\
    \ += 1;\n        }\n        result.push(word);\n        s = &s[pos..];\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzd6q3blu.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzd6q3blu.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzd6q3blu.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzd6q3blu.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzd6q3blu.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzd6q3blu.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzd6q3blu.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzd6q3blu.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzd6q3blu.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzd6q3blu.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzd6q3blu.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut s = String::from(s);\n    let mut n = n as usize;\n\
    \    while n != 0 {\n        if s.chars().any(|c| c.is_consonant()) {\n      \
    \      words.push(s);\n        }\n        n -= 1;\n        s = s.chars().filter(|c|\
    \ !c.is_consonant()).collect();\n    }\n    words\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptoiucf0h.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptoiucf0h.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptoiucf0h.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptoiucf0h.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptoiucf0h.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptoiucf0h.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptoiucf0h.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptoiucf0h.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptoiucf0h.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptoiucf0h.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptoiucf0h.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = 0;\n        while j < s.len() {\n            if s[i] == s[j] {\n   \
    \             j += 1;\n            } else {\n                break;\n        \
    \    }\n        }\n        if j == s.len() {\n            list.push(s.subslice(i,\
    \ i + n));\n            i += n;\n        }\n    }\n    list\n}\n\nfn main() {\n\
    \    let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvlbyktva.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvlbyktva.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvlbyktva.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvlbyktva.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvlbyktva.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvlbyktva.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvlbyktva.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvlbyktva.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvlbyktva.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvlbyktva.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvlbyktva.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c|\
    \ c != ' ' && c != '\\n' && c != '\\t' && c != '\\r' && c != '\\b') {\n      \
    \      if s.chars()[i] == ' ' || s.chars()[i] == '\\n' || s.chars()[i] == '\\\
    t' || s.chars()[i] == '\\r' || s.chars()[i] == '\\b' {\n                i += 1;\n\
    \            } else {\n                words.push(s.to_string());\n          \
    \      i += 1;\n            }\n        } else {\n            i += 1;\n       \
    \ }\n    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unknown character escape: `b`\n  --> /tmp/tmp9njhabn5.rs:21:88\n\
    \   |\n21 |         if s.chars().any(|c| c != ' ' && c != '\\n' && c != '\\t'\
    \ && c != '\\r' && c != '\\b') {\n   |                                       \
    \                                                 ^ unknown character escape\n\
    \   |\n   = help: for more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\
    \nerror: unknown character escape: `b`\n  --> /tmp/tmp9njhabn5.rs:22:129\n   |\n\
    22 |             if s.chars()[i] == ' ' || s.chars()[i] == '\\n' || s.chars()[i]\
    \ == '\\t' || s.chars()[i] == '\\r' || s.chars()[i] == '\\b' {\n   |         \
    \                                                                            \
    \                                            ^ unknown character escape\n   |\n\
    \   = help: for more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9njhabn5.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9njhabn5.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9njhabn5.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9njhabn5.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9njhabn5.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9njhabn5.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mu\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp45_p333d.rs:61:11\n   |\n\
    61 |     let mu\n   |           ^ help: add `;` here\n62 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp45_p333d.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp45_p333d.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut spaces = vec![];\n    let mut punctuation = vec![];\n    let mut\
    \ letters = vec![];\n    let mut numbers = vec![];\n    let mut spaces_count =\
    \ s.chars().filter(|c| c == ' ').count();\n    let mut punctuation_count = s.chars().filter(|c|\
    \ c == '.' || c == '!' || c == '?' || c == ';' || c == '-' || c == '_').count();\n\
    \    let mut letters_count = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >=\
    \ 'A' && c <= 'Z').count();\n    let mut numbers_count = s.chars().filter(|c|\
    \ c >= '0' && c <= '9').count();\n    let mut consonants_count = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c == '_').count();\n    let\
    \ mut vowels_count = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' &&\
    \ c <= 'Z' || c == '_' || c == 'e' || c == 'i' || c == 'o' || c == 'u').count();\n\
    \    let mut spaces_count_2 = s.chars().filter(|c| c == ' ').count();\n    let\
    \ mut punctuation_count_2 = s.chars().filter(|c| c == '.' || c == '!' || c ==\
    \ '?' || c == ';' || c == '-' || c == '_').count();\n    let mut letters_count_2\
    \ = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count();\n\
    \    let mut numbers_count_2 = s.chars().filter(|c| c >= '0' && c <= '9').count();\n\
    \    let mut consonants_count_2 = s.chars().filter(|c| c >= 'a' && c <= 'z' ||\
    \ c >= 'A' && c <= 'Z' || c == '_').count();\n    let mut vowels_count_2 = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c == '_' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u').count();\n    let mut space\n}\n\nfn main() {\n\
    \    let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpz3zms53b.rs:37:18\n   |\n\
    37 |     let mut space\n   |                  ^ help: add `;` here\n38 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpz3zms53b.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpz3zms53b.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpz3zms53b.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpz3zms53b.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpz3zms53b.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpz3zms53b.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpz3zms53b.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpz3zms53b.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpz3zms53b.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpz3zms53b.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut spaces = vec![];\n    let mut letters = vec![];\n    let mut spaces_count\
    \ = s.chars().filter(|c| c == ' ').count();\n    let mut letters_count = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z').count();\n    let mut vowels_count = s.chars().filter(|c|\
    \ c >= 'A' && c <= 'Z').count();\n    let mut consonants_count = s.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count();\n    let mut vowels_count_2\
    \ = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c ==\
    \ '_').count();\n    let mut consonants_count_2 = s.chars().filter(|c| c >= 'a'\
    \ && c <= 'z' || c >= 'A' && c <= 'Z' || c == '_' || c == '-').count();\n    let\
    \ mut vowels_count_3 = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' &&\
    \ c <= 'Z' || c == '_' || c == '-' || c == '.').count();\n    let mut consonants_count_3\
    \ = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c ==\
    \ '_' || c == '-' || c == '.' || c == '-').count();\n    let mut vowels_count_4\
    \ = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c ==\
    \ '_' || c == '-' || c == '.' || c == '-' || c == '.').count();\n    let mut consonants_count_4\
    \ = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c ==\
    \ '_' || c == '-' || c == '.' || c == '-' || c == '.' || c == '-').count();\n\
    \    let mut vowels_count_5 = s.chars().filter(|c| c >= 'a' && c <= 'z' || c >=\
    \ 'A' && c <= 'Z' || c == '_' || c == '-' || c == '.\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0762]: unterminated character literal\n  --> /tmp/tmpl9dlez7_.rs:33:128\n\
    \   |\n33 |     let mut vowels_count_5 = s.chars().filter(|c| c >= 'a' && c <=\
    \ 'z' || c >= 'A' && c <= 'Z' || c == '_' || c == '-' || c == '.\n   |       \
    \                                                                            \
    \                                             ^^\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0762`.\n"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut count = 0;\n    let mut index = 0;\n    while\
    \ index < s.len() {\n        if s[index] == ' ' {\n            count += 1;\n \
    \           if count == n {\n                words.push(s.split_whitespace().nth(index));\n\
    \                count = 0;\n            }\n        } else {\n            count\
    \ += 1;\n        }\n        index += 1;\n    }\n    words\n}\n\nfn main() {\n\
    \    let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpze1aix22.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpze1aix22.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpze1aix22.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpze1aix22.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpze1aix22.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpze1aix22.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpze1aix22.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpze1aix22.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpze1aix22.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpze1aix22.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpze1aix22.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index2 = Vec::new();\n    let mut vowels_count_index3\
    \ = Vec::new();\n    let mut vowels_count_index4 = Vec::new();\n    let mut vowels_count_index5\
    \ = Vec::new();\n    let mut vowels_count_index6 = Vec::new();\n    let mut vowels_count_index7\
    \ = Vec::new();\n    let mut vowels_count_index8 = Vec::new();\n    let mut vowels_count_index9\
    \ = Vec::new();\n    let mut vowels_count_index10 = Vec::new();\n    let mut vowels_count_index11\
    \ = Vec::new();\n    let mut vowels_count_index12 = Vec::new();\n    let mut vowels_count_index13\
    \ = Vec::new();\n    let mut vowels_count_index14 = Vec::new();\n    let mut vowels_count_index15\
    \ = Vec::new();\n    let mut vowels_count_index16 = Vec::new();\n    let mut vowels_count_index17\
    \ = Vec::new();\n    let mut vowels_count_index18 = Vec::new();\n    let mut vowels_count_index19\
    \ = Vec::new();\n    let mut vowels_count_index20 = Vec::new();\n    let mut vowels_count_index21\
    \ = Vec::new();\n    let mut vowels_count_index22 = Vec::new();\n    let mut vowels_count_index23\
    \ = Vec::new();\n    let mut vowels_count_index24 = Vec::new();\n    let mut vowels_count_index25\
    \ = Vec::new();\n    let mut vowels_count_index26 = Vec::new();\n    let mut vowels_count_index27\
    \ = Vec::new();\n    let mut vowels_count_index28 = Vec::new();\n    let mut vowels_count_index29\
    \ = Vec::new();\n    let mut vowels_count_index30 = Vec::new();\n    let mut vowels_count_index31\
    \ = Vec::new();\n    let mut vowels_count_index32 = Vec::new();\n    let mut vowels_count_index33\
    \ = Vec::new();\n    let mut vowels_count_index34 = Vec::new();\n    let mut vowels_count_index\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpltb7zgo3.rs:56:31\n   |\n\
    56 |     let mut vowels_count_index\n   |                               ^ help:\
    \ add `;` here\n57 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpltb7zgo3.rs:61:17\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpltb7zgo3.rs:61:25\n \
    \  |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpltb7zgo3.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpltb7zgo3.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpltb7zgo3.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpltb7zgo3.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpltb7zgo3.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpltb7zgo3.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpltb7zgo3.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpltb7zgo3.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: ca"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = s;\n    while s.len() > 0 {\n        let mut\
    \ i = 0;\n        while i < s.len() && s[i] == ' ' {\n            i += 1;\n  \
    \      }\n        if i == s.len() {\n            break;\n        }\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] != ' ' {\n            j += 1;\n\
    \        }\n        if j == s.len() {\n            break;\n        }\n       \
    \ if j > i {\n            result.push(s.split_whitespace()[j..i].collect::<String>());\n\
    \        }\n        s = &s[j..];\n    }\n    if result.is_empty() {\n        result\n\
    \    } else {\n        result.iter().cloned().collect()\n    }\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvuedk60e.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvuedk60e.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvuedk60e.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvuedk60e.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvuedk60e.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvuedk60e.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvuedk60e.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvuedk60e.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvuedk60e.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvuedk60e.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvuedk60e.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut index = 0;\n    while index < s.len() {\n  \
    \      let mut count = 0;\n        let mut char = s.chars().nth(index).unwrap();\n\
    \        while count < n && char == ' ' {\n            char = s.chars().nth(index\
    \ + 1).unwrap();\n            count += 1;\n        }\n        if count == n {\n\
    \            list.push(s.split_whitespace().nth(index).unwrap());\n          \
    \  index += 1;\n        }\n    }\n    list\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqnq04mv1.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqnq04mv1.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqnq04mv1.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqnq04mv1.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqnq04mv1.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqnq04mv1.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqnq04mv1.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqnq04mv1.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqnq04mv1.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqnq04mv1.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqnq04mv1.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut s = String::from(s);\n    let mut i = 0;\n\
    \    while i < s.len() {\n        if s.chars().any(|c| c.is_uppercase() && c !=\
    \ ' ') {\n            i += 1;\n            continue;\n        }\n        let mut\
    \ j = i;\n        while j < s.len() && s.chars().any(|c| c.is_lowercase() && c\
    \ != ' ') {\n            i += 1;\n            j += 1\n        }\n        if j\
    \ == i {\n            break;\n        }\n        let mut word = s.split_whitespace().nth(i).unwrap();\n\
    \        if word.chars().count(|c| c.is_lowercase()) == n {\n            words.push(word);\n\
    \        }\n        i += 1;\n    }\n    words\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpkyrldnk5.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkyrldnk5.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkyrldnk5.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkyrldnk5.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkyrldnk5.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkyrldnk5.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkyrldnk5.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkyrldnk5.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkyrldnk5.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkyrldnk5.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkyrldnk5.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut s = String::from(s);\n    while s.len() > 0\
    \ {\n        let mut word = String::new();\n        let mut consonants = String::new();\n\
    \        let mut vowels = String::new();\n        let mut vowels_count = String::new();\n\
    \        let mut vowels_count_pos = String::new();\n        let mut vowels_count_neg\
    \ = String::new();\n        let mut vowels_count_pos_neg = String::new();\n  \
    \      let mut vowels_count_neg_pos = String::new();\n        let mut vowels_count_pos_pos_neg\
    \ = String::new();\n        let mut vowels_count_neg_neg_pos = String::new();\n\
    \        let mut vowels_count_pos_neg_neg = String::new();\n        let mut vowels_count_neg_pos_neg\
    \ = String::new();\n        let mut vowels_count_pos_neg_neg_pos = String::new();\n\
    \        let mut vowels_count_neg_pos_neg_pos = String::new();\n        let mut\
    \ vowels_count_pos_neg_neg_neg = String::new();\n        let mut vowels_count_neg_pos_neg_neg\
    \ = String::new();\n        let mut vowels_count_pos_neg_neg_neg_pos = String::new();\n\
    \        let mut vowels_count_neg_pos_neg_neg_pos = String::new();\n        let\
    \ mut vowels_count_pos_neg_neg_neg_neg = String::new();\n        let mut vowels_count_neg_pos_neg_neg_neg\
    \ = String::new();\n        let mut vowels_count_pos_neg_neg_neg_neg_pos = String::new();\n\
    \        let mut vowels_count_neg_pos_neg_neg_neg_pos = String::new();\n     \
    \   let mut vowels_count_pos_neg_neg_neg_neg_neg = String::new();\n        let\
    \ mut vowels_count_neg_pos_neg_neg_neg_neg = String::new();\n        let mut vowels_count_pos_neg_neg_neg_neg_neg_pos\
    \ = String::new();\n        let mut vowels_count_neg_pos_neg_neg_neg_neg_pos =\
    \ String::new();\n        let mut vowels_count_pos_neg_neg_neg_neg_neg = String::new();\n\
    \        let mut vowels_count_neg_pos_neg_neg_neg_neg = String::new();\n     \
    \   let mut vowels_count_pos_neg_neg_neg_neg_pos = String::new();\n        let\
    \ mut vowels_count_neg_pos_neg_neg_neg_pos = String::new();\n        let mut vowels_count_pos_neg_neg_neg_neg_neg\
    \ = String::new();\n        let mut vowels_count_neg_pos_neg_neg_neg_neg = String::new();\n\
    \        let mut vowels_count_pos_neg_neg_neg_\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp_3xjw52y.rs:65:3\n\
    \   |\n17 | fn select_words(s: String, n: isize) -> Vec<String> {\n   |      \
    \                                               - unclosed delimiter\n...\n20\
    \ |     while s.len() > 0 {\n   |                       - this delimiter might\
    \ not be properly closed...\n...\n54 | }\n   | - ...as it matches this but it\
    \ has different indentation\n...\n65 | }\n   |   ^\n\nerror: expected `;`, found\
    \ `}`\n  --> /tmp/tmp_3xjw52y.rs:53:46\n   |\n53 |         let mut vowels_count_pos_neg_neg_neg_\n\
    \   |                                              ^ help: add `;` here\n54 |\
    \ }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp_3xjw52y.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_3xjw52y.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_3xjw52y.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_3xjw52y.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_3xjw52y.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_3xjw52y.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_3xjw52y.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_3xjw52y.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, "
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    select_words_helper(s,\
    \ n, 0)\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `select_words_helper` in this scope\n\
    \  --> /tmp/tmprn8uqpnb.rs:18:5\n   |\n18 |     select_words_helper(s, n, 0)\n\
    \   |     ^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprn8uqpnb.rs:23:17\n   |\n23 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprn8uqpnb.rs:23:25\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprn8uqpnb.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprn8uqpnb.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprn8uqpnb.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprn8uqpnb.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprn8uqpnb.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprn8uqpnb.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprn8uqpnb.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprn8uqpnb.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E04"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == s[i] {\n            j += 1\n\
    \        }\n        if j - i == n {\n            result.push(s.to_string());\n\
    \            i += n;\n        }\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbetic_zz.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbetic_zz.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbetic_zz.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbetic_zz.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbetic_zz.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbetic_zz.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbetic_zz.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbetic_zz.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbetic_zz.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbetic_zz.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbetic_zz.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s.chars().any(|c| c == s.chars().nth(j))\
    \ {\n            j += 1\n        }\n        if j == i {\n            list.push(s.to_string());\n\
    \            i += 1;\n        } else {\n            i += j - i;\n        }\n \
    \   }\n    if list.len() == 0 {\n        Vec::new()\n    } else {\n        list.iter().cloned().collect()\n\
    \    }\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6vzcrplg.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6vzcrplg.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6vzcrplg.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6vzcrplg.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6vzcrplg.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6vzcrplg.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6vzcrplg.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6vzcrplg.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6vzcrplg.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6vzcrplg.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6vzcrplg.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    let mut n = n;\n    while n >\
    \ 0 {\n        let mut i = 1;\n        while i <= s.len() {\n            if s.chars().any(|c|\
    \ c.is_consonant() == true) {\n                result.push(s.subslice(i, i + 1));\n\
    \                i += 1;\n            } else {\n                i += 1;\n    \
    \        }\n        }\n        n -= 1;\n        s = s.to_owned();\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx_uicopl.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx_uicopl.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx_uicopl.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx_uicopl.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx_uicopl.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx_uicopl.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx_uicopl.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx_uicopl.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx_uicopl.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx_uicopl.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx_uicopl.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowel_consonants = Vec::new();\n    let mut vowel_consonant_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels = Vec::new();\n   \
    \ let mut vowel_consonant_vowels_consonants = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_vowels_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_vowels_consonants_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_consonants_vowels_consonants_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_consonants_vowels_consonants_consonants_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_consonants_\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp_yg1tyin.rs:35:109\n   |\n\
    35 |     let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_consonants_\n\
    \   |                                                                        \
    \                                     ^ help: add `;` here\n36 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_yg1tyin.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_yg1tyin.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_yg1tyin.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_yg1tyin.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_yg1tyin.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_yg1tyin.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_yg1tyin.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_yg1tyin.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_yg1tyin.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this "
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] == ' ' {\n            j = j + 1;\n\
    \        }\n        if j == s.len() {\n            break;\n        }\n       \
    \ let mut word = String::from(&s[i .. j]);\n        if word.chars().count(|c|\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') == n {\n         \
    \   words.push(word);\n            i = j;\n        }\n    }\n    words\n}\n\n\
    fn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3we4txvi.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3we4txvi.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3we4txvi.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3we4txvi.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3we4txvi.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3we4txvi.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3we4txvi.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3we4txvi.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3we4txvi.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3we4txvi.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3we4txvi.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j].is_ascii_letter() {\n        \
    \    j += 1\n        }\n        if j == i {\n            list.push(s.to_string());\n\
    \            i += 1;\n        } else {\n            let mut k = j;\n         \
    \   while k < s.len() && s[k].is_ascii_letter() {\n                k += 1\n  \
    \          }\n            if k == j {\n                list.push(s.to_string());\n\
    \                i += 1;\n            } else {\n                let mut count\
    \ = 0;\n                while k < s.len() && s[k].is_ascii_letter() {\n      \
    \              count += 1;\n                    k += 1\n                }\n  \
    \              if count == n {\n                    list.push(s.to_string());\n\
    \                    i += 1;\n                } else {\n                    i\
    \ += 1;\n                }\n            }\n        }\n    }\n    list\n}\n\nfn\
    \ main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0jrrppyp.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0jrrppyp.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0jrrppyp.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0jrrppyp.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0jrrppyp.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0jrrppyp.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0jrrppyp.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0jrrppyp.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0jrrppyp.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0jrrppyp.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0jrrppyp.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n   \
    \     }\n        let mut word = String::from(&s[i .. j]);\n        let mut count\
    \ = 0;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n     \
    \   }\n        if count > n {\n            words.push_back(word);\n          \
    \  i += j - i;\n        } else {\n            i += j - i;\n        }\n    }\n\
    \    words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3i2u2obr.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3i2u2obr.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3i2u2obr.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3i2u2obr.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3i2u2obr.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3i2u2obr.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3i2u2obr.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3i2u2obr.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3i2u2obr.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3i2u2obr.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3i2u2obr.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mu\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp45_p333d.rs:61:11\n   |\n\
    61 |     let mu\n   |           ^ help: add `;` here\n62 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp45_p333d.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp45_p333d.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s.chars().any(|c| c == s.chars().nth(j))\
    \ {\n            j += 1\n        }\n        if j - i == n {\n            result.push(s.chars().nth(i).unwrap());\n\
    \            i += n;\n        }\n        else {\n            i += j;\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpm7cjg08w.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm7cjg08w.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm7cjg08w.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpm7cjg08w.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpm7cjg08w.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpm7cjg08w.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpm7cjg08w.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpm7cjg08w.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpm7cjg08w.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm7cjg08w.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm7cjg08w.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j].is_ascii_letter() {\n        \
    \    j = j + 1;\n        }\n        if j - i == n {\n            list.push(s.subslice(i,\
    \ j));\n            i = j;\n        } else {\n            i = j;\n        }\n\
    \    }\n    list\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbwejxri4.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbwejxri4.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbwejxri4.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbwejxri4.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbwejxri4.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbwejxri4.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbwejxri4.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbwejxri4.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbwejxri4.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbwejxri4.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbwejxri4.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    while s.len() >\
    \ 0 {\n        let mut word = String::from(\"\");\n        let mut pos = 0;\n\
    \        while pos < s.len() {\n            if s[pos] == ' ' {\n             \
    \   pos = pos + 1;\n                continue;\n            }\n            if s[pos]\
    \ >= 'a' && s[pos] <= 'z' {\n                word = word.to_owned() + &s[pos];\n\
    \                pos = pos + 1;\n                continue;\n            }\n  \
    \          if s[pos] >= 'A' && s[pos] <= 'Z' {\n                word = word.to_owned()\
    \ + &s[pos];\n                pos = pos + 1;\n                continue;\n    \
    \        }\n            if s[pos] >= '0' && s[pos] <= '9' {\n                word\
    \ = word.to_owned() + &s[pos];\n                pos = pos + 1;\n             \
    \   continue;\n            }\n            pos = pos + 1;\n        }\n        if\
    \ word.len() == n {\n            result.push(word);\n        }\n        s = s.trim_end().to_string();\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmgn9zvao.rs:55:17\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmgn9zvao.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmgn9zvao.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmgn9zvao.rs:56:25\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmgn9zvao.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmgn9zvao.rs:57:25\n   |\n57 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmgn9zvao.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmgn9zvao.rs:58:25\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmgn9zvao.rs:59:17\n  \
    \ |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmgn9zvao.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmgn9zvao.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut vowels_count = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let mut vowels_count_index = vec![];\n    let mut vowels_count_index = vec![];\n\
    \    let \n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpej_4s78a.rs:66:1\n  \
    \ |\n66 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpej_4s78a.rs:70:17\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpej_4s78a.rs:70:25\n \
    \  |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpej_4s78a.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpej_4s78a.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpej_4s78a.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpej_4s78a.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpej_4s78a.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpej_4s78a.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpej_4s78a.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpej_4s78a.rs:74:25\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpej_4s78a.rs:75:17\n   |\n75 |     assert"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mu\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp45_p333d.rs:61:11\n   |\n\
    61 |     let mu\n   |           ^ help: add `;` here\n62 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp45_p333d.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp45_p333d.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n;\n\
    \    while n > 0 {\n        if s.chars().all(|c| c.is_consonant()) {\n       \
    \     result.push(s);\n            n -= 1;\n        }\n        s = s.chars().filter(|c|\
    \ !c.is_consonant()).collect();\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpt_fo8v38.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt_fo8v38.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt_fo8v38.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpt_fo8v38.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt_fo8v38.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpt_fo8v38.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpt_fo8v38.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpt_fo8v38.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpt_fo8v38.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt_fo8v38.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt_fo8v38.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] == s[i] {\n            j = j + 1;\n\
    \        }\n        if j == i {\n            words.push(s.to_string());\n    \
    \        i = i + 1;\n        } else {\n            i = j;\n        }\n    }\n\
    \    words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwqpblr1j.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwqpblr1j.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwqpblr1j.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwqpblr1j.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwqpblr1j.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwqpblr1j.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwqpblr1j.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwqpblr1j.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwqpblr1j.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwqpblr1j.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwqpblr1j.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = String::from(s);\n    let mut n = n as usize;\n\
    \    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c| c !=\
    \ ' ' && c != '\\t' && c != '\\n' && c != '\\r') {\n            if n == 0 {\n\
    \                break;\n            }\n            i += 1;\n            n -=\
    \ 1;\n        } else {\n            result.push(s.subslice(i, i + 1));\n     \
    \       i += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvgvmgr9d.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvgvmgr9d.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvgvmgr9d.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvgvmgr9d.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvgvmgr9d.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvgvmgr9d.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvgvmgr9d.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvgvmgr9d.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvgvmgr9d.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvgvmgr9d.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvgvmgr9d.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut count = 0;\n    for c in s.chars() {\n     \
    \   if c.is_consonant() {\n            count += 1;\n            if count == n\
    \ {\n                list.push(s.to_string());\n                count = 0;\n \
    \           }\n        } else {\n            count = 0;\n        }\n    }\n  \
    \  list\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp57u1pj18.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp57u1pj18.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp57u1pj18.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp57u1pj18.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp57u1pj18.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp57u1pj18.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp57u1pj18.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp57u1pj18.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp57u1pj18.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp57u1pj18.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp57u1pj18.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut vowel_consonant = vec![];\n    let mut vowel_consonant_vowel = vec![];\n\
    \    let mut vowel_consonant_vowel_consonant = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant = vec![];\n\
    \    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel = vec![];\n\
    \    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant =\
    \ vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_con\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp1d8m28d5.rs:36:134\n   |\n\
    36 |     let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_con\n\
    \   |                                                                        \
    \                                                              ^ help: add `;`\
    \ here\n37 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp1d8m28d5.rs:41:17\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp1d8m28d5.rs:41:25\n \
    \  |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1d8m28d5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1d8m28d5.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1d8m28d5.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1d8m28d5.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1d8m28d5.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1d8m28d5.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1d8m28d5.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as\
    \ usize;\n    while n > 0 {\n        let mut i = 0;\n        while i < s.len()\
    \ {\n            if s.chars().any(|c| c.is_uppercase() && c.is_lowercase()) {\n\
    \                i += 1;\n            } else {\n                break;\n     \
    \       }\n        }\n        if i == s.len() {\n            break;\n        }\n\
    \        let mut j = i;\n        while j < s.len() {\n            if s.chars().any(|c|\
    \ c.is_uppercase() && c.is_lowercase()) {\n                j += 1;\n         \
    \   } else {\n                break;\n            }\n        }\n        if j ==\
    \ s.len() {\n            break;\n        }\n        let mut k = j;\n        while\
    \ k < s.len() {\n            if s.chars().any(|c| c.is_uppercase() && c.is_lowercase())\
    \ {\n                k += 1;\n            } else {\n                break;\n \
    \           }\n        }\n        if k == s.len() {\n            break;\n    \
    \    }\n        let mut l = k;\n        while l < s.len() {\n            if s.chars().any(|c|\
    \ c.is_uppercase() && c.is_lowercase()) {\n                l += 1;\n         \
    \   } else {\n                break;\n            }\n        }\n        if l ==\
    \ s.len() {\n            break;\n        }\n        let mut m = l;\n        while\
    \ m < s.len() {\n            if s.chars().any(|c| c.is_uppercase() && c.is_lowercase())\
    \ {\n                m += 1;\n            } else {\n                break;\n \
    \           }\n        }\n        if m == s.len() {\n            break;\n    \
    \    }\n        let mut n = m;\n        while n < s.len() {\n            if s.chars().any(|c|\
    \ c.is_uppercase() && c.is_lowercase()) {\n                n += 1;\n         \
    \   } else {\n                break;\n            }\n        }\n        if n ==\
    \ s.len() {\n            break;\n        }\n        words.push(s.split_whitespace()[l..]);\n\
    \        n -= 1;\n    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpf6x9p53l.rs:96:17\n\
    \   |\n96 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf6x9p53l.rs:96:25\n   |\n96 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf6x9p53l.rs:97:17\n   |\n97 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpf6x9p53l.rs:97:25\n\
    \   |\n97 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf6x9p53l.rs:98:17\n   |\n98 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf6x9p53l.rs:98:25\n   |\n98 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpf6x9p53l.rs:99:17\n   |\n99 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpf6x9p53l.rs:99:25\n   |\n99 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpf6x9p53l.rs:100:17\n\
    \    |\n100 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpf6x9p53l.rs:100:25\n    |\n100 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpf6x9p53l.rs:101:17\n\
    \    |\n101 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: "
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n;\n\
    \    while n != 0 {\n        if s.chars().any(|c| c.is_consonant()) {\n      \
    \      result.push(s);\n            n -= 1;\n        }\n        s = s.chars().filter(|c|\
    \ !c.is_consonant()).collect();\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpuohjfgqy.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuohjfgqy.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuohjfgqy.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuohjfgqy.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuohjfgqy.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuohjfgqy.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuohjfgqy.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuohjfgqy.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuohjfgqy.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuohjfgqy.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuohjfgqy.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    let mut n = n;\n    while n >\
    \ 0 {\n        let mut i = 0;\n        while i < s.len() {\n            if s.chars().any(|c|\
    \ c != ' ' && c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n  \
    \              i += 1;\n            } else {\n                break;\n       \
    \     }\n        }\n        if i == s.len() {\n            result.push(s);\n \
    \           n -= 1;\n        } else {\n            s = s.to_string();\n      \
    \      i += 1;\n            while i < s.len() {\n                if s.chars().any(|c|\
    \ c != ' ' && c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n  \
    \                  i += 1;\n                } else {\n                    break;\n\
    \                }\n            }\n            result.push(s);\n            n\
    \ -= 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmrj17qm5.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmrj17qm5.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmrj17qm5.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmrj17qm5.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmrj17qm5.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmrj17qm5.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmrj17qm5.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmrj17qm5.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmrj17qm5.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmrj17qm5.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmrj17qm5.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut current_word = String::from(\"\");\n    let mut\
    \ current_word_len = String::from(\"\");\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len\
    \ = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n\
    \    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let\
    \ mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos\
    \ = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len\
    \ = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n\
    \    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let\
    \ mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos\
    \ = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len\
    \ = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n\
    \    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let\
    \ mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos\
    \ = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len\
    \ = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n\
    \    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let\
    \ mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos\
    \ = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut \n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpli92imvf.rs:82:1\n\
    \   |\n82 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpli92imvf.rs:86:17\n   |\n86 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpli92imvf.rs:86:25\n \
    \  |\n86 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpli92imvf.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpli92imvf.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpli92imvf.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpli92imvf.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpli92imvf.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpli92imvf.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpli92imvf.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpli92imvf.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpli92imvf.rs:91:17\n   |\n91 |     "
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    let mut n = n;\n    while n !=\
    \ 0 {\n        let mut i = 0;\n        while i < s.len() {\n            let c\
    \ = s.chars().nth(i).unwrap();\n            if c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' {\n                i += 1;\n            } else {\n \
    \               break;\n            }\n        }\n        if i == s.len() {\n\
    \            result.push(s);\n            s.clear();\n            n -= 1;\n  \
    \      } else {\n            s.push(s.chars().nth(i).unwrap());\n            n\
    \ -= 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpt1ncxam7.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt1ncxam7.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt1ncxam7.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpt1ncxam7.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt1ncxam7.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpt1ncxam7.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpt1ncxam7.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpt1ncxam7.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpt1ncxam7.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt1ncxam7.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt1ncxam7.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowel_consonants = Vec::new();\n    let mut vowel_consonant_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels = Vec::new();\n   \
    \ let mut vowel_consonant_vowels_vowels_vowels = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut \n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpas8wc19z.rs:39:1\n\
    \   |\n39 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpas8wc19z.rs:43:17\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpas8wc19z.rs:43:25\n \
    \  |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpas8wc19z.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpas8wc19z.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpas8wc19z.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpas8wc19z.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpas8wc19z.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpas8wc19z.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpas8wc19z.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpas8wc19z.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpas8wc19z.rs:48:17\n   |\n48 |     "
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    let mut n = n;\n    while n >\
    \ 0 {\n        if s.chars().any(|c| c.is_consonant()) {\n            result.push(s.clone());\n\
    \            n -= 1;\n        }\n        s -= 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpaby9grbm.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpaby9grbm.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpaby9grbm.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpaby9grbm.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpaby9grbm.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpaby9grbm.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpaby9grbm.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpaby9grbm.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpaby9grbm.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpaby9grbm.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpaby9grbm.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    \n}\n\n\
    fn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprq35_rx_.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprq35_rx_.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprq35_rx_.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprq35_rx_.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut index = 0;\n    while index < s.len() {\n \
    \       let mut word = String::new();\n        let mut found = false;\n      \
    \  for c in s.chars() {\n            if c.is_consonant() && found == false {\n\
    \                word.push(c);\n                found = true;\n            } else\
    \ if c.is_consonant() && found == true {\n                break;\n           \
    \ }\n        }\n        if found == true {\n            if word.len() == n {\n\
    \                words.push(word);\n            }\n            index += word.len();\n\
    \        }\n    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpawfjr9li.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpawfjr9li.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpawfjr9li.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpawfjr9li.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpawfjr9li.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpawfjr9li.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpawfjr9li.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpawfjr9li.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpawfjr9li.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpawfjr9li.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpawfjr9li.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as\
    \ usize;\n    let mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n\
    \        while j < s.len() && s[j] == ' ' {\n            j += 1\n        }\n \
    \       if j == i {\n            break;\n        }\n        let mut k = i;\n \
    \       while k < j && s[k] == ' ' {\n            k += 1\n        }\n        if\
    \ k == i {\n            break;\n        }\n        let mut c = String::from(\"\
    \");\n        while k < j {\n            if s[k] == s[j] {\n                c\
    \ += s[k];\n                k += 1;\n            } else {\n                break;\n\
    \            }\n        }\n        if c == \"\" {\n            break;\n      \
    \  }\n        if c.chars().count() == n {\n            result.push(s.split_whitespace()[i]);\n\
    \        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6fmtayhw.rs:59:17\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6fmtayhw.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6fmtayhw.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6fmtayhw.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6fmtayhw.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6fmtayhw.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6fmtayhw.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6fmtayhw.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6fmtayhw.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6fmtayhw.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6fmtayhw.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s.chars().any(|c| c != s.chars().nth(j))\
    \ {\n            j += 1\n        }\n        if j == i {\n            i += 1;\n\
    \            continue;\n        }\n        let mut word = String::from(s.to_string());\n\
    \        word.push_str(&s.chars().nth(i).unwrap());\n        word.push_str(&s.chars().nth(j).unwrap());\n\
    \        word.push_str(&s.chars().nth(j + 1).unwrap());\n        words.push(word);\n\
    \        i += j - i + 1;\n    }\n    words\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcx0b7hjk.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcx0b7hjk.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcx0b7hjk.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcx0b7hjk.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcx0b7hjk.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcx0b7hjk.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcx0b7hjk.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcx0b7hjk.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcx0b7hjk.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcx0b7hjk.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcx0b7hjk.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = s;\n    while s.len() > 0 {\n        let mut\
    \ i = 0;\n        while i < s.len() && s[i] == ' ' {\n            i += 1;\n  \
    \      }\n        if i == s.len() {\n            break;\n        }\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] != ' ' {\n            i += 1;\n\
    \            j += 1\n        }\n        if j == s.len() {\n            break;\n\
    \        }\n        if n == i {\n            result.push(s.split_whitespace().nth(j\
    \ - i).unwrap());\n        }\n        s = &s[..j];\n    }\n    result\n}\n\nfn\
    \ main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprsk9f0gv.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprsk9f0gv.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprsk9f0gv.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprsk9f0gv.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprsk9f0gv.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprsk9f0gv.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprsk9f0gv.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprsk9f0gv.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprsk9f0gv.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprsk9f0gv.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprsk9f0gv.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mu\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp45_p333d.rs:61:11\n   |\n\
    61 |     let mu\n   |           ^ help: add `;` here\n62 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp45_p333d.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp45_p333d.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut s = String::from(s);\n    while s.len() > 0 {\n\
    \        let mut word = String::from(\"\");\n        let mut index = s.find(|c|\
    \ c.is_ascii_letter());\n        while index != s.len() {\n            if s[index..].chars().count(|c|\
    \ c.is_ascii_letter()) == n {\n                word.push(s[index..index+index+1]);\n\
    \            }\n            index = s.find(|c| c.is_ascii_letter(), index+1);\n\
    \        }\n        result.push(word);\n        s = s.into_owned();\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpouwfgnx6.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpouwfgnx6.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpouwfgnx6.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpouwfgnx6.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpouwfgnx6.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpouwfgnx6.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpouwfgnx6.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpouwfgnx6.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpouwfgnx6.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpouwfgnx6.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpouwfgnx6.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    while s.len() >\
    \ 0 {\n        let mut i = 0;\n        while i < s.len() && s.chars().any(|c|\
    \ c != s.chars().nth(i)) {\n            i += 1;\n        }\n        if i == s.len()\
    \ {\n            result.push(s.clone());\n            s = String::from(\"\");\n\
    \        } else {\n            result.push(s.clone());\n            s = s.clone();\n\
    \            i += 1;\n        }\n    }\n    result.sort_by_key(|x| x.chars().count());\n\
    \    result.take(n)\n}\n\nfn main() {\n    let candidate = select_words;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpl06vtivz.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl06vtivz.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl06vtivz.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpl06vtivz.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpl06vtivz.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl06vtivz.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpl06vtivz.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpl06vtivz.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl06vtivz.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl06vtivz.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl06vtivz.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut current_word = String::from(\"\");\n    let\
    \ mut current_word_len = String::from(\"\");\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len\
    \ = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n\
    \    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let\
    \ mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos\
    \ = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len\
    \ = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n\
    \    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let\
    \ mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos\
    \ = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len\
    \ = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n\
    \    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let\
    \ mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos\
    \ = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len\
    \ = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n\
    \    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let\
    \ mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos\
    \ = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mu\n}\n\nfn main() {\n    let candidate =\
    \ select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpqtzxq_e5.rs:81:11\n   |\n\
    81 |     let mu\n   |           ^ help: add `;` here\n82 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqtzxq_e5.rs:86:17\n\
    \   |\n86 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqtzxq_e5.rs:86:25\n   |\n86 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqtzxq_e5.rs:87:17\n   |\n87 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqtzxq_e5.rs:87:25\n\
    \   |\n87 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqtzxq_e5.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqtzxq_e5.rs:88:25\n   |\n88 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqtzxq_e5.rs:89:17\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqtzxq_e5.rs:89:25\n   |\n89 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqtzxq_e5.rs:90:17\n  \
    \ |\n90 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqtzxq_e5.rs:90:25\n   |\n90 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c|\
    \ c.is_consonant() && c != ' ') {\n            i += 1;\n        } else {\n   \
    \         words.push(s.subslice(i, i + n));\n            i += n;\n        }\n\
    \    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprmtf1f3m.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprmtf1f3m.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprmtf1f3m.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprmtf1f3m.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprmtf1f3m.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprmtf1f3m.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprmtf1f3m.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprmtf1f3m.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprmtf1f3m.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprmtf1f3m.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprmtf1f3m.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    let mut n = n;\n    while n !=\
    \ 0 {\n        if s.chars().any(|c| c.is_consonant()) {\n            result.push(s.clone());\n\
    \            n -= 1;\n        }\n        s += 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp460rmfhp.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp460rmfhp.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp460rmfhp.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp460rmfhp.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp460rmfhp.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp460rmfhp.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp460rmfhp.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp460rmfhp.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp460rmfhp.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp460rmfhp.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp460rmfhp.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut i = 0;\n        let mut j = s.len();\n        while i < j {\n          \
    \  if s.chars().nth(i).unwrap().is_consonant() {\n                i += 1;\n  \
    \          } else {\n                j -= 1;\n            }\n        }\n     \
    \   if i == n {\n            result.push(s.clone());\n        }\n        s = &s[..i];\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpto9p_n8d.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpto9p_n8d.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpto9p_n8d.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpto9p_n8d.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpto9p_n8d.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpto9p_n8d.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpto9p_n8d.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpto9p_n8d.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpto9p_n8d.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpto9p_n8d.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpto9p_n8d.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c|\
    \ c.is_consonant() && c != ' ') {\n            i += 1;\n        } else {\n   \
    \         words.push_back(s.to_string());\n            i += n;\n        }\n  \
    \  }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmks9ksqa.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmks9ksqa.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmks9ksqa.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmks9ksqa.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmks9ksqa.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmks9ksqa.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmks9ksqa.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmks9ksqa.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmks9ksqa.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmks9ksqa.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmks9ksqa.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowel_consonants = Vec::new();\n    let mut vowel_consonant_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels = Vec::new();\n   \
    \ let mut vowel_consonant_vowels_vowels_vowels = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels_vowels\
    \ = Vec::new();\n    let mut \n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpas8wc19z.rs:39:1\n\
    \   |\n39 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpas8wc19z.rs:43:17\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpas8wc19z.rs:43:25\n \
    \  |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpas8wc19z.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpas8wc19z.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpas8wc19z.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpas8wc19z.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpas8wc19z.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpas8wc19z.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpas8wc19z.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpas8wc19z.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpas8wc19z.rs:48:17\n   |\n48 |     "
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n\
    \        }\n        if j == i {\n            break;\n        }\n        let mut\
    \ word = String::new();\n        while j < s.len() && s[j] != ' ' {\n        \
    \    word.push(s[j]);\n            j += 1\n        }\n        if word.len() ==\
    \ n {\n            words.push(word);\n        }\n        i += j - i;\n    }\n\
    \    words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnsy_f4qt.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnsy_f4qt.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnsy_f4qt.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnsy_f4qt.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnsy_f4qt.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnsy_f4qt.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnsy_f4qt.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnsy_f4qt.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnsy_f4qt.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnsy_f4qt.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnsy_f4qt.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut i = s.find(|c| !c.is_ascii_letter());\n        if i == s.len() {\n     \
    \       break;\n        }\n        let mut j = i;\n        while j < s.len() &&\
    \ s[j].is_ascii_letter() {\n            j = j + 1;\n        }\n        if j ==\
    \ s.len() {\n            break;\n        }\n        let mut k = j;\n        while\
    \ k < s.len() && s[k].is_ascii_letter() {\n            k = k + 1;\n        }\n\
    \        if k == s.len() {\n            break;\n        }\n        let mut l =\
    \ k;\n        while l < s.len() && s[l].is_ascii_letter() {\n            l = l\
    \ + 1;\n        }\n        if l == s.len() {\n            break;\n        }\n\
    \        let mut m = l;\n        while m < s.len() && s[m].is_ascii_letter() {\n\
    \            m = m + 1;\n        }\n        if m == s.len() {\n            break;\n\
    \        }\n        let mut n = m;\n        while n < s.len() && s[n].is_ascii_letter()\
    \ {\n            n = n + 1;\n        }\n        if n == s.len() {\n          \
    \  break;\n        }\n        result.push(s.split_at(i, s.len()).collect::<Vec<_>>());\n\
    \        s = &s[n..];\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwjppmjnw.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwjppmjnw.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwjppmjnw.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwjppmjnw.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwjppmjnw.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwjppmjnw.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwjppmjnw.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwjppmjnw.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwjppmjnw.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwjppmjnw.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwjppmjnw.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut s = String::from(s);\n    let mut i = 0;\n\
    \    while i < s.len() {\n        if s.chars().any(|c| c.is_consonant() && c !=\
    \ ' ') {\n            i += 1;\n        } else {\n            words.push(s.split_whitespace()[i]);\n\
    \            i += 1;\n        }\n    }\n    words\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpc6_h37g4.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc6_h37g4.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc6_h37g4.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpc6_h37g4.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpc6_h37g4.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpc6_h37g4.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpc6_h37g4.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpc6_h37g4.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpc6_h37g4.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc6_h37g4.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc6_h37g4.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    while s.len() >\
    \ 0 {\n        let mut i = 0;\n        let mut j = s.len();\n        while i <\
    \ j {\n            if s[i] == ' ' {\n                i += 1;\n               \
    \ j -= 1;\n            } else {\n                i += 1;\n            }\n    \
    \    }\n        if i == j {\n            result.push(s.clone());\n           \
    \ i += 1;\n        }\n        while i < n {\n            if s[i] == ' ' {\n  \
    \              i += 1;\n            } else {\n                result.push(s.clone());\n\
    \                i += 1;\n            }\n        }\n        s = String::from(&s[..i]);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5722kevq.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5722kevq.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5722kevq.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5722kevq.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5722kevq.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5722kevq.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5722kevq.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5722kevq.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5722kevq.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5722kevq.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5722kevq.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut i = 0;\n        while i < s.len() && s.chars().any(|c| c.is_consonant()\
    \ == true) {\n            i += 1;\n        }\n        if i == s.len() {\n    \
    \        result.push(s);\n            break;\n        }\n        let mut j = i;\n\
    \        while j < s.len() && s.chars().any(|c| c.is_consonant() == false) {\n\
    \            j += 1;\n        }\n        if j == s.len() {\n            result.push(s);\n\
    \            break;\n        }\n        let mut k = j;\n        while k < s.len()\
    \ && s.chars().any(|c| c.is_consonant() == true) {\n            k += 1;\n    \
    \    }\n        if k == s.len() {\n            result.push(s);\n            break;\n\
    \        }\n        let mut l = k;\n        while l < s.len() && s.chars().any(|c|\
    \ c.is_consonant() == false) {\n            l += 1;\n        }\n        if l ==\
    \ s.len() {\n            result.push(s);\n            break;\n        }\n    \
    \    let mut m = l;\n        while m < s.len() && s.chars().any(|c| c.is_consonant()\
    \ == true) {\n            m += 1;\n        }\n        if m == s.len() {\n    \
    \        result.push(s);\n            break;\n        }\n        let mut n = m;\n\
    \        while n < s.len() && s.chars().any(|c| c.is_consonant() == false) {\n\
    \            n += 1;\n        }\n        if n == s.len() {\n            result.push(s);\n\
    \            break;\n        }\n        let mut o = n;\n        while o < s.len()\
    \ && s.chars().any(|c| c.is_consonant() == true) {\n            o += 1;\n    \
    \    }\n        if o == s.len() {\n            result.push(s);\n            break;\n\
    \        }\n        let mut p = o;\n        while p < s.len() && s.chars().any(|c|\
    \ c.is_consonant() == false) {\n            p += 1;\n        }\n        if p ==\
    \ s.len() {\n            result.push(s);\n            break;\n        }\n    \
    \    let mut q = p;\n        while q < s.len() && s.chars().any(|c| c.is_consonant()\
    \ == true) {\n            q += 1;\n        }\n        if q == s.len() {\n    \
    \        result.push(s);\n            break;\n        }\n        let mut r = q;\n\
    \        while r < s.len() && s.chars().any(|c| c.is_consonant() == false) {\n\
    \            r += 1;\n        }\n        if r == s.len() {\n            result.push(s);\n\
    \            break;\n        }\n        let mut s = r;\n        while s < s.len()\
    \ && \n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpo2kt8h_g.rs:114:3\n\
    \    |\n17  | fn select_words(s: String, n: isize) -> Vec<String> {\n    |   \
    \                                                  - unclosed delimiter\n...\n\
    20  |     while s.len() > 0 {\n    |                       - this delimiter might\
    \ not be properly closed...\n...\n103 | }\n    | - ...as it matches this but it\
    \ has different indentation\n...\n114 | }\n    |   ^\n\nerror: expected expression,\
    \ found `}`\n   --> /tmp/tmpo2kt8h_g.rs:103:1\n    |\n103 | }\n    | ^ expected\
    \ expression\n\nerror[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmpo2kt8h_g.rs:107:17\n\
    \    |\n107 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpo2kt8h_g.rs:107:25\n    |\n107 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpo2kt8h_g.rs:108:17\n\
    \    |\n108 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpo2kt8h_g.rs:108:25\n    |\n108 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpo2kt8h_g.rs:109:17\n\
    \    |\n109 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpo2kt8h_g.rs:109:25\n    |\n109 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpo2kt8h_g.rs:110:17\n\
    \    |\n110 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpo2kt8h_g.rs:110:25\n    |\n110 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    while s.len() >\
    \ 0 {\n        let mut i = 0;\n        let mut j = s.len();\n        while i <\
    \ j {\n            if s[i] == ' ' {\n                i += 1;\n               \
    \ j -= 1;\n            } else {\n                i += 1;\n            }\n    \
    \    }\n        if i == n {\n            result.push(s.clone());\n        }\n\
    \        s = &s[..i];\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp98izuj2h.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp98izuj2h.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp98izuj2h.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp98izuj2h.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp98izuj2h.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp98izuj2h.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp98izuj2h.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp98izuj2h.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp98izuj2h.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp98izuj2h.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp98izuj2h.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as\
    \ usize;\n    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c|\
    \ c.is_consonant() && c != ' ') {\n            result.push(s.subslice(i, i + n));\n\
    \            i += n;\n        }\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxrwf_h6l.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxrwf_h6l.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxrwf_h6l.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxrwf_h6l.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxrwf_h6l.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n;\n\
    \    while n > 0 {\n        let mut i = 0;\n        while i < s.len() {\n    \
    \        if s.chars().any(|c| c == c.to_ascii_lowercase()) {\n               \
    \ i += 1;\n            } else {\n                break;\n            }\n     \
    \   }\n        if i == s.len() {\n            result.push(s);\n            n -=\
    \ 1;\n        } else {\n            s = s.to_string();\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbmtr_33p.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbmtr_33p.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbmtr_33p.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbmtr_33p.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbmtr_33p.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbmtr_33p.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbmtr_33p.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbmtr_33p.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbmtr_33p.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbmtr_33p.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbmtr_33p.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut current_word = String::new();\n    let mut\
    \ current_word_len = 0;\n    let mut current_word_index = 0;\n    let mut current_word_is_consonant\
    \ = false;\n    let mut current_word_is_vowel = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_space\
    \ = false;\n    let mut current_word_is_space = false;\n    let mut current_word_is_\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpvnuce6gh.rs:74:29\n   |\n\
    74 |     let mut current_word_is_\n   |                             ^ help: add\
    \ `;` here\n75 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpvnuce6gh.rs:79:17\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpvnuce6gh.rs:79:25\n \
    \  |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvnuce6gh.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvnuce6gh.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvnuce6gh.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvnuce6gh.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvnuce6gh.rs:82:17\n  \
    \ |\n82 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvnuce6gh.rs:82:25\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvnuce6gh.rs:83:17\n   |\n83 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvnuce6gh.rs:83:25\n\
    \   |\n83 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut current_word = String::from(\"\");\n    let\
    \ mut current_word_len = String::from(\"\");\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len\
    \ = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n\
    \    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let\
    \ mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos\
    \ = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len\
    \ = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n\
    \    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let\
    \ mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos\
    \ = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len\
    \ = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n\
    \    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let\
    \ mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos\
    \ = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len\
    \ = 0;\n    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n\
    \    let mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let\
    \ mut current_word_pos = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos\
    \ = 0;\n    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n\
    \    let mut current_word_len = 0;\n    let mut current_word_pos = 0;\n    let\
    \ mut current_word_len = 0;\n    let mu\n}\n\nfn main() {\n    let candidate =\
    \ select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpqtzxq_e5.rs:81:11\n   |\n\
    81 |     let mu\n   |           ^ help: add `;` here\n82 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqtzxq_e5.rs:86:17\n\
    \   |\n86 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqtzxq_e5.rs:86:25\n   |\n86 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqtzxq_e5.rs:87:17\n   |\n87 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqtzxq_e5.rs:87:25\n\
    \   |\n87 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqtzxq_e5.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqtzxq_e5.rs:88:25\n   |\n88 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqtzxq_e5.rs:89:17\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqtzxq_e5.rs:89:25\n   |\n89 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqtzxq_e5.rs:90:17\n  \
    \ |\n90 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqtzxq_e5.rs:90:25\n   |\n90 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut index = 0;\n    while index < s.len() {\n     \
    \   let mut word = String::from(\"\");\n        let mut consonants = 0;\n    \
    \    for c in s.chars() {\n            if c.is_consonant() {\n               \
    \ consonants += 1;\n                if consonants == n {\n                   \
    \ word += c;\n                }\n            }\n        }\n        if !word.is_empty()\
    \ {\n            words.push(word);\n        }\n        index += 1;\n    }\n  \
    \  words\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpa5loglne.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa5loglne.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa5loglne.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa5loglne.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa5loglne.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa5loglne.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa5loglne.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa5loglne.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa5loglne.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa5loglne.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa5loglne.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s.chars().any(|c| c != s.chars().nth(j))\
    \ {\n            j += 1\n        }\n        if j - i == n {\n            words.push(s.chars().nth(i).unwrap());\n\
    \            i += n;\n        }\n        else {\n            i += j;\n       \
    \ }\n    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3yeowcyx.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3yeowcyx.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3yeowcyx.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3yeowcyx.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3yeowcyx.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3yeowcyx.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3yeowcyx.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3yeowcyx.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3yeowcyx.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3yeowcyx.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3yeowcyx.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as\
    \ usize;\n    let mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n\
    \        while j < s.len() && s[j] == ' ' {\n            j += 1\n        }\n \
    \       if j == s.len() {\n            break;\n        }\n        let mut k =\
    \ j;\n        while k < s.len() && s[k] != ' ' {\n            k += 1\n       \
    \ }\n        if k == s.len() {\n            break;\n        }\n        if n ==\
    \ 0 {\n            break;\n        }\n        if n == 1 {\n            result.push(s.split_whitespace().nth(i).unwrap());\n\
    \            break;\n        }\n        if n == 2 {\n            result.push(s.split_whitespace().nth(i).unwrap());\n\
    \            result.push(s.split_whitespace().nth(j).unwrap());\n            break;\n\
    \        }\n        if n == 3 {\n            result.push(s.split_whitespace().nth(i).unwrap());\n\
    \            result.push(s.split_whitespace().nth(j).unwrap());\n            result.push(s.split_whitespace().nth(k).unwrap());\n\
    \            break;\n        }\n        if n == 4 {\n            result.push(s.split_whitespace().nth(i).unwrap());\n\
    \            result.push(s.split_whitespace().nth(j).unwrap());\n            result.push(s.split_whitespace().nth(k).unwrap());\n\
    \            result.push(s.split_whitespace().nth(l).unwrap());\n            break;\n\
    \        }\n        if n == 5 {\n            result.push(s.split_whitespace().nth(i).unwrap());\n\
    \            result.push(s.split_whitespace().nth(j).unwrap());\n            result.push(s.split_whitespace().nth(k).unwrap());\n\
    \            result.push(s.split_whitespace().nth(l).unwrap());\n            result.push(s.split_whitespace().nth(m).unwrap());\n\
    \            break;\n        }\n        if n == 6 {\n            result.push(s.split_whitespace().nth(i).unwrap());\n\
    \            result.push(s.split_whitespace().nth(j).unwrap());\n            result.push(s.split_whitespace().nth(k).unwrap());\n\
    \            result.push(s.split_whitespace().nth(l).unwrap());\n            result.push(s.split_whitespace().nth(m).unwrap());\n\
    \            result.push(s.split_whitespace().nth(n).unwrap());\n            break;\n\
    \        }\n        if n == 7 {\n            result.push(s.split_whitespace().nth(i).unwrap());\n\
    \            result.push(s.split_whitespace().nth(j).unwrap());\n            result.push(s.split_whitespace().nth(k).unwrap());\n\
    \            result.push(s.split_whitespace().nth(l).unwrap());\n            result.push(s.split_whitespace().nth(m).unwrap());\n\
    \            result.push(s.split_whitespace().nth(n).unwrap());\n            result.push(s.split_whitespace().nth(o).unwrap());\n\
    \            break;\n}\n\nfn main() {\n    let candidate = select_words;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpgcj5qy5t.rs:99:3\n\
    \   |\n17 | fn select_words(s: String, n: isize) -> Vec<String> {\n   |      \
    \                                               - unclosed delimiter\n...\n22\
    \ |     while i < s.len() {\n   |                       - unclosed delimiter\n\
    ...\n79 |         if n == 7 {\n   |                   - this delimiter might not\
    \ be properly closed...\n...\n88 | }\n   | - ...as it matches this but it has\
    \ different indentation\n...\n99 | }\n   |   ^\n\nerror[E0425]: cannot find value\
    \ `l` in this scope\n  --> /tmp/tmpgcj5qy5t.rs:59:50\n   |\n59 |             result.push(s.split_whitespace().nth(l).unwrap());\n\
    \   |                                                  ^ help: a local variable\
    \ with a similar name exists: `i`\n\nerror[E0425]: cannot find value `l` in this\
    \ scope\n  --> /tmp/tmpgcj5qy5t.rs:66:50\n   |\n66 |             result.push(s.split_whitespace().nth(l).unwrap());\n\
    \   |                                                  ^ help: a local variable\
    \ with a similar name exists: `i`\n\nerror[E0425]: cannot find value `m` in this\
    \ scope\n  --> /tmp/tmpgcj5qy5t.rs:67:50\n   |\n67 |             result.push(s.split_whitespace().nth(m).unwrap());\n\
    \   |                                                  ^ help: a local variable\
    \ with a similar name exists: `i`\n\nerror[E0425]: cannot find value `l` in this\
    \ scope\n  --> /tmp/tmpgcj5qy5t.rs:74:50\n   |\n74 |             result.push(s.split_whitespace().nth(l).unwrap());\n\
    \   |                                                  ^ help: a local variable\
    \ with a similar name exists: `i`\n\nerror[E0425]: cannot find value `m` in this\
    \ scope\n  --> /tmp/tmpgcj5qy5t.rs:75:50\n   |\n75 |             result.push(s.split_whitespace().nth(m).unwrap());\n\
    \   |                                                  ^ help: a local variable\
    \ with a similar name exists: `i`\n\nerror[E0425]: cannot find value `l` in this\
    \ scope\n  --> /tmp/tmpgcj5qy5t.rs:83:50\n   |\n83 |             result.push(s.split_whitespace().nth(l).unwrap());\n\
    \   |                                                  ^ help:"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == s[i] {\n            j = j +\
    \ 1;\n        }\n        if j - i == n {\n            list.push(s.subslice(i,\
    \ j));\n            i = j;\n        } else {\n            i = j;\n        }\n\
    \    }\n    list\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpn4z1e9b3.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn4z1e9b3.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn4z1e9b3.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn4z1e9b3.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn4z1e9b3.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn4z1e9b3.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn4z1e9b3.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn4z1e9b3.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn4z1e9b3.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn4z1e9b3.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn4z1e9b3.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s.chars().all(|c| c != s.chars().nth(j).unwrap())\
    \ {\n            j = j + 1;\n        }\n        if j == i {\n            break;\n\
    \        }\n        let mut word = s.to_string();\n        word.chars().for_each(|c|\
    \ {\n            if c == s.chars().nth(j).unwrap() {\n                words.push(word);\n\
    \            }\n        });\n        i = j;\n    }\n    words\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6kwzp7hw.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6kwzp7hw.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6kwzp7hw.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6kwzp7hw.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6kwzp7hw.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6kwzp7hw.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6kwzp7hw.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6kwzp7hw.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6kwzp7hw.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6kwzp7hw.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6kwzp7hw.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c|\
    \ c.is_consonant() && c.is_lowercase() && c != ' ') {\n            i += 1;\n \
    \       } else {\n            words.push(s.subslice(i, i + n));\n            i\
    \ += n;\n        }\n    }\n    words\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmj4mx93g.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmj4mx93g.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmj4mx93g.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmj4mx93g.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmj4mx93g.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmj4mx93g.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmj4mx93g.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmj4mx93g.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmj4mx93g.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmj4mx93g.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmj4mx93g.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut spaces = vec![];\n    let mut non_spaces = vec![];\n    let mut non_letters\
    \ = vec![];\n    let mut non_spaces_count = vec![];\n    let mut non_letters_count\
    \ = vec![];\n    let mut spaces_count = vec![];\n    let mut vowels_count = vec![];\n\
    \    let mut consonants_count = vec![];\n    let mut vowels_count_in_string =\
    \ vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n    let mut consonants_count_in_string = vec![];\n    let mut vowels_count_in_string\
    \ = vec![];\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppa97cqax.rs:64:17\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppa97cqax.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppa97cqax.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppa97cqax.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppa97cqax.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppa97cqax.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppa97cqax.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppa97cqax.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppa97cqax.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppa97cqax.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppa97cqax.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut vowel_consonants = vec![];\n    let mut vowel_consonant_vowels =\
    \ vec![];\n    let mut vowel_consonant_vowel_consonants = vec![];\n    let mut\
    \ vowel_consonant_vowel_consonant_vowels = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonants\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonants\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonants\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonants\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonants\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_con\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpegzgdwqa.rs:36:134\n   |\n\
    36 |     let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_con\n\
    \   |                                                                        \
    \                                                              ^ help: add `;`\
    \ here\n37 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpegzgdwqa.rs:41:17\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpegzgdwqa.rs:41:25\n \
    \  |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpegzgdwqa.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpegzgdwqa.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpegzgdwqa.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpegzgdwqa.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpegzgdwqa.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpegzgdwqa.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpegzgdwqa.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowel_consonants = Vec::new();\n    let mut vowel_consonant_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_vowels = Vec::new();\n   \
    \ let mut vowel_consonant_vowels_consonants = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_vowels\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_vowels_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_vowels_consonants_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_consonants_vowels_consonants_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_consonants_vowels_consonants_consonants_consonants\
    \ = Vec::new();\n    let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_conson\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmphj49w61a.rs:35:104\n   |\n\
    35 |     let mut vowel_consonant_vowels_consonants_consonants_vowels_consonants_consonants_consonants_conson\n\
    \   |                                                                        \
    \                                ^ help: add `;` here\n36 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphj49w61a.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphj49w61a.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphj49w61a.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphj49w61a.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphj49w61a.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphj49w61a.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphj49w61a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphj49w61a.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphj49w61a.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut spaces = vec![];\n    let mut punctuation = vec![];\n    let mut\
    \ letters = vec![];\n    let mut numbers = vec![];\n    let mut spaces_count =\
    \ s.chars().filter(|c| c == ' ').count();\n    let mut punctuation_count = s.chars().filter(|c|\
    \ c == '.' || c == '!' || c == '?' || c == ';' || c == ':' || c == '-' || c ==\
    \ '_').count();\n    let mut letters_count = s.chars().filter(|c| c >= 'a' &&\
    \ c <= 'z' || c >= 'A' && c <= 'Z').count();\n    let mut numbers_count = s.chars().filter(|c|\
    \ c >= '0' && c <= '9').count();\n    let mut vowels_count = s.chars().filter(|c|\
    \ c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u').count();\n    let\
    \ mut consonants_count = s.chars().filter(|c| c >= 'b' && c <= 'z' || c >= 'B'\
    \ && c <= 'Z').count();\n    let mut spaces_count_2 = s.chars().filter(|c| c ==\
    \ ' ').count();\n    let mut punctuation_count_2 = s.chars().filter(|c| c == '.'\
    \ || c == '!' || c == '?' || c == ';' || c == ':' || c == '-' || c == '_').count();\n\
    \    let mut letters_count_2 = s.chars().filter(|c| c >= 'a' && c <= 'z' || c\
    \ >= 'A' && c <= 'Z').count();\n    let mut numbers_count_2 = s.chars().filter(|c|\
    \ c >= '0' && c <= '9').count();\n    let mut vowels_count_2 = s.chars().filter(|c|\
    \ c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u').count();\n    let\
    \ mut consonants_count_2 = s.chars().filter(|c| c >= 'b' && c <= 'z' || c >= 'B'\
    \ && c <= 'Z').count();\n    let mut spaces_count_3 = s.chars().filter(|c| c ==\
    \ ' ').count();\n    let mut punctuation_count_3 = s.chars().filter(|c| c == '.'\
    \ || c == '!' || c == '?' || \n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `)`\n  --> /tmp/tmpl735yhru.rs:39:1\n\
    \   |\n39 | }\n   | ^ expected expression\n\nerror: mismatched closing delimiter:\
    \ `}`\n  --> /tmp/tmpl735yhru.rs:38:51\n   |\n17 | fn select_words(s: String,\
    \ n: isize) -> Vec<String> {\n   |                                           \
    \          - closing delimiter possibly meant for this\n...\n38 |     let mut\
    \ punctuation_count_3 = s.chars().filter(|c| c == '.' || c == '!' || c == '?'\
    \ || \n   |                                                   ^ unclosed delimiter\n\
    39 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpl735yhru.rs:43:17\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpl735yhru.rs:43:25\n \
    \  |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpl735yhru.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl735yhru.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpl735yhru.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpl735yhru.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl735yhru.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl735yhru.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    select_words(s,\
    \ n, vec![])\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyn8k_a0i.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyn8k_a0i.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyn8k_a0i.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyn8k_a0i.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyn8k_a0i.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822393
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut vowel_counter = 0;\n    let mut vowel_counter2 = 0;\n    let mut\
    \ vowel_counter3 = 0;\n    let mut vowel_counter4 = 0;\n    let mut vowel_counter5\
    \ = 0;\n    let mut vowel_counter6 = 0;\n    let mut vowel_counter7 = 0;\n   \
    \ let mut vowel_counter8 = 0;\n    let mut vowel_counter9 = 0;\n    let mut vowel_counter10\
    \ = 0;\n    let mut vowel_counter11 = 0;\n    let mut vowel_counter12 = 0;\n \
    \   let mut vowel_counter13 = 0;\n    let mut vowel_counter14 = 0;\n    let mut\
    \ vowel_counter15 = 0;\n    let mut vowel_counter16 = 0;\n    let mut vowel_counter17\
    \ = 0;\n    let mut vowel_counter18 = 0;\n    let mut vowel_counter19 = 0;\n \
    \   let mut vowel_counter20 = 0;\n    let mut vowel_counter21 = 0;\n    let mut\
    \ vowel_counter22 = 0;\n    let mut vowel_counter23 = 0;\n    let mut vowel_counter24\
    \ = 0;\n    let mut vowel_counter25 = 0;\n    let mut vowel_counter26 = 0;\n \
    \   let mut vowel_counter27 = 0;\n    let mut vowel_counter28 = 0;\n    let mut\
    \ vowel_counter29 = 0;\n    let mut vowel_counter30 = 0;\n    let mut vowel_counter31\
    \ = 0;\n    let mut vowel_counter32 = 0;\n    let mut vowel_counter33 = 0;\n \
    \   let mut vowel_counter34 = 0;\n    let mut vowel_counter35 = 0;\n    let mut\
    \ vowel_counter36 = 0;\n    let mut vowel_counter37 = 0;\n    let mut vowel_counter38\
    \ = 0;\n    let mut vowel_counter39 = 0;\n    let mut vowel_counter40 = 0;\n \
    \   let mut vowel_counter41 = 0;\n    let mut vowel_counter42 = 0;\n    let mut\
    \ vowel_counter43 = 0;\n    let mut vowel_counter44 = 0;\n    let mut vowel_counter45\
    \ = 0;\n    let mut vowel_counter46 = 0;\n    let mut vowel_counter47 = 0;\n \
    \   let mut vowel_counter48 = 0;\n    let mut vowel_counter49 = 0;\n    let mut\
    \ vowel_counter50 = 0;\n    let mut vowel_counter51 = 0;\n    let mut vowel_counter52\
    \ = 0;\n    let mut vowel_counter53 = 0;\n    let mut vowel_counter54 = 0;\n \
    \   let mut \n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpjam95kwy.rs:76:1\n\
    \   |\n76 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpjam95kwy.rs:80:17\n   |\n80 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpjam95kwy.rs:80:25\n \
    \  |\n80 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjam95kwy.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjam95kwy.rs:81:25\n   |\n81 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjam95kwy.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjam95kwy.rs:82:25\n   |\n82 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjam95kwy.rs:83:17\n  \
    \ |\n83 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjam95kwy.rs:83:25\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjam95kwy.rs:84:17\n   |\n84 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjam95kwy.rs:84:25\n\
    \   |\n84 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjam95kwy.rs:85:17\n   |\n85 |     "
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut i = 0;\n        let mut j = s.len();\n        while i < j {\n          \
    \  if s[i] == ' ' {\n                i += 1;\n                j = i;\n       \
    \     } else {\n                i += 1;\n            }\n        }\n        if\
    \ i == j {\n            result.push(s.clone());\n            i += 1;\n       \
    \ }\n        while i < j {\n            if s[i] == ' ' {\n                i +=\
    \ 1;\n            } else {\n                result.push(s.clone());\n        \
    \        i += 1;\n            }\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpooe1edxn.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpooe1edxn.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpooe1edxn.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpooe1edxn.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpooe1edxn.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpooe1edxn.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpooe1edxn.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpooe1edxn.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpooe1edxn.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpooe1edxn.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpooe1edxn.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ list = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() && s[j] == s[i] {\n            j += 1\n\
    \        }\n        if j - i == n {\n            list.push(s.subslice(i, j));\n\
    \            i += j - i;\n        }\n    }\n    list\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8qhwltcv.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8qhwltcv.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8qhwltcv.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8qhwltcv.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8qhwltcv.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8qhwltcv.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8qhwltcv.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8qhwltcv.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8qhwltcv.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8qhwltcv.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8qhwltcv.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    select_words_helper(s,\
    \ n, vec![])\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `select_words_helper` in this scope\n\
    \  --> /tmp/tmphtteehv3.rs:18:5\n   |\n18 |     select_words_helper(s, n, vec![])\n\
    \   |     ^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphtteehv3.rs:23:17\n   |\n23 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphtteehv3.rs:23:25\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphtteehv3.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphtteehv3.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphtteehv3.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphtteehv3.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphtteehv3.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphtteehv3.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphtteehv3.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphtteehv3.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerro"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut vowel_consonants = vec![];\n    let mut vowel_consonant_vowels =\
    \ vec![];\n    let mut vowel_consonant_vowel_consonants = vec![];\n    let mut\
    \ vowel_consonant_vowel_consonant_vowels = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonants\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonants\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonants\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonants\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonants\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowels\
    \ = vec![];\n    let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_con\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpegzgdwqa.rs:36:134\n   |\n\
    36 |     let mut vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant_vowel_con\n\
    \   |                                                                        \
    \                                                              ^ help: add `;`\
    \ here\n37 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpegzgdwqa.rs:41:17\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpegzgdwqa.rs:41:25\n \
    \  |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpegzgdwqa.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpegzgdwqa.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpegzgdwqa.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpegzgdwqa.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpegzgdwqa.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpegzgdwqa.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpegzgdwqa.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowel_counter = 0;\n    let mut vowel_counter2 =\
    \ 0;\n    let mut vowel_counter3 = 0;\n    let mut vowel_counter4 = 0;\n    let\
    \ mut vowel_counter5 = 0;\n    let mut vowel_counter6 = 0;\n    let mut vowel_counter7\
    \ = 0;\n    let mut vowel_counter8 = 0;\n    let mut vowel_counter9 = 0;\n   \
    \ let mut vowel_counter10 = 0;\n    let mut vowel_counter11 = 0;\n    let mut\
    \ vowel_counter12 = 0;\n    let mut vowel_counter13 = 0;\n    let mut vowel_counter14\
    \ = 0;\n    let mut vowel_counter15 = 0;\n    let mut vowel_counter16 = 0;\n \
    \   let mut vowel_counter17 = 0;\n    let mut vowel_counter18 = 0;\n    let mut\
    \ vowel_counter19 = 0;\n    let mut vowel_counter20 = 0;\n    let mut vowel_counter21\
    \ = 0;\n    let mut vowel_counter22 = 0;\n    let mut vowel_counter23 = 0;\n \
    \   let mut vowel_counter24 = 0;\n    let mut vowel_counter25 = 0;\n    let mut\
    \ vowel_counter26 = 0;\n    let mut vowel_counter27 = 0;\n    let mut vowel_counter28\
    \ = 0;\n    let mut vowel_counter29 = 0;\n    let mut vowel_counter30 = 0;\n \
    \   let mut vowel_counter31 = 0;\n    let mut vowel_counter32 = 0;\n    let mut\
    \ vowel_counter33 = 0;\n    let mut vowel_counter34 = 0;\n    let mut vowel_counter35\
    \ = 0;\n    let mut vowel_counter36 = 0;\n    let mut vowel_counter37 = 0;\n \
    \   let mut vowel_counter38 = 0;\n    let mut vowel_counter39 = 0;\n    let mut\
    \ vowel_counter40 = 0;\n    let mut vowel_counter41 = 0;\n    let mut vowel_counter42\
    \ = 0;\n    let mut vowel_counter43 = 0;\n    let mut vowel_counter44 = 0;\n \
    \   let mut vowel_counter45 = 0;\n    let mut vowel_counter46 = 0;\n    let mut\
    \ vowel_counter47 = 0;\n    let mut vowel_counter48 = 0;\n    let mut vowel_counter49\
    \ = 0;\n    let mut vowel_counter50 = 0;\n    let mut vowel_counter51 = 0;\n \
    \   let mut vowel_counter52 = 0;\n    let mut vowel_counter53 = 0;\n    let mut\
    \ vowel_counter54 = 0;\n\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:80:17\n\
    \   |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzpm4h9c7.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzpm4h9c7.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzpm4h9c7.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzpm4h9c7.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzpm4h9c7.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut pos = 0;\n    while pos < s.len() {\n     \
    \   let mut word = String::new();\n        let mut consonant = false;\n      \
    \  for c in s.chars() {\n            if !consonant {\n                if c ==\
    \ ' ' {\n                    consonant = true;\n                    continue;\n\
    \                }\n                if c == c.to_ascii_lowercase()\n         \
    \           && pos == 0\n                    && n == 1\n                    &&\
    \ c.is_ascii_lowercase()\n                {\n                    word.push(c);\n\
    \                }\n            }\n            if consonant {\n              \
    \  if c == c.to_ascii_lowercase()\n                    && pos == 0\n         \
    \           && n == 1\n                    && c.is_ascii_lowercase()\n       \
    \         {\n                    word.push(c);\n                }\n          \
    \      consonant = false;\n            }\n        }\n        if consonant {\n\
    \            words.push(word);\n        }\n        pos += 1;\n    }\n    words\n\
    }\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphr0masfi.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphr0masfi.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphr0masfi.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphr0masfi.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphr0masfi.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphr0masfi.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphr0masfi.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphr0masfi.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphr0masfi.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphr0masfi.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphr0masfi.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut index = 0;\n    while index < s.len() {\n     \
    \   let mut word = String::new();\n        let mut is_consonant = false;\n   \
    \     for c in s.chars() {\n            if index == 0 {\n                is_consonant\
    \ = c.is_consonant();\n            } else {\n                if is_consonant {\n\
    \                    word.push(c);\n                } else {\n               \
    \     if index == n {\n                        words.push(word);\n           \
    \             break;\n                    }\n                }\n            }\n\
    \            index += 1;\n        }\n    }\n    words\n}\n\nfn main() {\n    let\
    \ candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0s_4n3i0.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0s_4n3i0.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0s_4n3i0.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0s_4n3i0.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0s_4n3i0.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0s_4n3i0.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0s_4n3i0.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0s_4n3i0.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0s_4n3i0.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0s_4n3i0.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0s_4n3i0.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut i = 0;\n        let mut c = s.chars().nth(i);\n        while c != ' ' &&\
    \ c != '\\n' && c != '\\t' && c != '\\r' && c != '\\v' && c != '\\a' && c != '\\\
    e' {\n            i += 1;\n            c = s.chars().nth(i);\n        }\n    \
    \    if c == ' ' || c == '\\n' || c == '\\t' || c == '\\r' || c == '\\v' || c\
    \ == '\\a' || c == '\\e' {\n            result.push(s.chars().nth(i));\n     \
    \       s = s.chars().skip(i + 1).collect();\n        } else {\n            break;\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unknown character escape: `v`\n  --> /tmp/tmp00cf9zna.rs:23:73\n\
    \   |\n23 |         while c != ' ' && c != '\\n' && c != '\\t' && c != '\\r' &&\
    \ c != '\\v' && c != '\\a' && c != '\\e' {\n   |                             \
    \                                            ^ unknown character escape\n   |\n\
    \   = help: for more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\
    \nerror: unknown character escape: `a`\n  --> /tmp/tmp00cf9zna.rs:23:86\n   |\n\
    23 |         while c != ' ' && c != '\\n' && c != '\\t' && c != '\\r' && c !=\
    \ '\\v' && c != '\\a' && c != '\\e' {\n   |                                  \
    \                                                    ^ unknown character escape\n\
    \   |\n   = help: for more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\
    \nerror: unknown character escape: `e`\n  --> /tmp/tmp00cf9zna.rs:23:99\n   |\n\
    23 |         while c != ' ' && c != '\\n' && c != '\\t' && c != '\\r' && c !=\
    \ '\\v' && c != '\\a' && c != '\\e' {\n   |                                  \
    \                                                                 ^ unknown character\
    \ escape\n   |\n   = help: for more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\
    \nerror: unknown character escape: `v`\n  --> /tmp/tmp00cf9zna.rs:27:70\n   |\n\
    27 |         if c == ' ' || c == '\\n' || c == '\\t' || c == '\\r' || c == '\\\
    v' || c == '\\a' || c == '\\e' {\n   |                                       \
    \                               ^ unknown character escape\n   |\n   = help: for\
    \ more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\
    \nerror: unknown character escape: `a`\n  --> /tmp/tmp00cf9zna.rs:27:83\n   |\n\
    27 |         if c == ' ' || c == '\\n' || c == '\\t' || c == '\\r' || c == '\\\
    v' || c == '\\a' || c == '\\e' {\n   |                                       \
    \                                            ^ unknown character escape\n   |\n\
    \   = help: for more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\
    \nerror: unknown characte"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = String::from(s);\n    let mut n = n as\
    \ usize;\n    let mut i = 0;\n    while i < s.len() {\n        if s.chars().any(|c|\
    \ c.is_uppercase() && c != ' ') {\n            result.push(s.subslice(i, i + n));\n\
    \            i += n;\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = select_words;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxbm_rnm_.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxbm_rnm_.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxbm_rnm_.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxbm_rnm_.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxbm_rnm_.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxbm_rnm_.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxbm_rnm_.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxbm_rnm_.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxbm_rnm_.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxbm_rnm_.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxbm_rnm_.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = Vec::new();\n    let mut consonants = Vec::new();\n    let mut vowels\
    \ = Vec::new();\n    let mut vowels_count = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mut vowels_count_index = Vec::new();\n    let mut vowels_count_index\
    \ = Vec::new();\n    let mu\n}\n\nfn main() {\n    let candidate = select_words;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp45_p333d.rs:61:11\n   |\n\
    61 |     let mu\n   |           ^ help: add `;` here\n62 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp45_p333d.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp45_p333d.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp45_p333d.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp45_p333d.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45_p333d.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut consonants = vec![];\n    let mut vowels = vec![];\n\
    \    let mut vowel_counter = 0;\n    let mut vowel_counter2 = 0;\n    let mut\
    \ vowel_counter3 = 0;\n    let mut vowel_counter4 = 0;\n    let mut vowel_counter5\
    \ = 0;\n    let mut vowel_counter6 = 0;\n    let mut vowel_counter7 = 0;\n   \
    \ let mut vowel_counter8 = 0;\n    let mut vowel_counter9 = 0;\n    let mut vowel_counter10\
    \ = 0;\n    let mut vowel_counter11 = 0;\n    let mut vowel_counter12 = 0;\n \
    \   let mut vowel_counter13 = 0;\n    let mut vowel_counter14 = 0;\n    let mut\
    \ vowel_counter15 = 0;\n    let mut vowel_counter16 = 0;\n    let mut vowel_counter17\
    \ = 0;\n    let mut vowel_counter18 = 0;\n    let mut vowel_counter19 = 0;\n \
    \   let mut vowel_counter20 = 0;\n    let mut vowel_counter21 = 0;\n    let mut\
    \ vowel_counter22 = 0;\n    let mut vowel_counter23 = 0;\n    let mut vowel_counter24\
    \ = 0;\n    let mut vowel_counter25 = 0;\n    let mut vowel_counter26 = 0;\n \
    \   let mut vowel_counter27 = 0;\n    let mut vowel_counter28 = 0;\n    let mut\
    \ vowel_counter29 = 0;\n    let mut vowel_counter30 = 0;\n    let mut vowel_counter31\
    \ = 0;\n    let mut vowel_counter32 = 0;\n    let mut vowel_counter33 = 0;\n \
    \   let mut vowel_counter34 = 0;\n    let mut vowel_counter35 = 0;\n    let mut\
    \ vowel_counter36 = 0;\n    let mut vowel_counter37 = 0;\n    let mut vowel_counter38\
    \ = 0;\n    let mut vowel_counter39 = 0;\n    let mut vowel_counter40 = 0;\n \
    \   let mut vowel_counter41 = 0;\n    let mut vowel_counter42 = 0;\n    let mut\
    \ vowel_counter43 = 0;\n    let mut vowel_counter44 = 0;\n    let mut vowel_counter45\
    \ = 0;\n    let mut vowel_counter46 = 0;\n    let mut vowel_counter47 = 0;\n \
    \   let mut vowel_counter48 = 0;\n    let mut vowel_counter49 = 0;\n    let mut\
    \ vowel_counter50 = 0;\n    let mut vowel_counter51 = 0;\n    let mut vowel_counter52\
    \ = 0;\n    let mut vowel_counter53 = 0;\n    let mut vowel_counter54 = 0;\n \
    \   let mut \n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpjam95kwy.rs:76:1\n\
    \   |\n76 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpjam95kwy.rs:80:17\n   |\n80 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpjam95kwy.rs:80:25\n \
    \  |\n80 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjam95kwy.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjam95kwy.rs:81:25\n   |\n81 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjam95kwy.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjam95kwy.rs:82:25\n   |\n82 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjam95kwy.rs:83:17\n  \
    \ |\n83 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjam95kwy.rs:83:25\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjam95kwy.rs:84:17\n   |\n84 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjam95kwy.rs:84:25\n\
    \   |\n84 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjam95kwy.rs:85:17\n   |\n85 |     "
  stdout: ''
  timestamp: 1659822394
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut words = s.split_whitespace();\n    let mut\
    \ count = 0;\n    while count < n && words.len() > 0 {\n        let mut word =\
    \ words.remove(0).unwrap();\n        if word.chars().all(|c| c.is_consonant())\
    \ {\n            result.push(word);\n            count += 1;\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpu2z812j_.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu2z812j_.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu2z812j_.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu2z812j_.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu2z812j_.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu2z812j_.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu2z812j_.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu2z812j_.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpu2z812j_.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu2z812j_.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu2z812j_.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s[j] == ' ' {\n            j += 1\n   \
    \     }\n        if j == i {\n            result.push(s.to_string());\n      \
    \      i += 1;\n        } else {\n            let mut k = j;\n            while\
    \ k < s.len() && s[k] == ' ' {\n                k += 1\n            }\n      \
    \      if k == j {\n                result.push(s.to_string());\n            \
    \    i += 1;\n            } else {\n                while j < s.len() && s[k]\
    \ != ' ' {\n                    j += 1\n                }\n                let\
    \ mut k = j;\n                while k < s.len() && s[k] == ' ' {\n           \
    \         k += 1\n                }\n                if k == j {\n           \
    \         result.push(s.to_string());\n                    i += 1;\n         \
    \       } else {\n                    while k < s.len() && s[k] != ' ' {\n   \
    \                     k += 1\n                    }\n                    let mut\
    \ k = j;\n                    while k < s.len() && s[k] == ' ' {\n           \
    \             k += 1\n                    }\n                    if k == j {\n\
    \                        result.push(s.to_string());\n                       \
    \ i += 1;\n                    } else {\n                        while k < s.len()\
    \ && s[k] != ' ' {\n                            k += 1\n                     \
    \   }\n                        let mut k = j;\n                        while k\
    \ < s.len() && s[k] == ' ' {\n                            k += 1\n           \
    \             }\n                        if k == j {\n                       \
    \     result.push(s.to_string());\n                            i += 1;\n     \
    \                   } else {\n                            while k < s.len() &&\
    \ s[k] != ' ' {\n                                k += 1\n                    \
    \        }\n                            let mut k = j;\n                     \
    \       while k < s.len() && s[k] == ' ' {\n                                k\
    \ += 1\n                            }\n                            if k == j {\n\
    \                                result.push(s.to_string());\n               \
    \                 i += 1;\n                            } else {\n            \
    \                    while k < s.len() && s[k] != ' ' {\n                    \
    \                k += 1\n                                }\n                 \
    \               let mut k = j;\n                                while k < s.len()\
    \ && s[k] == ' ' {\n                                    k += 1\n             \
    \                   }\n                                if k == j {\n         \
    \                           result.push(s.to_string());\n                    \
    \                i += 1;\n                                } else {\n         \
    \                           while k < s.len() && s[k] != ' ' {\n             \
    \                           k += 1\n                                    }\n  \
    \                                  let mut k = j;\n                          \
    \          while k < s.len() && s[k] == ' ' {\n                              \
    \          k += 1\n                                    }\n                   \
    \                 if k == j {\n                                        result.push(s.to_string());\n\
    \                                        i += 1;\n                           \
    \         } else {\n                                        while k < s.len()\
    \ && s[k] != ' ' {\n                                            k += 1\n     \
    \                                   }\n                                      \
    \  let mut \n}\n\nfn main() {\n    let candidate = select_words;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpq8_1iv8j.rs:118:3\n\
    \    |\n17  | fn select_words(s: String, n: isize) -> Vec<String> {\n    |   \
    \                                                  - unclosed delimiter\n...\n\
    20  |     while i < s.len() {\n    |                       - unclosed delimiter\n\
    ...\n28  |         } else {\n    |                - unclosed delimiter\n...\n\
    36  |             } else {\n    |                    - unclosed delimiter\n...\n\
    47  |                 } else {\n    |                        - unclosed delimiter\n\
    ...\n58  |                     } else {\n    |                            - unclosed\
    \ delimiter\n...\n69  |                         } else {\n    |              \
    \                  - unclosed delimiter\n...\n80  |                          \
    \   } else {\n    |                                    - unclosed delimiter\n\
    ...\n91  |                                 } else {\n    |                   \
    \                     - unclosed delimiter\n...\n102 |                       \
    \              } else {\n    |                                            - this\
    \ delimiter might not be properly closed...\n...\n107 | }\n    | - ...as it matches\
    \ this but it has different indentation\n...\n118 | }\n    |   ^\n\nerror: expected\
    \ identifier, found `}`\n   --> /tmp/tmpq8_1iv8j.rs:107:1\n    |\n107 | }\n  \
    \  | ^ expected identifier\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \   --> /tmp/tmpq8_1iv8j.rs:111:17\n    |\n111 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpq8_1iv8j.rs:111:25\n    |\n111 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpq8_1iv8j.rs:112:17\n    |\n112 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpq8_1iv8j.rs:112:25\n    |\n112 |\
    \     assert_eq!({left}, {right});\n    |                       "
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ result = Vec::new();\n    let mut s = s;\n    while s.len() > 0 {\n        let\
    \ mut i = 0;\n        let mut j = s.len();\n        while i < j {\n          \
    \  if s[i] == ' ' {\n                i += 1;\n                j -= 1;\n      \
    \      } else {\n                i += 1;\n            }\n        }\n        if\
    \ i == n {\n            result.push(s.clone());\n            i += 1;\n       \
    \ }\n        s = &s[i..];\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpiziwouzg.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiziwouzg.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpiziwouzg.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpiziwouzg.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpiziwouzg.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpiziwouzg.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpiziwouzg.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpiziwouzg.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpiziwouzg.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiziwouzg.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpiziwouzg.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395
- exit_code: 1
  program: "/// Given a string s and a natural number n, you have been tasked to implement\
    \ \n/// a function that returns a list of all words from string s that contain\
    \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
    \ If the string s is empty then the function should return an empty list.\n///\
    \ Note: you may assume the input string contains only letters and spaces.\n///\
    \ Examples:\n/// >>> select_words(String::from(\"Mary had a little lamb\"), 4)\n\
    /// vec![String::from(\"little\")]\n/// >>> select_words(String::from(\"Mary had\
    \ a little lamb\"), 3)\n/// vec![String::from(\"Mary\"), String::from(\"lamb\"\
    )]\n/// >>> select_words(String::from(\"simple white space\"), 2)\n/// Vec::<String>::new()\n\
    /// >>> select_words(String::from(\"Hello world\"), 4)\n/// vec![String::from(\"\
    world\")]\n/// >>> select_words(String::from(\"Uncle sam\"), 3)\n/// vec![String::from(\"\
    Uncle\")]\nfn select_words(s: String, n: isize) -> Vec<String> {\n    let mut\
    \ words = vec![];\n    let mut i = 0;\n    while i < s.len() {\n        let mut\
    \ j = i;\n        while j < s.len() && s.chars().all(|c| c == s.chars().nth(j))\
    \ {\n            j += 1\n        }\n        if j == i {\n            break;\n\
    \        }\n        let mut word = s.to_string();\n        word.truncate(j);\n\
    \        words.push(word);\n        i = j;\n    }\n    words\n}\n\nfn main() {\n\
    \    let candidate = select_words;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwrum5v2_.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwrum5v2_.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwrum5v2_.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwrum5v2_.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwrum5v2_.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwrum5v2_.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwrum5v2_.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwrum5v2_.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwrum5v2_.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwrum5v2_.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwrum5v2_.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659822395

name: HumanEval_73_smallest_change
language: rs
prompt: "/// Given an array arr of integers, find the minimum number of elements that\n\
  /// need to be changed to make the array palindromic. A palindromic array is an\
  \ array that\n/// is read the same backwards and forwards. In one change, you can\
  \ change one element to any other element.\n/// For example:\n/// >>> smallest_change(vec![1,\
  \ 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1, 2, 3, 4, 3, 2, 2])\n\
  /// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n/// 0\nfn smallest_change(arr:\
  \ Vec<isize>) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!(candidate(vec![1,\
  \ 2, 3, 5, 4, 7, 9, 6]), 4);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 3, 2, 2]),\
  \ 1);\n    assert_eq!(candidate(vec![1, 4, 2]), 1);\n    assert_eq!(candidate(vec![1,\
  \ 4, 4, 2]), 1);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 1]), 0);\n    assert_eq!(candidate(vec![3,\
  \ 1, 1, 3]), 0);\n    assert_eq!(candidate(vec![1]), 0);\n    assert_eq!(candidate(vec![0,\
  \ 1]), 1);\n}\n"
completions: ["    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        if arr[i] != arr[i] -\
    \ min_change {\n            min_change = arr[i] - min_change;\n        }\n   \
    \     i += 1;\n    }\n    min_change", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_count = 0;\n    let\
    \ mut min_change_arr = arr.clone();\n    let mut min_change_arr_len = min_change_arr.len();\n\
    \    let mut min_change_arr_len = min_change_arr_len / 2;\n    let mut min_change_arr_len\
    \ = min_change_arr_len * 2;\n    let mut min_change_arr_len = min_change_arr_len\
    \ / 2;\n    let mut min_change_arr_len = min_change_arr_len * 2;\n    let mut\
    \ min_change_arr_len = min_change_arr_len / 2;\n    let mut min_change_arr_len\
    \ = min_change_arr_len * 2;\n    let mut min_change_arr_len = min_change_arr_len\
    \ / 2;\n    let mut min_change_arr_len = min_change_arr_len * 2;\n    let mut\
    \ min_change_arr_len = min_change_arr_len / 2;\n    let mut min_change_arr_len\
    \ = min_change_arr_len * 2;\n    let mut min_change_arr_len = min_change_arr_len\
    \ / 2;\n    let mut min_change_arr_len = min_change_arr_len * 2;\n    let mut\
    \ min_change_arr_len = min_change_arr_len / 2;\n    let mut min_change_arr_len\
    \ = min_change_arr_len * 2;\n    let mut min_change_arr_len = min_change_arr_len\
    \ / 2;\n    let mut min_change_arr_len = min_change_arr_len * 2;\n    let mut\
    \ min_change_arr_len = min_change_arr_len / 2;\n    let mut min_change_arr_len\
    \ = min_change_arr_len * 2;\n    let mut min_change_arr_len = min_change_arr_len\
    \ / 2;\n    let mut min_change_arr_len = min_change_arr_len * 2;\n    let mut\
    \ min_change_arr_len = min_change_arr_len / 2;\n    let mut min_change_arr_len\
    \ = min_change_arr_len * 2;\n    let mut min_change_arr_len = min_change_arr_len\
    \ / 2;\n    let mut min_change_arr_len = min_change_arr_len * 2;\n    let mut\
    \ min_change_arr_len = min_change_arr_len / 2;\n    let mut min_change_arr_len\
    \ = min_change_arr_len * 2;\n    let mut min_change_arr_len = min_change_arr_len\
    \ / 2;\n    let mut min_change_arr_len = min_change_arr_len * 2;\n    let mut\
    \ min_change_arr_len = min_change_arr_len / 2;\n    let mut min_change_arr_len\
    \ = min_change_arr_len * 2;\n    let mut min_change_arr_len = min_change_arr_len\
    \ / 2;\n    let mut min_change_arr_len = min_change_arr_len * 2;\n    let mut\
    \ min_change_arr_len = min_change_arr_len / 2;\n", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    for &x in arr {\n        if x == min_change {\n            min_change = x;\n\
    \        }\n    }\n    min_change", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    let mut min_change_index = 0;\n    for index in 0..arr.len() {\n        if\
    \ arr[index] != arr[index + min_change_index] {\n            min_change = std::cmp::min(min_change,\
    \ index - min_change_index);\n            min_change_index = index;\n        }\n\
    \    }\n    min_change", "    let mut min_change = std::i32::MAX;\n    let mut\
    \ min_change_index = 0;\n    for &i in arr {\n        if min_change > i {\n  \
    \          min_change = i;\n            min_change_index = 0;\n        }\n   \
    \     if min_change == i {\n            min_change_index += 1;\n        }\n  \
    \  }\n    min_change_index", "    let mut min_change = isize::MAX;\n    let mut\
    \ min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_index3\
    \ = 0;\n    let mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n\
    \    let mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let\
    \ mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let mut\
    \ min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_index12\
    \ = 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14 =\
    \ 0;\n    let mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n\
    \    let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n  \
    \  let mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n    let\
    \ mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let mut\
    \ min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_index25\
    \ = 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27 =\
    \ 0;\n    let mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n\
    \    let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n  \
    \  let mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n    let\
    \ mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let mut\
    \ min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n    let mut min_change_index38\
    \ = 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40 =\
    \ 0;\n    let mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n\
    \    let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n  \
    \  let mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n    let\
    \ mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let mut\
    \ min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n    let mut min_change_index51\
    \ = 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53 =\
    \ 0;\n    let mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n\
    \    let mut min_change_index56 = 0;\n    let ", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let\
    \ mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let mut min_change_index7\
    \ = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n\
    \    let mut min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n  \
    \  let mut min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n    let\
    \ mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n    let mut min_change_index18\
    \ = 0;\n    let mut min_change_index19 = 0;\n    let mut min_change_index20 =\
    \ 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n\
    \    let mut min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n  \
    \  let mut min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n    let\
    \ mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n    let mut\
    \ min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n    let mut min_change_index31\
    \ = 0;\n    let mut min_change_index32 = 0;\n    let mut min_change_index33 =\
    \ 0;\n    let mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n\
    \    let mut min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n  \
    \  let mut min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n    let\
    \ mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n    let mut\
    \ min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n    let mut min_change_index44\
    \ = 0;\n    let mut min_change_index45 = 0;\n    let mut min_change_index46 =\
    \ 0;\n    let mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n\
    \    let mut min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n  \
    \  let mut min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n    let\
    \ mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n    let mut\
    \ min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n    let ", " \
    \   let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n \
    \   let mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n    let\
    \ mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let mut\
    \ min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let mut min_change_index8\
    \ = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n\
    \    let mut min_change_index11 = 0;\n    let mut min_change_index12 = 0;\n  \
    \  let mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n    let\
    \ mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n    let mut\
    \ min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n    let mut min_change_index19\
    \ = 0;\n    let mut min_change_index20 = 0;\n    let mut min_change_index21 =\
    \ 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n\
    \    let mut min_change_index24 = 0;\n    let mut min_change_index25 = 0;\n  \
    \  let mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n    let\
    \ mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n    let mut\
    \ min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n    let mut min_change_index32\
    \ = 0;\n    let mut min_change_index33 = 0;\n    let mut min_change_index34 =\
    \ 0;\n    let mut min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n\
    \    let mut min_change_index37 = 0;\n    let mut min_change_index38 = 0;\n  \
    \  let mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n    let\
    \ mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n    let mut\
    \ min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n    let mut min_change_index45\
    \ = 0;\n    let mut min_change_index46 = 0;\n    let mut min_change_index47 =\
    \ 0;\n    let mut min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n\
    \    let mut min_change_index50 = 0;\n    let mut min_change_index51 = 0;\n  \
    \  let mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n    let\
    \ mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n    let mut\
    \ min_change_index56 = 0;\n    let ", "    let mut min_change = isize::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let\
    \ mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let mut min_change_index7\
    \ = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n\
    \    let mut min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n  \
    \  let mut min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n    let\
    \ mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n    let mut min_change_index18\
    \ = 0;\n    let mut min_change_index19 = 0;\n    let mut min_change_index20 =\
    \ 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n\
    \    let mut min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n  \
    \  let mut min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n    let\
    \ mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n    let mut\
    \ min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n    let mut min_change_index31\
    \ = 0;\n    let mut min_change_index32 = 0;\n    let mut min_change_index33 =\
    \ 0;\n    let mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n\
    \    let mut min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n  \
    \  let mut min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n    let\
    \ mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n    let mut\
    \ min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n    let mut min_change_index44\
    \ = 0;\n    let mut min_change_index45 = 0;\n    let mut min_change_index46 =\
    \ 0;\n    let mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n\
    \    let mut min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n  \
    \  let mut min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n    let\
    \ mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n    let mut\
    \ min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n    let ", " \
    \   let mut min_change = arr.len() as isize;\n    let mut min_change_index = 0;\n\
    \    let mut min_change_val = arr[0];\n    for &i in &arr {\n        if i != min_change_val\
    \ {\n            min_change = min_change_index;\n            min_change_val =\
    \ i;\n        }\n        min_change_index += 1;\n    }\n    min_change", "   \
    \ let mut min_change = isize::MAX;\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_count = 0;\n    for index in 0..arr.len() {\n        if arr[index]\
    \ == arr[index].rev() {\n            min_change_count++;\n            if min_change_count\
    \ < min_change {\n                min_change = min_change_count;\n           \
    \     min_change_index = index;\n            }\n        }\n    }\n    min_change_count",
  "    let mut min_change = isize::MAX;\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_count = 0;\n    for &i in arr {\n        if min_change > i {\n\
    \            min_change = i;\n            min_change_index = i;\n            min_change_count\
    \ = 1;\n        } else {\n            min_change_count += 1;\n        }\n    }\n\
    \    min_change_count", "    let mut min_change = arr.len();\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len_index\
    \ = 0;\n", "    let mut min_change = arr.len();\n    let mut min_change_idx =\
    \ arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mu", "    let\
    \ mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let mut\
    \ min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let ", " \
    \   let mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let ", " \
    \   let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n \
    \   let mut min_change_count = 0;\n    for i in arr.iter().rev() {\n        if\
    \ *i == *(i + 1) {\n            min_change_count++;\n        } else {\n      \
    \      min_change = std::cmp::min(min_change, min_change_count);\n           \
    \ min_change_index = i;\n            min_change_count = 1;\n        }\n    }\n\
    \    min_change = std::cmp::min(min_change, min_change_count);\n    min_change_index\
    \ = i;\n    min_change_count = 1;\n    min_change", "    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_idx = -1;\n    for idx in 0..arr.len()\
    \ {\n        let mut min_change = std::i32::MAX;\n        let mut min_change_idx\
    \ = -1;\n        for idx in 0..arr.len() {\n            if idx != idx {\n    \
    \            let mut change = arr[idx] - arr[idx - 1];\n                if change\
    \ < min_change {\n                    min_change = change;\n                 \
    \   min_change_idx = idx;\n                }\n            }\n        }\n     \
    \   if min_change_idx > -1 {\n            min_change = std::i32::MAX;\n      \
    \      min_change_idx = -1;\n        }\n        if min_change < min_change {\n\
    \            min_change = min_change;\n            min_change_idx = idx;\n   \
    \     }\n    }\n    min_change", "    let mut min_change = std::cmp::max(isize::MIN,\
    \ isize::MAX);\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mu", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        if arr[i] != arr[(arr.len()\
    \ - 1) - i] {\n            min_change = std::cmp::min(min_change, i + 1);\n  \
    \      }\n        i += 1;\n    }\n    min_change", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    let mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let\
    \ mut min_change_index3 = 0;\n    for &i in arr {\n        if min_change > i {\n\
    \            min_change = i;\n            min_change_index = i;\n            min_change_index2\
    \ = i;\n            min_change_index3 = i;\n        }\n        if min_change ==\
    \ i {\n            if min_change_index == i {\n                min_change_index\
    \ += 1;\n            }\n            if min_change_index2 == i {\n            \
    \    min_change_index2 += 1;\n            }\n            if min_change_index3\
    \ == i {\n                min_change_index3 += 1;\n            }\n        }\n\
    \    }\n    min_change", "    let mut min_change = arr.len();\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_val = arr[0];\n    for &i in arr {\n        if\
    \ i != min_change_val {\n            min_change = min_change_index;\n        \
    \    min_change_val = i;\n        }\n        min_change_index += 1;\n    }\n \
    \   min_change", "    let mut min_change = arr.len();\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut\
    \ min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_",
  "    let mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_val = arr[0];\n    for &i in arr {\n        if i == min_change_val\
    \ {\n            min_change_index += 1;\n            min_change_val = i;\n   \
    \     } else {\n            min_change = min_change_index;\n            min_change_index\
    \ = i;\n        }\n    }\n    min_change", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_count = 0;\n    for\
    \ &i in arr {\n        if min_change > i {\n            min_change = i;\n    \
    \        min_change_index = i;\n            min_change_count = 1;\n        } else\
    \ if min_change == i {\n            min_change_count += 1;\n        }\n    }\n\
    \    min_change_count", "    let mut min_change = std::i32::MAX;\n    let mut\
    \ min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_index3\
    \ = 0;\n    let mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n\
    \    let mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let\
    \ mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let mut\
    \ min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_index12\
    \ = 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14 =\
    \ 0;\n    let mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n\
    \    let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n  \
    \  let mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n    let\
    \ mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let mut\
    \ min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_index25\
    \ = 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27 =\
    \ 0;\n    let mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n\
    \    let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n  \
    \  let mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n    let\
    \ mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let mut\
    \ min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n    let mut min_change_index38\
    \ = 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40 =\
    \ 0;\n    let mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n\
    \    let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n  \
    \  let mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n    let\
    \ mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let mut\
    \ min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n    let mut min_change_index51\
    \ = 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53 =\
    \ 0;\n    let mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n\
    \    let mut min_change_index56 = 0;\n    let ", "    let mut min_change = isize::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_count = 0;\n    let\
    \ mut min_change_arr = arr.clone();\n    let mut min_change_arr_len = arr.len();\n\
    \    while min_change_count < min_change_arr.len() {\n        min_change_count\
    \ += 1;\n        min_change_arr = min_change_arr.iter().cloned().collect();\n\
    \        min_change_arr_len = min_change_arr.len();\n        for (i, &v) in min_change_arr.iter().enumerate()\
    \ {\n            if min_change_count > min_change_arr_len {\n                break;\n\
    \            }\n            if v == min_change_arr[min_change_count - 1] {\n \
    \               min_change_arr[min_change_count - 1] = v;\n                min_change_arr_len\
    \ -= 1;\n                min_change_count -= 1;\n                min_change =\
    \ min_change_arr_len + min_change_count;\n                min_change_index = i;\n\
    \                break;\n            }\n        }\n    }\n    min_change", " \
    \   let mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_element = arr[0];\n    for &i in arr.iter().rev() {\n       \
    \ if *i == min_change_element {\n            min_change_index += 1;\n        }\
    \ else {\n            min_change = min_change_index;\n            min_change_element\
    \ = *i;\n            min_change_index = 1;\n        }\n    }\n    min_change",
  "    let mut min_change = arr.len() as isize;\n    let mut min_change_index = 0;\n\
    \    let mut min_change_val = arr[0];\n    for &i in arr {\n        if min_change_val\
    \ > i {\n            min_change_val = i;\n            min_change_index = i;\n\
    \        }\n    }\n    for &i in arr {\n        if min_change_val < i {\n    \
    \        min_change_val = i;\n            min_change_index = i;\n        }\n \
    \   }\n    if min_change_val == min_change_index {\n        return 0;\n    }\n\
    \    if min_change_val < min_change_index {\n        min_change = min_change_index;\n\
    \    }\n    if min_change_val > min_change_index {\n        min_change = min_change_val;\n\
    \    }\n    min_change", "    let mut min_change = std::i32::MAX;\n    let mut\
    \ min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_index3\
    \ = 0;\n    let mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n\
    \    let mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let\
    \ mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let mut\
    \ min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_index12\
    \ = 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14 =\
    \ 0;\n    let mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n\
    \    let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n  \
    \  let mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n    let\
    \ mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let mut\
    \ min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_index25\
    \ = 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27 =\
    \ 0;\n    let mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n\
    \    let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n  \
    \  let mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n    let\
    \ mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let mut\
    \ min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n    let mut min_change_index38\
    \ = 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40 =\
    \ 0;\n    let mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n\
    \    let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n  \
    \  let mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n    let\
    \ mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let mut\
    \ min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n    let mut min_change_index51\
    \ = 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53 =\
    \ 0;\n    let mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n\
    \    let mut min_change_index56 = 0;\n    let ", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_idx = -1;\n    for idx in 0..arr.len() {\n        let\
    \ mut change = 0;\n        let mut idx = idx;\n        while idx > 0 {\n     \
    \       change += arr[idx];\n            idx -= 1;\n        }\n        if change\
    \ < min_change {\n            min_change = change;\n            min_change_idx\
    \ = idx;\n        }\n    }\n    min_change_idx", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_palindromic = false;\n\
    \    for i in arr.iter().rev() {\n        if min_change > i {\n            min_change\
    \ = i;\n            min_change_index = i;\n            min_change_palindromic\
    \ = true;\n        }\n    }\n    for i in arr.iter() {\n        if min_change\
    \ > i {\n            min_change = i;\n            min_change_index = i;\n    \
    \        min_change_palindromic = false;\n        }\n    }\n    if min_change_palindromic\
    \ == true {\n        min_change_index\n    } else {\n        min_change_index\
    \ + 1\n    }", "    let mut min_change = arr.len();\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let ", "    let mut min_change = isize::MAX;\n    let mut min_change_index\
    \ = -1;\n    let mut min_change_count = 0;\n    for &i in arr {\n        if min_change\
    \ > i {\n            min_change = i;\n            min_change_index = i;\n    \
    \        min_change_count = 1;\n        } else if min_change == i {\n        \
    \    min_change_count += 1;\n        }\n    }\n    min_change_count", "    let\
    \ mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n    for\
    \ index in 0..arr.len() {\n        let mut min_change = std::i32::MAX;\n     \
    \   let mut min_change_index = 0;\n        for change in 1..arr.len() {\n    \
    \        if index == change {\n                continue;\n            }\n    \
    \        if arr[index] > arr[change] {\n                if min_change < change\
    \ - index {\n                    min_change = change - index;\n              \
    \      min_change_index = index;\n                }\n            }\n        }\n\
    \        if min_change < min_change_index {\n            min_change = min_change_index;\n\
    \        }\n    }\n    min_change", "    let mut min_change = arr.len();\n   \
    \ let mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let mut\
    \ min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let mut min_change_index5\
    \ = 0;\n    let mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n\
    \    let mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let\
    \ mut min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n    let mut\
    \ min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14\
    \ = 0;\n    let mut min_change_index15 = 0;\n    let mut min_change_index16 =\
    \ 0;\n    let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n\
    \    let mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n  \
    \  let mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let\
    \ mut min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n    let mut\
    \ min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27\
    \ = 0;\n    let mut min_change_index28 = 0;\n    let mut min_change_index29 =\
    \ 0;\n    let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n\
    \    let mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n  \
    \  let mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let\
    \ mut min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n    let mut\
    \ min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40\
    \ = 0;\n    let mut min_change_index41 = 0;\n    let mut min_change_index42 =\
    \ 0;\n    let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n\
    \    let mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n  \
    \  let mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let\
    \ mut min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n    let mut\
    \ min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53\
    \ = 0;\n    let mut min_change_index54 = 0;\n    let mut min_change_index55 =\
    \ 0;\n    let mut min_change_index56 = 0;\n    let mut ", "    let mut min_change\
    \ = arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;", "    let mut min_change = isize::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let\
    \ mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let mut min_change_index7\
    \ = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n\
    \    let mut min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n  \
    \  let mut min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n    let\
    \ mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n    let mut min_change_index18\
    \ = 0;\n    let mut min_change_index19 = 0;\n    let mut min_change_index20 =\
    \ 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n\
    \    let mut min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n  \
    \  let mut min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n    let\
    \ mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n    let mut\
    \ min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n    let mut min_change_index31\
    \ = 0;\n    let mut min_change_index32 = 0;\n    let mut min_change_index33 =\
    \ 0;\n    let mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n\
    \    let mut min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n  \
    \  let mut min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n    let\
    \ mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n    let mut\
    \ min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n    let mut min_change_index44\
    \ = 0;\n    let mut min_change_index45 = 0;\n    let mut min_change_index46 =\
    \ 0;\n    let mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n\
    \    let mut min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n  \
    \  let mut min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n    let\
    \ mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n    let mut\
    \ min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n    let ", " \
    \   let mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n    let mut\
    \ min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let mut min_change_index6\
    \ = 0;\n    let mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n\
    \    let mut min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n   \
    \ let mut min_change_index11 = 0;\n    let mut min_change_index12 = 0;\n    let\
    \ mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n    let mut\
    \ min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n    let mut min_change_index17\
    \ = 0;\n    let mut min_change_index18 = 0;\n    let mut min_change_index19 =\
    \ 0;\n    let mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n\
    \    let mut min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n  \
    \  let mut min_change_index24 = 0;\n    let mut min_change_index25 = 0;\n    let\
    \ mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n    let mut\
    \ min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n    let mut min_change_index30\
    \ = 0;\n    let mut min_change_index31 = 0;\n    let mut min_change_index32 =\
    \ 0;\n    let mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n\
    \    let mut min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n  \
    \  let mut min_change_index37 = 0;\n    let mut min_change_index38 = 0;\n    let\
    \ mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n    let mut\
    \ min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n    let mut min_change_index43\
    \ = 0;\n    let mut min_change_index44 = 0;\n    let mut min_change_index45 =\
    \ 0;\n    let mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n\
    \    let mut min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n  \
    \  let mut min_change_index50 = 0;\n    let mut min_change_index51 = 0;\n    let\
    \ mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n    let mut\
    \ min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n    let mut min_change_index56\
    \ = 0;\n    let mut ", "    let mut min_change = arr.len();\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let ", "    let mut min_change = std::i32::MAX;\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n\
    \    let mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let\
    \ mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let mut\
    \ min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_index10\
    \ = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_index12 =\
    \ 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n\
    \    let mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n  \
    \  let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n    let\
    \ mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n    let mut\
    \ min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_index23\
    \ = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_index25 =\
    \ 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n\
    \    let mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n  \
    \  let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n    let\
    \ mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n    let mut\
    \ min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let mut min_change_index36\
    \ = 0;\n    let mut min_change_index37 = 0;\n    let mut min_change_index38 =\
    \ 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n\
    \    let mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n  \
    \  let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n    let\
    \ mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n    let mut\
    \ min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let mut min_change_index49\
    \ = 0;\n    let mut min_change_index50 = 0;\n    let mut min_change_index51 =\
    \ 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n\
    \    let mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n  \
    \  let mut min_change_index56 = 0;\n    let ", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_count = 0;\n    let\
    \ mut min_change_pal = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n    let mut min_change_pal_count = 0;\n    let mut\
    \ min_change_pal_index = 0;\n", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    let mut i = 0;\n    while i < arr.len() && min_change == *arr.iter().rev().nth(i).unwrap()\
    \ {\n        i += 1;\n    }\n    i", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    for index in 0..arr.len() {\n        let\
    \ mut change = std::i32::MAX;\n        let mut change_index = 0;\n        while\
    \ change_index < arr.len() && change > min_change {\n            change = std::cmp::min(change,\
    \ arr[index] - arr[index - change_index]);\n            change_index += 1;\n \
    \       }\n        if change < min_change {\n            min_change = change;\n\
    \            min_change_index = index;\n        }\n    }\n    min_change_index",
  "    let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n  \
    \  let mut min_change_len = arr.len();\n    for i in 0..arr.len() {\n        let\
    \ mut min_change = std::i32::MAX;\n        let mut min_change_index = 0;\n   \
    \     let mut min_change_len = arr.len();\n        for j in 0..arr.len() {\n \
    \           if i != j {\n                if arr[j] < arr[i] {\n              \
    \      min_change = std::i32::MAX;\n                    min_change_index = j;\n\
    \                    min_change_len = arr.len();\n                } else {\n \
    \                   min_change = std::i32::MAX;\n                    min_change_index\
    \ = i;\n                    min_change_len = arr.len();\n                }\n \
    \           }\n        }\n        if min_change < min_change_len {\n         \
    \   min_change = min_change_len;\n            min_change_index = i;\n        }\n\
    \    }\n    min_change", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>().len(),\
    \ *arr.iter().cloned().collect::<Vec<_>>().len());\n    for &i in arr.iter() {\n\
    \        if *i < min_change {\n            min_change = *i;\n        }\n    }\n\
    \    min_change", "    let mut min_change = arr.len() as isize;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev = arr.len() - 1;\n    let mut min_change_rev_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev_idx_idx = arr.len() - 1;\n    let\
    \ mut min_change_rev_idx_idx_idx = arr.len() - 1;\n    let mut min_change_rev_idx_idx_idx_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx = arr.len()\
    \ - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx_idx = arr.len() - 1;\n\
    \    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx = arr.len() - 1;\n   \
    \ let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx = arr.len() - 1;\n  \
    \  let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx = arr.len() - 1;\n\
    \    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx = arr.len()\
    \ - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx\
    \ = arr.len() - 1;\n    let mut min_change_rev_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_idx_",
  "    let mut min_change = isize::MAX;\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_palindromic = false;\n    let mut min_change_palindromic_index\
    \ = 0;\n    for &i in arr.iter().rev() {\n        if min_change > i {\n      \
    \      min_change = i;\n            min_change_palindromic = true;\n         \
    \   min_change_palindromic_index = i;\n        }\n    }\n    for &i in arr.iter()\
    \ {\n        if min_change > i {\n            min_change = i;\n            min_change_palindromic\
    \ = false;\n        }\n    }\n    if min_change == isize::MAX {\n        return\
    \ 0;\n    }\n    if min_change_palindromic == true {\n        min_change = min_change_palindromic_index;\n\
    \    }\n    if min_change == isize::MAX {\n        return 0;\n    }\n    return\
    \ min_change;", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    let mut min_change_count = 0;\n    for &i in arr {\n        if *i != min_change\
    \ {\n            min_change_count = min_change_count + 1;\n            min_change\
    \ = *i;\n        }\n    }\n    min_change_count", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_count = 0;\n    let\
    \ mut min_change_index2 = 0;\n    let mut min_change_count2 = 0;\n    let mut\
    \ min_change_index3 = 0;\n    let mut min_change_count3 = 0;\n    let mut min_change_index4\
    \ = 0;\n    let mut min_change_count4 = 0;\n    let mut min_change_index5 = 0;\n\
    \    let mut min_change_count5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_count6 = 0;\n    let mut min_change_index7 = 0;\n    let mut\
    \ min_change_count7 = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_count8\
    \ = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_count9 = 0;\n\
    \    let mut min_change_index10 = 0;\n    let mut min_change_count10 = 0;\n  \
    \  let mut min_change_index11 = 0;\n    let mut min_change_count11 = 0;\n    let\
    \ mut min_change_index12 = 0;\n    let mut min_change_count12 = 0;\n    let mut\
    \ min_change_index13 = 0;\n    let mut min_change_count13 = 0;\n    let mut min_change_index14\
    \ = 0;\n    let mut min_change_count14 = 0;\n    let mut min_change_index15 =\
    \ 0;\n    let mut min_change_count15 = 0;\n    let mut min_change_index16 = 0;\n\
    \    let mut min_change_count16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_count17 = 0;\n    let mut min_change_index18 = 0;\n    let\
    \ mut min_change_count18 = 0;\n    let mut min_change_index19 = 0;\n    let mut\
    \ min_change_count19 = 0;\n    let mut min_change_index20 = 0;\n    let mut min_change_count20\
    \ = 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_count21 =\
    \ 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_count22 = 0;\n\
    \    let mut min_change_index23 = 0;\n    let mut min_change_count23 = 0;\n  \
    \  let mut min_change_index24 = 0;\n    let mut min_change_count24 = 0;\n    let\
    \ mut min_change_index25 = 0;\n    let mut min_change_count25 = 0;\n    let mut\
    \ min_change_index26 = 0;\n    let mut min_change_count26 = 0;\n    let mut min_change_index27\
    \ = 0;\n    let mut min_change_count27 = 0;\n    let mut min_change_index28 =\
    \ 0;\n    let mut min_change_count28 = 0;\n    let mut min_change_index", "  \
    \  let mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let ", " \
    \   let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n \
    \   let mut min_change_len = arr.len();\n    let mut min_change_len_index = 0;\n\
    \    let mut min_change_len_value = std::i32::MAX;\n    let mut min_change_len_value_index\
    \ = 0;\n    let mut min_change_len_value_value = std::i32::MAX;\n    let mut min_change_len_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value = std::i32::MAX;\n    let\
    \ mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = std::i32::MAX;\n    let mut min_change_len_value_value_value_index = 0;\n\
    \    let mut min_change_len_value_value_value_value = std::i32::MAX;\n    let\
    \ mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = std::i32::MAX;\n    let mut min_change_len_value_value_value_index = 0;\n\
    \    let mut min_change_len_value_value_value_value = std::i32::MAX;\n    let\
    \ mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = std::i32::MAX;\n    let mut min_change_len_value_value_value_index = 0;\n\
    \    let mut min_change_len_value_value_value_value = std::i32::MAX;\n    let\
    \ mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = std::i32::MAX;\n    let mut min_change_len_value_value_value_index = 0;\n\
    \    let mut min_change_len_value_value_value_value = std::i32::MAX;\n    let\
    \ mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = std::i32::MAX;\n    let mut min_change_len_value_value_value_index = 0;\n\
    \    let mut min_change_len_value_value_value_value = std::i32::MAX;\n    let\
    \ mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = std::i32::MAX;\n    let mut min_change_len_value_value_value_index = 0;\n\
    \    let mut min_change_len_value_value_value_value = std::i32::MAX;\n    let\
    \ mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = std::i32::MAX;\n    let mut min_change_len_value_value_value_index = 0;\n\
    \    let mut min_change_len_value_value_value_value = std::i32::MAX;\n    let\
    \ mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len",
  "    let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n  \
    \  let mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n    let\
    \ mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let mut\
    \ min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let mut min_change_index8\
    \ = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n\
    \    let mut min_change_index11 = 0;\n    let mut min_change_index12 = 0;\n  \
    \  let mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n    let\
    \ mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n    let mut\
    \ min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n    let mut min_change_index19\
    \ = 0;\n    let mut min_change_index20 = 0;\n    let mut min_change_index21 =\
    \ 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n\
    \    let mut min_change_index24 = 0;\n    let mut min_change_index25 = 0;\n  \
    \  let mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n    let\
    \ mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n    let mut\
    \ min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n    let mut min_change_index32\
    \ = 0;\n    let mut min_change_index33 = 0;\n    let mut min_change_index34 =\
    \ 0;\n    let mut min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n\
    \    let mut min_change_index37 = 0;\n    let mut min_change_index38 = 0;\n  \
    \  let mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n    let\
    \ mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n    let mut\
    \ min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n    let mut min_change_index45\
    \ = 0;\n    let mut min_change_index46 = 0;\n    let mut min_change_index47 =\
    \ 0;\n    let mut min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n\
    \    let mut min_change_index50 = 0;\n    let mut min_change_index51 = 0;\n  \
    \  let mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n    let\
    \ mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n    let mut\
    \ min_change_index56 = 0;\n    let ", "    let mut min_change = std::cmp::min::Default::default();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_palindromic = false;\n\
    \    for index in 0..arr.len() {\n        let mut change = arr[index];\n     \
    \   let mut palindromic = true;\n        for index in 0..index {\n           \
    \ if arr[index] != arr[index + index] {\n                palindromic = false;\n\
    \                break;\n            }\n        }\n        if palindromic == min_change_palindromic\
    \ {\n            min_change_palindromic = false;\n            min_change = change;\n\
    \            min_change_index = index;\n        } else {\n            min_change_palindromic\
    \ = palindromic;\n        }\n    }\n    min_change", "    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let ", "    let mut min_change\
    \ = isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len =\
    \ min_change_len - 1;\n    let mut min_change_len = min_change_len / 2;\n    let\
    \ mut min_change_len = min_change_len - 1;\n    let mut min_change_len = min_change_len\
    \ / 2;\n    let mut min_change_len = min_change_len - 1;\n    let mut min_change_len\
    \ = min_change_len / 2;\n    let mut min_change_len = min_change_len - 1;\n  \
    \  let mut min_change_len = min_change_len / 2;\n    let mut min_change_len =\
    \ min_change_len - 1;\n    let mut min_change_len = min_change_len / 2;\n    let\
    \ mut min_change_len = min_change_len - 1;\n    let mut min_change_len = min_change_len\
    \ / 2;\n    let mut min_change_len = min_change_len - 1;\n    let mut min_change_len\
    \ = min_change_len / 2;\n    let mut min_change_len = min_change_len - 1;\n  \
    \  let mut min_change_len = min_change_len / 2;\n    let mut min_change_len =\
    \ min_change_len - 1;\n    let mut min_change_len = min_change_len / 2;\n    let\
    \ mut min_change_len = min_change_len - 1;\n    let mut min_change_len = min_change_len\
    \ / 2;\n    let mut min_change_len = min_change_len - 1;\n    let mut min_change_len\
    \ = min_change_len / 2;\n    let mut min_change_len = min_change_len - 1;\n  \
    \  let mut min_change_len = min_change_len / 2;\n    let mut min_change_len =\
    \ min_change_len - 1;\n    let mut min_change_len = min_change_len / 2;\n    let\
    \ mut min_change_len = min_change_len - 1;\n    let mut min_change_len = min_change_len\
    \ / 2;\n    let mut min_change_len = min_change_len - 1;\n    let mut min_change_len\
    \ = min_change_len / 2;\n    let mut min_change_len = min_change_len - 1;\n  \
    \  let mut min_change_len = min_change_len / 2;\n    let mut min_change_len =\
    \ min_change_len - 1;\n    let mut min_change_len = min_change_len / 2;\n    let\
    \ mut min_change_len = min_change_len - 1;\n    let mut min_change_len = min_change_len\
    \ / 2;\n    let mut min_change_len = min_change_len - 1;\n    let mut min_change_len\
    \ = min_change_len / 2;\n    let mut min_change_len = min_change_len - 1;\n  \
    \  let mut min_change_len = ", "    let mut min_change = isize::MAX;\n    let\
    \ mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_index3\
    \ = 0;\n    let mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n\
    \    let mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let\
    \ mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let mut\
    \ min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_index12\
    \ = 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14 =\
    \ 0;\n    let mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n\
    \    let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n  \
    \  let mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n    let\
    \ mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let mut\
    \ min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_index25\
    \ = 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27 =\
    \ 0;\n    let mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n\
    \    let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n  \
    \  let mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n    let\
    \ mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let mut\
    \ min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n    let mut min_change_index38\
    \ = 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40 =\
    \ 0;\n    let mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n\
    \    let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n  \
    \  let mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n    let\
    \ mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let mut\
    \ min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n    let mut min_change_index51\
    \ = 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53 =\
    \ 0;\n    let mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n\
    \    let mut min_change_index56 = 0;\n    let ", "    let mut min_change = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_rev = arr.len();\n\
    \    let mut min_change_rev_idx = arr.len();\n    let mut min_change_rev_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx = arr.len();\n    let\
    \ mut min_change_rev_rev_idx_rev_idx_rev_idx = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx\
    \ = arr.len();\n    let mut min_change_rev_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev_idx_rev",
  "    let mut min_change = isize::MAX;\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_val = arr[0];\n    for &i in arr {\n        if i == min_change_val\
    \ {\n            min_change = min_change_index + 1;\n            min_change_val\
    \ = i;\n        }\n        if min_change > i {\n            min_change = i;\n\
    \            min_change_index = i;\n        }\n    }\n    min_change", "    let\
    \ mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let mut\
    \ min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = min_change_len;\n    let mut min_change_len\
    \ = min_change_len;\n    let mut min_change_len = min_change_len;\n    let mut\
    \ min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_",
  "    let mut min_change = isize::MAX;\n    let mut min_change_index = -1;\n    for\
    \ &i in arr.iter().rev() {\n        if i != arr.get(min_change_index) {\n    \
    \        min_change = i;\n            min_change_index = i;\n        }\n    }\n\
    \    min_change_index", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>().len(),\
    \ *arr.iter().cloned().collect::<Vec<_>>().len());\n    for i in 0..min_change\
    \ {\n        if arr[i] != arr[*arr.iter().rev().skip(i).rev().next().unwrap()]\
    \ {\n            min_change = i;\n        }\n    }\n    min_change", "    let\
    \ mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let mut\
    \ min_change_len = arr.len();\n    let mut min_change_len_index = 0;\n    let\
    \ mut min_change_len_len = arr.len();\n    let mut min_change_len_index2 = 0;\n\
    \    let mut min_change_len_len2 = arr.len();\n    let mut min_change_len_index3\
    \ = 0;\n    let mut min_change_len_len3 = arr.len();\n    let mut min_change_len_index4\
    \ = 0;\n    let mut min_change_len_len4 = arr.len();\n    let mut min_change_len_index5\
    \ = 0;\n    let mut min_change_len_len5 = arr.len();\n    let mut min_change_len_index6\
    \ = 0;\n    let mut min_change_len_len6 = arr.len();\n    let mut min_change_len_index7\
    \ = 0;\n    let mut min_change_len_len7 = arr.len();\n    let mut min_change_len_index8\
    \ = 0;\n    let mut min_change_len_len8 = arr.len();\n    let mut min_change_len_index9\
    \ = 0;\n    let mut min_change_len_len9 = arr.len();\n    let mut min_change_len_index10\
    \ = 0;\n    let mut min_change_len_len10 = arr.len();\n    let mut min_change_len_index11\
    \ = 0;\n    let mut min_change_len_len11 = arr.len();\n    let mut min_change_len_index12\
    \ = 0;\n    let mut min_change_len_len12 = arr.len();\n    let mut min_change_len_index13\
    \ = 0;\n    let mut min_change_len_len13 = arr.len();\n    let mut min_change_len_index14\
    \ = 0;\n    let mut min_change_len_len14 = arr.len();\n    let mut min_change_len_index15\
    \ = 0;\n    let mut min_change_len_len15 = arr.len();\n    let mut min_change_len_index16\
    \ = 0;\n    let mut min_change_len_len16 = arr.len();\n    let mut min_change_len_index17\
    \ = 0;\n    let mut min_change_len_len17 = arr.len();\n    let mut min_change_len_index18\
    \ = 0;\n    let mut min_change_len_len18 = arr.len();\n    let mut min_change_len_index19\
    \ = 0;\n    let mut min_change_len_len19 = arr.len();\n    let mut min_change_len_index20\
    \ = 0;\n    let mut min_change_len_len20 = arr.len();\n    let mut min_change_len_index21\
    \ = 0;\n    let mut min_change_len_len21 = arr.len();\n    let mut min_change_len_index22\
    \ = 0;\n    let mut min_change_len_len22 = ", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_rev_index = 0;\n  \
    \  let mut min_change_rev_len = 0;\n    let mut min_change_rev_len_index = 0;\n\
    \    let mut min_change_rev_len_rev_index = 0;\n    let mut min_change_rev_len_rev_index2\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_index = 0;\n    let mut min_change_rev_len_rev_index2_rev_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index = 0;\n    let\
    \ mut min_change_rev_len_rev_index2_rev_index_index2 = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index_index2\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index_index2_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index_index2_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index_index2_index2\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index_index2_index2_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index_index2_index2_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index_index2_index2_index2\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index2_index2_index2_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index2_index2_index2_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index2_index2_index2_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index2_index2_index2_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index2_index2_index2_index2\
    \ = 0;\n    let mut min_change_rev_len_rev_index2_rev_index_index2_index2_index2_index2_index2\
    \ = 0;\n    let mut min_change_rev_", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    for &x in arr.iter() {\n        if x == min_change {\n            min_change\
    \ = x;\n        }\n    }\n    min_change", "    let mut min_change = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg = 0;\n  \
    \  let mut min_change_val_neg_idx = 0;\n    let mut min_change_val_neg_val = 0;\n\
    \    let mut min_change_val_neg_val_pos = 0;\n    let mut min_change_val_neg_val_neg\
    \ = 0;\n    let mut min_change_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_pos = 0;\n    let mut min_change_val_neg_val_neg_val_neg\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = -1;\n    let mut min_change_len = std::i32::MAX;\n\
    \    let mut min_change_len_index = -1;\n    for i in arr.iter().rev() {\n   \
    \     let len = arr.len() - i;\n        if len < min_change_len {\n          \
    \  min_change_len = len;\n            min_change_len_index = i;\n        }\n \
    \       if len < min_change {\n            min_change = len;\n            min_change_index\
    \ = i;\n        }\n    }\n    min_change_index", "    let mut min_change = isize::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_pos = 0;\n    let mut\
    \ min_change_len = arr.len();\n    let mut min_change_len = min_change_len.saturating_sub(isize::MAX);\n\
    \    while min_change_len > 0 {\n        let mut min_change_len = min_change_len.saturating_sub(isize::MAX);\n\
    \        let mut min_change_pos = min_change_len;\n        let mut min_change_pos\
    \ = min_change_pos.saturating_sub(1);\n        let mut min_change_len = min_change_len.saturating_sub(1);\n\
    \        for index in min_change_pos..min_change_len {\n            if arr[index]\
    \ != arr[arr.len() - index - 1] {\n                min_change_len = index;\n \
    \               min_change_pos = index;\n            }\n        }\n        if\
    \ min_change_len < min_change {\n            min_change = min_change_len;\n  \
    \          min_change_index = min_change_pos;\n        }\n    }\n    min_change_index",
  "    let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n  \
    \  let mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n    let\
    \ mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let mut\
    \ min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let mut min_change_index8\
    \ = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n\
    \    let mut min_change_index11 = 0;\n    let mut min_change_index12 = 0;\n  \
    \  let mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n    let\
    \ mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n    let mut\
    \ min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n    let mut min_change_index19\
    \ = 0;\n    let mut min_change_index20 = 0;\n    let mut min_change_index21 =\
    \ 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n\
    \    let mut min_change_index24 = 0;\n    let mut min_change_index25 = 0;\n  \
    \  let mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n    let\
    \ mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n    let mut\
    \ min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n    let mut min_change_index32\
    \ = 0;\n    let mut min_change_index33 = 0;\n    let mut min_change_index34 =\
    \ 0;\n    let mut min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n\
    \    let mut min_change_index37 = 0;\n    let mut min_change_index38 = 0;\n  \
    \  let mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n    let\
    \ mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n    let mut\
    \ min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n    let mut min_change_index45\
    \ = 0;\n    let mut min_change_index46 = 0;\n    let mut min_change_index47 =\
    \ 0;\n    let mut min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n\
    \    let mut min_change_index50 = 0;\n    let mut min_change_index51 = 0;\n  \
    \  let mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n    let\
    \ mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n    let mut\
    \ min_change_index56 = 0;\n    let ", "    let mut min_change = arr.len();\n \
    \   let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let ", "    let mut min_change = isize::MAX;\n\
    \    let mut min_change_index = -1;\n    let mut i = 0;\n    let mut j = arr.len()\
    \ - 1;\n    while i < j {\n        if arr[i] > arr[j] {\n            i += 1;\n\
    \        } else {\n            j -= 1;\n        }\n        if i == j {\n     \
    \       min_change = std::cmp::min(min_change, j - i + 1);\n            min_change_index\
    \ = i;\n        }\n    }\n    min_change", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let\
    \ mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let mut min_change_index7\
    \ = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n\
    \    let mut min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n  \
    \  let mut min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n    let\
    \ mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n    let mut min_change_index18\
    \ = 0;\n    let mut min_change_index19 = 0;\n    let mut min_change_index20 =\
    \ 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n\
    \    let mut min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n  \
    \  let mut min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n    let\
    \ mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n    let mut\
    \ min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n    let mut min_change_index31\
    \ = 0;\n    let mut min_change_index32 = 0;\n    let mut min_change_index33 =\
    \ 0;\n    let mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n\
    \    let mut min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n  \
    \  let mut min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n    let\
    \ mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n    let mut\
    \ min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n    let mut min_change_index44\
    \ = 0;\n    let mut min_change_index45 = 0;\n    let mut min_change_index46 =\
    \ 0;\n    let mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n\
    \    let mut min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n  \
    \  let mut min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n    let\
    \ mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n    let mut\
    \ min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n    let ", " \
    \   let mut min_change = isize::MAX;\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_count = 0;\n    let mut min_change_palindrome = false;\n    let\
    \ mut min_change_palindrome_index = 0;\n    let mut min_change_palindrome_count\
    \ = 0;\n    let mut min_change_palindrome_changed = false;\n    let mut min_change_palindrome_change_index\
    \ = 0;\n    let mut min_change_palindrome_change_count = 0;\n    let mut min_change_palindrome_change_changed\
    \ = false;\n    let mut min_change_palindrome_change_change_index = 0;\n    let\
    \ mut min_change_palindrome_change_change_count = 0;\n    for &i in arr {\n  \
    \      if min_change > i {\n            min_change = i;\n            min_change_index\
    \ = i;\n            min_change_count = 1;\n            min_change_palindrome =\
    \ false;\n            min_change_palindrome_index = i;\n            min_change_palindrome_count\
    \ = 1;\n            min_change_palindrome_changed = false;\n            min_change_palindrome_change_index\
    \ = i;\n            min_change_palindrome_change_count = 1;\n            min_change_palindrome_change_changed\
    \ = false;\n            min_change_palindrome_change_change_index = i;\n     \
    \       min_change_palindrome_change_change_count = 1;\n        }\n        if\
    \ min_change == i {\n            min_change_count += 1;\n            if min_change_count\
    \ == 2 {\n                min_change_palindrome = true;\n                min_change_palindrome_index\
    \ = i;\n                min_change_palindrome_count = 1;\n                min_change_palindrome_changed\
    \ = false;\n                min_change_palindrome_change_index = i;\n        \
    \        min_change_palindrome_change_count = 1;\n                min_change_palindrome_change_changed\
    \ = false;\n                min_change_palindrome_change_change_index = i;\n \
    \               min_change_palindrome_change_change_count = 1;\n            }\n\
    \            if min_change_count == 3 {\n                min_change_palindrome_changed\
    \ = true;\n                min_change_palindrome_change_index = i;\n         \
    \       min_change_palindrome_change_count = 1;\n                min_change_palindrome_change_changed\
    \ = false;\n                min_change_palindrome_change_change_index = i;\n \
    \               min_change_palindrome_change_change_count = 1;\n             \
    \   min_change_palindrome_change_change_changed = false;\n                min_change_palindrome_change_change_change_index\
    \ = i;\n                min_change_palindrome_change_change_change_count = 1;\n\
    \            }\n            if min_change_count == 4 {\n                min_change_palindrome_change_changed\
    \ = true;\n                min_change_palindro", "    let mut min_change = std::cmp::max(isize::MIN,\
    \ isize::MAX);\n    let mut min_change_idx = -1;\n    let mut min_change_idx =\
    \ -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n  \
    \  let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_", "    let mut min_change\
    \ = arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_value\
    \ = arr[0];\n    for &i in arr {\n        if min_change_value < i {\n        \
    \    min_change = i;\n            min_change_index = i;\n            min_change_value\
    \ = i;\n        }\n    }\n    for i in 0..arr.len() {\n        if min_change_value\
    \ == arr[i] {\n            min_change = i;\n            min_change_index = i;\n\
    \            min_change_value = arr[i];\n        }\n    }\n    min_change", " \
    \   let mut min_change = isize::MAX;\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_val = arr[0];\n    for &i in arr {\n        if i == min_change_val\
    \ {\n            min_change = min_change_index + 1;\n            min_change_val\
    \ = i;\n        } else {\n            min_change = min_change_index;\n       \
    \     min_change_val = i;\n        }\n        min_change_index = min_change_index\
    \ + 1;\n    }\n    min_change", "    let mut min_change = std::i32::MAX;\n   \
    \ let mut min_change_index = 0;\n    let mut min_change_palindromic = false;\n\
    \    for &i in arr {\n        if min_change > i {\n            min_change = i;\n\
    \            min_change_index = i;\n            min_change_palindromic = true;\n\
    \        }\n    }\n    if min_change_palindromic {\n        min_change_index\n\
    \    } else {\n        min_change\n    }", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_count = 0;\n    for\
    \ &i in arr {\n        if min_change > i {\n            min_change = i;\n    \
    \        min_change_index = i;\n            min_change_count = 1;\n        } else\
    \ {\n            min_change_count += 1;\n        }\n    }\n    if min_change_count\
    \ == 0 {\n        return 0;\n    }\n    let mut min_change_count_index = 0;\n\
    \    for &i in arr {\n        if min_change == i {\n            min_change_count_index\
    \ += 1;\n        }\n    }\n    if min_change_count_index == min_change_index {\n\
    \        return min_change_count;\n    }\n    let mut min_change_count_index2\
    \ = 0;\n    for &i in arr {\n        if min_change == i {\n            min_change_count_index2\
    \ += 1;\n        }\n    }\n    if min_change_count_index2 == min_change_index\
    \ {\n        return min_change_count;\n    }\n    let mut min_change_count_index3\
    \ = 0;\n    for &i in arr {\n        if min_change == i {\n            min_change_count_index3\
    \ += 1;\n        }\n    }\n    if min_change_count_index3 == min_change_index\
    \ {\n        return min_change_count;\n    }\n    let mut min_change_count_index4\
    \ = 0;\n    for &i in arr {\n        if min_change == i {\n            min_change_count_index4\
    \ += 1;\n        }\n    }\n    if min_change_count_index4 == min_change_index\
    \ {\n        return min_change_count;\n    }\n    let mut min_change_count_index5\
    \ = 0;\n    for &i in arr {\n        if min_change == i {\n            min_change_count_index5\
    \ += 1;\n        }\n    }\n    if min_change_count_index5 == min_change_index\
    \ {\n        return min_change_count;\n    }\n    let mut min_change_count_index6\
    \ = 0;\n    for &i in arr {\n        if min_change == i {\n            min_change_count_index6\
    \ += 1;\n        }\n    }\n    if min_change_count_index6 == min_change_index\
    \ {\n        return min_change_count;\n    }\n    let mut min_change_count_index7\
    \ = 0;\n    for &i in arr {\n        if min_change == i {\n            min_change_count_index7\
    \ += 1;\n        }\n    }\n    if min_change_count_index7 == min_change_index\
    \ {\n        return min_change_count;\n    }\n    let mut min_change_count_index8\
    \ = 0;\n    for &i in arr {\n        if min_change == i {\n            min_change_count_index8\
    \ += 1;\n        }\n    }\n    if min_change_count_index8 == min_change_index\
    \ {\n        return min_change_count;\n    }\n    let mu", "    let mut min_change\
    \ = std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_val\
    \ = std::i32::MAX;\n    let mut min_change_val_i = -1;\n    let mut min_change_val_j\
    \ = -1;\n    let mut min_change_val_k = -1;\n    let mut min_change_val_l = -1;\n\
    \    let mut min_change_val_m = -1;\n    let mut min_change_val_n = -1;\n    let\
    \ mut min_change_val_o = -1;\n    let mut min_change_val_q = -1;\n    let mut\
    \ min_change_val_r = -1;\n    let mut min_change_val_s = -1;\n    let mut min_change_val_t\
    \ = -1;\n    let mut min_change_val_tt = -1;\n    let mut min_change_val_u = -1;\n\
    \    let mut min_change_val_v = -1;\n    let mut min_change_val_w = -1;\n    let\
    \ mut min_change_val_x = -1;\n    let mut min_change_val_y = -1;\n    let mut\
    \ min_change_val_z = -1;\n    let mut min_change_val_aa = -1;\n    let mut min_change_val_ab\
    \ = -1;\n    let mut min_change_val_ac = -1;\n    let mut min_change_val_ad =\
    \ -1;\n    let mut min_change_val_ae = -1;\n    let mut min_change_val_af = -1;\n\
    \    let mut min_change_val_ag = -1;\n    let mut min_change_val_ah = -1;\n  \
    \  let mut min_change_val_ai = -1;\n    let mut min_change_val_aj = -1;\n    let\
    \ mut min_change_val_ak = -1;\n    let mut min_change_val_al = -1;\n    let mut\
    \ min_change_val_am = -1;\n    let mut min_change_val_an = -1;\n    let mut min_change_val_ao\
    \ = -1;\n    let mut min_change_val_ap = -1;\n    let mut min_change_val_aq =\
    \ -1;\n    let mut min_change_val_ar = -1;\n    let mut min_change_val_as = -1;\n\
    \    let mut min_change_val_at = -1;\n    let mut min_change_val_au = -1;\n  \
    \  let mut min_change_val_av = -1;\n    let mut min_change_val_aw = -1;\n    let\
    \ mut min_change_val_ax = -1;\n    let mut min_change_val_ay = -1;\n    let mut\
    \ min_change_val_az = -1;\n    let mut min_change_val_ba = -1;\n    let mut min_change_val_bb\
    \ = -1;\n    let mut min_change_val_bc = -1;\n    let mut min_change_val_bd =\
    \ -1;\n    let mut min_change_val_be = -1;\n    let mut min_change_val_bf = -1;",
  "    let mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n\
    \    let mut min_change_value = arr[0];\n    let mut min_change_index = arr.len();\n",
  "    let mut min_change = isize::MAX;\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n    let mut\
    \ min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let mut min_change_index6\
    \ = 0;\n    let mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n\
    \    let mut min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n   \
    \ let mut min_change_index11 = 0;\n    let mut min_change_index12 = 0;\n    let\
    \ mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n    let mut\
    \ min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n    let mut min_change_index17\
    \ = 0;\n    let mut min_change_index18 = 0;\n    let mut min_change_index19 =\
    \ 0;\n    let mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n\
    \    let mut min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n  \
    \  let mut min_change_index24 = 0;\n    let mut min_change_index25 = 0;\n    let\
    \ mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n    let mut\
    \ min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n    let mut min_change_index30\
    \ = 0;\n    let mut min_change_index31 = 0;\n    let mut min_change_index32 =\
    \ 0;\n    let mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n\
    \    let mut min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n  \
    \  let mut min_change_index37 = 0;\n    let mut min_change_index38 = 0;\n    let\
    \ mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n    let mut\
    \ min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n    let mut min_change_index43\
    \ = 0;\n    let mut min_change_index44 = 0;\n    let mut min_change_index45 =\
    \ 0;\n    let mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n\
    \    let mut min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n  \
    \  let mut min_change_index50 = 0;\n    let mut min_change_index51 = 0;\n    let\
    \ mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n    let mut\
    \ min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n    let mut min_change_index56\
    \ = 0;\n    let ", "    let mut min_change = std::i32::MAX;\n    let mut min_change_index\
    \ = -1;\n    let mut min_change_count = 0;\n    let mut min_change_arr = vec![];\n\
    \    for i in arr.iter().rev() {\n        if min_change_count > min_change {\n\
    \            min_change = min_change_count;\n            min_change_index = i;\n\
    \            min_change_arr = min_change_arr;\n        }\n        min_change_arr.push(i);\n\
    \        min_change_count += 1;\n    }\n    min_change_arr.len()", "    let mut\
    \ min_change = arr.len();\n    let mut min_change_index = arr.len();\n    let\
    \ mut min_change_index2 = arr.len();\n    let mut min_change_index3 = arr.len();\n\
    \    let mut min_change_index4 = arr.len();\n    let mut min_change_index5 = arr.len();\n\
    \    let mut min_change_index6 = arr.len();\n    let mut min_change_index7 = arr.len();\n\
    \    let mut min_change_index8 = arr.len();\n    let mut min_change_index9 = arr.len();\n\
    \    let mut min_change_index10 = arr.len();\n    let mut min_change_index11 =\
    \ arr.len();\n    let mut min_change_index12 = arr.len();\n    let mut min_change_index13\
    \ = arr.len();\n    let mut min_change_index14 = arr.len();\n    let mut min_change_index15\
    \ = arr.len();\n    let mut min_change_index16 = arr.len();\n    let mut min_change_index17\
    \ = arr.len();\n    let mut min_change_index18 = arr.len();\n    let mut min_change_index19\
    \ = arr.len();\n    let mut min_change_index20 = arr.len();\n    let mut min_change_index21\
    \ = arr.len();\n    let mut min_change_index22 = arr.len();\n    let mut min_change_index23\
    \ = arr.len();\n    let mut min_change_index24 = arr.len();\n    let mut min_change_index25\
    \ = arr.len();\n    let mut min_change_index26 = arr.len();\n    let mut min_change_index27\
    \ = arr.len();\n    let mut min_change_index28 = arr.len();\n    let mut min_change_index29\
    \ = arr.len();\n    let mut min_change_index30 = arr.len();\n    let mut min_change_index31\
    \ = arr.len();\n    let mut min_change_index32 = arr.len();\n    let mut min_change_index33\
    \ = arr.len();\n    let mut min_change_index34 = arr.len();\n    let mut min_change_index35\
    \ = arr.len();\n    let mut min_change_index36 = arr.len();\n    let mut min_change_index37\
    \ = arr.len();\n    let mut min_change_index38 = arr.len();\n    let mut min_change_index39\
    \ = arr.len();\n    let mut min_change_index40 = arr.len();\n    let mut min_change_index41\
    \ = arr.len();\n    let mut min_change_index42 = arr.len();\n    let mut min_change_index43\
    \ = arr.len();", "    let mut min_change = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mu", "    let\
    \ mut min_change = arr.len() as isize;\n    let mut min_change_idx = arr.len()\
    \ - 1;\n    let mut min_change_val = arr[0];\n    let mut min_change_val_idx =\
    \ -1;\n    let mut min_change_val_prev = 0;\n    let mut min_change_val_next =\
    \ 0;\n    let mut min_change_val_prev_next = 0;\n    let mut min_change_val_next_prev\
    \ = 0;\n    let mut min_change_val_prev_next_next = 0;\n    let mut min_change_val_prev_next_next_next\
    \ = 0;\n    let mut min_change_val_prev_next_next_next = 0;\n    let mut min_change_val_prev_next_next_next_next\
    \ = 0;\n    let mut min_change_val_prev_next_next_next_next = 0;\n    let mut\
    \ min_change_val_prev_next_next_next_next = 0;\n    let mut min_change_val_prev_next_next_next_next\
    \ = 0;\n    let mut min_change_val_prev_next_next_next_next_next = 0;\n    let\
    \ mut min_change_val_prev_next_next_next_next_next = 0;\n    let mut min_change_val_prev_next_next_next_next_next\
    \ = 0;\n    let mut min_change_val_prev_next_next_next_next_next = 0;\n    let\
    \ mut min_change_val_prev_next_next_next_next_next = 0;\n    let mut min_change_val_prev_next_next_next_next_next\
    \ = 0;\n    let mut min_change_val_prev_next_next_next_next_next = 0;\n    let\
    \ mut min_change_val_prev_next_next_next_next_next = 0;\n    let mut min_change_val_prev_next_next_next_next_next\
    \ = 0;\n    let mut min_change_val_prev_next_next_next_next_next = 0;\n    let\
    \ mut min_change_val_prev_next_next_next_next_next = 0;\n    let mut min_change_val_prev_next_next_next_next_next\
    \ = 0;\n    let mut min_change_val_prev_next_next_next_next_next = 0;\n    let\
    \ mut min_change_val_prev_next_next_next_next_next = 0;\n    let mut min_change_val_prev_next_next_next_next_next\
    \ = 0;\n    let mut min_change_val_prev_next_next_next_next_next = 0;\n    let\
    \ mut min_change_val_prev_next_next_next_next_next = 0;\n    let mut min_change_val_prev_next_next_next_next_next\
    \ = 0;\n    let mut min_change_val_prev_next_next_next_next_next = 0;\n    let\
    \ mut min_change_val_prev_next_next_next_next_next = 0;\n    let mut min_change_val_prev_next_next_next_next_next\
    \ = 0;\n    let mut min_change_val_prev_next_next_next_next_next = 0;\n    let\
    \ mut min_change_val_prev_next_next_next_next_next = 0;\n    let mut min_change_val_prev_next_next_next_next_next\
    \ = 0;\n    let mut min_change_val_prev_next_next_next_", "    let mut min_change\
    \ = std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    let mut min_change_palindrome = false;\n    let mut min_change_palindrome_index\
    \ = 0;\n    let mut min_change_palindrome_count = 0;\n    for &i in arr {\n  \
    \      if min_change > i {\n            min_change = i;\n            min_change_index\
    \ = i;\n            min_change_count = 1;\n            min_change_palindrome =\
    \ false;\n            min_change_palindrome_index = i;\n            min_change_palindrome_count\
    \ = 1;\n        } else if min_change == i {\n            min_change_count += 1;\n\
    \            if min_change_count == 2 {\n                min_change_palindrome\
    \ = true;\n                min_change_palindrome_index = i;\n                min_change_palindrome_count\
    \ = 1;\n            } else if min_change_count == 3 {\n                min_change_palindrome\
    \ = true;\n                min_change_palindrome_index = i;\n                min_change_palindrome_count\
    \ = 2;\n            } else if min_change_count == 4 {\n                min_change_palindrome\
    \ = true;\n                min_change_palindrome_index = i;\n                min_change_palindrome_count\
    \ = 3;\n            } else if min_change_count == 5 {\n                min_change_palindrome\
    \ = true;\n                min_change_palindrome_index = i;\n                min_change_palindrome_count\
    \ = 4;\n            } else if min_change_count == 6 {\n                min_change_palindrome\
    \ = true;\n                min_change_palindrome_index = i;\n                min_change_palindrome_count\
    \ = 5;\n            } else if min_change_count == 7 {\n                min_change_palindrome\
    \ = true;\n                min_change_palindrome_index = i;\n                min_change_palindrome_count\
    \ = 6;\n            } else if min_change_count == 8 {\n                min_change_palindrome\
    \ = true;\n                min_change_palindrome_index = i;\n                min_change_palindrome_count\
    \ = 7;\n            } else if min_change_count == 9 {\n                min_change_palindrome\
    \ = true;\n                min_change_palindrome_index = i;\n                min_change_palindrome_count\
    \ = 8;\n            } else if min_change_count == 10 {\n                min_change_palindrome\
    \ = true;\n                min_change_palindrome_index = i;\n                min_change_palindrome_count\
    \ = 9;\n            } else if min_change_count == 11 {\n                min_change_palindrome\
    \ = true;\n                min_change_palindrome_index = i;\n                min_change_palindrome_count\
    \ = 10;\n            } else if min_change_", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>().len(),\
    \ *arr.iter().cloned().collect::<Vec<_>>().len());\n    for i in 0..min_change\
    \ {\n        if arr[i] != arr[*arr.len() - 1 - i] {\n            min_change =\
    \ i;\n        }\n    }\n    min_change", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut\
    \ min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let ", "    let mut min_change = isize::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let\
    \ mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let mut min_change_index7\
    \ = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n\
    \    let mut min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n  \
    \  let mut min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n    let\
    \ mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n    let mut min_change_index18\
    \ = 0;\n    let mut min_change_index19 = 0;\n    let mut min_change_index20 =\
    \ 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n\
    \    let mut min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n  \
    \  let mut min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n    let\
    \ mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n    let mut\
    \ min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n    let mut min_change_index31\
    \ = 0;\n    let mut min_change_index32 = 0;\n    let mut min_change_index33 =\
    \ 0;\n    let mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n\
    \    let mut min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n  \
    \  let mut min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n    let\
    \ mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n    let mut\
    \ min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n    let mut min_change_index44\
    \ = 0;\n    let mut min_change_index45 = 0;\n    let mut min_change_index46 =\
    \ 0;\n    let mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n\
    \    let mut min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n  \
    \  let mut min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n    let\
    \ mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n    let mut\
    \ min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n    let ", " \
    \   let mut min_change = std::cmp::Ordering::Equal;\n    let mut min_change_count\
    \ = 0;\n    let mut min_change_index = 0;\n    let mut min_change_index2 = -1;\n\
    \    let mut min_change_index3 = -1;\n    let mut min_change_index4 = -1;\n  \
    \  let mut min_change_index5 = -1;\n    let mut min_change_index6 = -1;\n    let\
    \ mut min_change_index7 = -1;\n    let mut min_change_index8 = -1;\n    let mut\
    \ min_change_index9 = -1;\n    let mut min_change_index10 = -1;\n    let mut min_change_index11\
    \ = -1;\n    let mut min_change_index12 = -1;\n    let mut min_change_index13\
    \ = -1;\n    let mut min_change_index14 = -1;\n    let mut min_change_index15\
    \ = -1;\n    let mut min_change_index16 = -1;\n    let mut min_change_index17\
    \ = -1;\n    let mut min_change_index18 = -1;\n    let mut min_change_index19\
    \ = -1;\n    let mut min_change_index20 = -1;\n    let mut min_change_index21\
    \ = -1;\n    let mut min_change_index22 = -1;\n    let mut min_change_index23\
    \ = -1;\n    let mut min_change_index24 = -1;\n    let mut min_change_index25\
    \ = -1;\n    let mut min_change_index26 = -1;\n    let mut min_change_index27\
    \ = -1;\n    let mut min_change_index28 = -1;\n    let mut min_change_index29\
    \ = -1;\n    let mut min_change_index30 = -1;\n    let mut min_change_index31\
    \ = -1;\n    let mut min_change_index32 = -1;\n    let mut min_change_index33\
    \ = -1;\n    let mut min_change_index34 = -1;\n    let mut min_change_index35\
    \ = -1;\n    let mut min_change_index36 = -1;\n    let mut min_change_index37\
    \ = -1;\n    let mut min_change_index38 = -1;\n    let mut min_change_index39\
    \ = -1;\n    let mut min_change_index40 = -1;\n    let mut min_change_index41\
    \ = -1;\n    let mut min_change_index42 = -1;\n    let mut min_change_index43\
    \ = -1;\n    let mut min_change_index44 = -1;\n    let mut min_change_index45\
    \ = -1;\n    let mut min_change_index46 = -1;\n    let mut min_change_index47\
    \ = -1;\n    let mut min_change_index48 = -1;\n    let mut min_change_index49\
    \ = -1;\n    let mut min_change_index50 = -1;\n    let mu", "    let mut min_change\
    \ = isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = -1;\n    let mut min_change_index3 = -1;\n    let mut min_change_index4 =\
    \ -1;\n    let mut min_change_index5 = -1;\n    let mut min_change_index6 = -1;\n\
    \    let mut min_change_index7 = -1;\n    let mut min_change_index8 = -1;\n  \
    \  let mut min_change_index9 = -1;\n    let mut min_change_index10 = -1;\n   \
    \ let mut min_change_index11 = -1;\n    let mut min_change_index12 = -1;\n   \
    \ let mut min_change_index13 = -1;\n    let mut min_change_index14 = -1;\n   \
    \ let mut min_change_index15 = -1;\n    let mut min_change_index16 = -1;\n   \
    \ let mut min_change_index17 = -1;\n    let mut min_change_index18 = -1;\n   \
    \ let mut min_change_index19 = -1;\n    let mut min_change_index20 = -1;\n   \
    \ let mut min_change_index21 = -1;\n    let mut min_change_index22 = -1;\n   \
    \ let mut min_change_index23 = -1;\n    let mut min_change_index24 = -1;\n   \
    \ let mut min_change_index25 = -1;\n    let mut min_change_index26 = -1;\n   \
    \ let mut min_change_index27 = -1;\n    let mut min_change_index28 = -1;\n   \
    \ let mut min_change_index29 = -1;\n    let mut min_change_index30 = -1;\n   \
    \ let mut min_change_index31 = -1;\n    let mut min_change_index32 = -1;\n   \
    \ let mut min_change_index33 = -1;\n    let mut min_change_index34 = -1;\n   \
    \ let mut min_change_index35 = -1;\n    let mut min_change_index36 = -1;\n   \
    \ let mut min_change_index37 = -1;\n    let mut min_change_index38 = -1;\n   \
    \ let mut min_change_index39 = -1;\n    let mut min_change_index40 = -1;\n   \
    \ let mut min_change_index41 = -1;\n    let mut min_change_index42 = -1;\n   \
    \ let mut min_change_index43 = -1;\n    let mut min_change_index44 = -1;\n   \
    \ let mut min_change_index45 = -1;\n    let mut min_change_index46 = -1;\n   \
    \ let mut min_change_index47 = -1;\n    let mut min_change_index48 = -1;\n   \
    \ let mut min_change_index49 = -1;\n    let mut min_change_index50 = -1;\n   \
    \ let mut min_change_index51 = -1;\n    let mut ", "    let mut min_change = arr.len()\
    \ as isize;\n    let mut min_change_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    for &i in arr {\n        let mut min_change = std::i32::MAX;\n        let\
    \ mut min_change_index = 0;\n        let mut min_change_len = arr.len();\n   \
    \     for &j in arr {\n            if i != j {\n                let mut min_change\
    \ = std::i32::MAX;\n                let mut min_change_index = 0;\n          \
    \      let mut min_change_len = arr.len();\n                for &k in arr {\n\
    \                    if i != k && j != k {\n                        let mut min_change\
    \ = std::i32::MAX;\n                        let mut min_change_index = 0;\n  \
    \                      let mut min_change_len = arr.len();\n                 \
    \       for &l in arr {\n                            if i != l && j != l && k\
    \ != l {\n                                let mut min_change = std::i32::MAX;\n\
    \                                let mut min_change_index = 0;\n             \
    \                   let mut min_change_len = arr.len();\n                    \
    \            for &m in arr {\n                                    if i != m &&\
    \ j != m && k != m && l != m {\n                                        let mut\
    \ min_change = std::i32::MAX;\n                                        let mut\
    \ min_change_index = 0;\n                                        let mut min_change_len\
    \ = arr.len();\n                                        for &n in arr {\n    \
    \                                        if i != n && j != n && k != n && l !=\
    \ n && m != n {\n                                                let mut min_change\
    \ = std::i32::MAX;\n                                                let mut min_change_index\
    \ = 0;\n                                                let mut min_change_len\
    \ = arr.len();\n                                                for &o in arr\
    \ {\n                                                    if i != o && j != o &&\
    \ k != o && l != o && m != o && n != o {\n                                   \
    \                     let mut min_change = std::i32::MAX;\n                  \
    \                                      let mut min_change_index = 0;\n       \
    \                                                 let mut min_change_len = arr.len();\n\
    \                                                        for &p in arr {\n   \
    \                                                         if i != p && j != p\
    \ && k != p && l != p && m != p && n != p && o != p {\n                      \
    \                                          let mut min_change = std::i32::MAX;\n\
    \                                                                let mut min_change_index\
    \ = 0;\n                                                                let mut\
    \ min_change_len = arr.len();\n                                              \
    \                  for &q in arr {\n                                         \
    \                           if i != q && j != q && k != q && l != q && m != q\
    \ && n != q && o != q && p != q {\n                                          \
    \                              let mu", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_", "    let mut min_change\
    \ = arr.len() as isize;\n    let mut min_change_idx = arr.len() - 1;\n    let\
    \ mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx = arr.len()\
    \ - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_value = arr[0];\n \
    \   let mut min_change_index2 = 0;\n    let mut min_change_value2 = arr[0];\n\
    \    for &i in arr {\n        if min_change_value == i {\n            min_change_index\
    \ += 1;\n            min_change_value -= 1;\n        } else {\n            min_change_index2\
    \ += 1;\n            min_change_value2 -= 1;\n        }\n        if min_change_value\
    \ < min_change_value {\n            min_change = min_change_index;\n         \
    \   min_change_value = min_change_value2;\n            min_change_index = min_change_index2;\n\
    \            min_change_value2 = min_change_value;\n        }\n    }\n    min_change",
  "    let mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let ", " \
    \   let mut min_change = isize::MAX;\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_count = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_",
  "    let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n  \
    \  let mut min_change_count = 0;\n    let mut min_change_count_index = 0;\n  \
    \  let mut min_change_count_index2 = 0;\n    let mut min_change_count_index3 =\
    \ 0;\n    let mut min_change_count_index4 = 0;\n    let mut min_change_count_index5\
    \ = 0;\n    let mut min_change_count_index6 = 0;\n    let mut min_change_count_index7\
    \ = 0;\n    let mut min_change_count_index8 = 0;\n    let mut min_change_count_index9\
    \ = 0;\n    let mut min_change_count_index10 = 0;\n    let mut min_change_count_index11\
    \ = 0;\n    let mut min_change_count_index12 = 0;\n    let mut min_change_count_index13\
    \ = 0;\n    let mut min_change_count_index14 = 0;\n    let mut min_change_count_index15\
    \ = 0;\n    let mut min_change_count_index16 = 0;\n    let mut min_change_count_index17\
    \ = 0;\n    let mut min_change_count_index18 = 0;\n    let mut min_change_count_index19\
    \ = 0;\n    let mut min_change_count_index20 = 0;\n    let mut min_change_count_index21\
    \ = 0;\n    let mut min_change_count_index22 = 0;\n    let mut min_change_count_index23\
    \ = 0;\n    let mut min_change_count_index24 = 0;\n    let mut min_change_count_index25\
    \ = 0;\n    let mut min_change_count_index26 = 0;\n    let mut min_change_count_index27\
    \ = 0;\n    let mut min_change_count_index28 = 0;\n    let mut min_change_count_index29\
    \ = 0;\n    let mut min_change_count_index30 = 0;\n    let mut min_change_count_index31\
    \ = 0;\n    let mut min_change_count_index32 = 0;\n    let mut min_change_count_index33\
    \ = 0;\n    let mut min_change_count_index34 = 0;\n    let mut min_change_count_index35\
    \ = 0;\n    let mut min_change_count_index36 = 0;\n    let mut min_change_count_index37\
    \ = 0;\n    let mut min_change_count_index38 = 0;\n    let mut min_change_count_index39\
    \ = 0;\n    let mut min_change_count_index40 = 0;\n    let mut min_change_count_index41\
    \ = 0;\n    let mut min_change_count_index42 = 0;\n    let mut min_change_count_index43\
    \ = 0;\n    let mut min_change_count_index44 = 0;\n    let mut min_change_count_index45\
    \ = 0;\n    let mut min_change_count_index46 = 0;\n    let mut min_change_count_index47\
    \ = 0;\n    let mut min_change_count_index48 = 0;\n    let mut min_change_count_index49\
    \ = 0;", "    let mut min_change = std::i32::MAX;\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n\
    \    let mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let\
    \ mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let mut\
    \ min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_index10\
    \ = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_index12 =\
    \ 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n\
    \    let mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n  \
    \  let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n    let\
    \ mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n    let mut\
    \ min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_index23\
    \ = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_index25 =\
    \ 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n\
    \    let mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n  \
    \  let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n    let\
    \ mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n    let mut\
    \ min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let mut min_change_index36\
    \ = 0;\n    let mut min_change_index37 = 0;\n    let mut min_change_index38 =\
    \ 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n\
    \    let mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n  \
    \  let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n    let\
    \ mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n    let mut\
    \ min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let mut min_change_index49\
    \ = 0;\n    let mut min_change_index50 = 0;\n    let mut min_change_index51 =\
    \ 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n\
    \    let mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n  \
    \  let mut min_change_index56 = 0;\n    let ", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let\
    \ mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n \
    \   let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.", "    let mut min_change = arr.len();\n  \
    \  let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let ", "    let mut min_change = arr.len();\n \
    \   let mut min_change_index = 0;\n    let mut min_change_index2 = arr.len();\n\
    \    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let\
    \ mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let mut\
    \ min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_index9\
    \ = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11 =\
    \ 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n\
    \    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n  \
    \  let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n    let\
    \ mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let mut\
    \ min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_index22\
    \ = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24 =\
    \ 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n\
    \    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n  \
    \  let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n    let\
    \ mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let mut\
    \ min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut min_change_index35\
    \ = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37 =\
    \ 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n\
    \    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n  \
    \  let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n    let\
    \ mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let mut\
    \ min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut min_change_index48\
    \ = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50 =\
    \ 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n\
    \    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n  \
    \  let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n", " \
    \   let mut min_change = std::cmp::max::<isize>(arr.len(), 1);\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n\
    \    let mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let\
    \ mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let mut\
    \ min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_index10\
    \ = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_index12 =\
    \ 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n\
    \    let mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n  \
    \  let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n    let\
    \ mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n    let mut\
    \ min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_index23\
    \ = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_index25 =\
    \ 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n\
    \    let mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n  \
    \  let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n    let\
    \ mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n    let mut\
    \ min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let mut min_change_index36\
    \ = 0;\n    let mut min_change_index37 = 0;\n    let mut min_change_index38 =\
    \ 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n\
    \    let mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n  \
    \  let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n    let\
    \ mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n    let mut\
    \ min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let mut min_change_index49\
    \ = 0;\n    let mut min_change_index50 = 0;\n    let mut min_change_index51 =\
    \ 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n\
    \    let mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n  \
    \  let mu", "    let mut min_change = arr.len();\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_rev_index = 0;\n    let mut min_change_rev_len\
    \ = 0;\n    let mut min_change_rev_len_index = 0;\n    let mut min_change_rev_len_rev_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index2 = 0;\n    let mut min_change_rev_len_rev_index3\
    \ = 0;\n    let mut min_change_rev_len_rev_index4 = 0;\n    let mut min_change_rev_len_rev_index5\
    \ = 0;\n    let mut min_change_rev_len_rev_index6 = 0;\n    let mut min_change_rev_len_rev_index7\
    \ = 0;\n    let mut min_change_rev_len_rev_index8 = 0;\n    let mut min_change_rev_len_rev_index9\
    \ = 0;\n    let mut min_change_rev_len_rev_index10 = 0;\n    let mut min_change_rev_len_rev_index11\
    \ = 0;\n    let mut min_change_rev_len_rev_index12 = 0;\n    let mut min_change_rev_len_rev_index13\
    \ = 0;\n    let mut min_change_rev_len_rev_index14 = 0;\n    let mut min_change_rev_len_rev_index15\
    \ = 0;\n    let mut min_change_rev_len_rev_index16 = 0;\n    let mut min_change_rev_len_rev_index17\
    \ = 0;\n    let mut min_change_rev_len_rev_index18 = 0;\n    let mut min_change_rev_len_rev_index19\
    \ = 0;\n    let mut min_change_rev_len_rev_index20 = 0;\n    let mut min_change_rev_len_rev_index21\
    \ = 0;\n    let mut min_change_rev_len_rev_index22 = 0;\n    let mut min_change_rev_len_rev_index23\
    \ = 0;\n    let mut min_change_rev_len_rev_index24 = 0;\n    let mut min_change_rev_len_rev_index25\
    \ = 0;\n    let mut min_change_rev_len_rev_index26 = 0;\n    let mut min_change_rev_len_rev_index27\
    \ = 0;\n    let mut min_change_rev_len_rev_index28 = 0;\n    let mut min_change_rev_len_rev_index29\
    \ = 0;\n    let mut min_change_rev_len_rev_index30 = 0;\n    let mut min_change_rev_len_rev_index31\
    \ = 0;\n    let mut min_change_rev_len_rev_index32 = 0;\n    let mut min_change_rev_len_rev_index33\
    \ = 0;\n    let mut min_change_re", "    let mut min_change = arr.len();\n   \
    \ let mut min_change_index = 0;\n    let mut min_change_palindrome = false;\n\
    \    for index in 0..arr.len() {\n        if arr[index] != arr[(arr.len() - 1)\
    \ - index] {\n            min_change_palindrome = false;\n            min_change\
    \ = index;\n            min_change_index = index;\n        } else {\n        \
    \    min_change_palindrome = true;\n        }\n    }\n    if min_change_palindrome\
    \ {\n        min_change = min_change_index;\n    }\n    min_change", "    let\
    \ mut min_change = std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_", "    let mut min_change = std::i32::MAX;\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n\
    \    let mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let\
    \ mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let mut\
    \ min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_index10\
    \ = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_index12 =\
    \ 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n\
    \    let mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n  \
    \  let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n    let\
    \ mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n    let mut\
    \ min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_index23\
    \ = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_index25 =\
    \ 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n\
    \    let mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n  \
    \  let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n    let\
    \ mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n    let mut\
    \ min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let mut min_change_index36\
    \ = 0;\n    let mut min_change_index37 = 0;\n    let mut min_change_index38 =\
    \ 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n\
    \    let mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n  \
    \  let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n    let\
    \ mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n    let mut\
    \ min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let mut min_change_index49\
    \ = 0;\n    let mut min_change_index50 = 0;\n    let mut min_change_index51 =\
    \ 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n\
    \    let mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n  \
    \  let mut min_change_index56 = 0;\n    let ", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let\
    \ mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let mut min_change_index7\
    \ = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n\
    \    let mut min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n  \
    \  let mut min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n    let\
    \ mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n    let mut min_change_index18\
    \ = 0;\n    let mut min_change_index19 = 0;\n    let mut min_change_index20 =\
    \ 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n\
    \    let mut min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n  \
    \  let mut min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n    let\
    \ mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n    let mut\
    \ min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n    let mut min_change_index31\
    \ = 0;\n    let mut min_change_index32 = 0;\n    let mut min_change_index33 =\
    \ 0;\n    let mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n\
    \    let mut min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n  \
    \  let mut min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n    let\
    \ mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n    let mut\
    \ min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n    let mut min_change_index44\
    \ = 0;\n    let mut min_change_index45 = 0;\n    let mut min_change_index46 =\
    \ 0;\n    let mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n\
    \    let mut min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n  \
    \  let mut min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n    let\
    \ mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n    let mut\
    \ min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n    let ", " \
    \   let mut min_change = arr.len() as isize;\n    let mut min_change_index = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;", "   \
    \ let mut min_change = isize::MAX;\n    let mut min_change_idx = -1;\n    let\
    \ mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_", "    let mut min_change = arr.len() as isize;\n    let mut\
    \ min_change_index = 0;\n    let mut min_change_reverse = 0;\n    let mut min_change_reverse_i\
    \ = 0;\n    let mut min_change_reverse_j = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_count\
    \ = 0;\n    let mut min_change", "    let mut min_change = arr.len();\n    let\
    \ mut min_change_index = arr.len();\n    let mut min_change_val = arr[0];\n  \
    \  let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_pal_index = 0;\n  \
    \  let mut min_change_pal_value = std::i32::MAX;\n    for index in 0..arr.len()\
    \ {\n        let mut change = std::i32::MAX;\n        let mut pal_value = std::i32::MAX;\n\
    \        for j in index..arr.len() {\n            if arr[index] != arr[j] {\n\
    \                change += 1;\n            }\n            if arr[index] == arr[j]\
    \ {\n                if change < pal_value {\n                    pal_value =\
    \ change;\n                    min_change_pal_value = pal_value;\n           \
    \         min_change_pal_index = index;\n                    min_change_index\
    \ = j;\n                }\n            }\n        }\n        if change < min_change\
    \ {\n            min_change = change;\n            min_change_pal_value = pal_value;\n\
    \            min_change_pal_index = index;\n            min_change_index = index;\n\
    \        }\n    }\n    min_change", "    let mut min_change = arr.len();\n   \
    \ let mut min_change_index = 0;\n    let mut min_change_value = arr[0];\n    let\
    \ mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_value = arr[0];\n\
    \    let mut min_change_index = arr.len();\n", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = arr.len();\n    let mut min_change_index2 = arr.len();\n\
    \    let mut min_change_index3 = arr.len();\n    let mut min_change_index4 = arr.len();\n\
    \    let mut min_change_index5 = arr.len();\n    let mut min_change_index6 = arr.len();\n\
    \    let mut min_change_index7 = arr.len();\n    let mut min_change_index8 = arr.len();\n\
    \    let mut min_change_index9 = arr.len();\n    let mut min_change_index10 =\
    \ arr.len();\n    let mut min_change_index11 = arr.len();\n    let mut min_change_index12\
    \ = arr.len();\n    let mut min_change_index13 = arr.len();\n    let mut min_change_index14\
    \ = arr.len();\n    let mut min_change_index15 = arr.len();\n    let mut min_change_index16\
    \ = arr.len();\n    let mut min_change_index17 = arr.len();\n    let mut min_change_index18\
    \ = arr.len();\n    let mut min_change_index19 = arr.len();\n    let mut min_change_index20\
    \ = arr.len();\n    let mut min_change_index21 = arr.len();\n    let mut min_change_index22\
    \ = arr.len();\n    let mut min_change_index23 = arr.len();\n    let mut min_change_index24\
    \ = arr.len();\n    let mut min_change_index25 = arr.len();\n    let mut min_change_index26\
    \ = arr.len();\n    let mut min_change_index27 = arr.len();\n    let mut min_change_index28\
    \ = arr.len();\n    let mut min_change_index29 = arr.len();\n    let mut min_change_index30\
    \ = arr.len();\n    let mut min_change_index31 = arr.len();\n    let mut min_change_index32\
    \ = arr.len();\n    let mut min_change_index33 = arr.len();\n    let mut min_change_index34\
    \ = arr.len();\n    let mut min_change_index35 = arr.len();\n    let mut min_change_index36\
    \ = arr.len();\n    let mut min_change_index37 = arr.len();\n    let mut min_change_index38\
    \ = arr.len();\n    let mut min_change_index39 = arr.len();\n    let mut min_change_index40\
    \ = arr.len();\n    let mut min_change_index41 = arr.len();\n    let mut min_change_index42\
    \ = arr.len();\n    let mut min_change_index43 = arr.len();", "    let mut min_change\
    \ = std::i32::MAX;\n    let mut min_change_index = -1;\n    let mut min_change_index2\
    \ = -1;\n    let mut min_change_index3 = -1;\n    let mut min_change_index4 =\
    \ -1;\n    let mut min_change_index5 = -1;\n    let mut min_change_index6 = -1;\n\
    \    let mut min_change_index7 = -1;\n    let mut min_change_index8 = -1;\n  \
    \  let mut min_change_index9 = -1;\n    let mut min_change_index10 = -1;\n   \
    \ let mut min_change_index11 = -1;\n    let mut min_change_index12 = -1;\n   \
    \ let mut min_change_index13 = -1;\n    let mut min_change_index14 = -1;\n   \
    \ let mut min_change_index15 = -1;\n    let mut min_change_index16 = -1;\n   \
    \ let mut min_change_index17 = -1;\n    let mut min_change_index18 = -1;\n   \
    \ let mut min_change_index19 = -1;\n    let mut min_change_index20 = -1;\n   \
    \ let mut min_change_index21 = -1;\n    let mut min_change_index22 = -1;\n   \
    \ let mut min_change_index23 = -1;\n    let mut min_change_index24 = -1;\n   \
    \ let mut min_change_index25 = -1;\n    let mut min_change_index26 = -1;\n   \
    \ let mut min_change_index27 = -1;\n    let mut min_change_index28 = -1;\n   \
    \ let mut min_change_index29 = -1;\n    let mut min_change_index30 = -1;\n   \
    \ let mut min_change_index31 = -1;\n    let mut min_change_index32 = -1;\n   \
    \ let mut min_change_index33 = -1;\n    let mut min_change_index34 = -1;\n   \
    \ let mut min_change_index35 = -1;\n    let mut min_change_index36 = -1;\n   \
    \ let mut min_change_index37 = -1;\n    let mut min_change_index38 = -1;\n   \
    \ let mut min_change_index39 = -1;\n    let mut min_change_index40 = -1;\n   \
    \ let mut min_change_index41 = -1;\n    let mut min_change_index42 = -1;\n   \
    \ let mut min_change_index43 = -1;\n    let mut min_change_index44 = -1;\n   \
    \ let mut min_change_index45 = -1;\n    let mut min_change_index46 = -1;\n   \
    \ let mut min_change_index47 = -1;\n    let mut min_change_index48 = -1;\n   \
    \ let mut min_change_index49 = -1;\n    let mut min_change_index50 = -1;\n   \
    \ let mut min_change_index51 = -1;\n    let mut ", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_palindromic = false;\n\
    \    for index in 0..arr.len() {\n        let mut change = 0;\n        let mut\
    \ palindromic = false;\n        for element in arr[index..].iter() {\n       \
    \     if element == arr[index] {\n                change += 1;\n            }\
    \ else {\n                palindromic = true;\n            }\n        }\n    \
    \    if change < min_change {\n            min_change = change;\n            min_change_index\
    \ = index;\n            min_change_palindromic = palindromic;\n        }\n   \
    \ }\n    if min_change_palindromic {\n        min_change\n    } else {\n     \
    \   min_change_index\n    }", "    let mut min_change = std::i32::MAX;\n    let\
    \ mut min_change_index = 0;\n    let mut min_change_size = std::i32::MAX;\n  \
    \  for &i in arr {\n        if min_change_size < i {\n            min_change_size\
    \ = i;\n            min_change_index = i;\n        }\n    }\n    for i in arr\
    \ {\n        if i == min_change_index {\n            min_change = std::i32::MAX;\n\
    \            min_change_index = 0;\n            min_change_size = std::i32::MAX;\n\
    \        }\n        if min_change_size < i {\n            min_change = i;\n  \
    \          min_change_index = i;\n            min_change_size = i;\n        }\n\
    \    }\n    min_change", "    let mut min_change = std::i32::MAX;\n    let mut\
    \ min_change_index = 0;\n    let mut min_change_size = 0;\n    let mut min_change_element\
    \ = 0;\n    let mut min_change_element_index = 0;\n    let mut min_change_element_size\
    \ = 0;\n    let mut min_change_element_index2 = 0;\n    let mut min_change_element_size2\
    \ = 0;\n    let mut min_change_element_index3 = 0;\n    let mut min_change_element_size3\
    \ = 0;\n    let mut min_change_element_index4 = 0;\n    let mut min_change_element_size4\
    \ = 0;\n    let mut min_change_element_index5 = 0;\n    let mut min_change_element_size5\
    \ = 0;\n    let mut min_change_element_index6 = 0;\n    let mut min_change_element_size6\
    \ = 0;\n    let mut min_change_element_index7 = 0;\n    let mut min_change_element_size7\
    \ = 0;\n    let mut min_change_element_index8 = 0;\n    let mut min_change_element_size8\
    \ = 0;\n    let mut min_change_element_index9 = 0;\n    let mut min_change_element_size9\
    \ = 0;\n    let mut min_change_element_index10 = 0;\n    let mut min_change_element_size10\
    \ = 0;\n    let mut min_change_element_index11 = 0;\n    let mut min_change_element_size11\
    \ = 0;\n    let mut min_change_element_index12 = 0;\n    let mut min_change_element_size12\
    \ = 0;\n    let mut min_change_element_index13 = 0;\n    let mut min_change_element_size13\
    \ = 0;\n    let mut min_change_element_index14 = 0;\n    let mut min_change_element_size14\
    \ = 0;\n    let mut min_change_element_index15 = 0;\n    let mut min_change_element_size15\
    \ = 0;\n    let mut min_change_element_index16 = 0;\n    let mut min_change_element_size16\
    \ = 0;\n    let mut min_change_element_index17 = 0;\n    let mut min_change_element_size17\
    \ = 0;\n    let mut min_change_element_index18 = 0;\n    let mut min_change_element_size18\
    \ = 0;\n    let mut min_change_element_index19 = 0;\n    let mut min_change_element_size19\
    \ = 0;\n    let mut min_change_element_index20 = 0;\n    let mut min_change_element_size20\
    \ = 0;\n    let mut min_change_element_index21 = 0;\n    let mut min_change_element_size21\
    \ = 0;\n    let mut min_change_element_index22 = 0;\n    let mut min_change_element_size22\
    \ = 0;\n    let mut min_change_element_index23 = 0;\n    let mut min_change_element_size23\
    \ = 0;\n    let mut min_change_element_index24 = 0;\n    let mut min_change_element_size24\
    \ = 0;\n    let mut min_change_element_", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_count = 0;\n    for\
    \ index in 0..arr.len() {\n        if arr[index] == arr[index].rev() {\n     \
    \       min_change = std::i32::MAX;\n            min_change_index = index;\n \
    \           min_change_count = 1;\n        } else {\n            min_change =\
    \ std::i32::MAX;\n            min_change_index = index;\n            min_change_count\
    \ = 0;\n        }\n    }\n    min_change", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let\
    \ mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let mut min_change_index7\
    \ = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n\
    \    let mut min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n  \
    \  let mut min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n    let\
    \ mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n    let mut min_change_index18\
    \ = 0;\n    let mut min_change_index19 = 0;\n    let mut min_change_index20 =\
    \ 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n\
    \    let mut min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n  \
    \  let mut min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n    let\
    \ mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n    let mut\
    \ min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n    let mut min_change_index31\
    \ = 0;\n    let mut min_change_index32 = 0;\n    let mut min_change_index33 =\
    \ 0;\n    let mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n\
    \    let mut min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n  \
    \  let mut min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n    let\
    \ mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n    let mut\
    \ min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n    let mut min_change_index44\
    \ = 0;\n    let mut min_change_index45 = 0;\n    let mut min_change_index46 =\
    \ 0;\n    let mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n\
    \    let mut min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n  \
    \  let mut min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n    let\
    \ mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n    let mut\
    \ min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n    let ", " \
    \   let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n \
    \   let mut min_change_count = 0;\n    let mut min_change_arr = arr.clone();\n\
    \    let mut min_change_arr_len = arr.len();\n    while min_change_count < min_change_arr.len()\
    \ {\n        let mut min_change_arr_len = min_change_arr.len();\n        for (i,\
    \ &v) in min_change_arr.iter().enumerate() {\n            if min_change_arr_len\
    \ > min_change {\n                min_change = min_change_arr_len;\n         \
    \       min_change_index = i;\n            }\n            min_change_arr_len -=\
    \ v;\n        }\n        min_change_arr.swap(min_change_index, min_change_arr_len\
    \ as usize);\n        min_change_arr_len += min_change;\n        min_change_count\
    \ += 1;\n    }\n    min_change", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        if arr[i] != arr[i] -\
    \ min_change {\n            min_change = arr[i] - min_change;\n        }\n   \
    \     i += 1;\n    }\n    min_change", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n   \
    \ for &i in arr {\n        if min_change_val < i {\n            min_change = i;\n\
    \            min_change_index = i;\n            min_change_val = i;\n        }\n\
    \    }\n    for &i in arr {\n        if min_change_val > i {\n            min_change\
    \ = i;\n            min_change_index = i;\n            min_change_val = i;\n \
    \       }\n    }\n    min_change", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_", "    let mut min_change\
    \ = isize::MAX;\n    let mut min_change_index = -1;\n    for &i in arr.iter().rev()\
    \ {\n        if i == i {\n            continue;\n        }\n        if min_change\
    \ > i - i {\n            min_change = i - i;\n            min_change_index = i;\n\
    \        }\n    }\n    min_change_index", "    let mut min_change = isize::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = isize::MAX;\n\
    \    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg = 0;\n  \
    \  let mut min_change_val_neg_index = 0;\n    let mut min_change_val_neg_index2\
    \ = 0;\n    let mut min_change_val_neg_index3 = 0;\n    let mut min_change_val_neg_index4\
    \ = 0;\n    let mut min_change_val_neg_index5 = 0;\n    let mut min_change_val_neg_index6\
    \ = 0;\n    let mut min_change_val_neg_index7 = 0;\n    let mut min_change_val_neg_index8\
    \ = 0;\n    let mut min_change_val_neg_index9 = 0;\n    let mut min_change_val_neg_index10\
    \ = 0;\n    let mut min_change_val_neg_index11 = 0;\n    let mut min_change_val_neg_index12\
    \ = 0;\n    let mut min_change_val_neg_index13 = 0;\n    let mut min_change_val_neg_index14\
    \ = 0;\n    let mut min_change_val_neg_index15 = 0;\n    let mut min_change_val_neg_index16\
    \ = 0;\n    let mut min_change_val_neg_index17 = 0;\n    let mut min_change_val_neg_index18\
    \ = 0;\n    let mut min_change_val_neg_index19 = 0;\n    let mut min_change_val_neg_index20\
    \ = 0;\n    let mut min_change_val_neg_index21 = 0;\n    let mut min_change_val_neg_index22\
    \ = 0;\n    let mut min_change_val_neg_index23 = 0;\n    let mut min_change_val_neg_index24\
    \ = 0;\n    let mut min_change_val_neg_index25 = 0;\n    let mut min_change_val_neg_index26\
    \ = 0;\n    let mut min_change_val_neg_index27 = 0;\n    let mut min_change_val_neg_index28\
    \ = 0;\n    let mut min_change_val_neg_index29 = 0;\n    let mut min_change_val_neg_index30\
    \ = 0;\n    let mut min_change_val_neg_index31 = 0;\n    let mut min_change_val_neg_index32\
    \ = 0;\n    let mut min_change_val_neg_index33 = 0;\n    let mut min_change_val_neg_index34\
    \ = 0;\n    let mut min_change_val_neg_index35 = 0;\n    let mut min_change_val_neg_index36\
    \ = 0;\n    let mut min_change_val_neg_index37 = 0;\n    let mut min_change_val_neg_index38\
    \ = 0;\n    let mut min_change_val_neg_index39 = 0;\n    let mut min_change_val_neg_index40\
    \ = 0;\n    let mut min_change_val_neg_index41 = 0;\n    let mut min_change_val_neg_index42\
    \ = 0;\n    let mut min_change_", "    let mut min_change = std::i32::MAX;\n \
    \   let mut min_change_index = 0;\n    let mut min_change_len = arr.len();\n \
    \   for i in 0..arr.len() {\n        if arr[i] != arr[arr.len() - 1 - i] {\n \
    \           min_change = std::i32::MAX;\n            min_change_index = 0;\n \
    \           min_change_len = arr.len();\n        }\n        if min_change > i\
    \ {\n            min_change = i;\n            min_change_index = i;\n        \
    \    min_change_len = arr.len();\n        }\n    }\n    min_change_len", "   \
    \ let mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let ", " \
    \   let mut min_change = isize::MAX;\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n    let mut\
    \ min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let mut min_change_index6\
    \ = 0;\n    let mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n\
    \    let mut min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n   \
    \ let mut min_change_index11 = 0;\n    let mut min_change_index12 = 0;\n    let\
    \ mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n    let mut\
    \ min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n    let mut min_change_index17\
    \ = 0;\n    let mut min_change_index18 = 0;\n    let mut min_change_index19 =\
    \ 0;\n    let mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n\
    \    let mut min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n  \
    \  let mut min_change_index24 = 0;\n    let mut min_change_index25 = 0;\n    let\
    \ mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n    let mut\
    \ min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n    let mut min_change_index30\
    \ = 0;\n    let mut min_change_index31 = 0;\n    let mut min_change_index32 =\
    \ 0;\n    let mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n\
    \    let mut min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n  \
    \  let mut min_change_index37 = 0;\n    let mut min_change_index38 = 0;\n    let\
    \ mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n    let mut\
    \ min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n    let mut min_change_index43\
    \ = 0;\n    let mut min_change_index44 = 0;\n    let mut min_change_index45 =\
    \ 0;\n    let mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n\
    \    let mut min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n  \
    \  let mut min_change_index50 = 0;\n    let mut min_change_index51 = 0;\n    let\
    \ mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n    let mut\
    \ min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n    let mut min_change_index56\
    \ = 0;\n    let ", "    let mut min_change = isize::MAX;\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos =\
    \ 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n  \
    \  let mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let mut\
    \ min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_pos = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n  \
    \  let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let mut\
    \ min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos =\
    \ 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n  \
    \  let mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let mut\
    \ min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_pos = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n  \
    \  let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let mut\
    \ min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos =\
    \ 0;\n    let mut min_change_len = ", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = min_change_len.saturating_add((min_change_len /\
    \ 2).saturating_add((min_change_len / 2)));\n    for i in 0..min_change_len {\n\
    \        if arr[i] == arr[(arr.len() - 1) - i] {\n            min_change = std::i32::MAX;\n\
    \            min_change_index = i;\n        } else {\n            if min_change\
    \ > i - min_change_index {\n                min_change = i - min_change_index;\n\
    \                min_change_index = i;\n            }\n        }\n    }\n    min_change",
  "    let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n  \
    \  let mut min_change_count = 0;\n    let mut min_change_element = 0;\n    let\
    \ mut min_change_element = arr[0];\n    let mut min_change_element = min_change_element;\n\
    \    for &i in arr {\n        if min_change_count > min_change {\n           \
    \ min_change = min_change_count;\n            min_change_index = min_change_element;\n\
    \        }\n        if i != min_change_element {\n            min_change_element\
    \ = i;\n            min_change_count = 1;\n        } else {\n            min_change_count\
    \ += 1;\n        }\n    }\n    min_change", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_size = 0;\n    let\
    \ mut min_change_start = 0;\n    let mut min_change_end = 0;\n    let mut min_change_mid\
    \ = 0;\n    let mut min_change_mid_size = 0;\n    let mut min_change_mid_index\
    \ = 0;\n    let mut min_change_mid_size2 = 0;\n    let mut min_change_mid_index2\
    \ = 0;\n    let mut min_change_mid_size3 = 0;\n    let mut min_change_mid_index3\
    \ = 0;\n    let mut min_change_mid_size4 = 0;\n    let mut min_change_mid_index4\
    \ = 0;\n    let mut min_change_mid_size5 = 0;\n    let mut min_change_mid_index5\
    \ = 0;\n    let mut min_change_mid_size6 = 0;\n    let mut min_change_mid_index6\
    \ = 0;\n    let mut min_change_mid_size7 = 0;\n    let mut min_change_mid_index7\
    \ = 0;\n    let mut min_change_mid_size8 = 0;\n    let mut min_change_mid_index8\
    \ = 0;\n    let mut min_change_mid_size9 = 0;\n    let mut min_change_mid_index9\
    \ = 0;\n    let mut min_change_mid_size10 = 0;\n    let mut min_change_mid_index10\
    \ = 0;\n    let mut min_change_mid_size11 = 0;\n    let mut min_change_mid_index11\
    \ = 0;\n    let mut min_change_mid_size12 = 0;\n    let mut min_change_mid_index12\
    \ = 0;\n    let mut min_change_mid_size13 = 0;\n    let mut min_change_mid_index13\
    \ = 0;\n    let mut min_change_mid_size14 = 0;\n    let mut min_change_mid_index14\
    \ = 0;\n    let mut min_change_mid_size15 = 0;\n    let mut min_change_mid_index15\
    \ = 0;\n    let mut min_change_mid_size16 = 0;\n    let mut min_change_mid_index16\
    \ = 0;\n    let mut min_change_mid_size17 = 0;\n    let mut min_change_mid_index17\
    \ = 0;\n    let mut min_change_mid_size18 = 0;\n    let mut min_change_mid_index18\
    \ = 0;\n    let mut min_change_mid_size19 = 0;\n    let mut min_change_mid_index19\
    \ = 0;\n    let mut min_change_mid_size20 = 0;\n    let mut min_change_mid_index20\
    \ = 0;\n    let mut min_change_mid_size21 = 0;\n    let mut min_change_mid_index21\
    \ = 0;\n    let mut min_change_mid_size22 = 0;\n    let mut min_change_mid_index22\
    \ = 0;\n    let mut min_change_mid_size23 = 0;\n    let mut min_change_mid_index23\
    \ = 0;\n    let mut min_change_mid_size24 = 0;\n", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_index2 = arr.len();\n\
    \    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let\
    \ mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let mut\
    \ min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_index9\
    \ = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11 =\
    \ 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n\
    \    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n  \
    \  let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n    let\
    \ mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let mut\
    \ min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_index22\
    \ = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24 =\
    \ 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n\
    \    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n  \
    \  let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n    let\
    \ mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let mut\
    \ min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut min_change_index35\
    \ = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37 =\
    \ 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n\
    \    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n  \
    \  let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n    let\
    \ mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let mut\
    \ min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut min_change_index48\
    \ = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50 =\
    \ 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n\
    \    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n  \
    \  let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n", " \
    \   let mut min_change = isize::MAX;\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_len = arr.len();\n    for i in 0..arr.len() {\n        let mut\
    \ j = i;\n        while j > 0 && arr[j] != arr[j - 1] {\n            j -= 1;\n\
    \        }\n        if j == 0 {\n            min_change = i;\n            min_change_index\
    \ = i;\n            min_change_len = i;\n        }\n    }\n    for i in 0..arr.len()\
    \ {\n        let mut j = i;\n        while j > 0 && arr[j] != arr[j - 1] {\n \
    \           j -= 1;\n        }\n        if j == 0 {\n            min_change =\
    \ i;\n            min_change_index = i;\n            min_change_len = i;\n   \
    \     }\n    }\n    for i in 0..arr.len() {\n        let mut j = i;\n        while\
    \ j > 0 && arr[j] != arr[j - 1] {\n            j -= 1;\n        }\n        if\
    \ j == 0 {\n            min_change = i;\n            min_change_index = i;\n \
    \           min_change_len = i;\n        }\n    }\n    for i in 0..arr.len() {\n\
    \        let mut j = i;\n        while j > 0 && arr[j] != arr[j - 1] {\n     \
    \       j -= 1;\n        }\n        if j == 0 {\n            min_change = i;\n\
    \            min_change_index = i;\n            min_change_len = i;\n        }\n\
    \    }\n    for i in 0..arr.len() {\n        let mut j = i;\n        while j >\
    \ 0 && arr[j] != arr[j - 1] {\n            j -= 1;\n        }\n        if j ==\
    \ 0 {\n            min_change = i;\n            min_change_index = i;\n      \
    \      min_change_len = i;\n        }\n    }\n    for i in 0..arr.len() {\n  \
    \      let mut j = i;\n        while j > 0 && arr[j] != arr[j - 1] {\n       \
    \     j -= 1;\n        }\n        if j == 0 {\n            min_change = i;\n \
    \           min_change_index = i;\n            min_change_len = i;\n        }\n\
    \    }\n    for i in 0..arr.len() {\n        let mut j = i;\n        while j >\
    \ 0 && arr[j] != arr[j - 1] {\n            j -= 1;\n        }\n        if j ==\
    \ 0 {\n            min_change = i;\n            min_change_index = i;\n      \
    \      min_change_len = i;\n        }\n    }\n    for i in 0..arr.len() {\n  \
    \      let mut j = i;\n        while j > 0 && arr[j] != arr[j - 1] {\n       \
    \     j -= 1;\n        }\n        if j == 0 {\n            min_change = i;\n \
    \           min_change_index = i;\n            min_change_len = i;\n        }\n\
    \    }\n    for i in 0..arr.len() {\n        let mut j = i;\n        while j >\
    \ 0 && arr[j] != arr[j - 1] {\n            j -= 1;\n        }\n        if j ==\
    \ 0 {\n            min_change = i;\n            min_", "    let mut min_change\
    \ = arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let ", "    let mut min_change\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mu", "    let mut min_change = arr.len();\n    let mut\
    \ min_change_index = 0;\n    let mut min_change_index2 = arr.len();\n    let mut\
    \ min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let mut min_change_index5\
    \ = 0;\n    let mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n\
    \    let mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let\
    \ mut min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n    let mut\
    \ min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14\
    \ = 0;\n    let mut min_change_index15 = 0;\n    let mut min_change_index16 =\
    \ 0;\n    let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n\
    \    let mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n  \
    \  let mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let\
    \ mut min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n    let mut\
    \ min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27\
    \ = 0;\n    let mut min_change_index28 = 0;\n    let mut min_change_index29 =\
    \ 0;\n    let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n\
    \    let mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n  \
    \  let mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let\
    \ mut min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n    let mut\
    \ min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40\
    \ = 0;\n    let mut min_change_index41 = 0;\n    let mut min_change_index42 =\
    \ 0;\n    let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n\
    \    let mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n  \
    \  let mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let\
    \ mut min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n    let mut\
    \ min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53\
    \ = 0;\n    let mut min_change_index54 = 0;\n    let mut min_change_index55 =\
    \ 0;\n    let mut min_change_index56 = 0;\n", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut\
    \ min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let ", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = -1;\n    let mut min_change_index2 = -1;\n   \
    \ for i in arr.iter().rev() {\n        if min_change > i {\n            min_change\
    \ = i;\n            min_change_index = i;\n        }\n        if min_change_index2\
    \ > i {\n            min_change_index2 = i;\n        }\n    }\n    if min_change_index\
    \ == min_change_index2 {\n        return 0;\n    }\n    for i in arr.iter().rev()\
    \ {\n        if min_change > i {\n            min_change = i;\n            min_change_index\
    \ = i;\n        }\n    }\n    if min_change_index == min_change_index2 {\n   \
    \     return 0;\n    }\n    for i in arr.iter().rev() {\n        if min_change_index\
    \ > i {\n            min_change_index2 = i;\n        }\n    }\n    if min_change_index\
    \ == min_change_index2 {\n        return 0;\n    }\n    for i in arr.iter().rev()\
    \ {\n        if min_change_index > i {\n            min_change_index2 = i;\n \
    \       }\n    }\n    if min_change_index == min_change_index2 {\n        return\
    \ 0;\n    }\n    for i in arr.iter().rev() {\n        if min_change_index > i\
    \ {\n            min_change_index2 = i;\n        }\n    }\n    if min_change_index\
    \ == min_change_index2 {\n        return 0;\n    }\n    for i in arr.iter().rev()\
    \ {\n        if min_change_index > i {\n            min_change_index2 = i;\n \
    \       }\n    }\n    if min_change_index == min_change_index2 {\n        return\
    \ 0;\n    }\n    for i in arr.iter().rev() {\n        if min_change_index > i\
    \ {\n            min_change_index2 = i;\n        }\n    }\n    if min_change_index\
    \ == min_change_index2 {\n        return 0;\n    }\n    for i in arr.iter().rev()\
    \ {\n        if min_change_index > i {\n            min_change_index2 = i;\n \
    \       }\n    }\n    if min_change_index == min_change_index2 {\n        return\
    \ 0;\n    }\n    for i in arr.iter().rev() {\n        if min_change_index > i\
    \ {\n            min_change_index2 = i;\n        }\n    }\n    if min_change_index\
    \ == min_change_index2 {\n        return 0;\n    }\n    for i in arr.iter().rev()\
    \ {\n        if min_change_index > i {\n            min_change_index2 = i;\n \
    \       }\n    }\n    if min_change_index == min_change_index2 {\n        return\
    \ 0;\n    }\n    for i in arr.iter().rev() {\n        if min_change_index > i\
    \ {\n            min_change_index2 = i;\n        }\n    }\n    if min_change_index\
    \ == min_change_index2 {\n        return 0;\n    }\n    for i in arr.iter().rev()\
    \ {\n        if min_change_index > i {\n            min_change_index2 = i;", " \
    \   let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    let mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let\
    \ mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let mut min_change_index7\
    \ = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n\
    \    let mut min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n  \
    \  let mut min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n    let\
    \ mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n    let mut min_change_index18\
    \ = 0;\n    let mut min_change_index19 = 0;\n    let mut min_change_index20 =\
    \ 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n\
    \    let mut min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n  \
    \  let mut min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n    let\
    \ mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n    let mut\
    \ min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n    let mut min_change_index31\
    \ = 0;\n    let mut min_change_index32 = 0;\n    let mut min_change_index33 =\
    \ 0;\n    let mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n\
    \    let mut min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n  \
    \  let mut min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n    let\
    \ mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n    let mut\
    \ min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n    let mut min_change_index44\
    \ = 0;\n    let mut min_change_index45 = 0;\n    let mut min_change_index46 =\
    \ 0;\n    let mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n\
    \    let mut min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n  \
    \  let mut min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n    let\
    \ mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n    let mut\
    \ min_", "    let mut min_change = arr.len();\n    let mut min_change_index =\
    \ 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n\
    \    let mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let\
    \ mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let mut\
    \ min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_index10\
    \ = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_index12 =\
    \ 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n\
    \    let mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n  \
    \  let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n    let\
    \ mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n    let mut\
    \ min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_index23\
    \ = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_index25 =\
    \ 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n\
    \    let mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n  \
    \  let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n    let\
    \ mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n    let mut\
    \ min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let mut min_change_index36\
    \ = 0;\n    let mut min_change_index37 = 0;\n    let mut min_change_index38 =\
    \ 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n\
    \    let mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n  \
    \  let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n    let\
    \ mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n    let mut\
    \ min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let mut min_change_index49\
    \ = 0;\n    let mut min_change_index50 = 0;\n    let mut min_change_index51 =\
    \ 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n\
    \    let mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n  \
    \  let mut min_change_index56 = 0;\n    let mut ", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = -1;\n    let mut min_change_index2 = -1;\n   \
    \ let mut min_change_index3 = -1;\n    let mut min_change_index4 = -1;\n    let\
    \ mut min_change_index5 = -1;\n    let mut min_change_index6 = -1;\n    let mut\
    \ min_change_index7 = -1;\n    let mut min_change_index8 = -1;\n    let mut min_change_index9\
    \ = -1;\n    let mut min_change_index10 = -1;\n    let mut min_change_index11\
    \ = -1;\n    let mut min_change_index12 = -1;\n    let mut min_change_index13\
    \ = -1;\n    let mut min_change_index14 = -1;\n    let mut min_change_index15\
    \ = -1;\n    let mut min_change_index16 = -1;\n    let mut min_change_index17\
    \ = -1;\n    let mut min_change_index18 = -1;\n    let mut min_change_index19\
    \ = -1;\n    let mut min_change_index20 = -1;\n    let mut min_change_index21\
    \ = -1;\n    let mut min_change_index22 = -1;\n    let mut min_change_index23\
    \ = -1;\n    let mut min_change_index24 = -1;\n    let mut min_change_index25\
    \ = -1;\n    let mut min_change_index26 = -1;\n    let mut min_change_index27\
    \ = -1;\n    let mut min_change_index28 = -1;\n    let mut min_change_index29\
    \ = -1;\n    let mut min_change_index30 = -1;\n    let mut min_change_index31\
    \ = -1;\n    let mut min_change_index32 = -1;\n    let mut min_change_index33\
    \ = -1;\n    let mut min_change_index34 = -1;\n    let mut min_change_index35\
    \ = -1;\n    let mut min_change_index36 = -1;\n    let mut min_change_index37\
    \ = -1;\n    let mut min_change_index38 = -1;\n    let mut min_change_index39\
    \ = -1;\n    let mut min_change_index40 = -1;\n    let mut min_change_index41\
    \ = -1;\n    let mut min_change_index42 = -1;\n    let mut min_change_index43\
    \ = -1;\n    let mut min_change_index44 = -1;\n    let mut min_change_index45\
    \ = -1;\n    let mut min_change_index46 = -1;\n    let mut min_change_index47\
    \ = -1;\n    let mut min_change_index48 = -1;\n    let mut min_change_index49\
    \ = -1;\n    let mut min_change_index50 = -1;\n    let mut min_change_index51\
    \ = -1;\n    let mut ", "    let mut min_change = std::i32::MAX;\n    let mut\
    \ min_change_index = 0;\n    let mut min_change_val = std::i32::MAX;\n    let\
    \ mut min_change_val_pos = 0;\n    let mut min_change_val_neg = 0;\n    let mut\
    \ min_change_val_neg_index = 0;\n    let mut min_change_val_neg_index2 = 0;\n\
    \    let mut min_change_val_neg_index3 = 0;\n    let mut min_change_val_neg_index4\
    \ = 0;\n    let mut min_change_val_neg_index5 = 0;\n    let mut min_change_val_neg_index6\
    \ = 0;\n    let mut min_change_val_neg_index7 = 0;\n    let mut min_change_val_neg_index8\
    \ = 0;\n    let mut min_change_val_neg_index9 = 0;\n    let mut min_change_val_neg_index10\
    \ = 0;\n    let mut min_change_val_neg_index11 = 0;\n    let mut min_change_val_neg_index12\
    \ = 0;\n    let mut min_change_val_neg_index13 = 0;\n    let mut min_change_val_neg_index14\
    \ = 0;\n    let mut min_change_val_neg_index15 = 0;\n    let mut min_change_val_neg_index16\
    \ = 0;\n    let mut min_change_val_neg_index17 = 0;\n    let mut min_change_val_neg_index18\
    \ = 0;\n    let mut min_change_val_neg_index19 = 0;\n    let mut min_change_val_neg_index20\
    \ = 0;\n    let mut min_change_val_neg_index21 = 0;\n    let mut min_change_val_neg_index22\
    \ = 0;\n    let mut min_change_val_neg_index23 = 0;\n    let mut min_change_val_neg_index24\
    \ = 0;\n    let mut min_change_val_neg_index25 = 0;\n    let mut min_change_val_neg_index26\
    \ = 0;\n    let mut min_change_val_neg_index27 = 0;\n    let mut min_change_val_neg_index28\
    \ = 0;\n    let mut min_change_val_neg_index29 = 0;\n    let mut min_change_val_neg_index30\
    \ = 0;\n    let mut min_change_val_neg_index31 = 0;\n    let mut min_change_val_neg_index32\
    \ = 0;\n    let mut min_change_val_neg_index33 = 0;\n    let mut min_change_val_neg_index34\
    \ = 0;\n    let mut min_change_val_neg_index35 = 0;\n    let mut min_change_val_neg_index36\
    \ = 0;\n    let mut min_change_val_neg_index37 = 0;\n    let mut min_change_val_neg_index38\
    \ = 0;\n    let mut min_change_val_neg_index39 = 0;\n    let mut min_change_val_neg_index40\
    \ = 0;\n    let mut min_change_val_neg_index41 = 0;\n    let mut min_change_val_neg_index42\
    \ = 0;\n    let mut min_change_", "    let mut min_change = isize::MAX;\n    let\
    \ mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n    for &i\
    \ in arr.iter().rev() {\n        if min_change > i - min_change_val {\n      \
    \      min_change = i - min_change_val;\n            min_change_index = i;\n \
    \       }\n    }\n    min_change_index", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_count = 0;\n    for\
    \ &i in arr {\n        if min_change > i {\n            min_change = i;\n    \
    \        min_change_index = i;\n            min_change_count = 1;\n        } else\
    \ if min_change == i {\n            min_change_count += 1;\n        }\n    }\n\
    \    min_change_count", "    let mut min_change = isize::MAX;\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n\
    \    let mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let\
    \ mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let mut\
    \ min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_index10\
    \ = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_index12 =\
    \ 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n\
    \    let mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n  \
    \  let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n    let\
    \ mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n    let mut\
    \ min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_index23\
    \ = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_index25 =\
    \ 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n\
    \    let mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n  \
    \  let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n    let\
    \ mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n    let mut\
    \ min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let mut min_change_index36\
    \ = 0;\n    let mut min_change_index37 = 0;\n    let mut min_change_index38 =\
    \ 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n\
    \    let mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n  \
    \  let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n    let\
    \ mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n    let mut\
    \ min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let mut min_change_index49\
    \ = 0;\n    let mut min_change_index50 = 0;\n    let mut min_change_index51 =\
    \ 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n\
    \    let mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n  \
    \  let mut min_change_index56 = 0;\n    let ", "    let mut min_change = arr.len()\
    \ as isize;\n    let mut min_change_index = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len_reverse = 0;\n\
    \    let mut min_change_len_reverse_index = 0;\n    let mut min_change_len_reverse_count\
    \ = 0;\n    let mut min_change_len_reverse_count2 = 0;\n    let mut min_change_len_reverse_count3\
    \ = 0;\n    let mut min_change_len_reverse_count4 = 0;\n    let mut min_change_len_reverse_count5\
    \ = 0;\n    let mut min_change_len_reverse_count6 = 0;\n    let mut min_change_len_reverse_count7\
    \ = 0;\n    let mut min_change_len_reverse_count8 = 0;\n    let mut min_change_len_reverse_count9\
    \ = 0;\n    let mut min_change_len_reverse_count10 = 0;\n    let mut min_change_len_reverse_count11\
    \ = 0;\n    let mut min_change_len_reverse_count12 = 0;\n    let mut min_change_len_reverse_count13\
    \ = 0;\n    let mut min_change_len_reverse_count14 = 0;\n    let mut min_change_len_reverse_count15\
    \ = 0;\n    let mut min_change_len_reverse_count16 = 0;\n    let mut min_change_len_reverse_count17\
    \ = 0;\n    let mut min_change_len_reverse_count18 = 0;\n    let mut min_change_len_reverse_count19\
    \ = 0;\n    let mut min_change_len_reverse_count20 = 0;\n    let mut min_change_len_reverse_count21\
    \ = 0;\n    let mut min_change_len_reverse_count22 = 0;\n    let mut min_change_len_reverse_count23\
    \ = 0;\n    let mut min_change_len_reverse_count24 = 0;\n    let mut min_change_len_reverse_count25\
    \ = 0;\n    let mut min_change_len_reverse_count26 = 0;\n    let mut min_change_len_reverse_count27\
    \ = 0;\n    let mut min_change_len_reverse_count28 = 0;\n    let mut min_change_len_reverse_count29\
    \ = 0;\n    let mut min_change_len_reverse_count30 = 0;\n    let mut min_change_len_reverse_count31\
    \ = 0;\n    let mut min_change_len_reverse_count32 = 0;\n    let mut min_change_len_reverse_count33\
    \ = 0;\n    let mut min_change_len_reverse_count34 = 0;\n    let mut min_change_len_reverse_count35\
    \ = 0;\n    let mut min_change_len_reverse_count36 = 0;\n    let mut min_change_len_reverse_count37\
    \ = 0;\n    let mut min_change_len_reverse_count38 = 0;\n    let mu", "    let\
    \ mut min_change = std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = *arr.iter().rev().cloned().collect::<Vec<_>>();\n\
    \    for &i in arr.iter().rev() {\n        if *i < min_change_val[0] {\n     \
    \       min_change_index = i;\n            min_change_val = *arr.iter().rev().cloned().collect::<Vec<_>>();\n\
    \        }\n    }\n    for i in arr.iter().rev() {\n        if *i == min_change_val[0]\
    \ {\n            min_change_val[0] = *i;\n            min_change = min_change_index;\n\
    \        }\n    }\n    min_change", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    let mut min_change_index = 0;\n    for index in 0..arr.len() {\n        if\
    \ *arr[index] >= min_change {\n            min_change = *arr[index];\n       \
    \     min_change_index = index;\n        }\n    }\n    min_change_index", "  \
    \  let mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n    let mut\
    \ min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let mut min_change_index6\
    \ = 0;\n    let mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n\
    \    let mut min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n   \
    \ let mut min_change_index11 = 0;\n    let mut min_change_index12 = 0;\n    let\
    \ mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n    let mut\
    \ min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n    let mut min_change_index17\
    \ = 0;\n    let mut min_change_index18 = 0;\n    let mut min_change_index19 =\
    \ 0;\n    let mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n\
    \    let mut min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n  \
    \  let mut min_change_index24 = 0;\n    let mut min_change_index25 = 0;\n    let\
    \ mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n    let mut\
    \ min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n    let mut min_change_index30\
    \ = 0;\n    let mut min_change_index31 = 0;\n    let mut min_change_index32 =\
    \ 0;\n    let mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n\
    \    let mut min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n  \
    \  let mut min_change_index37 = 0;\n    let mut min_change_index38 = 0;\n    let\
    \ mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n    let mut\
    \ min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n    let mut min_change_index43\
    \ = 0;\n    let mut min_change_index44 = 0;\n    let mut min_change_index45 =\
    \ 0;\n    let mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n\
    \    let mut min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n  \
    \  let mut min_change_index50 = 0;\n    let mut min_change_index51 = 0;\n    let\
    \ mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n    let mut\
    \ min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n    let mut min_change_index56\
    \ = 0;\n    let mut ", "    let mut min_change = arr.len();\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n\
    \    let mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let\
    \ mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let mut\
    \ min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_index10\
    \ = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_index12 =\
    \ 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n\
    \    let mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n  \
    \  let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n    let\
    \ mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n    let mut\
    \ min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_index23\
    \ = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_index25 =\
    \ 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n\
    \    let mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n  \
    \  let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n    let\
    \ mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n    let mut\
    \ min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let mut min_change_index36\
    \ = 0;\n    let mut min_change_index37 = 0;\n    let mut min_change_index38 =\
    \ 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n\
    \    let mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n  \
    \  let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n    let\
    \ mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n    let mut\
    \ min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let mut min_change_index49\
    \ = 0;\n    let mut min_change_index50 = 0;\n    let mut min_change_index51 =\
    \ 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n\
    \    let mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n  \
    \  let mut min_change_index56 = 0;\n    let mut ", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_val = std::i32::MAX;\n\
    \    let mut min_change_val_pos = -1;\n    let mut min_change_val_neg = std::i32::MAX;\n\
    \    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_zero = std::i32::MAX;\n\
    \    let mut min_change_val_zero_idx = -1;\n    let mut min_change_val_one = std::i32::MAX;\n\
    \    let mut min_change_val_one_idx = -1;\n    let mut min_change_val_odd = std::i32::MAX;\n\
    \    let mut min_change_val_odd_idx = -1;\n    let mut min_change_val_even = std::i32::MAX;\n\
    \    let mut min_change_val_even_idx = -1;\n    let mut min_change_val_odd_neg\
    \ = std::i32::MAX;\n    let mut min_change_val_odd_neg_idx = -1;\n    let mut\
    \ min_change_val_even_neg = std::i32::MAX;\n    let mut min_change_val_even_neg_idx\
    \ = -1;\n    let mut min_change_val_odd_zero = std::i32::MAX;\n    let mut min_change_val_odd_zero_idx\
    \ = -1;\n    let mut min_change_val_even_zero = std::i32::MAX;\n    let mut min_change_val_even_zero_idx\
    \ = -1;\n    let mut min_change_val_odd_one = std::i32::MAX;\n    let mut min_change_val_odd_one_idx\
    \ = -1;\n    let mut min_change_val_even_one = std::i32::MAX;\n    let mut min_change_val_even_one_idx\
    \ = -1;\n    let mut min_change_val_odd_odd = std::i32::MAX;\n    let mut min_change_val_odd_odd_idx\
    \ = -1;\n    let mut min_change_val_even_odd = std::i32::MAX;\n    let mut min_change_val_even_odd_idx\
    \ = -1;\n    let mut min_change_val_odd_even = std::i32::MAX;\n    let mut min_change_val_odd_even_idx\
    \ = -1;\n    let mut min_change_val_even_even = std::i32::MAX;\n    let mut min_change_val_even_even_idx\
    \ = -1;\n    let mut min_change_val_odd_odd_neg = std::i32::MAX;\n    let mut\
    \ min_change_val_odd_odd_neg_idx = -1;\n    let mut min_change_val_even_odd_neg\
    \ = std::i32::MAX;\n    let mut min_change_val_even_odd_neg_idx = -1;\n    let\
    \ mut min_change_val_odd_even_", "    let mut min_change = std::i32::MAX;\n  \
    \  let mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let\
    \ mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let mut min_change_index7\
    \ = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n\
    \    let mut min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n  \
    \  let mut min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n    let\
    \ mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n    let mut min_change_index18\
    \ = 0;\n    let mut min_change_index19 = 0;\n    let mut min_change_index20 =\
    \ 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n\
    \    let mut min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n  \
    \  let mut min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n    let\
    \ mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n    let mut\
    \ min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n    let mut min_change_index31\
    \ = 0;\n    let mut min_change_index32 = 0;\n    let mut min_change_index33 =\
    \ 0;\n    let mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n\
    \    let mut min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n  \
    \  let mut min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n    let\
    \ mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n    let mut\
    \ min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n    let mut min_change_index44\
    \ = 0;\n    let mut min_change_index45 = 0;\n    let mut min_change_index46 =\
    \ 0;\n    let mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n\
    \    let mut min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n  \
    \  let mut min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n    let\
    \ mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n    let mut\
    \ min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n    let ", " \
    \   let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n \
    \   for &i in arr {\n        if i != arr[(arr.len() - 1) - i] {\n            min_change\
    \ = std::i32::MAX;\n            min_change_index = 0;\n            break;\n  \
    \      }\n        min_change = std::cmp::min(min_change, i - min_change_index);\n\
    \        min_change_index += 1;\n    }\n    min_change", "    let mut min_change\
    \ = std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_val\
    \ = std::i32::MAX;\n    let mut min_change_val_pos = -1;\n    let mut min_change_val_neg\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut\
    \ min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let ", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n   \
    \ for &i in &arr {\n        if i != min_change_val {\n            min_change =\
    \ min_change_index;\n            min_change_val = i;\n        }\n        min_change_index\
    \ += 1;\n    }\n    min_change", "    let mut min_change = std::i32::MAX;\n  \
    \  let mut min_change_index = 0;\n    let mut min_change_index2 = 0;\n    let\
    \ mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let mut min_change_index7\
    \ = 0;\n    let mut min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n\
    \    let mut min_change_index10 = 0;\n    let mut min_change_index11 = 0;\n  \
    \  let mut min_change_index12 = 0;\n    let mut min_change_index13 = 0;\n    let\
    \ mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n    let mut min_change_index18\
    \ = 0;\n    let mut min_change_index19 = 0;\n    let mut min_change_index20 =\
    \ 0;\n    let mut min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n\
    \    let mut min_change_index23 = 0;\n    let mut min_change_index24 = 0;\n  \
    \  let mut min_change_index25 = 0;\n    let mut min_change_index26 = 0;\n    let\
    \ mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n    let mut\
    \ min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n    let mut min_change_index31\
    \ = 0;\n    let mut min_change_index32 = 0;\n    let mut min_change_index33 =\
    \ 0;\n    let mut min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n\
    \    let mut min_change_index36 = 0;\n    let mut min_change_index37 = 0;\n  \
    \  let mut min_change_index38 = 0;\n    let mut min_change_index39 = 0;\n    let\
    \ mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n    let mut\
    \ min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n    let mut min_change_index44\
    \ = 0;\n    let mut min_change_index45 = 0;\n    let mut min_change_index46 =\
    \ 0;\n    let mut min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n\
    \    let mut min_change_index49 = 0;\n    let mut min_change_index50 = 0;\n  \
    \  let mut min_change_index51 = 0;\n    let mut min_change_index52 = 0;\n    let\
    \ mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n    let mut\
    \ min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n    let ", " \
    \   let mut min_change = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mu", "    let mut min_change\
    \ = arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val\
    \ = arr[0];\n    for &i in arr {\n        if min_change_val < i {\n          \
    \  min_change = min_change_index;\n            min_change_val = i;\n        }\n\
    \        min_change_index += 1;\n    }\n    min_change", "    let mut min_change\
    \ = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n    let mut\
    \ min_change_index = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_neg\
    \ = 0;\n    let mut min_change_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut min_change_zero_neg = 0;\n\
    \    let mut min_change_zero_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut min_change_zero_neg = 0;\n\
    \    let mut min_change_zero_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut min_change_zero_neg = 0;\n\
    \    let mut min_change_zero_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut min_change_zero_neg = 0;\n\
    \    let mut min_change_zero_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut min_change_zero_neg = 0;\n\
    \    let mut min_change_zero_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut min_change_zero_neg = 0;\n\
    \    let mut min_change_zero_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut min_change_zero_neg = 0;\n\
    \    let mut min_change_zero_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut min_change_zero_neg = 0;\n\
    \    let mut min_change_zero_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut min_change_zero_neg = 0;\n\
    \    let mut min_change_zero_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut min_change_zero_neg = 0;\n\
    \    let mut min_change_zero_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut min_change_zero_neg = 0;\n\
    \    let mut min_change_zero_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut min_change_zero_neg = 0;\n\
    \    let mut min_change_zero_zero = 0;\n    let mut min_change_neg_index = 0;\n\
    \    let mut min_change_zero_pos = 0;\n    let mut ", "    let mut min_change\
    \ = std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_palindrome\
    \ = false;\n    let mut min_change_palindrome_index = 0;\n    let mut min_change_palindrome_length\
    \ = 0;\n    let mut min_change_palindrome_length_index = 0;\n    let mut min_change_palindrome_length_palindrome\
    \ = false;\n    let mut min_change_palindrome_length_palindrome_index = 0;\n \
    \   let mut min_change_palindrome_length_palindrome_length = 0;\n    let mut min_change_palindrome_length_palindrome_length_index\
    \ = 0;\n    let mut min_change_palindrome_length_palindrome_length_palindrome\
    \ = false;\n    let mut min_change_palindrome_length_palindrome_length_palindrome_index\
    \ = 0;\n    let mut min_change_palindrome_length_palindrome_length_palindrome_length\
    \ = 0;\n    let mut min_change_palindrome_length_palindrome_length_palindrome_length_index\
    \ = 0;\n    let mut min_change_palindrome_length_palindrome_length_palindrome_length_palindrome\
    \ = false;\n    let mut min_change_palindrome_length_palindrome_length_palindrome_length_palindrome_index\
    \ = 0;\n    let mut min_change_palindrome_length_palindrome_length_palindrome_length_palindrome_length\
    \ = 0;\n    let mut min_change_palindrome_length_palindrome_length_palindrome_length_palindrome_length_index\
    \ = 0;\n    let mut min_change_palindrome_length_palindrome_length_palindrome_length_palindrome_length_palindrome\
    \ = false;\n    let mut min_change_palindrome_length_palindrome_length_palindrome_length_palindrome_length_palindrome_index\
    \ = 0;\n    let mut min_change_palindrome_length_palindrome_length_palindrome_length_palindrome_length_palindrome_length\
    \ = 0;\n    let mut min_change_palindrome_length_palindrome_length_palindrome_length_palindrome_length_palindrome_length_index\
    \ = 0;\n    let mut min_change_palindrome_length_palindrome_length_palindrome_length_palindrome_length_palindrome_length_palindrome\
    \ = false;\n    let mut min_change_palindrome_length_palindrome_length_p", " \
    \   let mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let ", " \
    \   let mut min_change = arr.len();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_val = arr[0];\n    for &x in arr.iter().rev() {\n        if x\
    \ == min_change_val {\n            min_change_index += 1;\n        } else {\n\
    \            min_change = min_change_index;\n            min_change_val = x;\n\
    \            min_change_index = 0;\n        }\n    }\n    min_change", "    let\
    \ mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_len = arr.len();\n    let mut min_change_len_index = 0;\n   \
    \ let mut min_change_len_value = arr.len();\n    let mut min_change_len_value_index\
    \ = 0;\n    let mut min_change_len_value_value = 0;\n    let mut min_change_len_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = 0;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n", "    let mut min_change = isize::MAX;\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_palindromic = false;\n\n    for &i in arr {\n \
    \       if min_change > i {\n            min_change = i;\n            min_change_index\
    \ = i;\n            min_change_palindromic = false;\n        }\n        if min_change\
    \ == i {\n            min_change_palindromic = true;\n        }\n    }\n\n   \
    \ if min_change_palindromic {\n        min_change_index\n    } else {\n      \
    \  min_change_index + 1\n    }", "    let mut min_change = std::i32::MAX;\n  \
    \  let mut min_change_idx = -1;\n    let mut min_change_val = std::i32::MAX;\n\
    \    let mut min_change_val_pos = -1;\n    let mut min_change_val_neg = -std::i32::MAX;\n\
    \    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos = -std::i32::MAX;\n\
    \    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_neg_idx\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut ", "    let mut\
    \ min_change = std::cmp::min::min(arr.len(), arr.len());\n    for i in 0..min_change\
    \ {\n        if arr[i] != arr[arr.len() - 1 - i] {\n            min_change = i;\n\
    \        }\n    }\n    min_change", "    let mut min_change = isize::MAX;\n  \
    \  let mut min_change_index = 0;\n    let mut min_change_len = arr.len();\n  \
    \  let mut min_change_len = min_change_len.saturating_add((min_change_len / 2).saturating_add((min_change_len\
    \ / 2)));\n    for i in 0..min_change_len {\n        let mut min_change = isize::MAX;\n\
    \        let mut min_change_index = 0;\n        let mut min_change_len = arr.len();\n\
    \        let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n        for j in 0..min_change_len\
    \ {\n            if arr[j] != arr[(arr.len() - 1) - j] {\n                min_change\
    \ = min_change;\n                min_change_index = j;\n            }\n      \
    \  }\n        if min_change < min_change_len {\n            min_change = min_change_len;\n\
    \            min_change_index = i;\n        }\n    }\n    min_change", "    let\
    \ mut min_change = isize::MAX;\n    let mut min_change_index = 0;\n    let mut\
    \ min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = min_change_len.saturating_add((min_change_len / 2).saturating_add((min_change_len\
    \ / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_", "    let mut min_change = arr.len();\n    let mut\
    \ min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n    let\
    \ mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n \
    \   let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_idx = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mu", "    let mut min_change = std::i32::MAX;\n    let mut min_change_index\
    \ = 0;\n    for &i in arr {\n        if i != arr[(arr.len() - 1) - i] {\n    \
    \        min_change = std::cmp::min(min_change, i - min_change_index);\n     \
    \       min_change_index = i;\n        }\n    }\n    min_change", "    let mut\
    \ min_change = arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len_index2\
    \ = 0;\n    let mut min_change_len_index3 = 0;\n    let mut min_change_len_index4\
    \ = 0;\n    let mut min_change_len_index5 = 0;\n    let mut min_change_len_index6\
    \ = 0;\n    let mut min_change_len_index7 = 0;\n    let mut min_change_len_index8\
    \ = 0;\n    let mut min_change_len_index9 = 0;\n    let mut min_change_len_index10\
    \ = 0;\n    let mut min_change_len_index11 = 0;\n    let mut min_change_len_index12\
    \ = 0;\n    let mut min_change_len_index13 = 0;\n    let mut min_change_len_index14\
    \ = 0;\n    let mut min_change_len_index15 = 0;\n    let mut min_change_len_index16\
    \ = 0;\n    let mut min_change_len_index17 = 0;\n    let mut min_change_len_index18\
    \ = 0;\n    let mut min_change_len_index19 = 0;\n    let mut min_change_len_index20\
    \ = 0;\n    let mut min_change_len_index21 = 0;\n    let mut min_change_len_index22\
    \ = 0;\n    let mut min_change_len_index23 = 0;\n    let mut min_change_len_index24\
    \ = 0;\n    let mut min_change_len_index25 = 0;\n    let mut min_change_len_index26\
    \ = 0;\n    let mut min_change_len_index27 = 0;\n    let mut min_change_len_index28\
    \ = 0;\n    let mut min_change_len_index29 = 0;\n    let mut min_change_len_index30\
    \ = 0;\n    let mut min_change_len_index31 = 0;\n    let mut min_change_len_index32\
    \ = 0;\n    let mut min_change_len_index33 = 0;\n    let mut min_change_len_index34\
    \ = 0;\n    let mut min_change_len_index35 = 0;\n    let mut min_change_len_index36\
    \ = 0;\n    let mut min_change_len_index37 = 0;\n    let mut min_change_len_index38\
    \ = 0;\n    let mut min_change_len_index39 = 0;\n    let mut min_change_len_index40\
    \ = 0;\n    let mut min_change_len_index41 = 0;\n    let mut min_change_len_index42\
    \ = 0;\n    let mut min_change_len_index43 = 0;\n    let mut min_change_len_index44\
    \ = 0;\n    let mut min_change_len_index45 = 0;\n    let mut min_change_len_index46\
    \ = 0;\n    let mut min_change_len_index47 = 0;\n    let mut min_change_len_index48\
    \ = 0;\n    let mut min_change_len_index49 = 0;", "    let mut min_change = isize::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n   \
    \ for &i in arr {\n        if min_change_val < i {\n            min_change_val\
    \ = i;\n            min_change_index = i;\n        }\n    }\n    for i in arr\
    \ {\n        if min_change_val == i {\n            min_change_index += 1;\n  \
    \      }\n    }\n    min_change", "    let mut min_change = isize::MAX;\n    let\
    \ mut min_change_index = 0;\n    let mut min_change_len = arr.len();\n    for\
    \ i in 0..arr.len() {\n        let mut min_change = isize::MAX;\n        let mut\
    \ min_change_index = 0;\n        let mut min_change_len = arr.len();\n       \
    \ for j in 0..arr.len() {\n            if i != j {\n                if arr[j]\
    \ < arr[i] {\n                    min_change = min_change + 1;\n             \
    \       min_change_index = j;\n                }\n            }\n        }\n \
    \       if min_change < min_change_len {\n            min_change_len = min_change;\n\
    \        }\n    }\n    min_change_len", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let\
    \ mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n \
    \   let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.", "    let mut min_change = arr.len();\n  \
    \  let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_val_pos = 0;\n    let mut min_change_val_neg = 0;\n    let mut\
    \ min_change_val_neg_index = 0;\n    let mut min_change_val_neg_index2 = 0;\n\
    \    let mut min_change_val_neg_index3 = 0;\n    let mut min_change_val_neg_index4\
    \ = 0;\n    let mut min_change_val_neg_index5 = 0;\n    let mut min_change_val_neg_index6\
    \ = 0;\n    let mut min_change_val_neg_index7 = 0;\n    let mut min_change_val_neg_index8\
    \ = 0;\n    let mut min_change_val_neg_index9 = 0;\n    let mut min_change_val_neg_index10\
    \ = 0;\n    let mut min_change_val_neg_index11 = 0;\n    let mut min_change_val_neg_index12\
    \ = 0;\n    let mut min_change_val_neg_index13 = 0;\n    let mut min_change_val_neg_index14\
    \ = 0;\n    let mut min_change_val_neg_index15 = 0;\n    let mut min_change_val_neg_index16\
    \ = 0;\n    let mut min_change_val_neg_index17 = 0;\n    let mut min_change_val_neg_index18\
    \ = 0;\n    let mut min_change_val_neg_index19 = 0;\n    let mut min_change_val_neg_index20\
    \ = 0;\n    let mut min_change_val_neg_index21 = 0;\n    let mut min_change_val_neg_index22\
    \ = 0;\n    let mut min_change_val_neg_index23 = 0;\n    let mut min_change_val_neg_index24\
    \ = 0;\n    let mut min_change_val_neg_index25 = 0;\n    let mut min_change_val_neg_index26\
    \ = 0;\n    let mut min_change_val_neg_index27 = 0;\n    let mut min_change_val_neg_index28\
    \ = 0;\n    let mut min_change_val_neg_index29 = 0;\n    let mut min_change_val_neg_index30\
    \ = 0;\n    let mut min_change_val_neg_index31 = 0;\n    let mut min_change_val_neg_index32\
    \ = 0;\n    let mut min_change_val_neg_index33 = 0;\n    let mut min_change_val_neg_index34\
    \ = 0;\n    let mut min_change_val_neg_index35 = 0;\n    let mut min_change_val_neg_index36\
    \ = 0;\n    let mut min_change_val_neg_index37 = 0;\n    let mut min_change_val_neg_index38\
    \ = 0;\n    let mut min_change_val_neg_index39 = 0;\n    let mut min_change_val_neg_index40\
    \ = 0;\n    let mut min_change_val_neg_index41 = 1;\n    let mut min_change_val_neg_index42\
    \ = 1;\n    let mut min_change_val_neg_index4", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut\
    \ min_change_pos = 0;\n    for &i in arr {\n        if min_change_val > i {\n\
    \            min_change_val = i;\n            min_change_pos = min_change_index;\n\
    \        }\n        min_change_index = min_change_index + 1;\n    }\n    for i\
    \ in 0..arr.len() {\n        if min_change_val == arr[i] {\n            min_change_pos\
    \ = i;\n        }\n    }\n    min_change = min_change_pos - min_change_index;\n\
    \    min_change", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>().len(),\
    \ *arr.iter().cloned().collect::<Vec<_>>().len());\n    for &x in arr.iter().cloned()\
    \ {\n        if x == *arr.iter().rev().cloned().collect::<Vec<_>>().len() - 1\
    \ {\n            min_change = std::cmp::min(min_change, x);\n        }\n    }\n\
    \    min_change", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    for i in arr.iter().rev() {\n        if *i < min_change {\n            min_change\
    \ = *i;\n        }\n    }\n    min_change", "    let mut min_change = isize::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    for\
    \ pos in 0..arr.len() {\n        if arr[pos] == min_change_val {\n           \
    \ min_change_pos = pos;\n        }\n    }\n    for pos in 0..arr.len() {\n   \
    \     if arr[pos] != min_change_val {\n            break;\n        }\n    }\n\
    \    for pos in 0..arr.len() {\n        if arr[pos] == min_change_val {\n    \
    \        min_change_len = pos - min_change_pos + 1;\n        }\n    }\n    for\
    \ pos in 0..arr.len() {\n        if arr[pos] != min_change_val {\n           \
    \ break;\n        }\n    }\n    for pos in 0..arr.len() {\n        if arr[pos]\
    \ == min_change_val {\n            min_change_len = pos - min_change_pos + 1;\n\
    \        }\n    }\n    for pos in 0..arr.len() {\n        if arr[pos] != min_change_val\
    \ {\n            break;\n        }\n    }\n    for pos in 0..arr.len() {\n   \
    \     if arr[pos] == min_change_val {\n            min_change_len = pos - min_change_pos\
    \ + 1;\n        }\n    }\n    for pos in 0..arr.len() {\n        if arr[pos] !=\
    \ min_change_val {\n            break;\n        }\n    }\n    for pos in 0..arr.len()\
    \ {\n        if arr[pos] == min_change_val {\n            min_change_len = pos\
    \ - min_change_pos + 1;\n        }\n    }\n    for pos in 0..arr.len() {\n   \
    \     if arr[pos] != min_change_val {\n            break;\n        }\n    }\n\
    \    for pos in 0..arr.len() {\n        if arr[pos] == min_change_val {\n    \
    \        min_change_len = pos - min_change_pos + 1;\n        }\n    }\n    for\
    \ pos in 0..arr.len() {\n        if arr[pos] != min_change_val {\n           \
    \ break;\n        }\n    }\n    for pos in 0..arr.len() {\n        if arr[pos]\
    \ == min_change_val {\n            min_change_len = pos - min_change_pos + 1;\n\
    \        }\n    }\n    for pos in 0..arr.len() {\n        if arr[pos] != min_change_val\
    \ {\n            break;\n        }\n    }\n    for pos in 0..arr.len() {\n   \
    \     if arr[pos] == min_change_val {\n            min_change_len = pos - min_change_pos\
    \ + 1;\n        }\n    }\n    for pos in 0..arr.len() {\n        if arr[pos] !=\
    \ min_change_val {\n            break;\n        }\n    }\n    for pos in 0..arr.len()\
    \ {\n        if arr[pos] == min_change_val {\n            min_change_len = ",
  "    let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n  \
    \  let mut min_change_count = 0;\n    let mut min_change_palindromic = false;\n\
    \    let mut min_change_palindromic_index = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_changed = false;\n    let mut min_change_palindromic_change_index\
    \ = 0;\n    let mut min_change_palindromic_change_count = 0;\n    let mut min_change_palindromic_changed\
    \ = false;\n    let mut min_change_palindromic_change_index = 0;\n    let mut\
    \ min_change_palindromic_change_count = 0;\n    let mut min_change_palindromic_changed\
    \ = false;\n    let mut min_change_palindromic_change_index = 0;\n    let mut\
    \ min_change_palindromic_change_count = 0;\n    let mut min_change_palindromic_changed\
    \ = false;\n    let mut min_change_palindromic_change_index = 0;\n    let mut\
    \ min_change_palindromic_change_count = 0;\n    let mut min_change_palindromic_changed\
    \ = false;\n    let mut min_change_palindromic_change_index = 0;\n    let mut\
    \ min_change_palindromic_change_count = 0;\n    let mut min_change_palindromic_changed\
    \ = false;\n    let mut min_change_palindromic_change_index = 0;\n    let mut\
    \ min_change_palindromic_change_count = 0;\n    let mut min_change_palindromic_changed\
    \ = false;\n    let mut min_change_palindromic_change_index = 0;\n    let mut\
    \ min_change_palindromic_change_count = 0;\n    let mut min_change_palindromic_changed\
    \ = false;\n    let mut min_change_palindromic_change_index = 0;\n    let mut\
    \ min_change_palindromic_change_count = 0;\n    let mut min_change_palindromic_changed\
    \ = false;\n    let mut min_change_palindromic_change_index = 0;\n    let mut\
    \ min_change_palindromic_change_count = 0;\n    let mut min_change_palindromic_changed\
    \ = false;\n    let mut min_change_palindromic_change_index = 0;\n    let mut\
    \ min_change_palindromic_change_count = 0;\n    let mut min_change_palindromic_changed\
    \ = false;\n    let mut min_change_palindromic_change_index = 0;\n    let mut\
    \ min_change_palindromic_change_count", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = -1;\n    let mut min_change_count = 0;\n    for\
    \ index in 0..arr.len() {\n        let mut count = 0;\n        let mut current_element\
    \ = arr[index];\n        let mut current_index = index;\n        while current_index\
    \ >= 0 {\n            if current_element == arr[current_index] {\n           \
    \     count += 1;\n                current_index -= 1;\n            } else {\n\
    \                break;\n            }\n        }\n        if count < min_change\
    \ {\n            min_change = count;\n            min_change_index = index;\n\
    \            min_change_count = count;\n        }\n    }\n    min_change_count",
  "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    for &i in arr {\n        if *i < *min_change {\n            min_change =\
    \ i;\n        }\n    }\n    min_change", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n\
    \    for i in arr.iter().rev() {\n        if *i < *min_change {\n            min_change\
    \ = *i;\n        }\n    }\n    min_change", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n   \
    \ for &i in arr {\n        if i != min_change_val {\n            min_change =\
    \ min_change - 1;\n            min_change_val = i;\n        }\n    }\n    for\
    \ &i in arr {\n        if i != min_change_val {\n            min_change = min_change\
    \ + 1;\n            min_change_val = i;\n        }\n    }\n    min_change", " \
    \   let mut min_change = arr.len();\n    let mut min_change_idx = arr.len();\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_val_pos = 0;\n \
    \   let mut min_change_val_neg = 0;\n    let mut min_change_val_neg_idx = 0;\n\
    \    let mut min_change_val_neg_val = 0;\n    let mut min_change_val_neg_val_pos\
    \ = 0;\n    let mut min_change_val_neg_val_neg = 0;\n    let mut min_change_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_pos\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val = 0;\n    let mut min_change_val_neg_val_neg_",
  "    let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n  \
    \  let mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n    let\
    \ mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let mut\
    \ min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let mut min_change_index8\
    \ = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n\
    \    let mut min_change_index11 = 0;\n    let mut min_change_index12 = 0;\n  \
    \  let mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n    let\
    \ mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n    let mut\
    \ min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n    let mut min_change_index19\
    \ = 0;\n    let mut min_change_index20 = 0;\n    let mut min_change_index21 =\
    \ 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n\
    \    let mut min_change_index24 = 0;\n    let mut min_change_index25 = 0;\n  \
    \  let mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n    let\
    \ mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n    let mut\
    \ min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n    let mut min_change_index32\
    \ = 0;\n    let mut min_change_index33 = 0;\n    let mut min_change_index34 =\
    \ 0;\n    let mut min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n\
    \    let mut min_change_index37 = 0;\n    let mut min_change_index38 = 0;\n  \
    \  let mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n    let\
    \ mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n    let mut\
    \ min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n    let mut min_change_index45\
    \ = 0;\n    let mut min_change_index46 = 0;\n    let mut min_change_index47 =\
    \ 0;\n    let mut min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n\
    \    let mut min_change_index50 = 0;\n    let mut min_change_index51 = 0;\n  \
    \  let mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n    let\
    \ mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n    let mut\
    \ min_change_index56 = 0;\n    let ", "    let mut min_change = std::i32::MAX;\n\
    \    let mut min_change_index = -1;\n    let mut min_change_index2 = -1;\n   \
    \ let mut min_change_index3 = -1;\n    let mut min_change_index4 = -1;\n    let\
    \ mut min_change_index5 = -1;\n    let mut min_change_index6 = -1;\n    let mut\
    \ min_change_index7 = -1;\n    let mut min_change_index8 = -1;\n    let mut min_change_index9\
    \ = -1;\n    let mut min_change_index10 = -1;\n    let mut min_change_index11\
    \ = -1;\n    let mut min_change_index12 = -1;\n    let mut min_change_index13\
    \ = -1;\n    let mut min_change_index14 = -1;\n    let mut min_change_index15\
    \ = -1;\n    let mut min_change_index16 = -1;\n    let mut min_change_index17\
    \ = -1;\n    let mut min_change_index18 = -1;\n    let mut min_change_index19\
    \ = -1;\n    let mut min_change_index20 = -1;\n    let mut min_change_index21\
    \ = -1;\n    let mut min_change_index22 = -1;\n    let mut min_change_index23\
    \ = -1;\n    let mut min_change_index24 = -1;\n    let mut min_change_index25\
    \ = -1;\n    let mut min_change_index26 = -1;\n    let mut min_change_index27\
    \ = -1;\n    let mut min_change_index28 = -1;\n    let mut min_change_index29\
    \ = -1;\n    let mut min_change_index30 = -1;\n    let mut min_change_index31\
    \ = -1;\n    let mut min_change_index32 = -1;\n    let mut min_change_index33\
    \ = -1;\n    let mut min_change_index34 = -1;\n    let mut min_change_index35\
    \ = -1;\n    let mut min_change_index36 = -1;\n    let mut min_change_index37\
    \ = -1;\n    let mut min_change_index38 = -1;\n    let mut min_change_index39\
    \ = -1;\n    let mut min_change_index40 = -1;\n    let mut min_change_index41\
    \ = -1;\n    let mut min_change_index42 = -1;\n    let mut min_change_index43\
    \ = -1;\n    let mut min_change_index44 = -1;\n    let mut min_change_index45\
    \ = -1;\n    let mut min_change_index46 = -1;\n    let mut min_change_index47\
    \ = -1;\n    let mut min_change_index48 = -1;\n    let mut min_change_index49\
    \ = -1;\n    let mut min_change_index50 = -1;\n    let mut min_change_index51\
    \ = -1;\n    let mut ", "    let mut min_change = arr.len() as isize;\n    let\
    \ mut min_change_index = 0;\n    let mut min_change_len = arr.len();\n    let\
    \ mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n \
    \   let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mu", "    let mut min_change = arr.len();\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_value = arr[0];\n    let mut min_change_index =\
    \ arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n    let mut min_change_value = arr[0];\n    let mut min_change_index\
    \ = arr.len();\n", "    let mut min_change = std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>().len(),\
    \ *arr.iter().cloned().collect::<Vec<_>>().len());\n    for i in 0..min_change\
    \ {\n        if arr[i] != arr[*arr.iter().rev().cloned().collect::<Vec<_>>().rev().position(|&x|\
    \ x == arr[i])].unwrap() {\n            min_change = i;\n        }\n    }\n  \
    \  min_change", "    let mut min_change = std::i32::MAX;\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_len = arr.len();\n    for &i in arr {\n       \
    \ if min_change > i {\n            min_change = i;\n            min_change_index\
    \ = i;\n        }\n        if min_change == i {\n            min_change_len =\
    \ i;\n        }\n    }\n    min_change_len", "    let mut min_change = arr.len();\n\
    \    let mut min_change_index = 0;\n    let mut min_change_val = arr[0];\n   \
    \ let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut\
    \ min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let ", "    let mut min_change = isize::MAX;\n\
    \    let mut min_change_index = 0;\n    let mut i = 0;\n    let mut j = 0;\n \
    \   while i < arr.len() {\n        if arr[i] > arr[j] {\n            i += 1;\n\
    \        } else {\n            j += 1;\n        }\n        if i == arr.len() ||\
    \ j == arr.len() {\n            if min_change > i - j {\n                min_change\
    \ = i - j;\n                min_change_index = i;\n            }\n           \
    \ i += 1;\n            j += 1;\n        }\n    }\n    min_change_index", "   \
    \ let mut min_change = std::i32::MAX;\n    let mut min_change_index = 0;\n   \
    \ let mut min_change_len = arr.len();\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let "]
stop_tokens:
- "\n}"

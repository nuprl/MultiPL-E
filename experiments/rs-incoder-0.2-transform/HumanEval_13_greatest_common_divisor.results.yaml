language: rs
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a_mod_b = a % b;\n    while a_mod_b != 0 {\n        greatest_common_divisor\
    \ += b;\n        a_mod_b -= b;\n    }\n    greatest_common_divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ i = 0;\n    let mut j = 0;\n    while i < a && j < b {\n        if a % i ==\
    \ 0 && b % j == 0 {\n            return i;\n        }\n        i += 1;\n     \
    \   j += 1;\n    }\n    if i == a {\n        return j;\n    }\n    if j == b {\n\
    \        return i;\n    }\n    if a % i == 0 && b % j == 0 {\n        return i;\n\
    \    }\n    if a % j == 0 && b % i == 0 {\n        return j;\n    }\n    if a\
    \ % i == 0 && b % j == 0 {\n        return i;\n    }\n    if a % j == 0 && b %\
    \ i == 0 {\n        return j;\n    }\n    if a % i == 0 && b % j == 0 {\n    \
    \    return i;\n    }\n    if a % j == 0 && b % i == 0 {\n        return j;\n\
    \    }\n    if a % i == 0 && b % j == 0 {\n        return i;\n    }\n    if a\
    \ % j == 0 && b % i == 0 {\n        return j;\n    }\n    if a % i == 0 && b %\
    \ j == 0 {\n        return i;\n    }\n    if a % j == 0 && b % i == 0 {\n    \
    \    return j;\n    }\n    if a % i == 0 && b % j == 0 {\n        return i;\n\
    \    }\n    if a % j == 0 && b % i == 0 {\n        return j;\n    }\n    if a\
    \ % i == 0 && b % j == 0 {\n        return i;\n    }\n    if a % j == 0 && b %\
    \ i == 0 {\n        return j;\n    }\n    if a % i == 0 && b % j == 0 {\n    \
    \    return i;\n    }\n    if a % j == 0 && b % i == 0 {\n        return j;\n\
    \    }\n    if a % i == 0 && b % j == 0 {\n        return i;\n    }\n    if a\
    \ % j == 0 && b % i == 0 {\n        return j;\n    }\n    if a % i == 0 && b %\
    \ j == 0 {\n        return i;\n    }\n    if a % j == 0 && b % i == 0 {\n    \
    \    return j;\n    }\n    if a % i == 0 && b % j == 0 {\n        return i;\n\
    \    }\n    if a % j == 0 && b % i == 0 {\n        return j;\n    }\n    if a\
    \ % i == 0 && b % j == 0 {\n        return i;\n    }\n    if a % j == 0 && b %\
    \ i == 0 {\n        return j;\n    }\n    if a % i == 0 && b % j == 0 {\n    \
    \    return i;\n    }\n    if a % j == 0 && b % i == 0 {\n        return j;\n\
    \    }\n    if a % i == 0 && b % j == 0 {\n        return i;\n    }\n    if \n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n   --> /tmp/tmpwvt9gv89.rs:104:1\n\
    \    |\n104 | }\n    | ^ expected expression\n\nerror: aborting due to previous\
    \ error\n\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    let mut a = a;\n    let mut b = b;\n    while\
    \ a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n        } else {\n\
    \            b %= a;\n        }\n        greatest_common_divisor *= a;\n     \
    \   a /= b;\n        b /= a;\n    }\n    greatest_common_divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpvc_dunij.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd > b {\n        gcd -= b;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp7cg3hlnp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.clone();\n    let mut a = a;\n    let mut b = b;\n    while a != 0 {\n \
    \       let mut remainder = a % b;\n        a = b;\n        b = remainder;\n \
    \   }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmp57rz05l2.rs:15:29

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp65s7qo3w.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor < b {\n    \
    \    greatest_common_divisor += a;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpe7lnko9l.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    a.gcd(b).unwrap()\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpd2l3982l.rs:10:7\n   |\n10 |     a.gcd(b).unwrap()\n  \
    \ |       ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp65s7qo3w.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= a;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpa6mbmn3a.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut remainder = a % b;\n    while remainder != 0 {\n        greatest_common_divisor\
    \ = remainder;\n        remainder = a % b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = a % b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp2u9awk9y.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(1)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpa35pt268.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a as isize;\n    let mut remainder = a % b;\n\n    while remainder != 0 {\n\
    \        greatest_common_divisor += 1;\n        remainder = remainder % b;\n \
    \   }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp91jh71ts.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = a % b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp2u9awk9y.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b % greatest_common_divisor;\n    }\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpjlpfy71r.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_divisor = a % b;\n    while greatest_divisor != 0 {\n        greatest_divisor\
    \ = b;\n        b = a % b;\n    }\n    greatest_divisor\n}\n\nfn main() {\n  \
    \  let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpajm9d26t.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        (a, b) = (b,\
    \ a)\n    }\n    let mut gcd = a;\n    while gcd != 0 {\n        if a % gcd ==\
    \ 0 && b % gcd == 0 {\n            return gcd;\n        }\n        gcd = gcd /\
    \ 2;\n    }\n    return a;\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpixh7j2qb.rs:11:10\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |         (a, b) = (b, a)\n   |          ^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpixh7j2qb.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         (a, b) = (b, a)\n   |             ^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a.clone();\n    while greatest_common_divisor < b\
    \ {\n        greatest_common_divisor += b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp7_ypo_kb.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ result = a;\n    while result > b {\n        result = result % b;\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp_phxmtu1.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b % greatest_common_divisor;\n    }\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpjlpfy71r.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ div = a / b;\n    while div > 1 {\n        div = div / b;\n    }\n    div\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpvgat9h9m.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a as isize;\n\n    for divisor in &[a, b] {\n        if divisor > greatest_common_divisor\
    \ {\n            greatest_common_divisor = divisor;\n        }\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpy0o4qa_k.rs:14:22\n   |\n\
    14 |         if divisor > greatest_common_divisor {\n   |                    \
    \  ^^^^^^^^^^^^^^^^^^^^^^^\n   |                      |\n   |                \
    \      expected `&isize`, found `isize`\n   |                      help: consider\
    \ borrowing here: `&greatest_common_divisor`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpy0o4qa_k.rs:15:39\n   |\n11 |     let mut greatest_common_divisor\
    \ = a as isize;\n   |                                       ---------- expected\
    \ due to this value\n...\n15 |             greatest_common_divisor = divisor;\n\
    \   |                                       ^^^^^^^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n15 |             greatest_common_divisor\
    \ = *divisor;\n   |                                       +\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    greatest_common_divisor(b, a % b)\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    let mut a_copy = a;\n    let mut b_copy =\
    \ b;\n    while a_copy > b_copy {\n        greatest_common_divisor += 1;\n   \
    \     a_copy -= 1;\n    }\n    while b_copy > a_copy {\n        greatest_common_divisor\
    \ += 1;\n        b_copy -= 1;\n    }\n    greatest_common_divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `1`', /tmp/tmp8laefvn8.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut gcd = a;\n    while gcd\
    \ != 0 {\n        if b == 0 {\n            return gcd;\n        }\n        gcd\
    \ = b / gcd;\n    }\n    return gcd;\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            greatest_common_divisor += a;\n            a -= b;\n        } else\
    \ {\n            greatest_common_divisor += b;\n            b -= a;\n        }\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpm5vfyi3x.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |             a -= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpm5vfyi3x.rs:14:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n14 |             b -= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.clone();\n    let mut remainder = b.clone();\n\n    while remainder != 0\
    \ {\n        if greatest_common_divisor % remainder == 0 {\n            greatest_common_divisor\
    \ /= remainder;\n        } else {\n            remainder /= 2;\n        }\n  \
    \  }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = a / b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmphaydaro6.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        (a, b) = (b,\
    \ a)\n    }\n    let mut a = a % b;\n    while a != 0 {\n        a = a % b;\n\
    \    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp84sdaifm.rs:11:10\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |         (a, b) = (b, a)\n   |          ^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp84sdaifm.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         (a, b) = (b, a)\n   |             ^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmppoberrau.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd > b {\n        gcd -= b;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp7cg3hlnp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \n    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = b;\n            b = b % greatest_common_divisor;\n        } else {\n     \
    \       greatest_common_divisor = a;\n            a = a % greatest_common_divisor;\n\
    \        }\n    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp3g6f4hfl.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= 2;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `1`', /tmp/tmp7a4o05nf.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = a / b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp_be2kg8j.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b % greatest_common_divisor;\n    }\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpoeq1oo2y.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = greatest_common_divisor + 1;\n            a = a % greatest_common_divisor;\n\
    \        } else {\n            greatest_common_divisor = greatest_common_divisor\
    \ + 1;\n            b = b % greatest_common_divisor;\n        }\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp25x6p_sv.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptmhqfmo8.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ help: there is an associated function with a similar name: `div_floor`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a as isize;\n    let mut a = a as isize;\n    let mut b = b as isize;\n\n\
    \    while a != 0 {\n        let mut a = a / b;\n        greatest_common_divisor\
    \ = greatest_common_divisor + a;\n    }\n\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor < b {\n    \
    \    greatest_common_divisor += a;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpe7lnko9l.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp6m7dz2qk.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmp6m7dz2qk.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n15 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a.clone();\n    while greatest_common_divisor < b\
    \ {\n        greatest_common_divisor += b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmp7_ypo_kb.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.abs() as isize;\n    let mut a = a as isize;\n    let mut b = b as isize;\n\
    \n    while a > b {\n        greatest_common_divisor += 1;\n        a -= 1;\n\
    \        b -= 1;\n    }\n\n    while b > a {\n        greatest_common_divisor\
    \ += 1;\n        b -= 1;\n        a -= 1;\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    let mut a_prime = a;\n    let mut b_prime\
    \ = b;\n    while a_prime > b_prime {\n        greatest_common_divisor *= a_prime;\n\
    \        a_prime /= b_prime;\n    }\n    while b_prime > a_prime {\n        greatest_common_divisor\
    \ *= b_prime;\n        b_prime /= a_prime;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmpxdtvyqhu.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp91jh71ts.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp91jh71ts.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor = b;\n\
    \        b = a % b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n  \
    \  let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpmg47z1il.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd > b {\n        gcd -= b;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp7cg3hlnp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n\
    \        } else {\n            b %= a;\n        }\n        gcd = (gcd + (a % b))\
    \ % b;\n    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpg5dj87am.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpg5dj87am.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp91jh71ts.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    while greatest_common_divisor > b {\n        greatest_common_divisor\
    \ -= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmphondwxbd.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp65s7qo3w.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut gcd = 1;\n    while a >\
    \ 0 && b > 0 {\n        if a > b {\n            a %= b;\n        } else {\n  \
    \          b %= a;\n        }\n        gcd = a % gcd < b % gcd ? a : b;\n    }\n\
    \    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `a`\n\
    \  --> /tmp/tmpls4o5mpv.rs:17:35\n   |\n17 |         gcd = a % gcd < b % gcd ?\
    \ a : b;\n   |                                   ^ expected one of `.`, `;`, `?`,\
    \ `}`, or an operator\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    if a == 0 {\n        return b;\n    }\n \
    \   let mut greatest_common_divisor = a as isize;\n    let mut a = a % b;\n  \
    \  while a != 0 {\n        greatest_common_divisor = greatest_common_divisor as\
    \ isize;\n        greatest_common_divisor += 1;\n        a = a % b;\n    }\n \
    \   greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = a / b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp_be2kg8j.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a.clone();\n    while greatest_common_divisor > b\
    \ {\n        greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpqjl4euei.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpb5o9pnrq.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpvxbiw7ws.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpvxbiw7ws.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmppoberrau.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp6co9im4o.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp65s7qo3w.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp91jh71ts.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).ceil()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `ceil` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpqkva28wb.rs:7:13\n  |\n7 |     (a / b).ceil() as isize\n\
    \  |             ^^^^ help: there is an associated function with a similar name:\
    \ `div_ceil`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmppoberrau.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a;\n    let mut greatest_common_divisor_abs = a;\n\n    while greatest_common_divisor_abs\
    \ > b {\n        greatest_common_divisor_abs -= b;\n        greatest_common_divisor\
    \ += b;\n    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpesp5u9fz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            greatest_common_divisor += a;\n            a -= b;\n        } else\
    \ {\n            greatest_common_divisor += b;\n            b -= a;\n        }\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpm5vfyi3x.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |             a -= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpm5vfyi3x.rs:14:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n14 |             b -= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd != 0 && b != 0 {\n        if a % gcd == 0 && b % gcd\
    \ == 0 {\n            gcd = gcd / gcd % b;\n        } else {\n            gcd\
    \ = gcd / gcd % b;\n        }\n    }\n    gcd\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n\
    \        } else {\n            b %= a;\n        }\n        gcd *= a;\n    }\n\
    \    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpfugip2p1.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpfugip2p1.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp65s7qo3w.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.clone();\n    let mut a = a.clone();\n    let mut b = b.clone();\n\n   \
    \ while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ -= b;\n            a -= b;\n        } else {\n            greatest_common_divisor\
    \ -= a;\n            b -= a;\n        }\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `-6`,\n right: `1`', /tmp/tmptl8efhcc.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.abs() as isize;\n    let mut a = a % greatest_common_divisor;\n    let mut\
    \ b = b % greatest_common_divisor;\n\n    while a != 0 && b != 0 {\n        if\
    \ a > b {\n            greatest_common_divisor = b;\n            b = b % greatest_common_divisor;\n\
    \        } else {\n            greatest_common_divisor = a;\n            a = a\
    \ % greatest_common_divisor;\n        }\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpc3vyeall.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmppoberrau.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ r = a;\n    while r > b {\n        r = r - b;\n    }\n    r\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp400ds936.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= b;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `21`,\n right: `1`', /tmp/tmpu1u3gdgx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    let mut remainder = a % b;\n    while remainder\
    \ != 0 {\n        greatest_common_divisor = b;\n        remainder = remainder\
    \ % b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a.clone();\n    while greatest_common_divisor < b {\n        greatest_common_divisor\
    \ += a;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpofi89vwv.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp65s7qo3w.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    if a == 0 {\n        return b;\n    }\n \
    \   greatest_common_divisor(b, a % b)\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = a / b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp_be2kg8j.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    loop {\n        let mut a = a %\
    \ b;\n        if a == 0 {\n            return b;\n        }\n        b = b;\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "warning: variable does not need to be mutable\n  --> /tmp/tmp590boqys.rs:11:13\n\
    \   |\n11 |         let mut a = a % b;\n   |             ----^\n   |         \
    \    |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]`\
    \ on by default\n\nerror[E0384]: cannot assign to immutable argument `b`\n  -->\
    \ /tmp/tmp590boqys.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize, b:\
    \ isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n15 |         b = b;\n   |       \
    \  ^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error; 1 warning emitted\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ n = 0;\n    while a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n\
    \        } else {\n            b %= a;\n        }\n        n += 1;\n    }\n  \
    \  n\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp_dadhmn6.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmp_dadhmn6.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(b).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpgngu3m7w.rs:7:13\n  |\n7 |     (a / b).gcd(b).unwrap()\n\
    \  |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpvxbiw7ws.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpvxbiw7ws.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    let mut greatest_common_divisor = a;\n  \
    \  let mut remainder = a % b;\n    while remainder != 0 {\n        greatest_common_divisor\
    \ = remainder;\n        remainder = a % b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ dividend = a;\n    let mut divisor = b;\n    while dividend > divisor {\n  \
    \      dividend -= divisor;\n    }\n    dividend\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp42bzcqwm.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp65s7qo3w.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    greatest_common_divisor(b, a % b)\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor < b {\n    \
    \    greatest_common_divisor += a;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpe7lnko9l.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd > b {\n        gcd -= b;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp7cg3hlnp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpvxbiw7ws.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpvxbiw7ws.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a;\n    let mut greatest_common_divisor_is_positive = true;\n\n    while greatest_common_divisor_is_positive\
    \ && greatest_common_divisor < b {\n        greatest_common_divisor_is_positive\
    \ = greatest_common_divisor % b == 0;\n        greatest_common_divisor /= b;\n\
    \    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqokp2xw7.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpb5o9pnrq.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010524
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp91jh71ts.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = a % greatest_common_divisor;\n        a = a / b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmprbm6fpwg.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ -= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        greatest_common_divisor(b,\
    \ a)\n    } else {\n        greatest_common_divisor(a, a)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010547
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp6co9im4o.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = a / b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp_be2kg8j.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ /= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpkc3gmpn3.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp65s7qo3w.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp6m7dz2qk.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmp6m7dz2qk.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n15 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    greatest_common_divisor(b, a % b)\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd > b {\n        gcd -= b;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp7cg3hlnp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor = b;\n\
    \        b = a % b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n  \
    \  let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp22w8v3jx.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ i = 0;\n    while i < a && i < b {\n        if a % i == 0 && b % i == 0 {\n\
    \            return i;\n        }\n        i += 1;\n    }\n    return i;\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpvl2tn7dq.rs:9:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            greatest_common_divisor = b;\n            b -= a;\n        } else\
    \ {\n            greatest_common_divisor = a;\n            a -= b;\n        }\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpzqyy_v4f.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |             b -= a;\n   |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpzqyy_v4f.rs:14:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |             a -= b;\n   |         \
    \    ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpvxbiw7ws.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpvxbiw7ws.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmprdtz4jqx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    while greatest_common_divisor > b {\n        greatest_common_divisor\
    \ -= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmphondwxbd.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            greatest_common_divisor = b;\n            b = b / 2;\n        } else\
    \ {\n            greatest_common_divisor = a;\n            a = a / 2;\n      \
    \  }\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpgbw4q61h.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |             b = b / 2;\n   |             ^^^^^^^^^ cannot\
    \ assign to immutable argument\n\nerror[E0384]: cannot assign to immutable argument\
    \ `a`\n  --> /tmp/tmpgbw4q61h.rs:14:13\n   |\n6  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                            - help: consider\
    \ making this binding mutable: `mut a`\n...\n14 |             a = a / 2;\n   |\
    \             ^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.clone();\n    let mut a = a.clone();\n    let mut b = b.clone();\n\n   \
    \ while a != 0 {\n        let mut c = a % b;\n        a = b;\n        b = c;\n\
    \    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpqwuef7w7.rs:16:21

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        (a, b) = (b,\
    \ a)\n    }\n    let mut greatest_common_divisor = a;\n    let mut remainder =\
    \ a % b;\n    while remainder != 0 {\n        greatest_common_divisor = remainder;\n\
    \        remainder = a % b;\n    }\n    greatest_common_divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpq2kjvgmf.rs:11:10\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |         (a, b) = (b, a)\n   |          ^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpq2kjvgmf.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         (a, b) = (b, a)\n   |             ^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_divisor = a % b;\n    while greatest_divisor != 0 {\n        greatest_divisor\
    \ = b;\n        b = a % b;\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp2ltz9qxe.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= a;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpa6mbmn3a.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.clone();\n    let mut remainder = b.clone();\n\n    while remainder != 0\
    \ {\n        if greatest_common_divisor > remainder {\n            greatest_common_divisor\
    \ -= 1;\n        } else {\n            greatest_common_divisor += 1;\n       \
    \ }\n\n        remainder -= greatest_common_divisor;\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpjht_4enw.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpvxbiw7ws.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpvxbiw7ws.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut gcd = a;\n    while gcd\
    \ != 0 && b != 0 {\n        if a % gcd == 0 && b % gcd == 0 {\n            gcd\
    \ = gcd / gcd % b;\n        } else {\n            gcd = gcd / gcd % b;\n     \
    \   }\n    }\n    gcd % b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= 2;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `1`', /tmp/tmp7a4o05nf.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= a;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpa6mbmn3a.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp80e_bn5_.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmp80e_bn5_.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n15 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp65s7qo3w.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a_mod_b = a % b;\n    while a_mod_b != 0 {\n        greatest_common_divisor\
    \ = a_mod_b;\n        a_mod_b = a % b;\n    }\n    greatest_common_divisor\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660010546
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.clone();\n    let mut a = a;\n    let mut b = b;\n\n    while a != 0 &&\
    \ b != 0 {\n        if a > b {\n            greatest_common_divisor += 1;\n  \
    \          a -= 1;\n        } else {\n            greatest_common_divisor += 1;\n\
    \            b -= 1;\n        }\n    }\n\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `1`', /tmp/tmpyf18x8po.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbvu95g82.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    greatest_common_divisor(b, a % b)\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ r = a;\n    while r > b {\n        r = r - b;\n    }\n    r\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp400ds936.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp6m7dz2qk.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmp6m7dz2qk.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n15 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpk4627x1z.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660010541
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpb5o9pnrq.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010541

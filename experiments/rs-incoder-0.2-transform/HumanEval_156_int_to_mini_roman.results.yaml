language: rs
name: HumanEval_156_int_to_mini_roman
results:
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xix\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        \n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpsqoxckx3.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n        \"i\", \"i\",\
    \ \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    ,\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n    \
    \    \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\",\n\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `}`\n\
    \  --> /tmp/tmpd_i7z2dt.rs:32:1\n   |\n32 | }\n   | ^ expected one of `.`, `;`,\
    \ `?`, `else`, or an operator\n\nerror: mismatched closing delimiter: `}`\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:13:28\n   |\n11 | fn int_to_mini_roman(number: isize) ->\
    \ String {\n   |                                               - closing delimiter\
    \ possibly meant for this\n12 |     let mut roman = String::new();\n13 |     let\
    \ mut numerals = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\"\
    , \"l\",\n   |                            ^ unclosed delimiter\n...\n32 | }\n\
    \   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpd_i7z2dt.rs:36:17\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:36:25\n \
    \  |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd_i7z2dt.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \       "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len2 = String::new();\n    let mut numeral_digits_len3\
    \ = String::new();\n    let mut numeral_digits_len4 = String::new();\n    let\
    \ mut numeral_digits_len5 = String::new();\n    let mut numeral_digits_len6 =\
    \ String::new();\n    let mut numeral_digits_len7 = String::new();\n    let mut\
    \ numeral_digits_len8 = String::new();\n    let mut numeral_digits_len9 = String::new();\n\
    \    let mut numeral_digits_len10 = String::new();\n    let mut numeral_digits_len11\
    \ = String::new();\n    let mut numeral_digits_len12 = String::new();\n    let\
    \ mut numeral_digits_len13 = String::new();\n    let mut numeral_digits_len14\
    \ = String::new();\n    let mut numeral_digits_len15 = String::new();\n    let\
    \ mut numeral_digits_len16 = String::new();\n    let mut numeral_digits_len17\
    \ = String::new();\n    let mut numeral_digits_len18 = String::new();\n    let\
    \ mut numeral_digits_len19 = String::new();\n    let mut numeral_digits_len20\
    \ = String::new();\n    let mut numeral_digits_len21 = String::new();\n    let\
    \ mut numeral_digits_len22 = String::new();\n    let mut numeral_digits_len23\
    \ = String::new();\n    let mut numeral_digits_len24 = String::new();\n    let\
    \ mut numeral_digits_len25 = String::new();\n    let mut numeral_digits_len26\
    \ = String::new();\n    let mut numeral_digits_len27 = String::new();\n    let\
    \ mut numeral_digits_len28 = String::new();\n    let mut numeral_digits_len29\
    \ = String::new();\n    let mut numeral_digits_len30 = String::new();\n    let\
    \ mut numeral_digits_len31 = String::new();\n    let mut numeral_digits_len32\
    \ = String::new();\n    let mut numeral_digits_len33 = String::\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpknmh599h.rs:48:1\n\
    \   |\n48 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpknmh599h.rs:52:17\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpknmh599h.rs:52:25\n \
    \  |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpknmh599h.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpknmh599h.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpknmh599h.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpknmh599h.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpknmh599h.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpknmh599h.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpknmh599h.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpknmh599h.rs:56:25\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpknmh599h.rs:57:17\n   |\n57 |     "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_len = String::new();\n    let mut numeral_len2 = String::new();\n\
    \    let mut numeral_len3 = String::new();\n    let mut numeral_len4 = String::new();\n\
    \    let mut numeral_len5 = String::new();\n    let mut numeral_len6 = String::new();\n\
    \    let mut numeral_len7 = String::new();\n    let mut numeral_len8 = String::new();\n\
    \    let mut numeral_len9 = String::new();\n    let mut numeral_len10 = String::new();\n\
    \    let mut numeral_len11 = String::new();\n    let mut numeral_len12 = String::new();\n\
    \    let mut numeral_len13 = String::new();\n    let mut numeral_len14 = String::new();\n\
    \    let mut numeral_len15 = String::new();\n    let mut numeral_len16 = String::new();\n\
    \    let mut numeral_len17 = String::new();\n    let mut numeral_len18 = String::new();\n\
    \    let mut numeral_len19 = String::new();\n    let mut numeral_len20 = String::new();\n\
    \    let mut numeral_len21 = String::new();\n    let mut numeral_len22 = String::new();\n\
    \    let mut numeral_len23 = String::new();\n    let mut numeral_len24 = String::new();\n\
    \    let mut numeral_len25 = String::new();\n    let mut numeral_len26 = String::new();\n\
    \    let mut numeral_len27 = String::new();\n    let mut numeral_len28 = String::new();\n\
    \    let mut numeral_len29 = String::new();\n    let mut numeral_len30 = String::new();\n\
    \    let mut numeral_len31 = String::new();\n    let mut numeral_len32 = String::new();\n\
    \    let mut numeral_len33 = String::new();\n    let mut numeral_len34 = String::new();\n\
    \    let mut numeral_len35 = String::new();\n    let mut numeral_len36 = String::new();\n\
    \    let mut numeral_len37 = String::new();\n    let mut numeral_len38 = String::new();\n\
    \    let mut numeral_len39 = String::\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpxq3adpsh.rs:53:1\n\
    \   |\n53 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpxq3adpsh.rs:57:17\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpxq3adpsh.rs:57:25\n \
    \  |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxq3adpsh.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxq3adpsh.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxq3adpsh.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxq3adpsh.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxq3adpsh.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxq3adpsh.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxq3adpsh.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxq3adpsh.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxq3adpsh.rs:62:17\n   |\n62 |     "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n\n    let mut roman = String::new();\n    let mut\
    \ numeral = String::new();\n\n    let mut numerals = vec![String::from(\"M\"),\
    \ String::from(\"CM\"), String::from(\"D\"),\n                           String::from(\"\
    CD\"), String::from(\"C\"), String::from(\"XC\"),\n                          \
    \ String::from(\"L\"), String::from(\"XL\"), String::from(\"X\"),\n          \
    \                 String::from(\"IX\"), String::from(\"V\"), String::from(\"IV\"\
    ),\n                           String::from(\"I\")];\n\n    let mut numerals_count\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n\n    let mut numerals_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n\
    \                                  0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n    let\
    \ mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                 \
    \                      0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n          \
    \                             0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n          \
    \                             0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n          \
    \                             0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n          \
    \                             0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = \n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmplejjvd5f.rs:81:1\n\
    \   |\n81 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmplejjvd5f.rs:85:17\n   |\n85 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmplejjvd5f.rs:85:25\n \
    \  |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplejjvd5f.rs:86:17\n   |\n86 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplejjvd5f.rs:86:25\n   |\n86 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplejjvd5f.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplejjvd5f.rs:87:25\n   |\n87 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplejjvd5f.rs:88:17\n  \
    \ |\n88 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplejjvd5f.rs:88:25\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplejjvd5f.rs:89:17\n   |\n89 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplejjvd5f.rs:89:25\n\
    \   |\n89 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplejjvd5f.rs:90:17\n   |\n90 |     "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral: isize = 0;\n    let mut numeral_index = 0;\n    let mut numeral_string:\
    \ String = String::from(\"i\");\n    let mut numeral_string_index = 0;\n    let\
    \ mut numeral_string_index2 = 0;\n    let mut numeral_string_index3 = 0;\n   \
    \ let mut numeral_string_index4 = 0;\n    let mut numeral_string_index5 = 0;\n\
    \    let mut numeral_string_index6 = 0;\n    let mut numeral_string_index7 = 0;\n\
    \    let mut numeral_string_index8 = 0;\n    let mut numeral_string_index9 = 0;\n\
    \    let mut numeral_string_index10 = 0;\n    let mut numeral_string_index11 =\
    \ 0;\n    let mut numeral_string_index12 = 0;\n    let mut numeral_string_index13\
    \ = 0;\n    let mut numeral_string_index14 = 0;\n    let mut numeral_string_index15\
    \ = 0;\n    let mut numeral_string_index16 = 0;\n    let mut numeral_string_index17\
    \ = 0;\n    let mut numeral_string_index18 = 0;\n    let mut numeral_string_index19\
    \ = 0;\n    let mut numeral_string_index20 = 0;\n    let mut numeral_string_index21\
    \ = 0;\n    let mut numeral_string_index22 = 0;\n    let mut numeral_string_index23\
    \ = 0;\n    let mut numeral_string_index24 = 0;\n    let mut numeral_string_index25\
    \ = 0;\n    let mut numeral_string_index26 = 0;\n    let mut numeral_string_index27\
    \ = 0;\n    let mut numeral_string_index28 = 0;\n    let mut numeral_string_index29\
    \ = 0;\n    let mut numeral_string_index30 = 0;\n    let mut numeral_string_index31\
    \ = 0;\n    let mut numeral_string_index32 = 0;\n    let mut numeral_string_index33\
    \ = 0;\n    let mut numeral_string_index34 = 0;\n    let mut numeral_string_index35\
    \ = 0;\n    let mut numeral_string_index36 = 0;\n    let mut numeral_string_index37\
    \ = 0;\n    let mut numeral_string_index38 = 0;\n    let mut numeral_string_index39\
    \ = 0;\n    let mut numeral_string_index40 = 0;\n    let mut numeral_string_index41\
    \ = 0;\n    let mut numeral_string_index42 = 0;\n    let mut numeral_string_index43\
    \ = 0;\n    let mut numeral_string_index44 = 0;\n    let mut numeral_string_index45\
    \ = 0;\n    let mut numeral_string_index46 = 0;\n    let mut numer\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmptn33y_mz.rs:63:18\n   |\n\
    63 |     let mut numer\n   |                  ^ help: add `;` here\n64 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptn33y_mz.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptn33y_mz.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptn33y_mz.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptn33y_mz.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptn33y_mz.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptn33y_mz.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptn33y_mz.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptn33y_mz.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptn33y_mz.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptn33y_mz.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral: isize = 0;\n    let mut numeral_string: String = String::new();\n \
    \   let mut numeral_strings: Vec<String> = vec![];\n    let mut numeral_strings_len:\
    \ usize = 0;\n    let mut numeral_strings_lens: Vec<usize> = vec![];\n    let\
    \ mut numeral_strings_lens_len: usize = 0;\n    let mut numeral_strings_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut numeral_strings_lens_lens_len: usize = 0;\n\
    \    let mut numeral_strings_lens_lens_lens: Vec<usize> = vec![];\n    let mut\
    \ numeral_strings_lens_lens_lens_len: usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut numeral_strings_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens: Vec<usize> = vec![];\n\
    \    let mut numeral_strings_lens_lens_lens_lens_lens_len: usize = 0;\n    let\
    \ mut numeral_strings_lens_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut\
    \ numeral_strings_lens_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpbqsfe_2u.rs:32:319\n   |\n\
    32 |     let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_\n\
    \   |                                                                        \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                   ^ help: add `;` here\n33 | }\n   | - unexpected token\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbqsfe_2u.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbqsfe_2u.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbqsfe_2u.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbqsfe_2u.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbqsfe_2u.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbqsfe_2u.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbqsfe_2u.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this sco"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n\n\
    \    // The first 10 roman numerals are the same as the decimal numerals.\n  \
    \  // The first 10 decimal numerals are the same as the roman numerals.\n    let\
    \ mut decimal = number.to_digits();\n    decimal.pop();\n    decimal.pop();\n\
    \    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n\
    \    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n\
    \    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n\
    \    decimal.pop();\n    decimal.pop();\n\n    // The first 10 roman numerals\
    \ are the same as the decimal numerals.\n    // The first 10 decimal numerals\
    \ are the same as the roman numerals.\n    let mut roman = number.to_digits();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    ro\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `ro` in this scope\n  --> /tmp/tmppfrs0jpx.rs:92:5\n\
    \   |\n92 |     ro\n   |     ^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppfrs0jpx.rs:97:17\n   |\n97 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppfrs0jpx.rs:97:25\n\
    \   |\n97 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppfrs0jpx.rs:98:17\n   |\n98 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppfrs0jpx.rs:98:25\n   |\n98 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppfrs0jpx.rs:99:17\n   |\n99 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppfrs0jpx.rs:99:25\n   |\n99 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmppfrs0jpx.rs:100:17\n\
    \    |\n100 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmppfrs0jpx.rs:100:25\n    |\n100 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmppfrs0jpx.rs:101:17\n\
    \    |\n101 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmppfrs0jpx.rs:101:25\n    |\n101 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp2xnr_ud4.rs:51:45\n   |\n\
    51 |     let mut numeral_digits_len = String::new\n   |                      \
    \                       ^ help: add `;` here\n52 | }\n   | - unexpected token\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2xnr_ud4.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    while num\
    \ < number {\n        let mut digit = num % 10;\n        roman += if digit ==\
    \ 0 {\n            \"i\"\n        } else {\n            match digit {\n      \
    \          1 => \"m\",\n                2 => \"cm\",\n                3 => \"\
    d\",\n                4 => \"cd\",\n                5 => \"xd\",\n           \
    \     6 => \"xc\",\n                7 => \"l\",\n                8 => \"xl\",\n\
    \                9 => \"x\",\n                _ => \"\".to_string(),\n       \
    \     }\n        };\n        num /= 10;\n    }\n    roman\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd4dcqhrg.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd4dcqhrg.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd4dcqhrg.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd4dcqhrg.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut remainder = number;\n    while remainder > 0 {\n        let mut digit\
    \ = remainder % 10;\n        remainder = remainder / 10;\n        roman.push((digit\
    \ as char).to_string());\n    }\n    while numeral.len() < roman.len() {\n   \
    \     numeral.push('_');\n    }\n    roman.push_str(numeral);\n    roman.to_lowercase()\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpihcupt46.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpihcupt46.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpihcupt46.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpihcupt46.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpihcupt46.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpihcupt46.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpihcupt46.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpihcupt46.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpihcupt46.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpihcupt46.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpihcupt46.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_value = 0;\n    let mut numeral_value_index = 0;\n\
    \    let mut numeral_value_length = 0;\n    let mut numeral_value_length_index\
    \ = 0;\n    let mut numeral_value_length_value = 0;\n    let mut numeral_value_length_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mu\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpw70gqrrt.rs:53:11\n   |\n\
    53 |     let mu\n   |           ^ help: add `;` here\n54 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw70gqrrt.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw70gqrrt.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw70gqrrt.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw70gqrrt.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw70gqrrt.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw70gqrrt.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw70gqrrt.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw70gqrrt.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw70gqrrt.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw70gqrrt.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![];\n    let mut numeral_index = 0;\n    let mut numeral_strings\
    \ = vec![];\n    let mut numeral_string_index = 0;\n    let mut numeral_strings_index\
    \ = 0;\n    let mut numeral_strings_length = 0;\n    let mut numeral_strings_length_index\
    \ = 0;\n    let mut numeral_strings_length_max = 0;\n    let mut numeral_strings_length_max_index\
    \ = 0;\n    let mut numeral_strings_length_min = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_max\
    \ = 0;\n    let mut numeral_strings_length_max_index = 0;\n    let mut numeral_strings_length_min\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_max = 0;\n    let mut numeral_strings_length_max_index\
    \ = 0;\n    let mut numeral_strings_length_min = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_max\
    \ = 0;\n    let mut numeral_strings_length_max_index = 0;\n    let mut numeral_strings_length_min\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_max = 0;\n    let mut numeral_strings_length_max_index\
    \ = 0;\n    let mut numeral_strings_length_min = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_max\
    \ = 0;\n    let mut numeral_strings_length_max_index = 0;\n    let mut numeral_strings_length_min\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_max = 0;\n    let mut numeral_strings_length_max_index\
    \ = 0;\n    let mut numeral_strings_length_min = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_max\
    \ = 0;\n    let mut numeral_\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpizqyaffx.rs:57:21\n   |\n\
    57 |     let mut numeral_\n   |                     ^ help: add `;` here\n58 |\
    \ }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpizqyaffx.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpizqyaffx.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpizqyaffx.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpizqyaffx.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpizqyaffx.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpizqyaffx.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpizqyaffx.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpizqyaffx.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpizqyaffx.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpizqyaffx.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `lef"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_value = 0;\n    let mut numeral_value_index = 0;\n\
    \    let mut numeral_value_length = 0;\n    let mut numeral_value_length_index\
    \ = 0;\n    let mut numeral_value_length_value = 0;\n    let mut numeral_value_length_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mu\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpw70gqrrt.rs:53:11\n   |\n\
    53 |     let mu\n   |           ^ help: add `;` here\n54 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw70gqrrt.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw70gqrrt.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw70gqrrt.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw70gqrrt.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw70gqrrt.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw70gqrrt.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw70gqrrt.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw70gqrrt.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw70gqrrt.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw70gqrrt.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut remainder = number;\n    let mut numerals = vec![];\n    while remainder\
    \ > 0 {\n        let numeral = remainder % 10;\n        roman.push((numerals as\
    \ &str).to_lowercase());\n        numerals.push(numeral);\n        remainder =\
    \ remainder / 10;\n    }\n    roman.push((numerals as &str).to_lowercase());\n\
    \    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpap4rdql9.rs:28:17\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpap4rdql9.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpap4rdql9.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpap4rdql9.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpap4rdql9.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpap4rdql9.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpap4rdql9.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpap4rdql9.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpap4rdql9.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpap4rdql9.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpap4rdql9.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    let mut\
    \ remainder: isize = 1;\n    let mut numeral: Char = Char::from('A');\n    while\
    \ num < number {\n        remainder *= 10;\n        remainder += num % 10;\n \
    \       num /= 10;\n        numeral += Char::from((num % 10) + 1);\n    }\n  \
    \  roman.push_str(numeral.to_string());\n    roman.push_str(&format!(\"{}\", remainder).to_string());\n\
    \    roman.to_lowercase()\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Char`\n  --> /tmp/tmpq0_zay0q.rs:15:29\n\
    \   |\n15 |     let mut numeral: Char = Char::from('A');\n   |               \
    \              ^^^^ use of undeclared type `Char`\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `Char`\n  --> /tmp/tmpq0_zay0q.rs:20:20\n   |\n20 | \
    \        numeral += Char::from((num % 10) + 1);\n   |                    ^^^^\
    \ use of undeclared type `Char`\n\nerror[E0412]: cannot find type `Char` in this\
    \ scope\n  --> /tmp/tmpq0_zay0q.rs:15:22\n   |\n15 |     let mut numeral: Char\
    \ = Char::from('A');\n   |                      ^^^^ help: a builtin type with\
    \ a similar name exists (notice the capitalization): `char`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpq0_zay0q.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpq0_zay0q.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpq0_zay0q.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpq0_zay0q.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpq0_zay0q.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpq0_zay0q.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpq0_zay0q.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq0_zay0q.rs"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_map = [0; 4];\n    let mut numeral_map_index = 0;\n    let\
    \ mut numeral_map_reverse = [0; 4];\n    let mut numeral_map_reverse_index = 0;\n\
    \    let mut numeral_map_reverse_index2 = 0;\n    let mut numeral_map_reverse_index3\
    \ = 0;\n    let mut numeral_map_reverse_index4 = 0;\n    let mut numeral_map_reverse_index5\
    \ = 0;\n    let mut numeral_map_reverse_index6 = 0;\n    let mut numeral_map_reverse_index7\
    \ = 0;\n    let mut numeral_map_reverse_index8 = 0;\n    let mut numeral_map_reverse_index9\
    \ = 0;\n    let mut numeral_map_reverse_index10 = 0;\n    let mut numeral_map_reverse_index11\
    \ = 0;\n    let mut numeral_map_reverse_index12 = 0;\n    let mut numeral_map_reverse_index13\
    \ = 0;\n    let mut numeral_map_reverse_index14 = 0;\n    let mut numeral_map_reverse_index15\
    \ = 0;\n    let mut numeral_map_reverse_index16 = 0;\n    let mut numeral_map_reverse_index17\
    \ = 0;\n    let mut numeral_map_reverse_index18 = 0;\n    let mut numeral_map_reverse_index19\
    \ = 0;\n    let mut numeral_map_reverse_index20 = 0;\n    let mut numeral_map_reverse_index21\
    \ = 0;\n    let mut numeral_map_reverse_index22 = 0;\n    let mut numeral_map_reverse_index23\
    \ = 0;\n    let mut numeral_map_reverse_index24 = 0;\n    let mut numeral_map_reverse_index25\
    \ = 0;\n    let mut numeral_map_reverse_index26 = 0;\n    let mut numeral_map_reverse_index27\
    \ = 0;\n    let mut numeral_map_reverse_index28 = 0;\n    let mut numeral_map_reverse_index29\
    \ = 0;\n    let mut numeral_map_reverse_index30 = 0;\n    let mut numeral_map_reverse_index31\
    \ = 0;\n    let mut numeral_map_reverse_index32 = 0;\n    let mut numeral_map_reverse_index33\
    \ = 0;\n    let mut numeral_map_reverse_index34 = 0;\n    let mut numeral_map_reverse_index35\
    \ = 0;\n    let mut numeral_map_reverse_index36 = 0;\n    let mut numeral_map_reverse_index37\
    \ = 0;\n    let mut numeral_map_reverse_index38 = 0;\n    let mut numeral_map_reverse_index39\
    \ = 0;\n    let mut numeral_map_reverse_index40 = 0;\n    let mut numeral_map_reverse_index41\
    \ = 0;\n    let mut numeral_map_reverse_index42 = 0;\n    let mu\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmphdk08q9c.rs:59:11\n   |\n\
    59 |     let mu\n   |           ^ help: add `;` here\n60 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphdk08q9c.rs:64:17\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphdk08q9c.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphdk08q9c.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphdk08q9c.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphdk08q9c.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphdk08q9c.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphdk08q9c.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphdk08q9c.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphdk08q9c.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphdk08q9c.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n                     \
    \      \"x\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\"];\n \
    \   let mut numeral_index = 0;\n    let mut numeral_length = 0;\n    let mut numeral_value\
    \ = number;\n    let mut numeral_string = \"\";\n    let mut numeral_string_index\
    \ = 0;\n    let mut numeral_string_length = 0;\n    let mut numeral_string_length_index\
    \ = 0;\n    let mut numeral_string_length_value = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numer\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpuq0tceqd.rs:58:18\n   |\n\
    58 |     let mut numer\n   |                  ^ help: add `;` here\n59 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuq0tceqd.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuq0tceqd.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuq0tceqd.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuq0tceqd.rs:64:25\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuq0tceqd.rs:65:17\n  \
    \ |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuq0tceqd.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuq0tceqd.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuq0tceqd.rs:66:25\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuq0tceqd.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuq0tceqd.rs:67:25\n   |\n67 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"c\", \"l\", \"l\", \"x\", \"x\", \"x\", \"c\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_length = 0;\n    let mut numeral_value = number;\n\
    \    while numeral_value > 0 {\n        numeral_length += 1;\n        numeral_value\
    \ %= 10;\n        numerals[numeral_index] += &numerals[numeral_index + numeral_length\
    \ - 1];\n    }\n    roman.push_str(&numerals[numeral_index]);\n    roman.push_str(&numerals[numeral_index\
    \ + numeral_length - 1]);\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpuq393vmz.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuq393vmz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuq393vmz.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuq393vmz.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuq393vmz.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuq393vmz.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuq393vmz.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuq393vmz.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuq393vmz.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuq393vmz.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuq393vmz.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_length = 0;\n    let mut numeral_string = \"\";\n\
    \    let mut numeral_string_index = 0;\n    let mut numeral_string_length = 0;\n\
    \    let mut numeral_string_length_index = 0;\n    let mut numeral_string_length_index2\
    \ = 0;\n    let mut numeral_string_length_index3 = 0;\n    let mut numeral_string_length_index4\
    \ = 0;\n    let mut numeral_string_length_index5 = 0;\n    let mut numeral_string_length_index6\
    \ = 0;\n    let mut numeral_string_length_index7 = 0;\n    let mut numeral_string_length_index8\
    \ = 0;\n    let mut numeral_string_length_index9 = 0;\n    let mut numeral_string_length_index10\
    \ = 0;\n    let mut numeral_string_length_index11 = 0;\n    let mut numeral_string_length_index12\
    \ = 0;\n    let mut numeral_string_length_index13 = 0;\n    let mut numeral_string_length_index14\
    \ = 0;\n    let mut numeral_string_length_index15 = 0;\n    let mut numeral_string_length_index16\
    \ = 0;\n    let mut numeral_string_length_index17 = 0;\n    let mut numeral_string_length_index18\
    \ = 0;\n    let mut numeral_string_length_index19 = 0;\n    let mut numeral_string_length_index20\
    \ = 0;\n    let mut numeral_string_length_index21 = 0;\n    let mut numeral_string_length_index22\
    \ = 0;\n    let mut numeral_string_length_index23 = 0;\n    let mut numeral_string_length_index24\
    \ = 0;\n    let mut numeral_string_length_index25 = 0;\n    let mut numeral_string_length_index26\
    \ = 0;\n    let mut numeral_string_length_index27 = 0;\n    let mut numeral_string_length_index28\
    \ = 0;\n    let mut numeral_string_length_index29 = 0;\n    let mut numeral_string_length_index30\
    \ = 0;\n    let mut numeral_string_length_index31 = 0;\n    let mut numeral_string_length_index32\
    \ = 0;\n    let mut numeral_string_length_index33 = 0;\n    let mut numeral_string_length_index34\
    \ = 0;\n    let mut numeral_string_length_index35 = 0;\n    let mut numeral_string_length_index36\
    \ = 0;\n    let mut numeral_string_length_index37 = 0;\n    let mut numeral_string_length_index38\
    \ = 0;\n    let mut numeral_string_length_index39 = 0;\n    let mut numeral_string_length_index40\
    \ = 0;\n    let mu\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmprj3fo_na.rs:59:11\n   |\n\
    59 |     let mu\n   |           ^ help: add `;` here\n60 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprj3fo_na.rs:64:17\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprj3fo_na.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprj3fo_na.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprj3fo_na.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprj3fo_na.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprj3fo_na.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprj3fo_na.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprj3fo_na.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprj3fo_na.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprj3fo_na.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"c\", \"l\", \"l\", \"x\", \"x\", \"x\", \"c\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_value = 0;\n    let mut numeral_value_index = 0;\n\
    \    let mut numeral_value_length = 0;\n    let mut numeral_value_length_index\
    \ = 0;\n    let mut numeral_value_length_value = 0;\n    let mut numeral_value_length_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mu\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpp0s47stp.rs:53:11\n   |\n\
    53 |     let mu\n   |           ^ help: add `;` here\n54 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpp0s47stp.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp0s47stp.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp0s47stp.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp0s47stp.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp0s47stp.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp0s47stp.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp0s47stp.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp0s47stp.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp0s47stp.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp0s47stp.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        7\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppb6j91m9.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmppb6j91m9.rs:83:1\n   |\n82 |         7\n  \
    \ |          - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n83 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppb6j91m9.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut prev_roman = String::new();\n\
    \    let mut prev_prev_roman = String::new();\n    let mut prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_roman = String::new();\n \
    \   let mut prev_prev_prev_prev_prev_roman = String::new();\n    let mut prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpiq54mydv.rs:36:58\n   |\n\
    36 |     let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_\n   |         \
    \                                                 ^ help: add `;` here\n37 | }\n\
    \   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpiq54mydv.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpiq54mydv.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpiq54mydv.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpiq54mydv.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpiq54mydv.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiq54mydv.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpiq54mydv.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpiq54mydv.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpiq54mydv.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpiq54mydv.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                  "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 0;\n    let mut\
    \ nums: Vec<isize> = vec![number];\n    let mut nums_iter = nums.iter();\n   \
    \ while nums_iter.next() != Some(&0) {\n        roman += &int_to_roman(nums_iter.next());\n\
    \    }\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `int_to_roman` in this scope\n  -->\
    \ /tmp/tmpl2hjcdb8.rs:17:19\n   |\n17 |         roman += &int_to_roman(nums_iter.next());\n\
    \   |                   ^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl2hjcdb8.rs:24:17\n  \
    \ |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl2hjcdb8.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl2hjcdb8.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpl2hjcdb8.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpl2hjcdb8.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl2hjcdb8.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpl2hjcdb8.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpl2hjcdb8.rs:27:25\n   |\n27 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl2hjcdb8.rs:28:17\n  \
    \ |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl2hjcdb8.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in thi"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_iter = numerals.iter();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmp7sv6ufa5.rs:45:1\n   |\n45\
    \ | }\n   | ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmp7sv6ufa5.rs:44:47\n\
    \   |\n44 |     let mut numerals_iter_mut = numerals_iter.\n   |             \
    \                                  ^ help: add `;` here\n45 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7sv6ufa5.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7sv6ufa5.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7sv6ufa5.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7sv6ufa5.rs:53:25\n   |\n53"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"x\",\n        3 => \"\
    l\",\n        4 => \"l\",\n        5 => \"c\",\n        6 => \"c\",\n        7\
    \ => \"d\",\n        8 => \"d\",\n        9 => \"m\",\n        10 => \"m\",\n\
    \        11 => \"c\",\n        12 => \"c\",\n        13 => \"l\",\n        14\
    \ => \"l\",\n        15 => \"x\",\n        16 => \"x\",\n        17 => \"x\",\n\
    \        18 => \"x\",\n        19 => \"x\",\n        20 => \"x\",\n        21\
    \ => \"x\",\n        22 => \"x\",\n        23 => \"x\",\n        24 => \"x\",\n\
    \        25 => \"x\",\n        26 => \"x\",\n        27 => \"x\",\n        28\
    \ => \"x\",\n        29 => \"m\",\n        30 => \"m\",\n        31 => \"m\",\n\
    \        32 => \"m\",\n        33 => \"m\",\n        34 => \"m\",\n        35\
    \ => \"m\",\n        36 => \"m\",\n        37 => \"m\",\n        38 => \"m\",\n\
    \        39 => \"m\",\n        40 => \"m\",\n        41 => \"m\",\n        42\
    \ => \"m\",\n        43 => \"m\",\n        44 => \"m\",\n        45 => \"m\",\n\
    \        46 => \"m\",\n        47 => \"m\",\n        48 => \"m\",\n        49\
    \ => \"m\",\n        50 => \"m\",\n        51 => \"m\",\n        52 => \"m\",\n\
    \        53 => \"m\",\n        54 => \"m\",\n        55 => \"m\",\n        56\
    \ => \"m\",\n        57 => \"m\",\n        58 => \"m\",\n        59 => \"m\",\n\
    \        60 => \"m\",\n        61 => \"m\",\n        62 => \"m\",\n        63\
    \ => \"m\",\n        64 => \"m\",\n        65 => \"m\",\n        66 => \"m\",\n\
    \        67 => \"m\",\n        68 => \"m\",\n        69 => \"m\",\n        70\
    \ => \"m\",\n        71 => \"m\",\n        72 => \"m\",\n        73 => \"m\",\n\
    \        74 => \"m\",\n        75 => \"m\",\n        76 => \"m\",\n        77\
    \ => \"m\",\n        78 => \"m\",\n        79 => \"m\",\n        80 => \"m\",\n\
    \        81 => \"m\",\n        82 => \"m\",\n        83 => \"m\",\n        84\
    \ => \"m\",\n        85 => \"m\",\n        86 => \"m\",\n        87 => \"m\",\n\
    \        88 => \"m\",\n        89 => \"m\",\n\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpgh3pamtd.rs:121:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n103 | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n121 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \   --> /tmp/tmpgh3pamtd.rs:107:17\n    |\n107 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpgh3pamtd.rs:107:25\n    |\n107 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpgh3pamtd.rs:108:17\n    |\n108 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpgh3pamtd.rs:108:25\n    |\n108 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpgh3pamtd.rs:109:17\n    |\n109 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpgh3pamtd.rs:109:25\n    |\n109 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpgh3pamtd.rs:110:17\n    |\n110 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpgh3pamtd.rs:110:25\n    |\n110 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpgh3pamtd.rs:111:17\n    |\n111 |     assert_eq!({left}, {righ"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut remainder = number;\n    while remainder > 0 {\n        let mut numeral_digit\
    \ = remainder % 10;\n        remainder = remainder / 10;\n        numeral.push(numeral_digit.to_string());\n\
    \    }\n    while numeral.len() > 0 {\n        let mut roman_digit = numeral.chars().next().unwrap();\n\
    \        roman.push(roman_digit.to_ascii_lowercase());\n    }\n    roman\n}\n\n\
    fn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmr5i9ilv.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmr5i9ilv.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmr5i9ilv.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmr5i9ilv.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n\n\
    \    for _ in 0..number {\n        roman.push((number % 10).to_string());\n  \
    \      numeral.push((number % 100).to_string());\n        number /= 10;\n    }\n\
    \n    roman.push((number % 10).to_string());\n    numeral.push((number % 100).to_string());\n\
    \n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptm37nz0_.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptm37nz0_.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptm37nz0_.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptm37nz0_.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptm37nz0_.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptm37nz0_.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptm37nz0_.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptm37nz0_.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptm37nz0_.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptm37nz0_.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptm37nz0_.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    let mut\
    \ remainder: isize = 1;\n    let mut digits: Vec<isize> = vec![number];\n    while\
    \ remainder > 0 {\n        if remainder >= 10 {\n            roman.push(format!(\"\
    {}\", digits[remainder % 10]));\n            remainder /= 10;\n        } else\
    \ {\n            roman.push(format!(\"{}\", digits[remainder]));\n           \
    \ remainder = 0;\n        }\n    }\n    roman.push(\"M\");\n    roman\n}\n\nfn\
    \ main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9cxekq8a.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9cxekq8a.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9cxekq8a.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9cxekq8a.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9cxekq8a.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9cxekq8a.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9cxekq8a.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9cxekq8a.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9cxekq8a.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9cxekq8a.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9cxekq8a.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\",\
    \ \"xl\", \"l\",\n                            \"x\", \"c\", \"dc\", \"ic\", \"\
    ix\", \"x\", \"l\", \"xl\", \"l\"];\n    let mut numeral_strings = vec![\"\",\
    \ \"c\", \"d\", \"i\", \"x\", \"l\", \"x\", \"x\", \"l\",\n                  \
    \                \"x\", \"c\", \"d\", \"i\", \"x\", \"l\", \"x\", \"x\", \"l\"\
    ];\n    let mut numeral_strings_reversed = vec![\"\", \"c\", \"d\", \"i\", \"\
    x\", \"l\", \"x\", \"x\", \"l\",\n                                         \"\
    x\", \"c\", \"d\", \"i\", \"x\", \"l\", \"x\", \"x\", \"l\"];\n    let mut numeral_strings_reversed_index\
    \ = vec![0, 0, 1, 1, 2, 2, 3, 3, 4, 4];\n    let mut numeral_strings_reversed_index2\
    \ = vec![0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3];\n    let mut numeral_strings_reversed_index3\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index4\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index5\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index6\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index7\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index8\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index9\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index10\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index11\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index12\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index13\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index14\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index15\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index16\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index17\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index18\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index19\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mu\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnxx0l6pl.rs:39:11\n   |\n\
    39 |     let mu\n   |           ^ help: add `;` here\n40 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnxx0l6pl.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnxx0l6pl.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnxx0l6pl.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnxx0l6pl.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnxx0l6pl.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnxx0l6pl.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnxx0l6pl.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnxx0l6pl.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnxx0l6pl.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnxx0l6pl.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        7\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppb6j91m9.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmppb6j91m9.rs:83:1\n   |\n82 |         7\n  \
    \ |          - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n83 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppb6j91m9.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"x\",\n        3 => \"\
    l\",\n        4 => \"l\",\n        5 => \"c\",\n        6 => \"c\",\n        7\
    \ => \"d\",\n        8 => \"d\",\n        9 => \"m\",\n        10 => \"m\",\n\
    \        11 => \"l\",\n        12 => \"l\",\n        13 => \"x\",\n        14\
    \ => \"x\",\n        15 => \"x\",\n        16 => \"x\",\n        17 => \"x\",\n\
    \        18 => \"x\",\n        19 => \"x\",\n        20 => \"x\",\n        21\
    \ => \"x\",\n        22 => \"x\",\n        23 => \"x\",\n        24 => \"x\",\n\
    \        25 => \"x\",\n        26 => \"x\",\n        27 => \"x\",\n        28\
    \ => \"x\",\n        29 => \"m\",\n        30 => \"m\",\n        31 => \"m\",\n\
    \        32 => \"m\",\n        33 => \"m\",\n        34 => \"m\",\n        35\
    \ => \"m\",\n        36 => \"m\",\n        37 => \"m\",\n        38 => \"m\",\n\
    \        39 => \"m\",\n        40 => \"m\",\n        41 => \"m\",\n        42\
    \ => \"m\",\n        43 => \"m\",\n        44 => \"m\",\n        45 => \"m\",\n\
    \        46 => \"m\",\n        47 => \"m\",\n        48 => \"m\",\n        49\
    \ => \"m\",\n        50 => \"m\",\n        51 => \"m\",\n        52 => \"m\",\n\
    \        53 => \"m\",\n        54 => \"m\",\n        55 => \"m\",\n        56\
    \ => \"m\",\n        57 => \"m\",\n        58 => \"m\",\n        59 => \"m\",\n\
    \        60 => \"m\",\n        61 => \"m\",\n        62 => \"m\",\n        63\
    \ => \"m\",\n        64 => \"m\",\n        65 => \"m\",\n        66 => \"m\",\n\
    \        67 => \"m\",\n        68 => \"m\",\n        69 => \"m\",\n        70\
    \ => \"m\",\n        71 => \"m\",\n        72 => \"m\",\n        73 => \"m\",\n\
    \        74 => \"m\",\n        75 => \"m\",\n        76 => \"m\",\n        77\
    \ => \"m\",\n        78 => \"m\",\n        79 => \"m\",\n        80 => \"m\",\n\
    \        81 => \"m\",\n        82 => \"m\",\n        83 => \"m\",\n        84\
    \ => \"m\",\n        85 => \"m\",\n        86 => \"m\",\n        87 => \"m\",\n\
    \        88 => \"m\",\n        89 => \"\n}\n\nfn main() {\n    let candidate =\
    \ int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n   --> /tmp/tmpg7251l1e.rs:101:15\n\
    \    |\n101 |           89 => \"\n    |  _______________^\n102 | | }\n103 | |\n\
    104 | | fn main() {\n...   |\n119 | |     assert_eq!({left}, {right});\n120 |\
    \ | }\n    | |__^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0765`.\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"c\", \"l\", \"l\", \"x\", \"x\"];\n    let mut numeral_to_roman = vec![\n\
    \        \"\",\n        \"c\",\n        \"d\",\n        \"d\",\n        \"l\"\
    ,\n        \"l\",\n        \"x\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n   --> /tmp/tmp9yco18yy.rs:170:9\n\
    \    |\n170 | /         \"\n171 | | }\n172 | |\n173 | | fn main() {\n...   |\n\
    188 | |     assert_eq!({left}, {right});\n189 | | }\n    | |__^\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0765`.\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut denominator = 1;\n    let mut numeral_index = 0;\n    let mut denominator_index\
    \ = 0;\n    let mut numeral_chars = String::new();\n    let mut numeral_char_index\
    \ = 0;\n    let mut numeral_char_length = 0;\n    let mut numeral_char_length_index\
    \ = 0;\n    let mut numeral_char_length_value = 0;\n    let mut numeral_char_length_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value = 0;\n    let mut numeral_char_length_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4w9r726b.rs:54:50\n   |\n\
    54 |     let mut numeral_char_length_value_value_value\n   |                 \
    \                                 ^ help: add `;` here\n55 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4w9r726b.rs:59:17\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4w9r726b.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4w9r726b.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4w9r726b.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4w9r726b.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4w9r726b.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4w9r726b.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4w9r726b.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4w9r726b.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4w9r726b.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![];\n    let mut numerals_map = HashMap::new();\n  \
    \  let mut numerals_maps = vec![];\n    let mut numerals_maps_map = HashMap::new();\n\
    \    let mut numerals_maps_maps = vec![];\n    let mut numerals_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps = vec![];\n    let mut\
    \ numerals_maps_maps_maps_map = HashMap::new();\n    let mut numerals_maps_maps_maps_maps\
    \ = vec![];\n    let mut numerals_maps_maps_maps_maps_map = HashMap::new();\n\
    \    let mut numerals_maps_maps_maps_maps_maps = vec![];\n    let mut numerals_maps_maps_maps_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps = vec![];\n\
    \    let mut numerals_maps_maps_maps_maps_maps_maps_map = HashMap::new();\n  \
    \  let mut numerals_maps_maps_maps_maps_maps_maps_maps = vec![];\n    let mut\
    \ numerals_maps_maps_maps_maps_maps_maps_maps_map = HashMap::new();\n    let mut\
    \ numerals_maps_maps_maps_maps_maps_maps_maps_maps = vec![];\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_map\
    \ = \n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmprcui1zr0.rs:36:1\n\
    \   |\n36 | }\n   | ^ expected expression\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmprcui1zr0.rs:15:28\n   |\n15\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmprcui1zr0.rs:17:33\n   |\n17\
    \ |     let mut numerals_maps_map = HashMap::new();\n   |                    \
    \             ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmprcui1zr0.rs:19:38\n\
    \   |\n19 |     let mut numerals_maps_maps_map = HashMap::new();\n   |       \
    \                               ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmprcui1zr0.rs:21:43\n\
    \   |\n21 |     let mut numerals_maps_maps_maps_map = HashMap::new();\n   |  \
    \                                         ^^^^^^^ not found in this scope\n  \
    \ |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmprcui1zr0.rs:23:48\n   |\n23 |     let mut numerals_maps_maps_maps_maps_map\
    \ = HashMap::new();\n   |                                                ^^^^^^^\
    \ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n\
    1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmprcui1zr0.rs:25:53\n   |\n25\
    \ |     let mut numerals_maps_maps_maps_maps_maps_map = HashMap::new();\n   |\
    \                                                     ^^^^^^^ not found in this\
    \ scope\n   |\nhelp: consider importing this struct\n   |\n1  | us"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        0 => String::from(\"0\"),\n        1 => String::from(\"\
    i\"),\n        2 => String::from(\"ii\"),\n        3 => String::from(\"iii\"),\n\
    \        4 => String::from(\"iv\"),\n        5 => String::from(\"v\"),\n     \
    \   6 => String::from(\"vi\"),\n        7 => String::from(\"vii\"),\n        8\
    \ => String::from(\"viii\"),\n        9 => String::from(\"ix\"),\n        10 =>\
    \ String::from(\"x\"),\n        11 => String::from(\"xi\"),\n        12 => String::from(\"\
    xii\"),\n        13 => String::from(\"xiii\"),\n        14 => String::from(\"\
    xiv\"),\n        15 => String::from(\"xv\"),\n        16 => String::from(\"xvi\"\
    ),\n        17 => String::from(\"xvii\"),\n        18 => String::from(\"xviii\"\
    ),\n        19 => String::from(\"xix\"),\n        20 => String::from(\"xx\"),\n\
    \        21 => String::from(\"xxi\"),\n        22 => String::from(\"xxii\"),\n\
    \        23 => String::from(\"xxiii\"),\n        24 => String::from(\"xxiv\"),\n\
    \        25 => String::from(\"xxv\"),\n        26 => String::from(\"xxvi\"),\n\
    \        27 => String::from(\"xxvii\"),\n        28 => String::from(\"xxviii\"\
    ),\n        29 => String::from(\"xxix\"),\n        30 => String::from(\"xxx\"\
    ),\n        31 => String::from(\"xxxi\"),\n        32 => String::from(\"xxxii\"\
    ),\n        33 => String::from(\"xxxiii\"),\n        34 => String::from(\"xxxiv\"\
    ),\n        35 => String::from(\"xxxv\"),\n        36 => String::from(\"xxxvi\"\
    ),\n        37 => String::from(\"xxxvii\"),\n        38 => String::from(\"xxxviii\"\
    ),\n        39 => String::from(\"xxxix\"),\n        40 => String::from(\"xxxx\"\
    ),\n        41 => String::from(\"xxxxi\"),\n        42 => String::from(\"xxxii\"\
    ),\n        43 => String::from(\"xxxiii\"),\n        44 => String::from(\"xxxiv\"\
    ),\n        45 => String::from(\"xxxv\"),\n        46\n}\n\nfn main() {\n    let\
    \ candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpkn_5jstj.rs:78:3\n\
    \   |\n11 | fn int_to_mini_roman(number: isize) -> String {\n   |            \
    \                                   - unclosed delimiter\n12 |     match number\
    \ {\n   |                  - this delimiter might not be properly closed...\n\
    ...\n60 | }\n   | - ...as it matches this but it has different indentation\n...\n\
    78 | }\n   |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`, or\
    \ `|`, found `}`\n  --> /tmp/tmpkn_5jstj.rs:60:1\n   |\n59 |         46\n   |\
    \           - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n60 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkn_5jstj.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkn_5jstj.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkn_5jstj.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkn_5jstj.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkn_5jstj.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkn_5jstj.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkn_5jstj.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkn_5jstj.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |     "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n\n    let mut roman = String::new();\n    let mut\
    \ numerals = vec![\"\", \"c\", \"cc\", \"d\", \"dc\", \"cm\", \"x\", \"xl\", \"\
    l\", \"ll\"];\n\n    if number < 0 {\n        roman.push_str(\"\u2212\");\n  \
    \      number = -number;\n    }\n\n    let mut numeral = number as usize;\n  \
    \  let mut numeral_index = 0;\n\n    while numeral_index < numerals.len() {\n\
    \        if numeral_index == numerals.len() - 1 {\n            roman.push_str(numerals[numeral_index]);\n\
    \            break;\n        }\n\n        let numeral_value = numerals[numeral_index];\n\
    \        let numeral_value_length = numerals[numeral_index + 1].len();\n\n   \
    \     if numeral_value == \"c\" {\n            numeral_index += 1;\n         \
    \   continue;\n        }\n\n        if numeral_value == \"x\" {\n            numeral_index\
    \ += 1;\n            continue;\n        }\n\n        if numeral_value == \"m\"\
    \ {\n            numeral_index += 1;\n            continue;\n        }\n\n   \
    \     if numeral_value == \"d\" {\n            numeral_index += 1;\n         \
    \   continue;\n        }\n\n        if numeral_value == \"i\" {\n            numeral_index\
    \ += 1;\n            continue;\n        }\n\n        if numeral_value == \"v\"\
    \ {\n            numeral_index += 1;\n            continue;\n        }\n\n   \
    \     if numeral_value == \"l\" {\n            numeral_index += 1;\n         \
    \   continue;\n        }\n\n        if numeral_value == \"c\" {\n            numeral_index\
    \ += 1;\n            continue;\n        }\n\n        if numeral_value == \"x\"\
    \ {\n            numeral_index += 1;\n            continue;\n        }\n\n   \
    \     if numeral_value == \"m\" {\n            numeral_index += 1;\n         \
    \   continue;\n        }\n\n        if numeral_value == \"d\" {\n            numeral_index\
    \ += 1;\n            continue;\n        }\n\n        if numeral_value == \"i\"\
    \ {\n            numeral_index += 1;\n            continue;\n        }\n\n   \
    \     if numeral_value == \"v\" {\n            numeral_index += 1;\n         \
    \   continue;\n        }\n\n        if numeral_value == \"l\" {\n            numeral_index\
    \ += 1;\n            continue;\n        }\n\n        if numeral_value == \"c\"\
    \ {\n            numeral_index += 1;\n            continue;\n        }\n\n   \
    \     if numeral_value == \"x\" {\n            numeral_index += 1;\n         \
    \   continue;\n        }\n\n        if numeral_value == \"m\" {\n            numeral_index\
    \ += 1;\n            continue;\n        }\n\n\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpqc9vafki.rs:138:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n...\n25  |     while\
    \ numeral_index < numerals.len() {\n    |                                    \
    \      - this delimiter might not be properly closed...\n...\n120 | }\n    | -\
    \ ...as it matches this but it has different indentation\n...\n138 | }\n    |\
    \   ^\n\nerror[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmpqc9vafki.rs:124:17\n\
    \    |\n124 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpqc9vafki.rs:124:25\n    |\n124 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpqc9vafki.rs:125:17\n\
    \    |\n125 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpqc9vafki.rs:125:25\n    |\n125 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpqc9vafki.rs:126:17\n\
    \    |\n126 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpqc9vafki.rs:126:25\n    |\n126 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpqc9vafki.rs:127:17\n\
    \    |\n127 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpqc9vafki.rs:127:25\n    |\n127 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpqc9vafk"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp2xnr_ud4.rs:51:45\n   |\n\
    51 |     let mut numeral_digits_len = String::new\n   |                      \
    \                       ^ help: add `;` here\n52 | }\n   | - unexpected token\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2xnr_ud4.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral_index = 0;\n    let mut numeral_digits = vec![];\n    let mut numeral_digits_index\
    \ = 0;\n    let mut numeral_digits_index2 = 0;\n    let mut numeral_digits_index3\
    \ = 0;\n    let mut numeral_digits_index4 = 0;\n    let mut numeral_digits_index5\
    \ = 0;\n    let mut numeral_digits_index6 = 0;\n    let mut numeral_digits_index7\
    \ = 0;\n    let mut numeral_digits_index8 = 0;\n    let mut numeral_digits_index9\
    \ = 0;\n    let mut numeral_digits_index10 = 0;\n    let mut numeral_digits_index11\
    \ = 0;\n    let mut numeral_digits_index12 = 0;\n    let mut numeral_digits_index13\
    \ = 0;\n    let mut numeral_digits_index14 = 0;\n    let mut numeral_digits_index15\
    \ = 0;\n    let mut numeral_digits_index16 = 0;\n    let mut numeral_digits_index17\
    \ = 0;\n    let mut numeral_digits_index18 = 0;\n    let mut numeral_digits_index19\
    \ = 0;\n    let mut numeral_digits_index20 = 0;\n    let mut numeral_digits_index21\
    \ = 0;\n    let mut numeral_digits_index22 = 0;\n    let mut numeral_digits_index23\
    \ = 0;\n    let mut numeral_digits_index24 = 0;\n    let mut numeral_digits_index25\
    \ = 0;\n    let mut numeral_digits_index26 = 0;\n    let mut numeral_digits_index27\
    \ = 0;\n    let mut numeral_digits_index28 = 0;\n    let mut numeral_digits_index29\
    \ = 0;\n    let mut numeral_digits_index30 = 0;\n    let mut numeral_digits_index31\
    \ = 0;\n    let mut numeral_digits_index32 = 0;\n    let mut numeral_digits_index33\
    \ = 0;\n    let mut numeral_digits_index34 = 0;\n    let mut numeral_digits_index35\
    \ = 0;\n    let mut numeral_digits_index36 = 0;\n    let mut numeral_digits_index37\
    \ = 0;\n    let mut numeral_digits_index38 = 0;\n    let mut numeral_digits_index39\
    \ = 0;\n    let mut numeral_digits_index40 = 0;\n    let mut numeral_digits_index41\
    \ = 0;\n    let mut numeral_digits_index42 = 0;\n    let mut numeral_digits_index43\
    \ = 0;\n    let mut numer\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp014p2wqz.rs:59:18\n   |\n\
    59 |     let mut numer\n   |                  ^ help: add `;` here\n60 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp014p2wqz.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp014p2wqz.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp014p2wqz.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp014p2wqz.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp014p2wqz.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp014p2wqz.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp014p2wqz.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp014p2wqz.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp014p2wqz.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp014p2wqz.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"\
    D\"),\n                           String::from(\"CD\"), String::from(\"C\"), String::from(\"\
    XC\"),\n                           String::from(\"L\"), String::from(\"XL\"),\
    \ String::from(\"X\"),\n                           String::from(\"IX\"), String::from(\"\
    V\"), String::from(\"IV\"),\n                           String::from(\"I\")];\n\
    \    let mut numeral_index = 0;\n    let mut numeral_length = numerals.len();\n\
    \    let mut numeral_value = number;\n    while numeral_value >= 1000 {\n    \
    \    numeral_value -= 1000;\n        numeral_index += 1;\n    }\n    while numeral_value\
    \ >= 100 {\n        numeral_value -= 100;\n        numeral_index += 1;\n    }\n\
    \    while numeral_value >= 10 {\n        numeral_value -= 10;\n        numeral_index\
    \ += 1;\n    }\n    while numeral_value >= 1 {\n        numeral_value -= 1;\n\
    \        numeral_index += 1;\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    numeral_value = number;\n    while numeral_value >= 1000 {\n        numeral_value\
    \ -= 1000;\n        numeral_index += 1;\n    }\n    while numeral_value >= 100\
    \ {\n        numeral_value -= 100;\n        numeral_index += 1;\n    }\n    while\
    \ numeral_value >= 10 {\n        numeral_value -= 10;\n        numeral_index +=\
    \ 1;\n    }\n    while numeral_value >= 1 {\n        numeral_value -= 1;\n   \
    \     numeral_index += 1;\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpc42da8_d.rs:62:17\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc42da8_d.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc42da8_d.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpc42da8_d.rs:63:25\n\
    \   |\n63 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpc42da8_d.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpc42da8_d.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpc42da8_d.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpc42da8_d.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpc42da8_d.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc42da8_d.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc42da8_d.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpoedh_qtr.rs:52:1\n\
    \   |\n52 | }\n   | ^ expected identifier\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:14:28\n   |\n14\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:15:28\n   |\n15\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:16:28\n   |\n16\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:17:28\n   |\n17\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:18:28\n   |\n18\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:19:28\n   |\n19\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:20:28\n   |\n20\
    \ |     let"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num = 0;\n    let mut prev_num\
    \ = 0;\n    let mut prev_roman = String::new();\n    let mut prev_roman_num =\
    \ 0;\n    let mut prev_roman_num_str = \"\";\n    let mut prev_roman_num_str_len\
    \ = 0;\n    let mut prev_roman_num_str_len2 = 0;\n    let mut roman_num_str =\
    \ \"\";\n    let mut roman_num_str_len = 0;\n    let mut roman_num_str_len2 =\
    \ 0;\n    let mut roman_num_str_len3 = 0;\n    let mut roman_num_str_len4 = 0;\n\
    \    let mut roman_num_str_len5 = 0;\n    let mut roman_num_str_len6 = 0;\n  \
    \  let mut roman_num_str_len7 = 0;\n    let mut roman_num_str_len8 = 0;\n    let\
    \ mut roman_num_str_len9 = 0;\n    let mut roman_num_str_len10 = 0;\n    let mut\
    \ roman_num_str_len11 = 0;\n    let mut roman_num_str_len12 = 0;\n    let mut\
    \ roman_num_str_len13 = 0;\n    let mut roman_num_str_len14 = 0;\n    let mut\
    \ roman_num_str_len15 = 0;\n    let mut roman_num_str_len16 = 0;\n    let mut\
    \ roman_num_str_len17 = 0;\n    let mut roman_num_str_len18 = 0;\n    let mut\
    \ roman_num_str_len19 = 0;\n    let mut roman_num_str_len20 = 0;\n    let mut\
    \ roman_num_str_len21 = 0;\n    let mut roman_num_str_len22 = 0;\n    let mut\
    \ roman_num_str_len23 = 0;\n    let mut roman_num_str_len24 = 0;\n    let mut\
    \ roman_num_str_len25 = 0;\n    let mut roman_num_str_len26 = 0;\n    let mut\
    \ roman_num_str_len27 = 0;\n    let mut roman_num_str_len28 = 0;\n    let mut\
    \ roman_num_str_len29 = 0;\n    let mut roman_num_str_len30 = 0;\n    let mut\
    \ roman_num_str_len31 = 0;\n    let mut roman_num_str_len32 = 0;\n    let mut\
    \ roman_num_str_len33 = 0;\n    let mut roman_num_str_len34 = 0;\n    let mut\
    \ roman_num_str_len35 = 0;\n    let mut roman_num_str_len36 = 0;\n    let mut\
    \ roman_num_str_len37 = 0;\n    let mut roman_num_str_len38 = 0;\n    let mut\
    \ roman_num_str_len39 = 0;\n    let mu\n}\n\nfn main() {\n    let candidate =\
    \ int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp5hw5fb4p.rs:60:11\n   |\n\
    60 |     let mu\n   |           ^ help: add `;` here\n61 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5hw5fb4p.rs:65:17\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5hw5fb4p.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5hw5fb4p.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5hw5fb4p.rs:66:25\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5hw5fb4p.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5hw5fb4p.rs:67:25\n   |\n67 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5hw5fb4p.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5hw5fb4p.rs:68:25\n   |\n68 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5hw5fb4p.rs:69:17\n  \
    \ |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5hw5fb4p.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n\n\
    \    if number < 1 {\n        roman.push('-');\n        numeral.push('-');\n \
    \   }\n\n    let mut nums = vec![1i32, 2, 3, 4, 7, 9, 10, 13, 14, 17, 19, 23,\
    \ 27, 31, 35, 43, 51, 59, 67, 71, 73, 79, 83, 89, 97];\n\n    if number < 1000\
    \ {\n        nums.insert(0, 0);\n    }\n\n    while number >= nums.len() {\n \
    \       roman.push((nums.len() - 1).to_string());\n        numeral.push((nums.len()\
    \ - 1).to_string());\n        nums.insert(0, 0);\n    }\n\n    let mut i = 1;\n\
    \    while i <= number {\n        roman.push((nums[i] - 1).to_string());\n   \
    \     numeral.push((nums[i] - 1).to_string());\n        i += 1;\n    }\n\n   \
    \ roman.push((nums[number] - 1).to_string());\n    numeral.push((nums[number]\
    \ - 1).to_string());\n\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp12h2z2tf.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp12h2z2tf.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp12h2z2tf.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp12h2z2tf.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp12h2z2tf.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp12h2z2tf.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp12h2z2tf.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp12h2z2tf.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp12h2z2tf.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp12h2z2tf.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp12h2z2tf.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805974
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xix\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        \n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpsqoxckx3.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::fmt::{self, Display};\n\n    let mut\
    \ roman = String::new();\n    let mut nums = vec![\"\", \"c\", \"d\", \"x\", \"\
    l\", \"m\", \"c\", \"x\", \"l\"];\n\n    for &n in &nums[0..number.min(4)] {\n\
    \        if number >= 1000 {\n            roman.push_str(&n);\n            number\
    \ -= 1000;\n        } else {\n            roman.push_str(&ns[number % 1000]);\n\
    \            number /= 1000;\n        }\n    }\n\n    roman.push_str(&nums[number\
    \ % 1000]);\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `ns` in this scope\n  --> /tmp/tmp1x_em1h5.rs:23:29\n\
    \   |\n23 |             roman.push_str(&ns[number % 1000]);\n   |            \
    \                 ^^ help: a local variable with a similar name exists: `n`\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1x_em1h5.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1x_em1h5.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1x_em1h5.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1x_em1h5.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1x_em1h5.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1x_em1h5.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1x_em1h5.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1x_em1h5.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1x_em1h5.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1x_em1h5.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral_map: HashMap<isize, isize> = HashMap::new();\n    let mut numeral_map_inv\
    \ = HashMap::new();\n    let mut numeral_map_inv2 = HashMap::new();\n    let mut\
    \ numeral_map_inv3 = HashMap::new();\n    let mut numeral_map_inv4 = HashMap::new();\n\
    \    let mut numeral_map_inv5 = HashMap::new();\n    let mut numeral_map_inv6\
    \ = HashMap::new();\n    let mut numeral_map_inv7 = HashMap::new();\n    let mut\
    \ numeral_map_inv8 = HashMap::new();\n    let mut numeral_map_inv9 = HashMap::new();\n\
    \    let mut numeral_map_inv10 = HashMap::new();\n    let mut numeral_map_inv11\
    \ = HashMap::new();\n    let mut numeral_map_inv12 = HashMap::new();\n    let\
    \ mut numeral_map_inv13 = HashMap::new();\n    let mut numeral_map_inv14 = HashMap::new();\n\
    \    let mut numeral_map_inv15 = HashMap::new();\n    let mut numeral_map_inv16\
    \ = HashMap::new();\n    let mut numeral_map_inv17 = HashMap::new();\n    let\
    \ mut numeral_map_inv18 = HashMap::new();\n    let mut numeral_map_inv19 = HashMap::new();\n\
    \    let mut numeral_map_inv20 = HashMap::new();\n    let mut numeral_map_inv21\
    \ = HashMap::new();\n    let mut numeral_map_inv22 = HashMap::new();\n    let\
    \ mut numeral_map_inv23 = HashMap::new();\n    let mut numeral_map_inv24 = HashMap::new();\n\
    \    let mut numeral_map_inv25 = HashMap::new();\n    let mut numeral_map_inv26\
    \ = HashMap::new();\n    let mut numeral_map_inv27 = HashMap::new();\n    let\
    \ mut numeral_map_inv28 = HashMap::new();\n    let mut numeral_map_inv29 = HashMap::new();\n\
    \    let mut numeral_map_inv30 = HashMap::new();\n    let mut numeral_map_inv31\
    \ = HashMap::new();\n    let mut numeral_map_inv32 = HashMap::new();\n    let\
    \ \n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpm6j6njkc.rs:48:1\n  \
    \ |\n48 | }\n   | ^ expected pattern\n\nerror[E0412]: cannot find type `HashMap`\
    \ in this scope\n  --> /tmp/tmpm6j6njkc.rs:14:26\n   |\n14 |     let mut numeral_map:\
    \ HashMap<isize, isize> = HashMap::new();\n   |                          ^^^^^^^\
    \ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n\
    1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpm6j6njkc.rs:14:50\n   |\n14\
    \ |     let mut numeral_map: HashMap<isize, isize> = HashMap::new();\n   |   \
    \                                               ^^^^^^^ not found in this scope\n\
    \   |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpm6j6njkc.rs:15:31\n   |\n15 |     let mut numeral_map_inv = HashMap::new();\n\
    \   |                               ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpm6j6njkc.rs:16:32\n   |\n16 |     let mut numeral_map_inv2 = HashMap::new();\n\
    \   |                                ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpm6j6njkc.rs:17:32\n   |\n17 |     let mut numeral_map_inv3 = HashMap::new();\n\
    \   |                                ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpm6j6njkc.rs:18:32\n   |\n18 |     let mut numeral_map_inv4 = HashMap::new();\n\
    \   |                                ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use o"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"e\", \"f\", \"\
    ff\", \"fff\", \"g\", \"h\", \"hh\", \"hhi\", \"i\", \"ii\", \"iii\", \"j\", \"\
    jj\", \"jjj\", \"k\", \"l\", \"ll\", \"lll\", \"m\", \"n\", \"nn\", \"nnn\", \"\
    o\", \"p\", \"pp\", \"ppp\", \"q\", \"r\", \"rr\", \"rr\"\n    ];\n    let mut\
    \ numerals_count = vec![0, 0, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, \n}\n\n\
    fn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `}`\n\
    \  --> /tmp/tmpw35yfel0.rs:16:1\n   |\n16 | }\n   | ^ expected one of `.`, `;`,\
    \ `?`, `else`, or an operator\n\nerror: mismatched closing delimiter: `}`\n  -->\
    \ /tmp/tmpw35yfel0.rs:15:34\n   |\n11 | fn int_to_mini_roman(number: isize) ->\
    \ String {\n   |                                               - closing delimiter\
    \ possibly meant for this\n...\n15 |     let mut numerals_count = vec![0, 0, 1,\
    \ 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5...\n   |                                  ^ unclosed delimiter\n\
    16 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpw35yfel0.rs:20:17\n   |\n20 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpw35yfel0.rs:20:25\n \
    \  |\n20 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw35yfel0.rs:21:17\n   |\n21 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw35yfel0.rs:21:25\n   |\n21 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw35yfel0.rs:22:17\n   |\n22 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw35yfel0.rs:22:25\n   |\n22 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw35yfel0.rs:23:17\n  \
    \ |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw35yfel0.rs:23:25\n   |\n23 |     assert_eq"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"l\", \"x\", \"i\"];\n    let mut numeral_index = 0;\n    let mut numeral_length\
    \ = 0;\n    let mut numeral_value = 0;\n    let mut numeral_string = \"\";\n \
    \   let mut numeral_string_index = 0;\n    let mut numeral_string_length = 0;\n\
    \    let mut numeral_string_length_index = 0;\n    let mut numeral_string_length_value\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_index = 0;\n    let mut\
    \ numeral_string_length_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_value_index = 0;\n    let\
    \ mut numeral_string_length_value_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_value_index = 0;\n    let\
    \ mut numeral_string_length_value_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_value_index = 0;\n    let\
    \ mut numeral_string_length_value_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_value_index = 0;\n    let\
    \ mut numeral_string_length_value_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numer\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpf6be47gr.rs:54:18\n   |\n\
    54 |     let mut numer\n   |                  ^ help: add `;` here\n55 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf6be47gr.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf6be47gr.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpf6be47gr.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpf6be47gr.rs:60:25\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpf6be47gr.rs:61:17\n  \
    \ |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf6be47gr.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf6be47gr.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpf6be47gr.rs:62:25\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf6be47gr.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf6be47gr.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmp2atoa1s4.rs:52:1\n   |\n52\
    \ | }\n   | ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmp2atoa1s4.rs:51:38\n\
    \   |\n51 |     let mut numerals_iter = numerals.\n   |                      \
    \                ^ help: add `;` here\n52 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2atoa1s4.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2atoa1s4.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2atoa1s4.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2atoa1s4.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2atoa1s4.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2atoa1s4.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2atoa1s4.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2atoa1s4.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2atoa1s4.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2atoa1s4.rs:60:25\n   |\n60 |     assert_eq!("
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut prev_num = 0;\n    let mut prev_roman\
    \ = String::new();\n    let mut prev_roman_size = roman.len();\n    let mut roman_digits\
    \ = vec![String::new(); ROMAN_DIGITS.len()];\n    let mut roman_digits_size =\
    \ roman_digits.len();\n    let mut roman_digits_index = 0;\n    let mut roman_digits_index2\
    \ = 0;\n    let mut roman_digits_index3 = 0;\n    let mut roman_digits_index4\
    \ = 0;\n    let mut roman_digits_index5 = 0;\n    let mut roman_digits_index6\
    \ = 0;\n    let mut roman_digits_index7 = 0;\n    let mut roman_digits_index8\
    \ = 0;\n    let mut roman_digits_index9 = 0;\n    let mut roman_digits_index10\
    \ = 0;\n    let mut roman_digits_index11 = 0;\n    let mut roman_digits_index12\
    \ = 0;\n    let mut roman_digits_index13 = 0;\n    let mut roman_digits_index14\
    \ = 0;\n    let mut roman_digits_index15 = 0;\n    let mut roman_digits_index16\
    \ = 0;\n    let mut roman_digits_index17 = 0;\n    let mut roman_digits_index18\
    \ = 0;\n    let mut roman_digits_index19 = 0;\n    let mut roman_digits_index20\
    \ = 0;\n    let mut roman_digits_index21 = 0;\n    let mut roman_digits_index22\
    \ = 0;\n    let mut roman_digits_index23 = 0;\n    let mut roman_digits_index24\
    \ = 0;\n    let mut roman_digits_index25 = 0;\n    let mut roman_digits_index26\
    \ = 0;\n    let mut roman_digits_index27 = 0;\n    let mut roman_digits_index28\
    \ = 0;\n    let mut roman_digits_index29 = 0;\n    let mut roman_digits_index30\
    \ = 0;\n    let mut roman_digits_index31 = 0;\n    let mut roman_digits_index32\
    \ = 0;\n    let mut roman_digits_index33 = 0;\n    let mut roman_digits_index34\
    \ = 0;\n    let mut roman_digits_index35 = 0;\n    let mut roman_digits_index36\
    \ = 0;\n    let mut roman_digits_index37 = 0;\n    let mut roman_digits_index38\
    \ = 0;\n    let mut roman_digits_index39 = 0;\n    let mut roman_digits_index40\
    \ = 0;\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `ROMAN_DIGITS` in this scope\n  --> /tmp/tmpg_vza81o.rs:16:48\n\
    \   |\n16 |     let mut roman_digits = vec![String::new(); ROMAN_DIGITS.len()];\n\
    \   |                                                ^^^^^^^^^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg_vza81o.rs:62:17\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg_vza81o.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg_vza81o.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg_vza81o.rs:63:25\n\
    \   |\n63 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg_vza81o.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg_vza81o.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg_vza81o.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg_vza81o.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg_vza81o.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg_vza81o.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \   "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_len = String::new();\n    let mut numeral_digits_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len = String::new();\n\
    \    let mut numeral_digits_len_len_len_len_len = String::new();\n    let mut\
    \ numeral_digits_len_len_len_len_len_len = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4et54hwf.rs:36:80\n   |\n\
    36 |     let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    \   |                                                                        \
    \        ^ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4et54hwf.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:45:25\n   |\n45 |     assert_"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = number;\n    while\
    \ num > 0 {\n        let mut remainder: isize = 0;\n        while num > 0 {\n\
    \            let digit = num % 10;\n            roman += digits_to_roman[digit];\n\
    \            num -= digit;\n            remainder += digit;\n        }\n     \
    \   roman = roman.chars().collect::<String>().to_lowercase() + roman;\n      \
    \  num -= remainder;\n    }\n    roman\n}\n\nfn main() {\n    let candidate =\
    \ int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `digits_to_roman` in this scope\n  -->\
    \ /tmp/tmp07sm0u3u.rs:18:22\n   |\n18 |             roman += digits_to_roman[digit];\n\
    \   |                      ^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp07sm0u3u.rs:30:17\n  \
    \ |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp07sm0u3u.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp07sm0u3u.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp07sm0u3u.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp07sm0u3u.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp07sm0u3u.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp07sm0u3u.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp07sm0u3u.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp07sm0u3u.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp07sm0u3u.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in th"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_len = String::new();\n    let mut numeral_digits_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len = String::new();\n\
    \    let mut numeral_digits_len_len_len_len_len = String::new();\n    let mut\
    \ numeral_digits_len_len_len_len_len_len = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4et54hwf.rs:36:80\n   |\n\
    36 |     let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    \   |                                                                        \
    \        ^ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4et54hwf.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:45:25\n   |\n45 |     assert_"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map_size = 100;\n    let\
    \ mut numerals_map_size_increment = numerals_map_size / 2;\n    let mut numerals_map_size_increment_2\
    \ = numerals_map_size_increment * 2;\n    let mut numerals_map_size_increment_3\
    \ = numerals_map_size_increment_2 * 2;\n    let mut numerals_map_size_increment_4\
    \ = numerals_map_size_increment_3 * 2;\n    let mut numerals_map_size_increment_5\
    \ = numerals_map_size_increment_4 * 2;\n    let mut numerals_map_size_increment_6\
    \ = numerals_map_size_increment_5 * 2;\n    let mut numerals_map_size_increment_7\
    \ = numerals_map_size_increment_6 * 2;\n    let mut numerals_map_size_increment_8\
    \ = numerals_map_size_increment_7 * 2;\n    let mut numerals_map_size_increment_9\
    \ = numerals_map_size_increment_8 * 2;\n    let mut numerals_map_size_increment_10\
    \ = numerals_map_size_increment_9 * 2;\n    let mut numerals_map_size_increment_11\
    \ = numerals_map_size_increment_10 * 2;\n    let mut numerals_map_size_increment_12\
    \ = numerals_map_size_increment_11 * 2;\n    let mut numerals_map_size_increment_13\
    \ = numerals_map_size_increment_12 * 2;\n    let mut numerals_map_size_increment_14\
    \ = numerals_map_size_increment_13 * 2;\n    let mut numerals_map_size_increment_15\
    \ = numerals_map_size_increment_14 * 2;\n    let mut numerals_map_size_increment_16\
    \ = numerals_map_size_increment_15 * 2;\n    let mut numerals_map_size_increment_17\
    \ = numerals_map_size_increment_16 * 2;\n    let mut numerals_map_size_increment_18\
    \ = numerals_map_size_increment_17 * 2;\n    let mut numerals_map_size_increment_19\
    \ = numerals_map_size_increment_18 * 2;\n    let mut numerals_map_size_increment_20\
    \ = numerals_map_size_increment_19 * 2;\n    let mut numerals_map_size_increment_21\
    \ = numerals_map_size_increment_20 * 2;\n    let mut numerals_map_size\n}\n\n\
    fn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpyynj4xxd.rs:37:30\n   |\n\
    37 |     let mut numerals_map_size\n   |                              ^ help:\
    \ add `;` here\n38 | }\n   | - unexpected token\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpyynj4xxd.rs:14:28\n   |\n14\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmpyynj4xxd.rs:42:17\n   |\n42 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyynj4xxd.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyynj4xxd.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyynj4xxd.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyynj4xxd.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyynj4xxd.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyynj4xxd.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyynj4xxd.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyynj4xxd.rs:46:"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut prev_digit = 0;\n    let mut\
    \ current_digit = 0;\n    let mut num_digits = 1;\n    let mut roman_digits =\
    \ vec![String::from(\"i\")];\n    let mut roman_digits_len = roman_digits.len();\n\
    \n    while number > 0 {\n        roman_digits[roman_digits_len - 1].clear();\n\
    \        roman_digits_len -= 1;\n\n        // Get the next digit\n        current_digit\
    \ = number % 10;\n        number /= 10;\n\n        // Add it to the current roman\n\
    \        roman_digits[roman_digits_len - 1].push(current_digit.to_string());\n\
    \n        // If the current digit is greater than the previous digit, add a\n\
    \        // new roman digit\n        if current_digit > prev_digit {\n       \
    \     roman_digits.push(String::from(\"i\"));\n            roman_digits_len +=\
    \ 1;\n        }\n\n        // Set the previous digit\n        prev_digit = current_digit;\n\
    \    }\n\n    // Add the remaining digits to the roman\n    roman_digits[roman_digits_len\
    \ - 1].clear();\n    roman_digits_len -= 1;\n    roman_digits.push(String::from(\"\
    0\"));\n    roman_digits.push(String::from(\"1\"));\n    roman_digits.push(String::from(\"\
    2\"));\n    roman_digits.push(String::from(\"3\"));\n    roman_digits.push(String::from(\"\
    4\"));\n    roman_digits.push(String::from(\"5\"));\n    roman_digits.push(String::from(\"\
    6\"));\n    roman_digits.push(String::from(\"7\"));\n    roman_digits.push(String::from(\"\
    8\"));\n    roman_digits.push(String::from(\"9\"));\n\n    // Convert the roman\
    \ digits to a string\n    for roman_digit in roman_digits[0..roman_digits_len]\
    \ {\n        roman.push(roman_digit);\n    }\n\n    roman\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbhjexil7.rs:65:17\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbhjexil7.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbhjexil7.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbhjexil7.rs:66:25\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbhjexil7.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbhjexil7.rs:67:25\n   |\n67 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbhjexil7.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbhjexil7.rs:68:25\n   |\n68 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbhjexil7.rs:69:17\n  \
    \ |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbhjexil7.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbhjexil7.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n\n    let mut roman\
    \ = String::new();\n    let mut numeral = String::new();\n    let mut numeral_digits\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digit\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmph3o0t840.rs:53:26\n   |\n\
    53 |     let mut numeral_digit\n   |                          ^ help: add `;`\
    \ here\n54 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmph3o0t840.rs:58:17\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmph3o0t840.rs:58:25\n \
    \  |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph3o0t840.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph3o0t840.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmph3o0t840.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmph3o0t840.rs:60:25\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph3o0t840.rs:61:17\n  \
    \ |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph3o0t840.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph3o0t840.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmph3o0t840.rs:62:25\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        7\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppb6j91m9.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmppb6j91m9.rs:83:1\n   |\n82 |         7\n  \
    \ |          - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n83 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppb6j91m9.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    let mut\
    \ digits: Vec<isize> = vec![number];\n    while num > 0 {\n        if num % 10\
    \ == 0 {\n            roman.push((num % 100).to_string());\n            digits.remove(0);\n\
    \            num = (num / 10).unwrap();\n        } else {\n            roman.push((num\
    \ % 10).to_string());\n            digits.remove(0);\n            num = (num /\
    \ 10).unwrap();\n        }\n    }\n    roman.push((digits.last().unwrap()).to_string());\n\
    \    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb6k3p6cd.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb6k3p6cd.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb6k3p6cd.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb6k3p6cd.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb6k3p6cd.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb6k3p6cd.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpb6k3p6cd.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpb6k3p6cd.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpb6k3p6cd.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb6k3p6cd.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb6k3p6cd.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_len = String::new();\n    let mut numeral_digits_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len = String::new();\n\
    \    let mut numeral_digits_len_len_len_len_len = String::new();\n    let mut\
    \ numeral_digits_len_len_len_len_len_len = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0whtm67i.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0whtm67i.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0whtm67i.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0whtm67i.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0whtm67i.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0whtm67i.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0whtm67i.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0whtm67i.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0whtm67i.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0whtm67i.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0whtm67i.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    while num\
    \ < number {\n        let mut digit = num % 10;\n        roman += if digit > 0\
    \ {\n            char::from(\"M\")\n        } else {\n            char::from(\"\
    D\")\n        };\n        num /= 10;\n    }\n    roman\n}\n\nfn main() {\n   \
    \ let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpm1z6s6no.rs:28:17\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm1z6s6no.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm1z6s6no.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpm1z6s6no.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpm1z6s6no.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpm1z6s6no.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpm1z6s6no.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpm1z6s6no.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpm1z6s6no.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm1z6s6no.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm1z6s6no.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n\n\
    \    // The first 10 numbers are in descending order\n    for num in 0..10 {\n\
    \        let mut numeral_digit = String::new();\n        let mut numeral_roman\
    \ = String::new();\n\n        // If the number is divisible by 10, then we add\
    \ 'x'\n        if number % 10 == 0 {\n            numeral_digit.push('a');\n \
    \           numeral_roman.push('x');\n        } else {\n            numeral_digit.push('0');\n\
    \        }\n\n        // If the number is divisible by 100, then we add 'l'\n\
    \        if number % 100 == 0 {\n            numeral_digit.push('l');\n      \
    \      numeral_roman.push('l');\n        } else {\n            numeral_digit.push('0');\n\
    \        }\n\n        // If the number is divisible by 1000, then we add 'c'\n\
    \        if number % 1000 == 0 {\n            numeral_digit.push('c');\n     \
    \       numeral_roman.push('c');\n        } else {\n            numeral_digit.push('0');\n\
    \        }\n\n        // If the number is divisible by 10000, then we add 'd'\n\
    \        if number % 10000 == 0 {\n            numeral_digit.push('d');\n    \
    \        numeral_roman.push('d');\n        } else {\n            numeral_digit.push('0');\n\
    \        }\n\n        // If the number is divisible by 100000, then we add 'i'\n\
    \        if number % 100000 == 0 {\n            numeral_digit.push('i');\n   \
    \         numeral_roman.push('i');\n        } else {\n            numeral_digit.push('0');\n\
    \        }\n\n        // If the number is divisible by 1000000, then we add 'v'\n\
    \        if number % 1000000 == 0 {\n            numeral_digit.push('v');\n  \
    \          numeral_roman.push('v');\n        } else {\n            numeral_digit.push('0');\n\
    \        }\n\n        // If the number is divisible by 10000000, then we add 'f'\n\
    \        if number % 10000000 == 0 {\n            numeral_digit.push('f');\n \
    \           numeral_roman.push('f');\n        } else {\n            numeral_digit.push('0');\n\
    \        }\n\n        // If the number is divisible by 100000000, then we add\
    \ 'm'\n        if number % 100000000 == 0 {\n            numeral_digit.push('m');\n\
    \            numeral_roman.push('m');\n        } else {\n            numeral_digit.push('0');\n\
    \        }\n\n        // If the number is divisible by 1000000000, then we add\
    \ 'n'\n        if number % 1000000000 == 0 {\n            \n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmps1g52361.rs:105:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n...\n16  |     for\
    \ num in 0..10 {\n    |                      - unclosed delimiter\n...\n85  |\
    \         if number % 1000000000 == 0 {\n    |                               \
    \      - this delimiter might not be properly closed...\n86  |             \n\
    87  | }\n    | - ...as it matches this but it has different indentation\n...\n\
    105 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n \
    \ --> /tmp/tmps1g52361.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmps1g52361.rs:91:25\n   |\n91 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmps1g52361.rs:92:17\n   |\n92 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmps1g52361.rs:92:25\n   |\n92 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmps1g52361.rs:93:17\n  \
    \ |\n93 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps1g52361.rs:93:25\n   |\n93 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps1g52361.rs:94:17\n   |\n94 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmps1g52361.rs:94:25\n\
    \   |\n94 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut remainder = number;\n    let mut i = 0;\n    while remainder > 0 {\n\
    \        if remainder >= 100 {\n            roman.push(\"M\");\n            remainder\
    \ -= 100;\n        }\n        if remainder >= 50 {\n            roman.push(\"\
    CM\");\n            remainder -= 50;\n        }\n        if remainder >= 10 {\n\
    \            roman.push(\"D\");\n            remainder -= 10;\n        }\n   \
    \     if remainder >= 5 {\n            roman.push(\"CD\");\n            remainder\
    \ -= 5;\n        }\n        if remainder >= 1 {\n            roman.push(\"C\"\
    );\n            remainder -= 1;\n        }\n        if remainder >= 0.25 {\n \
    \           roman.push(\"XC\");\n            remainder -= 0.25;\n        }\n \
    \       if remainder >= 0.1 {\n            roman.push(\"L\");\n            remainder\
    \ -= 0.1;\n        }\n        if remainder >= 0.05 {\n            roman.push(\"\
    XL\");\n            remainder -= 0.05;\n        }\n        if remainder >= 0.01\
    \ {\n            roman.push(\"X\");\n            remainder -= 0.01;\n        }\n\
    \        if remainder >= 0.001 {\n            roman.push(\"IX\");\n          \
    \  remainder -= 0.001;\n        }\n        if remainder >= 0.0001  {\n       \
    \     roman.push(\"V\");\n            remainder -= 0.0001;\n        }\n      \
    \  if remainder >= 0.00001 {\n            roman.push(\"IV\");\n            remainder\
    \ -= 0.00001;\n        }\n        if remainder >= 0.000001  {\n            roman.push(\"\
    I\");\n            remainder -= 0.000001;\n        }\n        if remainder >=\
    \ 0.0000001 {\n            roman.push(\"II\");\n            remainder -= 0.0000001;\n\
    \        }\n        if remainder >= 0.00000001  {\n            roman.push(\"III\"\
    );\n            remainder -= 0.00000001;\n        }\n        if remainder >= 0.000000001\
    \ {\n            roman.push(\"IV\");\n            remainder -= 0.000000001;\n\
    \        }\n        if remainder >= 0.0000000001  {\n            roman.push(\"\
    V\");\n            remainder -= 0.0000000001;\n        }\n        if remainder\
    \ >= 0.00000000001 {\n            roman.push(\"VI\");\n            remainder -=\
    \ 0.00000000001;\n        }\n        if remainder >= 0.000000000001\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpv45hpo_9.rs:108:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n...\n16  |     while\
    \ remainder > 0 {\n    |                         - this delimiter might not be\
    \ properly closed...\n...\n90  | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n108 | }\n    |   ^\n\nerror: expected `{`, found `}`\n  -->\
    \ /tmp/tmpv45hpo_9.rs:90:1\n   |\n89 |         if remainder >= 0.000000000001\n\
    \   |         -- this `if` expression has a condition, but no block\n90 | }\n\
    \   | ^ expected `{`\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv45hpo_9.rs:94:17\n   |\n94 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv45hpo_9.rs:94:25\n   |\n94 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv45hpo_9.rs:95:17\n   |\n95 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv45hpo_9.rs:95:25\n   |\n95 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv45hpo_9.rs:96:17\n  \
    \ |\n96 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv45hpo_9.rs:96:25\n   |\n96 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv45hpo_9.rs:97:17\n   |\n97 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv45hpo_9.rs:97:25\n\
    \   |\n97 |     assert_eq!({left}, {right});\n   "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"e\", \"f\", \"\
    ff\", \"fff\", \"g\", \"h\", \"hh\", \"hhi\", \"i\", \"ii\", \"iii\", \"j\", \"\
    jj\", \"jjj\", \"k\", \"l\", \"ll\", \"lll\", \"m\", \"n\", \"nn\", \"nnn\", \"\
    o\", \"p\", \"pp\", \"ppp\", \"q\", \"r\", \"rr\", \"rr\"\n    ];\n    let mut\
    \ numeral_index = 0;\n    let mut numeral_length = numerals.len();\n    let mut\
    \ numeral_string = \"\";\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = numerals.len();\n    let mut numeral_string_length_index = 0;\n    let mut\
    \ numeral_string_length_index2 = 0;\n    let mut numeral_string_length_index3\
    \ = 0;\n    let mut numeral_string_length_index4 = 0;\n    let mut numeral_string_length_index5\
    \ = 0;\n    let mut numeral_string_length_index6 = 0;\n    let mut numeral_string_length_index7\
    \ = 0;\n    let mut numeral_string_length_index8 = 0;\n    let mut numeral_string_length_index9\
    \ = 0;\n    let mut numeral_string_length_index10 = 0;\n    let mut numeral_string_length_index11\
    \ = 0;\n    let mut numeral_string_length_index12 = 0;\n    let mut numeral_string_length_index13\
    \ = 0;\n    let mut numeral_string_length_index14 = 0;\n    let mut numeral_string_length_index15\
    \ = 0;\n    let mut numeral_string_length_index16 = 0;\n    let mut numeral_string_length_index17\
    \ = 0;\n    let mut numeral_string_length_index18 = 0;\n    let mut numeral_string_length_index19\
    \ = 0;\n    let mut numeral_string_length_index20 = 0;\n    let mut numeral_string_length_index21\
    \ = 0;\n    let mut numeral_string_length_index22 = 0;\n    let mut numeral_string_length_index23\
    \ = 0;\n    let mut numeral_string_length_index24 = 0;\n    let mut numeral_string_length_index25\
    \ = 0;\n    let mut numeral_string_length_index26 = 0;\n    let mut numeral_string_length_index27\
    \ = 0;\n    let mut numeral_string_length_index28 = 0;\n    let mut numeral_string_length_index29\
    \ = 0;\n    let mut numeral_string_length_index30 = 0;\n    let mut numeral_string_length_index31\
    \ = 0;\n    let mut numeral_string_length_index32 = 0;\n    let mut numeral_string_length_index33\
    \ = 0;\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_2xothnm.rs:57:17\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_2xothnm.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_2xothnm.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_2xothnm.rs:58:25\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_2xothnm.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_2xothnm.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_2xothnm.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_2xothnm.rs:60:25\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_2xothnm.rs:61:17\n  \
    \ |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_2xothnm.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_2xothnm.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::fmt::{self, Display};\n\n    let mut\
    \ roman = String::new();\n    let mut numerals = vec![\"\", \"c\", \"dc\", \"\
    ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n                           \"x\",\
    \ \"c\", \"dc\", \"ic\", \"ix\", \"x\"];\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map2 = HashMap::new();\n\n    for &numeral in numerals.iter()\
    \ {\n        numerals_map.insert(numeral, 0);\n    }\n\n    let mut numerals_map3\
    \ = HashMap::new();\n    let mut numerals_map4 = HashMap::new();\n\n    for &numeral\
    \ in numerals.iter() {\n        numerals_map3.insert(numeral, 0);\n    }\n\n \
    \   let mut numerals_map5 = HashMap::new();\n    let mut numerals_map6 = HashMap::new();\n\
    \n    for &numeral in numerals.iter() {\n        numerals_map5.insert(numeral,\
    \ 0);\n    }\n\n    let mut numerals_map7 = HashMap::new();\n    let mut numerals_map8\
    \ = HashMap::new();\n\n    for &numeral in numerals.iter() {\n        numerals_map7.insert(numeral,\
    \ 0);\n    }\n\n    let mut numerals_map9 = HashMap::new();\n    let mut numerals_map10\
    \ = HashMap::new();\n\n    for &numeral in numerals.iter() {\n        numerals_map9.insert(numeral,\
    \ 0);\n    }\n\n    let mut numerals_map11 = HashMap::new();\n    let mut numerals_map12\
    \ = HashMap::new();\n\n    for &numeral in numerals.iter() {\n        numerals_map11.insert(numeral,\
    \ 0);\n    }\n\n    let mut numerals_map13 = HashMap::new();\n    let mut numerals_map14\
    \ = HashMap::new();\n\n    for &numeral in numerals.iter() {\n        numerals_map13.insert(numeral,\
    \ 0);\n    }\n\n    let mut numerals_map15 = HashMap::new();\n    let mut numerals_map16\
    \ = HashMap::new();\n\n    for &numeral in numerals.iter() {\n        numerals_map15.insert(numeral,\
    \ 0);\n    }\n\n    let mut numerals_map17 = HashMap::new();\n    let mut numerals_map18\
    \ = HashMap::\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpftfwch_z.rs:76:1\n\
    \   |\n76 | }\n   | ^ expected identifier\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpftfwch_z.rs:18:28\n   |\n18\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpftfwch_z.rs:19:29\n   |\n19\
    \ |     let mut numerals_map2 = HashMap::new();\n   |                        \
    \     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpftfwch_z.rs:25:29\n   |\n25\
    \ |     let mut numerals_map3 = HashMap::new();\n   |                        \
    \     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpftfwch_z.rs:26:29\n   |\n26\
    \ |     let mut numerals_map4 = HashMap::new();\n   |                        \
    \     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpftfwch_z.rs:32:29\n   |\n32\
    \ |     let mut numerals_map5 = HashMap::new();\n   |                        \
    \     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpftfwch_z.rs:33:29\n   |\n33\
    \ |     let mut numerals_map6 = HashMap::new();\n   |                        \
    \     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpftfwch_z.rs:39:29\n   |\n39"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_len = String::new();\n    let mut numeral_digits_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len = String::new();\n\
    \    let mut numeral_digits_len_len_len_len_len = String::new();\n    let mut\
    \ numeral_digits_len_len_len_len_len_len = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4et54hwf.rs:36:80\n   |\n\
    36 |     let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    \   |                                                                        \
    \        ^ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4et54hwf.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:45:25\n   |\n45 |     assert_"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xix\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        \n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpsqoxckx3.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map_inv = HashMap::new();\n\
    \    let mut numerals_map_inv2 = HashMap::new();\n    let mut numerals_map_inv3\
    \ = HashMap::new();\n    let mut numerals_map_inv4 = HashMap::new();\n    let\
    \ mut numerals_map_inv5 = HashMap::new();\n    let mut numerals_map_inv6 = HashMap::new();\n\
    \    let mut numerals_map_inv7 = HashMap::new();\n    let mut numerals_map_inv8\
    \ = HashMap::new();\n    let mut numerals_map_inv9 = HashMap::new();\n    let\
    \ mut numerals_map_inv10 = HashMap::new();\n    let mut numerals_map_inv11 = HashMap::new();\n\
    \    let mut numerals_map_inv12 = HashMap::new();\n    let mut numerals_map_inv13\
    \ = HashMap::new();\n    let mut numerals_map_inv14 = HashMap::new();\n    let\
    \ mut numerals_map_inv15 = HashMap::new();\n    let mut numerals_map_inv16 = HashMap::new();\n\
    \    let mut numerals_map_inv17 = HashMap::new();\n    let mut numerals_map_inv18\
    \ = HashMap::new();\n    let mut numerals_map_inv19 = HashMap::new();\n    let\
    \ mut numerals_map_inv20 = HashMap::new();\n    let mut numerals_map_inv21 = HashMap::new();\n\
    \    let mut numerals_map_inv22 = HashMap::new();\n    let mut numerals_map_inv23\
    \ = HashMap::new();\n    let mut numerals_map_inv24 = HashMap::new();\n    let\
    \ mut numerals_map_inv25 = HashMap::new();\n    let mut numerals_map_inv26 = HashMap::new();\n\
    \    let mut numerals_map_inv27 = HashMap::new();\n    let mut numerals_map_inv28\
    \ = HashMap::new();\n    let mut numerals_map_inv29 = HashMap::new();\n    let\
    \ mut numerals_map_inv30 = HashMap::new();\n    let mut numerals_map_inv3\n}\n\
    \nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpiipi8v2m.rs:45:30\n   |\n\
    45 |     let mut numerals_map_inv3\n   |                              ^ help:\
    \ add `;` here\n46 | }\n   | - unexpected token\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:14:28\n   |\n14\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:15:32\n   |\n15\
    \ |     let mut numerals_map_inv = HashMap::new();\n   |                     \
    \           ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this\
    \ struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:16:33\n\
    \   |\n16 |     let mut numerals_map_inv2 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:17:33\n\
    \   |\n17 |     let mut numerals_map_inv3 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:18:33\n\
    \   |\n18 |     let mut numerals_map_inv4 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:19:33\n\
    \   |\n19 |     let mut numerals_map_inv5 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::H"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n\n    // The first 1000 numbers are the roman\
    \ numerals.\n    for num in 1..=1000 {\n        let numeral = roman_numeral(num);\n\
    \        roman.push_str(numeral);\n        numerals.push(numeral);\n        numerals_map.insert(numeral,\
    \ num);\n    }\n\n    // The next 1000 numbers are the roman numerals multiplied\
    \ by 2.\n    for num in 1..=1000 {\n        let numeral = roman_numeral(num *\
    \ 2);\n        roman.push_str(numeral);\n        numerals.push(numeral);\n   \
    \     numerals_map.insert(numeral, num * 2);\n    }\n\n    // The next 1000 numbers\
    \ are the roman numerals multiplied by 3.\n    for num in 1..=1000 {\n       \
    \ let numeral = roman_numeral(num * 3);\n        roman.push_str(numeral);\n  \
    \      numerals.push(numeral);\n        numerals_map.insert(numeral, num * 3);\n\
    \    }\n\n    // The next 1000 numbers are the roman numerals multiplied by 4.\n\
    \    for num in 1..=1000 {\n        let numeral = roman_numeral(num * 4);\n  \
    \      roman.push_str(numeral);\n        numerals.push(numeral);\n        numerals_map.insert(numeral,\
    \ num * 4);\n    }\n\n    // The next 1000 numbers are the roman numerals multiplied\
    \ by 5.\n    for num in 1..=1000 {\n        let numeral = roman_numeral(num *\
    \ 5);\n        roman.push_str(numeral);\n        numerals.push(numeral);\n   \
    \     numerals_map.insert(numeral, num * 5);\n    }\n\n    // The next 1000 numbers\
    \ are the roman numerals multiplied by 6.\n    for num in 1..=1000 {\n       \
    \ let numeral = roman_numeral(num * 6);\n        roman.push_str(numeral);\n  \
    \      numerals.push(numeral);\n        numerals_map.insert(numeral, num * 6);\n\
    \    }\n\n    // The next 1000 numbers are the roman numerals multiplied by 7.\n\
    \    for num in 1..=1000 {\n        let numeral = roman_numeral(num * 7);\n  \
    \      roman.push_str(numeral);\n        numerals.push(numeral);\n        numerals_map.insert(numeral,\
    \ num * 7);\n    }\n\n    // The next 1000 numbers are the \n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n  -->\
    \ /tmp/tmpqsa1xpsa.rs:14:28\n   |\n14 |     let mut numerals_map = HashMap::new();\n\
    \   |                            ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0425]: cannot find function `roman_numeral` in this scope\n  -->\
    \ /tmp/tmpqsa1xpsa.rs:18:23\n   |\n18 |         let numeral = roman_numeral(num);\n\
    \   |                       ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `roman_numeral` in this scope\n  --> /tmp/tmpqsa1xpsa.rs:26:23\n\
    \   |\n26 |         let numeral = roman_numeral(num * 2);\n   |              \
    \         ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `roman_numeral` in this scope\n  --> /tmp/tmpqsa1xpsa.rs:34:23\n   |\n34 | \
    \        let numeral = roman_numeral(num * 3);\n   |                       ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `roman_numeral`\
    \ in this scope\n  --> /tmp/tmpqsa1xpsa.rs:42:23\n   |\n42 |         let numeral\
    \ = roman_numeral(num * 4);\n   |                       ^^^^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `roman_numeral` in this\
    \ scope\n  --> /tmp/tmpqsa1xpsa.rs:50:23\n   |\n50 |         let numeral = roman_numeral(num\
    \ * 5);\n   |                       ^^^^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find function `roman_numeral` in this scope\n  --> /tmp/tmpqsa1xpsa.rs:58:23\n\
    \   |\n58 |         let numeral = roman_numeral(num * 6);\n   |              \
    \         ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function\
    \ `roman_numeral` in this scope\n  --> /tmp/tmpqsa1xpsa.rs:66:23\n   |\n66 | \
    \        let numeral = roman_numeral(num * 7);\n   |                       ^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqsa1xpsa.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `rig"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map_inv = HashMap::new();\n\
    \    let mut numerals_map_inv2 = HashMap::new();\n    let mut numerals_map_inv3\
    \ = HashMap::new();\n    let mut numerals_map_inv4 = HashMap::new();\n    let\
    \ mut numerals_map_inv5 = HashMap::new();\n    let mut numerals_map_inv6 = HashMap::new();\n\
    \    let mut numerals_map_inv7 = HashMap::new();\n    let mut numerals_map_inv8\
    \ = HashMap::new();\n    let mut numerals_map_inv9 = HashMap::new();\n    let\
    \ mut numerals_map_inv10 = HashMap::new();\n    let mut numerals_map_inv11 = HashMap::new();\n\
    \    let mut numerals_map_inv12 = HashMap::new();\n    let mut numerals_map_inv13\
    \ = HashMap::new();\n    let mut numerals_map_inv14 = HashMap::new();\n    let\
    \ mut numerals_map_inv15 = HashMap::new();\n    let mut numerals_map_inv16 = HashMap::new();\n\
    \    let mut numerals_map_inv17 = HashMap::new();\n    let mut numerals_map_inv18\
    \ = HashMap::new();\n    let mut numerals_map_inv19 = HashMap::new();\n    let\
    \ mut numerals_map_inv20 = HashMap::new();\n    let mut numerals_map_inv21 = HashMap::new();\n\
    \    let mut numerals_map_inv22 = HashMap::new();\n    let mut numerals_map_inv23\
    \ = HashMap::new();\n    let mut numerals_map_inv24 = HashMap::new();\n    let\
    \ mut numerals_map_inv25 = HashMap::new();\n    let mut numerals_map_inv26 = HashMap::new();\n\
    \    let mut numerals_map_inv27 = HashMap::new();\n    let mut numerals_map_inv28\
    \ = HashMap::new();\n    let mut numerals_map_inv29 = HashMap::new();\n    let\
    \ mut numerals_map_inv30 = HashMap::new();\n    let mut numerals_map_inv3\n}\n\
    \nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpiipi8v2m.rs:45:30\n   |\n\
    45 |     let mut numerals_map_inv3\n   |                              ^ help:\
    \ add `;` here\n46 | }\n   | - unexpected token\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:14:28\n   |\n14\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:15:32\n   |\n15\
    \ |     let mut numerals_map_inv = HashMap::new();\n   |                     \
    \           ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this\
    \ struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:16:33\n\
    \   |\n16 |     let mut numerals_map_inv2 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:17:33\n\
    \   |\n17 |     let mut numerals_map_inv3 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:18:33\n\
    \   |\n18 |     let mut numerals_map_inv4 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:19:33\n\
    \   |\n19 |     let mut numerals_map_inv5 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::H"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral_index = 0;\n    let mut numeral_string = \"\";\n    let mut numeral_string_index\
    \ = 0;\n    let mut numeral_string_index2 = 0;\n    let mut numeral_string_index3\
    \ = 0;\n    let mut numeral_string_index4 = 0;\n    let mut numeral_string_index5\
    \ = 0;\n    let mut numeral_string_index6 = 0;\n    let mut numeral_string_index7\
    \ = 0;\n    let mut numeral_string_index8 = 0;\n    let mut numeral_string_index9\
    \ = 0;\n    let mut numeral_string_index10 = 0;\n    let mut numeral_string_index11\
    \ = 0;\n    let mut numeral_string_index12 = 0;\n    let mut numeral_string_index13\
    \ = 0;\n    let mut numeral_string_index14 = 0;\n    let mut numeral_string_index15\
    \ = 0;\n    let mut numeral_string_index16 = 0;\n    let mut numeral_string_index17\
    \ = 0;\n    let mut numeral_string_index18 = 0;\n    let mut numeral_string_index19\
    \ = 0;\n    let mut numeral_string_index20 = 0;\n    let mut numeral_string_index21\
    \ = 0;\n    let mut numeral_string_index22 = 0;\n    let mut numeral_string_index23\
    \ = 0;\n    let mut numeral_string_index24 = 0;\n    let mut numeral_string_index25\
    \ = 0;\n    let mut numeral_string_index26 = 0;\n    let mut numeral_string_index27\
    \ = 0;\n    let mut numeral_string_index28 = 0;\n    let mut numeral_string_index29\
    \ = 0;\n    let mut numeral_string_index30 = 0;\n    let mut numeral_string_index31\
    \ = 0;\n    let mut numeral_string_index32 = 0;\n    let mut numeral_string_index33\
    \ = 0;\n    let mut numeral_string_index34 = 0;\n    let mut numeral_string_index35\
    \ = 0;\n    let mut numeral_string_index36 = 0;\n    let mut numeral_string_index37\
    \ = 0;\n    let mut numeral_string_index38 = 0;\n    let mut numeral_string_index39\
    \ = 0;\n    let mut numeral_string_index40 = 0;\n    let mut numeral_string_index41\
    \ = 0;\n    let mut numeral_string_index42 = 0;\n    let mut numeral_string_index43\
    \ = 0;\n    let mut numeral_string_index44 = 0;\n    let mut numeral_string_index45\
    \ = 0;\n    let mut numeral_string_index46 = 0;\n    let mut numeral_string_index47\
    \ = 0;\n    let mut numeral_string_index48 = 0;\n\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:69:17\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcxlb4nz8.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcxlb4nz8.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcxlb4nz8.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcxlb4nz8.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_len = String::new();\n    let mut numeral_digits_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len = String::new();\n\
    \    let mut numeral_digits_len_len_len_len_len = String::new();\n    let mut\
    \ numeral_digits_len_len_len_len_len_len = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4et54hwf.rs:36:80\n   |\n\
    36 |     let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    \   |                                                                        \
    \        ^ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4et54hwf.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:45:25\n   |\n45 |     assert_"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n\n    fn roman_to_int(roman:\
    \ &str) -> isize {\n        use std::str::FromStr;\n        use std::str::FromStrError;\n\
    \n        let mut roman = roman.chars().collect::<String>();\n        let mut\
    \ accum = 0;\n        let mut last = 0;\n        let mut last_digit = 0;\n   \
    \     let mut last_digit2 = 0;\n        let mut last_digit3 = 0;\n        let\
    \ mut last_digit4 = 0;\n        let mut last_digit5 = 0;\n        let mut last_digit6\
    \ = 0;\n        let mut last_digit7 = 0;\n        let mut last_digit8 = 0;\n \
    \       let mut last_digit9 = 0;\n        let mut last_digit10 = 0;\n        let\
    \ mut last_digit11 = 0;\n        let mut last_digit12 = 0;\n        let mut last_digit13\
    \ = 0;\n        let mut last_digit14 = 0;\n        let mut last_digit15 = 0;\n\
    \        let mut last_digit16 = 0;\n        let mut last_digit17 = 0;\n      \
    \  let mut last_digit18 = 0;\n        let mut last_digit19 = 0;\n        let mut\
    \ last_digit20 = 0;\n        let mut last_digit21 = 0;\n        let mut last_digit22\
    \ = 0;\n        let mut last_digit23 = 0;\n        let mut last_digit24 = 0;\n\
    \        let mut last_digit25 = 0;\n        let mut last_digit26 = 0;\n      \
    \  let mut last_digit27 = 0;\n        let mut last_digit28 = 0;\n        let mut\
    \ last_digit29 = 0;\n        let mut last_digit30 = 0;\n        let mut last_digit31\
    \ = 0;\n        let mut last_digit32 = 0;\n        let mut last_digit33 = 0;\n\
    \        let mut last_digit34 = 0;\n        let mut last_digit35 = 0;\n      \
    \  let mut last_digit36 = 0;\n        let mut last_digit37 = 0;\n        let mut\
    \ last_digit38 = 0;\n        let mut last_digit39 = 0;\n        let mut last_digit40\
    \ = 0;\n        let mut last_digit41 = 0;\n        let mut last_digit42 = 0;\n\
    \        let mut last_digit43 = 0;\n        let mut last_digit44 = 0;\n      \
    \  let mut last_digit45 = 0;\n        let mut last_digit46 = 0;\n        let mut\
    \ last_digit47 = 0;\n        let mut last_digit48 = 0;\n        let mut last_digit49\
    \ = 0;\n        let mut last_digit50 = 0;\n        let mut last_digit51 = 0;\n\
    \        let mut last_digit52 = 0;\n        let mut last_digit53 = 0;\n      \
    \  let mut last_digit54 = 0;\n        let \n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp6n1ulfky.rs:95:3\n\
    \   |\n11 | fn int_to_mini_roman(number: isize) -> String {\n   |            \
    \                                   - unclosed delimiter\n...\n15 |     fn roman_to_int(roman:\
    \ &str) -> isize {\n   |                                           - this delimiter\
    \ might not be properly closed...\n...\n77 | }\n   | - ...as it matches this but\
    \ it has different indentation\n...\n95 | }\n   |   ^\n\nerror: expected pattern,\
    \ found `}`\n  --> /tmp/tmp6n1ulfky.rs:77:1\n   |\n77 | }\n   | ^ expected pattern\n\
    \nerror[E0432]: unresolved import `std::str::FromStrError`\n  --> /tmp/tmp6n1ulfky.rs:17:13\n\
    \   |\n17 |         use std::str::FromStrError;\n   |             ^^^^^^^^^^^^^^^^^^^^^^\
    \ no `FromStrError` in `str`\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp6n1ulfky.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6n1ulfky.rs:81:25\n   |\n81 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6n1ulfky.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6n1ulfky.rs:82:25\n   |\n82 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6n1ulfky.rs:83:17\n  \
    \ |\n83 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6n1ulfky.rs:83:25\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6n1ulfky.rs:84:17\n   |\n84 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num = 0;\n    let mut prev_num\
    \ = 0;\n    let mut prev_roman = String::new();\n    let mut prev_prev_roman =\
    \ String::new();\n    let mut prev_prev_prev_roman = String::new();\n    let mut\
    \ prev_prev_prev_prev_roman = String::new();\n    let mut prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n    let\
    \ mut prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n    let\
    \ mut prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n  \
    \  let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_\n}\n\n\
    fn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpg0za3z6s.rs:38:53\n   |\n\
    38 |     let mut prev_prev_prev_prev_prev_prev_prev_prev_\n   |              \
    \                                       ^ help: add `;` here\n39 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg0za3z6s.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg0za3z6s.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg0za3z6s.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg0za3z6s.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg0za3z6s.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg0za3z6s.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg0za3z6s.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg0za3z6s.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg0za3z6s.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg0za3z6s.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut prev_digit = 0;\n    let mut\
    \ num_digits = 1;\n    let mut num_roman = 0;\n    let mut num_remainder = 0;\n\
    \    while number > 0 {\n        let digit = number % 10;\n        roman += digit.to_string();\n\
    \        number /= 10;\n        num_digits += 1;\n        num_roman += digit *\
    \ num_remainder;\n        num_remainder = number % 10;\n    }\n    if num_digits\
    \ == 0 {\n        roman.push_str(\"i\");\n    } else {\n        roman.push_str(&roman[..num_digits]);\n\
    \    }\n    roman.push_str(&roman[num_digits, 1]);\n    roman\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `.`, `::`, `?`, `]`, `{`, or an operator, found\
    \ `,`\n  --> /tmp/tmpcetsju_f.rs:30:37\n   |\n30 |     roman.push_str(&roman[num_digits,\
    \ 1]);\n   |                                     ^ expected one of 7 possible\
    \ tokens\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcetsju_f.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcetsju_f.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcetsju_f.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcetsju_f.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcetsju_f.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcetsju_f.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcetsju_f.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcetsju_f.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcetsju_f.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcetsju_f.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                     "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map_inv = HashMap::new();\n\
    \    let mut numerals_map_inv2 = HashMap::new();\n    let mut numerals_map_inv3\
    \ = HashMap::new();\n    let mut numerals_map_inv4 = HashMap::new();\n    let\
    \ mut numerals_map_inv5 = HashMap::new();\n    let mut numerals_map_inv6 = HashMap::new();\n\
    \    let mut numerals_map_inv7 = HashMap::new();\n    let mut numerals_map_inv8\
    \ = HashMap::new();\n    let mut numerals_map_inv9 = HashMap::new();\n    let\
    \ mut numerals_map_inv10 = HashMap::new();\n    let mut numerals_map_inv11 = HashMap::new();\n\
    \    let mut numerals_map_inv12 = HashMap::new();\n    let mut numerals_map_inv13\
    \ = HashMap::new();\n    let mut numerals_map_inv14 = HashMap::new();\n    let\
    \ mut numerals_map_inv15 = HashMap::new();\n    let mut numerals_map_inv16 = HashMap::new();\n\
    \    let mut numerals_map_inv17 = HashMap::new();\n    let mut numerals_map_inv18\
    \ = HashMap::new();\n    let mut numerals_map_inv19 = HashMap::new();\n    let\
    \ mut numerals_map_inv20 = HashMap::new();\n    let mut numerals_map_inv21 = HashMap::new();\n\
    \    let mut numerals_map_inv22 = HashMap::new();\n    let mut numerals_map_inv23\
    \ = HashMap::new();\n    let mut numerals_map_inv24 = HashMap::new();\n    let\
    \ mut numerals_map_inv25 = HashMap::new();\n    let mut numerals_map_inv26 = HashMap::new();\n\
    \    let mut numerals_map_inv27 = HashMap::new();\n    let mut numerals_map_inv28\
    \ = HashMap::new();\n    let mut numerals_map_inv29 = HashMap::new();\n    let\
    \ mut numerals_map_inv30 = HashMap::new();\n    let mut numerals_map_inv3\n}\n\
    \nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpiipi8v2m.rs:45:30\n   |\n\
    45 |     let mut numerals_map_inv3\n   |                              ^ help:\
    \ add `;` here\n46 | }\n   | - unexpected token\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:14:28\n   |\n14\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:15:32\n   |\n15\
    \ |     let mut numerals_map_inv = HashMap::new();\n   |                     \
    \           ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this\
    \ struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:16:33\n\
    \   |\n16 |     let mut numerals_map_inv2 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:17:33\n\
    \   |\n17 |     let mut numerals_map_inv3 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:18:33\n\
    \   |\n18 |     let mut numerals_map_inv4 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:19:33\n\
    \   |\n19 |     let mut numerals_map_inv5 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::H"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"e\", \"f\", \"\
    ff\", \"ffc\", \"fcc\", \"fccc\", \"g\", \"h\", \"hh\", \"hhh\", \"i\", \"ii\"\
    , \"iii\", \"j\", \"jj\", \"jjj\", \"k\", \"l\", \"ll\", \"lll\", \"m\", \"n\"\
    , \"nn\", \"nnn\", \"o\", \"p\", \"pp\", \"ppp\", \"q\", \"r\", \"rr\", \"rr\"\
    \n    ];\n    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter\
    \ = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n    let mut\
    \ numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp069l4zh8.rs:45:42\n   |\n\
    45 |     let mut numerals_iter = numerals.iter\n   |                         \
    \                 ^ help: add `;` here\n46 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp069l4zh8.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp069l4zh8.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp069l4zh8.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp069l4zh8.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp069l4zh8.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp069l4zh8.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp069l4zh8.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp069l4zh8.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp069l4zh8.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp069l4zh8.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this s"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num = 0;\n    let mut i = 0;\n\
    \    while i < number {\n        let mut j = i;\n        while j < number {\n\
    \            if number % j == 0 {\n                roman += &format!(\"{}\", j);\n\
    \                number /= j;\n                break;\n            }\n       \
    \     j +=1;\n        }\n        i += 1;\n    }\n    roman\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0_3lxdvh.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0_3lxdvh.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0_3lxdvh.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0_3lxdvh.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0_3lxdvh.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0_3lxdvh.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0_3lxdvh.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0_3lxdvh.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0_3lxdvh.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0_3lxdvh.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0_3lxdvh.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_max = String::new();\n    let mut numeral_digits_len_max_len\
    \ = String::new();\n    let mut numeral_digits_len_max_digits = String::new();\n\
    \    let mut numeral_digits_len_max_digits_len = String::new();\n    let mut numeral_digits_len_max_digits_digits\
    \ = String::new();\n    let mut numeral_digits_len_max_digits_digits_len = String::new();\n\
    \    let mut numeral_digits_len_max_digits_digits_digits = String::new();\n  \
    \  let mut numeral_digits_len_max_digits_digits_digits_len = String::new();\n\
    \    let mut numeral_digits_len_max_digits_digits_digits_digits = String::new();\n\
    \    let mut numeral_digits_len_max_digits_digits_digits_digits_len = String::new();\n\
    \    let mut numeral_digits_len_max_digits_digits_digits_digits_digits = String::new();\n\
    \    let mut numeral_digits_len_max_digits_digits_digits_digits_digits_len = String::new();\n\
    \    let mut numeral_digits_len_max_digits_digits_digits_digits_digits_digits_len\
    \ = String::new();\n    let mut numeral_digits_len_max_digits_digits_digits_digits_digits_digits_digits_len\
    \ = String::new();\n    let mut numeral_digits_len_max_digits_digits_digits_digits_digits_digits_digits_digits_digits_len\
    \ = String::new();\n    let mut numeral_digits_len_max_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp21044fow.rs:31:505\n   |\n\
    31 |     let mut numeral_digits_len_max_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_\n\
    \   |                                                                        \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                     ^ help: add `;` here\n32\
    \ | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp21044fow.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp21044fow.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp21044fow.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp21044fow.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp21044fow.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut remainder = number;\n    let mut i = 1;\n    while remainder > 0 {\n\
    \        remainder -= 10;\n        roman.push((remainder % 10).to_string());\n\
    \        numeral.push((i * 10).to_string());\n        i += 1;\n    }\n    roman.push(numeral.to_string());\n\
    \    roman.to_lowercase()\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpq2_mn4un.rs:28:17\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq2_mn4un.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpq2_mn4un.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpq2_mn4un.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpq2_mn4un.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpq2_mn4un.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpq2_mn4un.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpq2_mn4un.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpq2_mn4un.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq2_mn4un.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpq2_mn4un.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral_index = 0;\n    let mut numeral_string = \"\";\n    let mut numeral_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_length_index = 0;\n    let mut numeral_string_length_index2\
    \ = 0;\n    let mut numeral_string_length_index3 = 0;\n    let mut numeral_string_length_index4\
    \ = 0;\n    let mut numeral_string_length_index5 = 0;\n    let mut numeral_string_length_index6\
    \ = 0;\n    let mut numeral_string_length_index7 = 0;\n    let mut numeral_string_length_index8\
    \ = 0;\n    let mut numeral_string_length_index9 = 0;\n    let mut numeral_string_length_index10\
    \ = 0;\n    let mut numeral_string_length_index11 = 0;\n    let mut numeral_string_length_index12\
    \ = 0;\n    let mut numeral_string_length_index13 = 0;\n    let mut numeral_string_length_index14\
    \ = 0;\n    let mut numeral_string_length_index15 = 0;\n    let mut numeral_string_length_index16\
    \ = 0;\n    let mut numeral_string_length_index17 = 0;\n    let mut numeral_string_length_index18\
    \ = 0;\n    let mut numeral_string_length_index19 = 0;\n    let mut numeral_string_length_index20\
    \ = 0;\n    let mut numeral_string_length_index21 = 0;\n    let mut numeral_string_length_index22\
    \ = 0;\n    let mut numeral_string_length_index23 = 0;\n    let mut numeral_string_length_index24\
    \ = 0;\n    let mut numeral_string_length_index25 = 0;\n    let mut numeral_string_length_index26\
    \ = 0;\n    let mut numeral_string_length_index27 = 0;\n    let mut numeral_string_length_index28\
    \ = 0;\n    let mut numeral_string_length_index29 = 0;\n    let mut numeral_string_length_index30\
    \ = 0;\n    let mut numeral_string_length_index31 = 0;\n    let mut numeral_string_length_index32\
    \ = 0;\n    let mut numeral_string_length_index33 = 0;\n    let mut numeral_string_length_index34\
    \ = 0;\n    let mut numeral_string_length_index35 = 0;\n    let mut numeral_string_length_index36\
    \ = 0;\n    let mut numeral_string_length_index37 = 0;\n    let mut numeral_string_length_index38\
    \ = 0;\n    let mut numeral_string_length_index39 = 0;\n    let mut numeral_string_length_index40\
    \ = 0;\n    let mut numeral_string_length_index41 = 0;\n    let mut \n}\n\nfn\
    \ main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpbktniqbp.rs:61:1\n\
    \   |\n61 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpbktniqbp.rs:65:17\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpbktniqbp.rs:65:25\n \
    \  |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbktniqbp.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbktniqbp.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbktniqbp.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbktniqbp.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbktniqbp.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbktniqbp.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbktniqbp.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbktniqbp.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbktniqbp.rs:70:17\n   |\n70 |     "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n\n    let mut roman = String::new();\n    let mut\
    \ numeral = String::new();\n    let mut numeral_digits = String::new();\n    let\
    \ mut numeral_digits_len = String::new();\n\n    let mut numeral_digits_len =\
    \ String::new();\n    let mut numeral_digits_len = String::new();\n\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \n    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n\n    let mut numeral_digits_len = String::new();\n    let\
    \ mut numeral_digits_len = String::new();\n\n    let mut numeral_digits_len =\
    \ String::new();\n    let mut numeral_digits_len = String::new();\n\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \n    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n\n    let mut numeral_digits_len = String::new();\n    let\
    \ mut numeral_digits_len = String::new();\n\n    let mut numeral_digits_len =\
    \ String::new();\n    let mut numeral_digits_len = String::new();\n\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \n    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n\n    let mut numeral_digits_len = String::new();\n    let\
    \ mut numeral_digits_len = String::new();\n\n    let mut numeral_digits_len =\
    \ String::new();\n    let mut numeral_digits_len = String::new();\n\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \n    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n\n    let mut numeral_digits_len = String::new();\n    let\
    \ mut numeral_digits_len = String::new();\n\n    let mut numeral_digits_len =\
    \ String::new();\n    let mut numeral_digits_len = String::new();\n\n    let mut\
    \ numeral_digits_len = String::new();\n    let mu\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpvxr4wlvo.rs:71:11\n   |\n\
    71 |     let mu\n   |           ^ help: add `;` here\n72 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvxr4wlvo.rs:76:17\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvxr4wlvo.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvxr4wlvo.rs:77:17\n   |\n77 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvxr4wlvo.rs:77:25\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvxr4wlvo.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvxr4wlvo.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvxr4wlvo.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvxr4wlvo.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvxr4wlvo.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvxr4wlvo.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map_inv = HashMap::new();\n\
    \    let mut numerals_map_inv2 = HashMap::new();\n    let mut numerals_map_inv3\
    \ = HashMap::new();\n    let mut numerals_map_inv4 = HashMap::new();\n    let\
    \ mut numerals_map_inv5 = HashMap::new();\n    let mut numerals_map_inv6 = HashMap::new();\n\
    \    let mut numerals_map_inv7 = HashMap::new();\n    let mut numerals_map_inv8\
    \ = HashMap::new();\n    let mut numerals_map_inv8 = HashMap::new();\n    let\
    \ mut numerals_map_inv9 = HashMap::new();\n    let mut numerals_map_inv10 = HashMap::new();\n\
    \    let mut numerals_map_inv11 = HashMap::new();\n    let mut numerals_map_inv12\
    \ = HashMap::new();\n    let mut numerals_map_inv13 = HashMap::new();\n    let\
    \ mut numerals_map_inv14 = HashMap::new();\n    let mut numerals_map_inv15 = HashMap::new();\n\
    \    let mut numerals_map_inv16 = HashMap::new();\n    let mut numerals_map_inv17\
    \ = HashMap::new();\n    let mut numerals_map_inv18 = HashMap::new();\n    let\
    \ mut numerals_map_inv19 = HashMap::new();\n    let mut numerals_map_inv20 = HashMap::new();\n\
    \    let mut numerals_map_inv21 = HashMap::new();\n    let mut numerals_map_inv22\
    \ = HashMap::new();\n    let mut numerals_map_inv23 = HashMap::new();\n    let\
    \ mut numerals_map_inv24 = HashMap::new();\n    let mut numerals_map_inv25 = HashMap::new();\n\
    \    let mut numerals_map_inv26 = HashMap::new();\n    let mut numerals_map_inv27\
    \ = HashMap::new();\n    let mut numerals_map_inv28 = HashMap::new();\n    let\
    \ mut numerals_map_inv29 = HashMap::new();\n    let mut numerals_map_inv30 = \n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmptgzk4x2q.rs:46:1\n\
    \   |\n46 | }\n   | ^ expected expression\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmptgzk4x2q.rs:14:28\n   |\n14\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmptgzk4x2q.rs:15:32\n   |\n15\
    \ |     let mut numerals_map_inv = HashMap::new();\n   |                     \
    \           ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this\
    \ struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmptgzk4x2q.rs:16:33\n\
    \   |\n16 |     let mut numerals_map_inv2 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmptgzk4x2q.rs:17:33\n\
    \   |\n17 |     let mut numerals_map_inv3 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmptgzk4x2q.rs:18:33\n\
    \   |\n18 |     let mut numerals_map_inv4 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmptgzk4x2q.rs:19:33\n\
    \   |\n19 |     let mut numerals_map_inv5 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"e\", \"f\", \"\
    ff\", \"ffc\", \"fcc\", \"fccc\", \"g\", \"h\", \"hh\", \"hhh\", \"i\", \"ii\"\
    , \"iii\", \"j\", \"jj\", \"jjj\", \"k\", \"l\", \"ll\", \"lll\", \"m\", \"n\"\
    , \"nn\", \"nnn\", \"o\", \"p\", \"pp\", \"ppp\", \"q\", \"r\", \"rr\", \"rr\"\
    \n    ];\n    let mut numeral_index = 0;\n    let mut numeral_string = \"\";\n\
    \    let mut numeral_length = numerals.len();\n    let mut numeral_value = number;\n\
    \    let mut numeral_value_length = numerals.len();\n    let mut numeral_value_length2\
    \ = numerals.len();\n    let mut numeral_value_length3 = numerals.len();\n   \
    \ let mut numeral_value_length4 = numerals.len();\n    let mut numeral_value_length5\
    \ = numerals.len();\n    let mut numeral_value_length6 = numerals.len();\n   \
    \ let mut numeral_value_length7 = numerals.len();\n    let mut numeral_value_length8\
    \ = numerals.len();\n    let mut numeral_value_length9 = numerals.len();\n   \
    \ let mut numeral_value_length10 = numerals.len();\n    let mut numeral_value_length11\
    \ = numerals.len();\n    let mut numeral_value_length12 = numerals.len();\n  \
    \  let mut numeral_value_length13 = numerals.len();\n    let mut numeral_value_length14\
    \ = numerals.len();\n    let mut numeral_value_length15 = numerals.len();\n  \
    \  let mut numeral_value_length16 = numerals.len();\n    let mut numeral_value_length17\
    \ = numerals.len();\n    let mut numeral_value_length18 = numerals.len();\n  \
    \  let mut numeral_value_length19 = numerals.len();\n    let mut numeral_value_length20\
    \ = numerals.len();\n    let mut numeral_value_length21 = numerals.len();\n  \
    \  let mut numeral_value_length22 = numerals.len();\n    let mut numeral_value_length23\
    \ = numerals.len();\n    let mut numeral_value_length24 = numerals.len();\n  \
    \  let mut numeral_value_length25 = numerals.len();\n    let mut \n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpivqzdrz2.rs:45:1\n\
    \   |\n45 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpivqzdrz2.rs:49:17\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpivqzdrz2.rs:49:25\n \
    \  |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpivqzdrz2.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpivqzdrz2.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpivqzdrz2.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpivqzdrz2.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpivqzdrz2.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpivqzdrz2.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpivqzdrz2.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpivqzdrz2.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpivqzdrz2.rs:54:17\n   |\n54 |     "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xix\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        \n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpsqoxckx3.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_len = String::new();\n    let mut numeral_digits_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len = String::new();\n\
    \    let mut numeral_digits_len_len_len_len_len = String::new();\n    let mut\
    \ numeral_digits_len_len_len_len_len_len = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4et54hwf.rs:36:80\n   |\n\
    36 |     let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    \   |                                                                        \
    \        ^ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4et54hwf.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:45:25\n   |\n45 |     assert_"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        7\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppb6j91m9.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmppb6j91m9.rs:83:1\n   |\n82 |         7\n  \
    \ |          - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n83 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppb6j91m9.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        7\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppb6j91m9.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmppb6j91m9.rs:83:1\n   |\n82 |         7\n  \
    \ |          - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n83 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppb6j91m9.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n\n\
    \    if number < 1 {\n        roman.push(\"i\");\n        numeral.push(\"1\");\n\
    \    } else if number < 5 {\n        roman.push(\"v\");\n        numeral.push(\"\
    5\");\n    } else if number < 10 {\n        roman.push(\"d\");\n        numeral.push(\"\
    10\");\n    } else if number < 100 {\n        roman.push(\"c\");\n        numeral.push(\"\
    100\");\n    } else if number < 1000 {\n        roman.push(\"m\");\n        numeral.push(\"\
    1000\");\n    } else {\n        roman.push(\"i\");\n        numeral.push(\"1000\"\
    );\n    }\n\n    for i in 1..number.abs() {\n        let mut numeral_digit = String::new();\n\
    \        let mut numeral_digit_base = String::new();\n\n        if number >= i\
    \ {\n            numeral_digit = numeral.clone();\n            numeral_digit_base\
    \ = roman.clone();\n        }\n\n        roman.push(numeral_digit_base);\n   \
    \     numeral.push(numeral_digit);\n    }\n\n    roman\n}\n\nfn main() {\n   \
    \ let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxmo281zv.rs:53:17\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxmo281zv.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxmo281zv.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxmo281zv.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxmo281zv.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxmo281zv.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxmo281zv.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxmo281zv.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxmo281zv.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxmo281zv.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxmo281zv.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_len = String::new();\n    let mut numeral_digits_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len = String::new();\n\
    \    let mut numeral_digits_len_len_len_len_len = String::new();\n    let mut\
    \ numeral_digits_len_len_len_len_len_len = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4et54hwf.rs:36:80\n   |\n\
    36 |     let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    \   |                                                                        \
    \        ^ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4et54hwf.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:45:25\n   |\n45 |     assert_"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"x\",\n        3 => \"\
    l\",\n        4 => \"l\",\n        5 => \"c\",\n        6 => \"c\",\n        7\
    \ => \"d\",\n        8 => \"d\",\n        9 => \"m\",\n        10 => \"m\",\n\
    \        11 => \"l\",\n        12 => \"l\",\n        13 => \"x\",\n        14\
    \ => \"x\",\n        15 => \"x\",\n        16 => \"x\",\n        17 => \"x\",\n\
    \        18 => \"c\",\n        19 => \"c\",\n        20 => \"c\",\n        21\
    \ => \"l\",\n        22 => \"l\",\n        23 => \"l\",\n        24 => \"l\",\n\
    \        25 => \"l\",\n        26 => \"l\",\n        27 => \"l\",\n        28\
    \ => \"l\",\n        29 => \"l\",\n        30 => \"l\",\n        31 => \"l\",\n\
    \        32 => \"l\",\n        33 => \"l\",\n        34 => \"l\",\n        35\
    \ => \"l\",\n        36 => \"l\",\n        37 => \"l\",\n        38 => \"l\",\n\
    \        39 => \"l\",\n        40 => \"l\",\n        41 => \"l\",\n        42\
    \ => \"l\",\n        43 => \"l\",\n        44 => \"l\",\n        45 => \"l\",\n\
    \        46 => \"l\",\n        47 => \"l\",\n        48 => \"l\",\n        49\
    \ => \"l\",\n        50 => \"l\",\n        51 => \"l\",\n        52 => \"l\",\n\
    \        53 => \"l\",\n        54 => \"l\",\n        55 => \"l\",\n        56\
    \ => \"l\",\n        57 => \"l\",\n        58 => \"l\",\n        59 => \"l\",\n\
    \        60 => \"l\",\n        61 => \"l\",\n        62 => \"l\",\n        63\
    \ => \"l\",\n        64 => \"l\",\n        65 => \"l\",\n        66 => \"l\",\n\
    \        67 => \"l\",\n        68 => \"l\",\n        69 => \"l\",\n        70\
    \ => \"l\",\n        71 => \"l\",\n        72 => \"l\",\n        73 => \"l\",\n\
    \        74 => \"l\",\n        75 => \"l\",\n        76 => \"l\",\n        77\
    \ => \"l\",\n        78 => \"l\",\n        79 => \"l\",\n        80 => \"l\",\n\
    \        81 \n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpbx7uegzh.rs:112:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n94  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n112 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmpbx7uegzh.rs:94:1\n   |\n93 |         81 \n\
    \   |           - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n94 |\
    \ }\n   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpbx7uegzh.rs:98:17\n   |\n98 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbx7uegzh.rs:98:25\n   |\n98 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbx7uegzh.rs:99:17\n   |\n99 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbx7uegzh.rs:99:25\n   |\n99 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpbx7uegzh.rs:100:17\n\
    \    |\n100 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpbx7uegzh.rs:100:25\n    |\n100 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpbx7uegzh.rs:101:17\n\
    \    |\n101 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpbx7uegzh.rs:101:25\n    |\n101 |     assert_"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"l\", \"x\", \"i\"];\n    let mut numeral_index = 0;\n    let mut numeral_length\
    \ = 0;\n    let mut numeral_value = number;\n    while numeral_value >= 1000 {\n\
    \        numeral_value -= 1000;\n        numeral_index += 1;\n    }\n    numeral_length\
    \ += 1;\n    while numeral_length > 0 {\n        roman.push_str(numerals[numeral_index]);\n\
    \        numeral_length -= 1;\n        numeral_index += 1;\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp59s11d68.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp59s11d68.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp59s11d68.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp59s11d68.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp59s11d68.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp59s11d68.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp59s11d68.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp59s11d68.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp59s11d68.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp59s11d68.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp59s11d68.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n                     \
    \       \"i\", \"ic\", \"iv\", \"v\", \"vi\", \"vi\", \"vi\", \"vi\"];\n    let\
    \ mut numeral_index = 0;\n    let mut numeral_value = number;\n    while numeral_value\
    \ >= 1000 {\n        numeral_index += 1;\n        numeral_value -= 1000;\n   \
    \ }\n    roman.push_str(numerals[numeral_index]);\n    while numeral_value >=\
    \ 100 {\n        numeral_index += 1;\n        numeral_value -= 100;\n        roman.push_str(numerals[numeral_index]);\n\
    \    }\n    while numeral_value >= 10 {\n        numeral_index += 1;\n       \
    \ numeral_value -= 10;\n        roman.push_str(numerals[numeral_index]);\n   \
    \ }\n    roman.push_str(numerals[numeral_index]);\n    roman\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgjn5tq9z.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgjn5tq9z.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgjn5tq9z.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgjn5tq9z.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgjn5tq9z.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgjn5tq9z.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgjn5tq9z.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgjn5tq9z.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgjn5tq9z.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgjn5tq9z.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgjn5tq9z.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xix\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        \n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpsqoxckx3.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len2 = String::new();\n    let mut numeral_digits_len3\
    \ = String::new();\n    let mut numeral_digits_len4 = String::new();\n    let\
    \ mut numeral_digits_len5 = String::new();\n    let mut numeral_digits_len6 =\
    \ String::new();\n    let mut numeral_digits_len7 = String::new();\n    let mut\
    \ numeral_digits_len8 = String::new();\n    let mut numeral_digits_len9 = String::new();\n\
    \    let mut numeral_digits_len10 = String::new();\n    let mut numeral_digits_len11\
    \ = String::new();\n    let mut numeral_digits_len12 = String::new();\n    let\
    \ mut numeral_digits_len13 = String::new();\n    let mut numeral_digits_len14\
    \ = String::new();\n    let mut numeral_digits_len15 = String::new();\n    let\
    \ mut numeral_digits_len16 = String::new();\n    let mut numeral_digits_len17\
    \ = String::new();\n    let mut numeral_digits_len18 = String::new();\n    let\
    \ mut numeral_digits_len19 = String::new();\n    let mut numeral_digits_len20\
    \ = String::new();\n    let mut numeral_digits_len21 = String::new();\n    let\
    \ mut numeral_digits_len22 = String::new();\n    let mut numeral_digits_len23\
    \ = String::new();\n    let mut numeral_digits_len24 = String::new();\n    let\
    \ mut numeral_digits_len25 = String::new();\n    let mut numeral_digits_len26\
    \ = String::new();\n    let mut numeral_digits_len27 = String::new();\n    let\
    \ mut numeral_digits_len28 = String::new();\n    let mut numeral_digits_len29\
    \ = String::new();\n    let mut numeral_digits_len30 = String::new();\n    let\
    \ mut numeral_digits_len31 = String::new();\n    let mut numeral_digits_len32\
    \ = String::new();\n    let mut numeral_digits_len33 = String::\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpknmh599h.rs:48:1\n\
    \   |\n48 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpknmh599h.rs:52:17\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpknmh599h.rs:52:25\n \
    \  |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpknmh599h.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpknmh599h.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpknmh599h.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpknmh599h.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpknmh599h.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpknmh599h.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpknmh599h.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpknmh599h.rs:56:25\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpknmh599h.rs:57:17\n   |\n57 |     "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map_inv = HashMap::new();\n\
    \    let mut numerals_map_inv2 = HashMap::new();\n    let mut numerals_map_inv3\
    \ = HashMap::new();\n    let mut numerals_map_inv4 = HashMap::new();\n    let\
    \ mut numerals_map_inv5 = HashMap::new();\n    let mut numerals_map_inv6 = HashMap::new();\n\
    \    let mut numerals_map_inv7 = HashMap::new();\n    let mut numerals_map_inv8\
    \ = HashMap::new();\n    let mut numerals_map_inv9 = HashMap::new();\n    let\
    \ mut numerals_map_inv10 = HashMap::new();\n    let mut numerals_map_inv11 = HashMap::new();\n\
    \    let mut numerals_map_inv12 = HashMap::new();\n    let mut numerals_map_inv13\
    \ = HashMap::new();\n    let mut numerals_map_inv14 = HashMap::new();\n    let\
    \ mut numerals_map_inv15 = HashMap::new();\n    let mut numerals_map_inv16 = HashMap::new();\n\
    \    let mut numerals_map_inv17 = HashMap::new();\n    let mut numerals_map_inv18\
    \ = HashMap::new();\n    let mut numerals_map_inv19 = HashMap::new();\n    let\
    \ mut numerals_map_inv20 = HashMap::new();\n    let mut numerals_map_inv21 = HashMap::new();\n\
    \    let mut numerals_map_inv22 = HashMap::new();\n    let mut numerals_map_inv23\
    \ = HashMap::new();\n    let mut numerals_map_inv24 = HashMap::new();\n    let\
    \ mut numerals_map_inv25 = HashMap::new();\n    let mut numerals_map_inv26 = HashMap::new();\n\
    \    let mut numerals_map_inv27 = HashMap::new();\n    let mut numerals_map_inv28\
    \ = HashMap::new();\n    let mut numerals_map_inv29 = HashMap::new();\n    let\
    \ mut numerals_map_inv30 = HashMap::new();\n    let mut numerals_map_inv3\n}\n\
    \nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpiipi8v2m.rs:45:30\n   |\n\
    45 |     let mut numerals_map_inv3\n   |                              ^ help:\
    \ add `;` here\n46 | }\n   | - unexpected token\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:14:28\n   |\n14\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:15:32\n   |\n15\
    \ |     let mut numerals_map_inv = HashMap::new();\n   |                     \
    \           ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this\
    \ struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:16:33\n\
    \   |\n16 |     let mut numerals_map_inv2 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:17:33\n\
    \   |\n17 |     let mut numerals_map_inv3 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:18:33\n\
    \   |\n18 |     let mut numerals_map_inv4 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:19:33\n\
    \   |\n19 |     let mut numerals_map_inv5 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::H"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::fmt::{self, Display};\n\n    let mut\
    \ roman = String::new();\n    let mut num: isize = 0;\n\n    while num < number\
    \ {\n        let mut digit = num % 10;\n        roman += if digit < 5 { format!(\"\
    {}i\", digit) } else { format!(\"{}v\", digit) };\n        num /= 10;\n    }\n\
    \n    roman\n        .to_lowercase()\n        .trim_end()\n        .to_string()\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplduxx_nk.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplduxx_nk.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplduxx_nk.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplduxx_nk.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplduxx_nk.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplduxx_nk.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplduxx_nk.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplduxx_nk.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplduxx_nk.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplduxx_nk.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplduxx_nk.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        7\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppb6j91m9.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmppb6j91m9.rs:83:1\n   |\n82 |         7\n  \
    \ |          - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n83 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppb6j91m9.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"c\", \"l\", \"l\", \"x\", \"x\"];\n    let mut numeral_index = 0;\n    let\
    \ mut numeral_value = 0;\n    let mut numeral_value_index = 0;\n    let mut numeral_value_length\
    \ = 0;\n    let mut numeral_value_length_index = 0;\n    let mut numeral_value_length_value\
    \ = 0;\n    let mut numeral_value_length_value_index = 0;\n    let mut numeral_value_length_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_index = 0;\n    let mut numeral_value_length_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numer\n}\n\
    \nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnozj2g7v.rs:53:18\n   |\n\
    53 |     let mut numer\n   |                  ^ help: add `;` here\n54 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnozj2g7v.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnozj2g7v.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnozj2g7v.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnozj2g7v.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnozj2g7v.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnozj2g7v.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnozj2g7v.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnozj2g7v.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnozj2g7v.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnozj2g7v.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\",\
    \ \"xl\", \"l\",\n                            \"i\", \"ic\", \"iv\", \"v\", \"\
    vi\", \"vi\", \"vi\"];\n    let mut numeral_length = vec![\"\", \"c\", \"d\",\
    \ \"i\", \"x\", \"l\", \"xl\", \"l\",\n                                 \"i\"\
    , \"c\", \"x\", \"l\", \"i\", \"c\", \"x\"];\n    let mut numeral_length = vec![\"\
    \", \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\", \"l\",\n                      \
    \           \"i\", \"c\", \"x\", \"l\", \"i\", \"c\", \"x\"];\n    let mut numeral_length\
    \ = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\", \"l\",\n           \
    \                      \"i\", \"c\", \"x\", \"l\", \"i\", \"c\", \"x\"];\n   \
    \ let mut numeral_length = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\"\
    , \"l\",\n                                 \"i\", \"c\", \"x\", \"l\", \"i\",\
    \ \"c\", \"x\"];\n    let mut numeral_length = vec![\"\", \"c\", \"d\", \"i\"\
    , \"x\", \"l\", \"xl\", \"l\",\n                                 \"i\", \"c\"\
    , \"x\", \"l\", \"i\", \"c\", \"x\"];\n    let mut numeral_length = vec![\"\"\
    , \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\", \"l\",\n                        \
    \         \"i\", \"c\", \"x\", \"l\", \"i\", \"c\", \"x\"];\n    let mut numeral_length\
    \ = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\", \"l\",\n           \
    \                      \"i\", \"c\", \"x\", \"l\", \"i\", \"c\", \"x\"];\n   \
    \ let mut numeral_length = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\"\
    , \"l\",\n                                 \"i\", \"c\", \"x\", \"l\", \"i\",\
    \ \"c\", \"x\"];\n    let mut numeral_length = vec![\"\", \"c\", \"d\", \"i\"\
    , \"x\", \"l\", \"xl\", \"l\",\n                                 \"i\", \"c\"\
    , \"x\", \"l\", \"i\", \"c\", \"x\"];\n    let mut numeral_length = vec![\"\"\
    , \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\", \"l\",\n                        \
    \         \"i\", \"c\", \"x\", \"l\", \"i\", \"c\", \"x\"];\n    let mut numeral_length\
    \ = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\", \"l\",\n           \
    \                      \"i\", \"c\", \"x\", \"l\", \"i\", \"c\", \"x\"];\n   \
    \ let mut numeral_length = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\"\
    , \"l\",\n                                 \"i\", \"c\", \"x\", \"l\", \"i\",\
    \ \"c\", \"x\"];\n    let mut numeral_length = vec![\"\", \"c\", \"d\", \"i\"\
    , \"x\", \"l\", \"xl\", \"l\",\n                                 \"i\", \"c\"\
    , \"x\", \"l\", \"i\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n  --> /tmp/tmp85pxblpf.rs:41:54\n\
    \   |\n41 |                                    \"i\", \"c\", \"x\", \"l\", \"\
    i\n   |  ______________________________________________________^\n42 | | }\n43\
    \ | |\n44 | | fn main() {\n...  |\n59 | |     assert_eq!({left}, {right});\n60\
    \ | | }\n   | |__^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0765`.\n"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    while num\
    \ < number {\n        roman.push((num % 10).to_string());\n        num /= 10;\n\
    \    }\n    roman.push((num % 10).to_string());\n    roman\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn_ulhkz0.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn_ulhkz0.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn_ulhkz0.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:27:25\n   |\n27 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:28:17\n  \
    \ |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn_ulhkz0.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\",\
    \ \"xl\", \"l\",\n                           \"x\", \"c\", \"dc\", \"ic\", \"\
    ix\", \"x\", \"l\", \"xl\", \"l\"];\n    let mut numeral_length = numerals.len();\n\
    \    let mut numeral_lengths = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\"\
    , \"l\", \"xl\", \"l\",\n                                 \"x\", \"c\", \"dc\"\
    , \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\"];\n    let mut numeral_lengths_length\
    \ = numeral_lengths.len();\n    let mut numeral_lengths_lengths = vec![\"\", \"\
    c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n                  \
    \                       \"x\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"\
    xl\", \"l\"];\n    let mut numeral_lengths_lengths_length = numeral_lengths_lengths.len();\n\
    \    let mut numeral_lengths_lengths_lengths = vec![\"\", \"c\", \"dc\", \"ic\"\
    , \"ix\", \"x\", \"l\", \"xl\", \"l\",\n                                     \
    \           \"x\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\"\
    ];\n    let mut numeral_lengths_lengths_lengths_length = numeral_lengths_lengths_lengths.len();\n\
    \    let mut numeral_lengths_lengths_lengths_lengths = vec![\"\", \"c\", \"dc\"\
    , \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n                             \
    \                           \"x\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\"\
    , \"xl\", \"l\"];\n    let mut numeral_lengths_lengths_lengths_lengths_length\
    \ = numeral_lengths_lengths_lengths_lengths.len();\n    let mut numeral_lengths_lengths_lengths_lengths_lengths\
    \ = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n \
    \                                                                     \"x\", \"\
    c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\"];\n    let mut numeral_lengths_lengths_lengths_lengths_lengths_length\
    \ = numeral_lengths_lengths_lengths_lengths_lengths.len();\n    let mut numeral_lengths_lengths_lengths_lengths_lengths_lengths\
    \ = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n \
    \                                                                           \"\
    x\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\"];\n    let mut\
    \ numeral_lengths_lengths_lengths_lengths_lengths_lengths_length = numeral_lengths_lengths_lengths_lengths_length\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpygkyxh5g.rs:34:124\n   |\n\
    34 |     let mut numeral_lengths_lengths_lengths_lengths_lengths_lengths_length\
    \ = numeral_lengths_lengths_lengths_lengths_length\n   |                     \
    \                                                                            \
    \                           ^ help: add `;` here\n35 | }\n   | - unexpected token\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpygkyxh5g.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpygkyxh5g.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpygkyxh5g.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpygkyxh5g.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpygkyxh5g.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpygkyxh5g.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpygkyxh5g.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpygkyxh5g.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpygkyxh5g.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cann"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \n    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp1ivb090u.rs:52:45\n   |\n\
    52 |     let mut numeral_digits_len = String::new\n   |                      \
    \                       ^ help: add `;` here\n53 | }\n   | - unexpected token\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1ivb090u.rs:57:17\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1ivb090u.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1ivb090u.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1ivb090u.rs:58:25\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1ivb090u.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1ivb090u.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1ivb090u.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1ivb090u.rs:60:25\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1ivb090u.rs:61:17\n  \
    \ |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1ivb090u.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xix\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        \n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpsqoxckx3.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map_inv = HashMap::new();\n\
    \    let mut numerals_map_inv2 = HashMap::new();\n    let mut numerals_map_inv3\
    \ = HashMap::new();\n    let mut numerals_map_inv4 = HashMap::new();\n    let\
    \ mut numerals_map_inv5 = HashMap::new();\n    let mut numerals_map_inv6 = HashMap::new();\n\
    \    let mut numerals_map_inv7 = HashMap::new();\n    let mut numerals_map_inv8\
    \ = HashMap::new();\n    let mut numerals_map_inv9 = HashMap::new();\n    let\
    \ mut numerals_map_inv10 = HashMap::new();\n    let mut numerals_map_inv11 = HashMap::new();\n\
    \    let mut numerals_map_inv12 = HashMap::new();\n    let mut numerals_map_inv13\
    \ = HashMap::new();\n    let mut numerals_map_inv14 = HashMap::new();\n    let\
    \ mut numerals_map_inv15 = HashMap::new();\n    let mut numerals_map_inv16 = HashMap::new();\n\
    \    let mut numerals_map_inv17 = HashMap::new();\n    let mut numerals_map_inv18\
    \ = HashMap::new();\n    let mut numerals_map_inv19 = HashMap::new();\n    let\
    \ mut numerals_map_inv20 = HashMap::new();\n    let mut numerals_map_inv21 = HashMap::new();\n\
    \    let mut numerals_map_inv22 = HashMap::new();\n    let mut numerals_map_inv23\
    \ = HashMap::new();\n    let mut numerals_map_inv24 = HashMap::new();\n    let\
    \ mut numerals_map_inv25 = HashMap::new();\n    let mut numerals_map_inv26 = HashMap::new();\n\
    \    let mut numerals_map_inv27 = HashMap::new();\n    let mut numerals_map_inv28\
    \ = HashMap::new();\n    let mut numerals_map_inv29 = HashMap::new();\n    let\
    \ mut numerals_map_inv30 = HashMap::new();\n    let mut numerals_map_inv3\n}\n\
    \nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpiipi8v2m.rs:45:30\n   |\n\
    45 |     let mut numerals_map_inv3\n   |                              ^ help:\
    \ add `;` here\n46 | }\n   | - unexpected token\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:14:28\n   |\n14\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:15:32\n   |\n15\
    \ |     let mut numerals_map_inv = HashMap::new();\n   |                     \
    \           ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this\
    \ struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:16:33\n\
    \   |\n16 |     let mut numerals_map_inv2 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:17:33\n\
    \   |\n17 |     let mut numerals_map_inv3 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:18:33\n\
    \   |\n18 |     let mut numerals_map_inv4 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:19:33\n\
    \   |\n19 |     let mut numerals_map_inv5 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::H"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_value = 0;\n    let mut numeral_value_minus_1 = number;\n\
    \    let mut numeral_value_minus_2 = number;\n    let mut numeral_value_minus_3\
    \ = number;\n    let mut numeral_value_minus_4 = number;\n    let mut numeral_value_minus_5\
    \ = number;\n    let mut numeral_value_minus_6 = number;\n    let mut numeral_value_minus_7\
    \ = number;\n    let mut numeral_value_minus_8 = number;\n    let mut numeral_value_minus_9\
    \ = number;\n    let mut numeral_value_minus_10 = number;\n    let mut numeral_value_minus_11\
    \ = number;\n    let mut numeral_value_minus_12 = number;\n    let mut numeral_value_minus_13\
    \ = number;\n    let mut numeral_value_minus_14 = number;\n    let mut numeral_value_minus_15\
    \ = number;\n    let mut numeral_value_minus_16 = number;\n    let mut numeral_value_minus_17\
    \ = number;\n    let mut numeral_value_minus_18 = number;\n    let mut numeral_value_minus_19\
    \ = number;\n    let mut numeral_value_minus_20 = number;\n    let mut numeral_value_minus_21\
    \ = number;\n    let mut numeral_value_minus_22 = number;\n    let mut numeral_value_minus_23\
    \ = number;\n    let mut numeral_value_minus_24 = number;\n    let mut numeral_value_minus_25\
    \ = number;\n    let mut numeral_value_minus_26 = number;\n    let mut numeral_value_minus_27\
    \ = number;\n    let mut numeral_value_minus_28 = number;\n    let mut numeral_value_minus_29\
    \ = number;\n    let mut numeral_value_minus_30 = number;\n    let mut numeral_value_minus_31\
    \ = number;\n    let mut numeral_value_minus_32 = number;\n    let mut numeral_value_minus_33\
    \ = number;\n    let mut numeral_value_minus_34 = number;\n    let mut numeral_value_minus_35\
    \ = number;\n    let mut numeral_value_minus_36 = number;\n    let mut numeral_value_minus_37\
    \ = number;\n    let mut numeral_value_minus_38 = number;\n    let mut numeral_value_minus_39\
    \ = number;\n    let mut numeral_value_min\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpslolrg75.rs:55:30\n   |\n\
    55 |     let mut numeral_value_min\n   |                              ^ help:\
    \ add `;` here\n56 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpslolrg75.rs:60:17\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpslolrg75.rs:60:25\n \
    \  |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpslolrg75.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpslolrg75.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpslolrg75.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpslolrg75.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpslolrg75.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpslolrg75.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpslolrg75.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpslolrg75.rs:64:25\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cann"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp2xnr_ud4.rs:51:45\n   |\n\
    51 |     let mut numeral_digits_len = String::new\n   |                      \
    \                       ^ help: add `;` here\n52 | }\n   | - unexpected token\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2xnr_ud4.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_len = String::new();\n    let mut numeral_digits_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len = String::new();\n\
    \    let mut numeral_digits_len_len_len_len_len = String::new();\n    let mut\
    \ numeral_digits_len_len_len_len_len_len = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4et54hwf.rs:36:80\n   |\n\
    36 |     let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    \   |                                                                        \
    \        ^ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4et54hwf.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:45:25\n   |\n45 |     assert_"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![];\n    let mut numeral_index = 0;\n    let mut numeral_length\
    \ = 0;\n    let mut numeral_string = \"\";\n    let mut numeral_strings = vec![];\n\
    \    let mut numeral_string_index = 0;\n    let mut numeral_string_length = 0;\n\
    \    let mut numeral_string_lengths = vec![];\n    let mut numeral_string_length_index\
    \ = 0;\n    let mut numeral_string_lengths_index = 0;\n    let mut numeral_string_lengths_index2\
    \ = 0;\n    let mut numeral_string_lengths_index3 = 0;\n    let mut numeral_string_lengths_index4\
    \ = 0;\n    let mut numeral_string_lengths_index5 = 0;\n    let mut numeral_string_lengths_index6\
    \ = 0;\n    let mut numeral_string_lengths_index7 = 0;\n    let mut numeral_string_lengths_index8\
    \ = 0;\n    let mut numeral_string_lengths_index9 = 0;\n    let mut numeral_string_lengths_index10\
    \ = 0;\n    let mut numeral_string_lengths_index11 = 0;\n    let mut numeral_string_lengths_index12\
    \ = 0;\n    let mut numeral_string_lengths_index13 = 0;\n    let mut numeral_string_lengths_index14\
    \ = 0;\n    let mut numeral_string_lengths_index15 = 0;\n    let mut numeral_string_lengths_index16\
    \ = 0;\n    let mut numeral_string_lengths_index17 = 0;\n    let mut numeral_string_lengths_index18\
    \ = 0;\n    let mut numeral_string_lengths_index19 = 0;\n    let mut numeral_string_lengths_index20\
    \ = 0;\n    let mut numeral_string_lengths_index21 = 0;\n    let mut numeral_string_lengths_index22\
    \ = 0;\n    let mut numeral_string_lengths_index23 = 0;\n    let mut numeral_string_lengths_index24\
    \ = 0;\n    let mut numeral_string_lengths_index25 = 0;\n    let mut numeral_string_lengths_index26\
    \ = 0;\n    let mut numeral_string_lengths_index27 = 0;\n    let mut numeral_string_lengths_index28\
    \ = 0;\n    let mut numeral_string_lengths_index29 = 0;\n    let mut numeral_string_lengths_index30\
    \ = 0;\n    let mut numeral_string_lengths_index31 = 0;\n    let mut numeral_string_lengths_index32\
    \ = 0;\n    let mut numeral_string_lengths_index33 = 0;\n    let mut numeral_string_lengths_index34\
    \ = 0;\n    let mut \n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpyumrid6f.rs:58:1\n\
    \   |\n58 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpyumrid6f.rs:62:17\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpyumrid6f.rs:62:25\n \
    \  |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyumrid6f.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyumrid6f.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyumrid6f.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyumrid6f.rs:64:25\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyumrid6f.rs:65:17\n  \
    \ |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyumrid6f.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyumrid6f.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyumrid6f.rs:66:25\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyumrid6f.rs:67:17\n   |\n67 |     "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![];\n    let mut numeral_to_roman = vec![];\n    let\
    \ mut roman_to_numeral = vec![];\n\n    // Initialize numerals and roman_to_numeral\
    \ maps\n    for i in 0..number {\n        numerals.push(format!(\"{}\", i));\n\
    \        roman_to_numeral.push(i);\n    }\n\n    // Initialize numeral to roman\
    \ map\n    for i in 0..number {\n        numeral_to_roman.push(numerals[roman_to_numeral.len()\
    \ - 1 - i]);\n    }\n\n    // Initialize roman to numeral map\n    for i in 0..number\
    \ {\n        roman.push(numeral_to_roman[roman_to_numeral.len() - 1 - i]);\n \
    \   }\n\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdp93voy0.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdp93voy0.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdp93voy0.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdp93voy0.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdp93voy0.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdp93voy0.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdp93voy0.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdp93voy0.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdp93voy0.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdp93voy0.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdp93voy0.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n\n\
    \    if number < 1 || number > 1000 {\n        return roman;\n    }\n\n    let\
    \ mut numeral_digits = number.to_string();\n    let mut numeral_digits_len = numeral_digits.len();\n\
    \n    while numeral_digits_len > 0 {\n        let mut numeral_digit = numeral_digits[numeral_digits_len\
    \ - 1];\n        let mut numeral_digit_len = numeral_digit.len();\n\n        while\
    \ numeral_digit_len > 0 {\n            let mut numeral_digit_char = numeral_digit[numeral_digit_len\
    \ - 1];\n            let mut numeral_digit_char_len = numeral_digit_char.len();\n\
    \n            while numeral_digit_char_len > 0 {\n                let mut numeral_digit_char_char\
    \ = numeral_digit_char[numeral_digit_char_len - 1];\n                let mut numeral_digit_char_char_len\
    \ = numeral_digit_char_char.len();\n\n                while numeral_digit_char_char_len\
    \ > 0 {\n                    let mut numeral_digit_char_char_char = numeral_digit_char_char[numeral_digit_char_char_len\
    \ - 1];\n                    let mut numeral_digit_char_char_char_len = numeral_digit_char_char_char.len();\n\
    \n                    while numeral_digit_char_char_char_len > 0 {\n         \
    \               let mut numeral_digit_char_char_char_char = numeral_digit_char_char_char[numeral_digit_char_char_char_len\
    \ - 1];\n                        let mut numeral_digit_char_char_char_char_len\
    \ = numeral_digit_char_char_char_char.len();\n\n                        while\
    \ numeral_digit_char_char_char_char_len > 0 {\n                            let\
    \ mut numeral_digit_char_char_char_char_char = numeral_digit_char_char_char_char[numeral_digit_char_char_char_char_len\
    \ - 1];\n                            let mut numeral_digit_char_char_char_char_char_len\
    \ = numeral_digit_char_char_char_char_char_char.len();\n\n                   \
    \         while numeral_digit_char_char_char_char_char_len > 0 {\n           \
    \                     let mut numeral_digit_char_char_char_char_char_char = numeral_digit_char_char_char_char_char_char[numeral_digit_char_char_char_char_char_char_char_len\
    \ - 1];\n                                let mut numeral_digit_char_char_char_char_char_char_char_len\
    \ = numeral_digit_char_char_char_char_char_char_char_char.len();\n\n         \
    \                       while numeral_digit_char_char_char_char_char_char_char_len\
    \ > 0 {\n                                    let mut numeral_digit_char_char_char_char_char_char_char_char\
    \ = numeral_digit_char_char_char_char_char_char_char_char[numeral_\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmplu95qws4.rs:70:3\n\
    \   |\n11 | fn int_to_mini_roman(number: isize) -> String {\n   |            \
    \                                   - unclosed delimiter\n...\n22 |     while\
    \ numeral_digits_len > 0 {\n   |                                  - unclosed delimiter\n\
    ...\n26 |         while numeral_digit_len > 0 {\n   |                        \
    \             - unclosed delimiter\n...\n30 |             while numeral_digit_char_len\
    \ > 0 {\n   |                                              - unclosed delimiter\n\
    ...\n34 |                 while numeral_digit_char_char_len > 0 {\n   |      \
    \                                                 - unclosed delimiter\n...\n\
    38 |                     while numeral_digit_char_char_char_len > 0 {\n   |  \
    \                                                              - unclosed delimiter\n\
    ...\n42 |                         while numeral_digit_char_char_char_char_len\
    \ > 0 {\n   |                                                                \
    \         - unclosed delimiter\n...\n46 |                             while numeral_digit_char_char_char_char_char_len\
    \ > 0 {\n   |                                                                \
    \                  - unclosed delimiter\n...\n50 |                           \
    \      while numeral_digit_char_char_char_char_char_char_char_len > 0 {\n   |\
    \                                                                            \
    \                    - this delimiter might not be properly closed...\n51 |  \
    \                                   let mut numeral_digit_char_char_char_char_char_char_char_...\n\
    52 | }\n   | - ...as it matches this but it has different indentation\n...\n70\
    \ | }\n   |   ^\n\nerror: expected one of `.`, `;`, `?`, `else`, or an operator,\
    \ found `}`\n  --> /tmp/tmplu95qws4.rs:52:1\n   |\n52 | }\n   | ^ expected one\
    \ of `.`, `;`, `?`, `else`, or an operator\n\nerror: mismatched closing delimiter:\
    \ `}`\n  --> /tmp/tmplu95qws4.rs:51:154\n   |\n11 | fn int_to_mini_roman(number:\
    \ isize) -> String {\n   |                                               - clo"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"c\", \"l\", \"l\", \"x\", \"x\", \"l\"];\n    let mut numeral_index = 0;\n\
    \    let mut numeral_value = number;\n    while numeral_value >= 1000 {\n    \
    \    numeral_value -= 1000;\n        numeral_index += 1;\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    while numeral_value >= 100 {\n        numeral_value -= 100;\n        roman.push_str(numerals[numeral_index]);\n\
    \    }\n    roman.push_str(numerals[numeral_index]);\n    while numeral_value\
    \ >= 10 {\n        numeral_value -= 10;\n        roman.push_str(numerals[numeral_index]);\n\
    \    }\n    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbysqoco0.rs:59:17\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbysqoco0.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbysqoco0.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbysqoco0.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbysqoco0.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbysqoco0.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbysqoco0.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbysqoco0.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbysqoco0.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbysqoco0.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbysqoco0.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"l\", \"x\", \"i\"];\n    let mut numeral_to_roman = vec![\n        \"\",\n\
    \        \"C\",\n        \"L\",\n        \"X\",\n        \"I\",\n        \"V\"\
    ,\n        \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n        \"\
    I\",\n        \"V\",\n        \"X\",\n        \"I\",\n        \"V\",\n       \
    \ \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n        \"I\",\n   \
    \     \"V\",\n        \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n\
    \        \"I\",\n        \"V\",\n        \"X\",\n        \"I\",\n        \"V\"\
    ,\n        \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n        \"\
    I\",\n        \"V\",\n        \"X\",\n        \"I\",\n        \"V\",\n       \
    \ \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n        \"I\",\n   \
    \     \"V\",\n        \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n\
    \        \"I\",\n        \"V\",\n        \"X\",\n        \"I\",\n        \"V\"\
    ,\n        \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n        \"\
    I\",\n        \"V\",\n        \"X\",\n        \"I\",\n        \"V\",\n       \
    \ \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n        \"I\",\n   \
    \     \"V\",\n        \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n\
    \        \"I\",\n        \"V\",\n        \"X\",\n        \"I\",\n        \"V\"\
    ,\n        \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n        \"\
    I\",\n        \"V\",\n        \"X\",\n        \"I\",\n        \"V\",\n       \
    \ \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n        \"I\",\n   \
    \     \"V\",\n        \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n\
    \        \"I\",\n        \"V\",\n        \"X\",\n        \"I\",\n        \"V\"\
    ,\n        \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n        \"\
    I\",\n        \"V\",\n        \"X\",\n        \"I\",\n        \"V\",\n       \
    \ \"X\",\n        \"I\",\n        \"V\",\n        \"X\",\n        \"I\",\n   \
    \     \"V\",\n        \"X\",\n        \"\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n   --> /tmp/tmpu78ezqua.rs:133:9\n\
    \    |\n133 | /         \"\n134 | | }\n135 | |\n136 | | fn main() {\n...   |\n\
    151 | |     assert_eq!({left}, {right});\n152 | | }\n    | |__^\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0765`.\n"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_map = HashMap::new();\n    let mut numeral_map_size = 1000;\n\
    \n    // Initialize numeral map with 1000 empty strings\n    for i in 0..numeral_map_size\
    \ {\n        numeral_map.insert(i, String::new());\n    }\n\n    // Initialize\
    \ numeral map with roman numerals corresponding to each number\n    for i in 0..number\
    \ {\n        let roman_numeral = roman_numeral_from_int(i);\n        numeral_map.get(&roman_numeral).unwrap().push_str(&roman_numeral);\n\
    \    }\n\n    // Initialize numeral map with roman numerals corresponding to each\
    \ number in reverse\n    for i in number..0 {\n        let roman_numeral = roman_numeral_from_int(i);\n\
    \        numeral_map.get(&roman_numeral).unwrap().push_str(&roman_numeral);\n\
    \    }\n\n    // Initialize roman with empty string\n    roman.push_str(\"\");\n\
    \n    // Iterate through numeral map and add each string to the roman string\n\
    \    for numeral in numeral_map.keys() {\n        roman.push_str(numeral);\n \
    \   }\n\n    // Iterate through numeral map and add each string to the roman string\n\
    \    for numeral in numeral_map.keys() {\n        roman.push_str(numeral);\n \
    \   }\n\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n  -->\
    \ /tmp/tmp7miljsfk.rs:14:27\n   |\n14 |     let mut numeral_map = HashMap::new();\n\
    \   |                           ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0425]:\
    \ cannot find function `roman_numeral_from_int` in this scope\n  --> /tmp/tmp7miljsfk.rs:24:29\n\
    \   |\n24 |         let roman_numeral = roman_numeral_from_int(i);\n   |     \
    \                        ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `roman_numeral_from_int` in this scope\n  --> /tmp/tmp7miljsfk.rs:30:29\n\
    \   |\n30 |         let roman_numeral = roman_numeral_from_int(i);\n   |     \
    \                        ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7miljsfk.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7miljsfk.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7miljsfk.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7miljsfk.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7miljsfk.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7miljsfk.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7miljsfk.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \      "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\",\
    \ \"xl\", \"lx\", \"x\", \"ix\", \"iv\", \"v\", \"vi\", \"vii\", \"i\"];\n   \
    \ let mut numeral_strings = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"x\"\
    , \"x\", \"l\", \"l\", \"x\", \"l\", \"l\", \"x\", \"l\", \"l\", \"x\"];\n   \
    \ let mut numeral_strings_reversed = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"\
    l\", \"x\", \"x\", \"l\", \"l\", \"x\", \"l\", \"l\", \"x\", \"l\", \"l\", \"\
    x\"];\n    let mut numeral_strings_reversed_index = vec![0, 0, 1, 1, 2, 2, 3,\
    \ 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11];\n    let mut numeral_strings_reversed_index2\
    \ = vec![0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11];\n\
    \    let mut numeral_strings_reversed_index3 = vec![0, 0, 1, 1, 2, 2, 3, 3, 4,\
    \ 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11];\n    let mut numeral_strings_reversed_index4\
    \ = vec![0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11];\n\
    \    let mut numeral_strings_reversed_index5 = vec![0, 0, 1, 1, 2, 2, 3, 3, 4,\
    \ 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11];\n    let mut numeral_strings_reversed_index6\
    \ = vec![0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11];\n\
    \    let mut numeral_strings_reversed_index7 = vec![0, 0, 1, 1, 2, 2, 3, 3, 4,\
    \ 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11];\n    let mut numeral_strings_reversed_index8\
    \ = vec![0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11];\n\
    \    let mut numeral_strings_reversed_index9 = vec![0, 0, 1, 1, 2, 2, 3, 3, 4,\
    \ 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11];\n    let mut numeral_strings_reversed_index10\
    \ = vec![0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11];\n\
    \    let mut numeral_strings_reversed_index11 = vec![0, 0, 1, 1, 2, 2, 3, 3, 4,\
    \ 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11];\n    let mut numeral_strings_reversed_index12\
    \ = vec![0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11];\n\
    \    let mut numeral_\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpqp2d6fle.rs:29:21\n   |\n\
    29 |     let mut numeral_\n   |                     ^ help: add `;` here\n30 |\
    \ }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpqp2d6fle.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqp2d6fle.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqp2d6fle.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqp2d6fle.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqp2d6fle.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqp2d6fle.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqp2d6fle.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqp2d6fle.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqp2d6fle.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqp2d6fle.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `lef"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"x\",\n        3 => \"\
    x\",\n        4 => \"x\",\n        5 => \"x\",\n        6 => \"x\",\n        7\
    \ => \"x\",\n        8 => \"x\",\n        9 => \"x\",\n        10 => \"x\",\n\
    \        11 => \"x\",\n        12 => \"x\",\n        13 => \"x\",\n        14\
    \ => \"x\",\n        15 => \"x\",\n        16 => \"x\",\n        17 => \"x\",\n\
    \        18 => \"x\",\n        19 => \"xix\",\n        20 => \"xx\",\n       \
    \ 21 => \"xx\",\n        22 => \"xx\",\n        23 => \"xx\",\n        24 => \"\
    xx\",\n        25 => \"xx\",\n        26 => \"xx\",\n        27 => \"xx\",\n \
    \       28 => \"xx\",\n        29 => \"xx\",\n        30 => \"xx\",\n        31\
    \ => \"xx\",\n        32 => \"xx\",\n        33 => \"xx\",\n        34 => \"xx\"\
    ,\n        35 => \"xx\",\n        36 => \"xx\",\n        37 => \"xx\",\n     \
    \   38 => \"xx\",\n        39 => \"xx\",\n        40 => \"xx\",\n        41 =>\
    \ \"xx\",\n        42 => \"xx\",\n        43 => \"xx\",\n        44 => \"xx\"\
    ,\n        45 => \"xx\",\n        46 => \"xx\",\n        47 => \"xx\",\n     \
    \   48 => \"xx\",\n        49 => \"xx\",\n        50 => \"xx\",\n        51 =>\
    \ \"xx\",\n        52 => \"xx\",\n        53 => \"xx\",\n        54 => \"xx\"\
    ,\n        55 => \"xx\",\n        56 => \"xx\",\n        57 => \"xx\",\n     \
    \   58 => \"xx\",\n        59 => \"xx\",\n        60 => \"xx\",\n        61 =>\
    \ \"xx\",\n        62 => \"xx\",\n        63 => \"xx\",\n        64 => \"xx\"\
    ,\n        65 => \"xx\",\n        66 => \"xx\",\n        67 => \"xx\",\n     \
    \   68 => \"xx\",\n        69 => \"xx\",\n        70 => \"xx\",\n        71 =>\
    \ \"xx\",\n        72 => \"xx\",\n        73 => \"xx\",\n        74 => \"xx\"\
    ,\n        75 => \"xx\",\n        76 => \"xx\",\n        77 => \"xx\",\n     \
    \   78 => \"xx\",\n        79 => \"xx\",\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp2vivyr_i.rs:110:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n92  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n110 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2vivyr_i.rs:96:17\n   |\n96 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2vivyr_i.rs:96:25\n   |\n96 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2vivyr_i.rs:97:17\n   |\n97 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2vivyr_i.rs:97:25\n   |\n97 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2vivyr_i.rs:98:17\n  \
    \ |\n98 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2vivyr_i.rs:98:25\n   |\n98 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2vivyr_i.rs:99:17\n   |\n99 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2vivyr_i.rs:99:25\n\
    \   |\n99 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \   --> /tmp/tmp2vivyr_i.rs:100:17\n    |\n100 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not foun"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral: isize = 0;\n    let mut numeral_string: String;\n    let mut numeral_strings:\
    \ Vec<String> = vec![];\n    let mut numeral_strings_string: String;\n    let\
    \ mut numeral_strings_strings: Vec<String> = vec![];\n    let mut numeral_strings_strings_string:\
    \ String;\n    let mut numeral_strings_strings_strings: Vec<String> = vec![];\n\
    \    let mut numeral_strings_strings_strings_string: String;\n    let mut numeral_strings_strings_strings_strings:\
    \ Vec<String> = vec![];\n    let mut numeral_strings_strings_strings_strings_string:\
    \ String;\n    let mut numeral_strings_strings_strings_strings_strings: Vec<String>\
    \ = vec![];\n    let mut numeral_strings_strings_strings_strings_strings_string:\
    \ String;\n    let mut numeral_strings_strings_strings_strings_strings_strings:\
    \ Vec<String> = vec![];\n    let mut numeral_strings_strings_strings_strings_strings_strings_string:\
    \ String;\n    let mut numeral_strings_strings_strings_strings_strings_strings_strings:\
    \ Vec<String> = vec![];\n    let mut numeral_strings_strings_strings_strings_strings_strings_strings_string:\
    \ String;\n    let mut numeral_strings_strings_strings_strings_strings_strings_strings_strings:\
    \ Vec<String> = vec![];\n    let mut numeral_strings_strings_strings_strings_strings_strings_strings_strings_string:\
    \ String;\n    let mut numeral_strings_strings_strings_strings_strings_strings_strings_strings_strings:\
    \ Vec<String> = vec![];\n    let mut numeral_strings_strings_strings_strings_strings_strings_strings_strings_strings_string:\
    \ String;\n    let mut numeral_strings_strings_strings_strings_strings_strings_strings_strings_strings_strings:\
    \ Vec<String> = vec![];\n    let mut numeral_strings_strings_strings_strings_strings_strings_strings_strings_strings_strings_string:\
    \ String;\n    let mut numeral_strings_strings_strings_strings_strings_strings_strings_strings_string\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpdttxivt6.rs:36:91\n   |\n\
    36 |     let mut numeral_strings_strings_strings_strings_strings_strings_strings_strings_string\n\
    \   |                                                                        \
    \                   ^ help: add `;` here\n37 | }\n   | - unexpected token\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdttxivt6.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdttxivt6.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdttxivt6.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdttxivt6.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdttxivt6.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdttxivt6.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdttxivt6.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdttxivt6.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdttxivt6.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdttxivt6.rs:45:25"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut prev_digit = String::new();\n\
    \    let mut prev_roman = String::new();\n    let mut prev_prev_digit = String::new();\n\
    \n    for digit in 0..number {\n        let mut roman_digit = String::new();\n\
    \        let mut prev_roman_digit = String::new();\n        let mut prev_prev_roman_digit\
    \ = String::new();\n\n        if digit < 100 {\n            roman_digit = roman.clone();\n\
    \            prev_roman_digit = prev_roman.clone();\n            prev_prev_roman_digit\
    \ = prev_prev_roman.clone();\n        }\n\n        if digit < 500 {\n        \
    \    roman_digit = roman_digit.clone() + \"m\".to_string();\n            prev_roman_digit\
    \ = prev_roman_digit.clone() + \"m\".to_string();\n            prev_prev_roman_digit\
    \ = prev_prev_roman_digit.clone() + \"m\".to_string();\n        }\n\n        if\
    \ digit < 1000 {\n            roman_digit = roman_digit.clone() + \"c\".to_string();\n\
    \            prev_roman_digit = prev_roman_digit.clone() + \"c\".to_string();\n\
    \            prev_prev_roman_digit = prev_prev_roman_digit.clone() + \"c\".to_string();\n\
    \        }\n\n        if digit < 5000 {\n            roman_digit = roman_digit.clone()\
    \ + \"d\".to_string();\n            prev_roman_digit = prev_roman_digit.clone()\
    \ + \"d\".to_string();\n            prev_prev_roman_digit = prev_prev_roman_digit.clone()\
    \ + \"d\".to_string();\n        }\n\n        if digit < 10000 {\n            roman_digit\
    \ = roman_digit.clone() + \"i\".to_string();\n            prev_roman_digit = prev_roman_digit.clone()\
    \ + \"i\".to_string();\n            prev_prev_roman_digit = prev_prev_roman_digit.clone()\
    \ + \"i\".to_string();\n        }\n\n        if digit < 50000 {\n            roman_digit\
    \ = roman_digit.clone() + \"v\".to_string();\n            prev_roman_digit = prev_roman_digit.clone()\
    \ + \"v\".to_string();\n            prev_prev_roman_digit = prev_prev_roman_digit.clone()\
    \ + \"v\".to_string();\n        }\n\n        if digit < 100000 {\n           \
    \ roman_digit = roman_digit.clone() + \"x\".to_string();\n            prev_roman_digit\
    \ = prev_roman_digit.clone() + \"x\".to_string();\n            prev_prev_roman_digit\
    \ = \n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpv4r_4t7y.rs:80:3\n\
    \   |\n11 | fn int_to_mini_roman(number: isize) -> String {\n   |            \
    \                                   - unclosed delimiter\n...\n17 |     for digit\
    \ in 0..number {\n   |                            - unclosed delimiter\n...\n\
    58 |         if digit < 100000 {\n   |                           - this delimiter\
    \ might not be properly closed...\n...\n62 | }\n   | - ...as it matches this but\
    \ it has different indentation\n...\n80 | }\n   |   ^\n\nerror: expected expression,\
    \ found `}`\n  --> /tmp/tmpv4r_4t7y.rs:62:1\n   |\n62 | }\n   | ^ expected expression\n\
    \nerror[E0425]: cannot find value `prev_prev_roman` in this scope\n  --> /tmp/tmpv4r_4t7y.rs:25:37\n\
    \   |\n25 |             prev_prev_roman_digit = prev_prev_roman.clone();\n   |\
    \                                     ^^^^^^^^^^^^^^^ help: a local variable with\
    \ a similar name exists: `prev_prev_digit`\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpv4r_4t7y.rs:66:17\n   |\n66 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpv4r_4t7y.rs:66:25\n \
    \  |\n66 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv4r_4t7y.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv4r_4t7y.rs:67:25\n   |\n67 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv4r_4t7y.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv4r_4t7y.rs:68:25\n   |\n68 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find valu"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmp2atoa1s4.rs:52:1\n   |\n52\
    \ | }\n   | ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmp2atoa1s4.rs:51:38\n\
    \   |\n51 |     let mut numerals_iter = numerals.\n   |                      \
    \                ^ help: add `;` here\n52 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2atoa1s4.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2atoa1s4.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2atoa1s4.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2atoa1s4.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2atoa1s4.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2atoa1s4.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2atoa1s4.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2atoa1s4.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2atoa1s4.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2atoa1s4.rs:60:25\n   |\n60 |     assert_eq!("
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map_inv = HashMap::new();\n\
    \    let mut numerals_map_reverse = HashMap::new();\n    let mut numerals_map_reverse_inv\
    \ = HashMap::new();\n    let mut numerals_map_reverse2 = HashMap::new();\n   \
    \ let mut numerals_map_reverse2_inv = HashMap::new();\n    let mut numerals_map_reverse3\
    \ = HashMap::new();\n    let mut numerals_map_reverse3_inv = HashMap::new();\n\
    \    let mut numerals_map_reverse4 = HashMap::new();\n    let mut numerals_map_reverse4_inv\
    \ = HashMap::new();\n    let mut numerals_map_reverse5 = HashMap::new();\n   \
    \ let mut numerals_map_reverse5_inv = HashMap::new();\n    let mut numerals_map_reverse6\
    \ = HashMap::new();\n    let mut numerals_map_reverse6_inv = HashMap::new();\n\
    \    let mut numerals_map_reverse7 = HashMap::new();\n    let mut numerals_map_reverse7_inv\
    \ = HashMap::new();\n    let mut numerals_map_reverse8 = HashMap::new();\n   \
    \ let mut numerals_map_reverse8_inv = HashMap::new();\n    let mut numerals_map_reverse9\
    \ = HashMap::new();\n    let mut numerals_map_reverse9_inv = HashMap::new();\n\
    \    let mut numerals_map_reverse10 = HashMap::new();\n    let mut numerals_map_reverse10_inv\
    \ = HashMap::new();\n    let mut numerals_map_reverse11 = HashMap::new();\n  \
    \  let mut numerals_map_reverse11_inv = HashMap::new();\n    let mut numerals_map_reverse12\
    \ = HashMap::new();\n    let mut numerals_map_reverse12_inv = HashMap::new();\n\
    \    let mut numerals_map_reverse13 = HashMap::new();\n    let mut numerals_map_reverse13_inv\
    \ = HashMap::new();\n    let mut numerals_map_reverse14 = HashMap::new();\n  \
    \  let mut numerals_map_reverse14_inv = HashMap::new();\n    let mut numerals_map_reverse15\
    \ = HashMap::new\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpv5s5pocx.rs:44:50\n   |\n\
    44 |     let mut numerals_map_reverse15 = HashMap::new\n   |                 \
    \                                 ^ help: add `;` here\n45 | }\n   | - unexpected\
    \ token\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n\
    \  --> /tmp/tmpv5s5pocx.rs:44:38\n   |\n44 |     let mut numerals_map_reverse15\
    \ = HashMap::new\n   |                                      ^^^^^^^ use of undeclared\
    \ type `HashMap`\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n\
    \  --> /tmp/tmpv5s5pocx.rs:14:28\n   |\n14 |     let mut numerals_map = HashMap::new();\n\
    \   |                            ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpv5s5pocx.rs:15:32\n   |\n15 |     let mut numerals_map_inv = HashMap::new();\n\
    \   |                                ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpv5s5pocx.rs:16:36\n   |\n16 |     let mut numerals_map_reverse =\
    \ HashMap::new();\n   |                                    ^^^^^^^ not found in\
    \ this scope\n   |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpv5s5pocx.rs:17:40\n   |\n17 |     let mut numerals_map_reverse_inv\
    \ = HashMap::new();\n   |                                        ^^^^^^^ not found\
    \ in this scope\n   |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpv5s5pocx.rs:18:37\n   |\n18 |     let mut numerals_map_reverse2\
    \ = HashMap::new();\n   |                                     ^^^^^^^ not found\
    \ in this scope\n   |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashM"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut prev_digit = 0;\n    let mut\
    \ num_digits = 1;\n    let mut prev_roman = 0;\n    let mut prev_prev_roman =\
    \ 0;\n    let mut prev_prev_prev_roman = 0;\n    let mut prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_roman = 0;\n    let mut prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_roman = 0;\n    let mut\
    \ prev_prev_prev_prev_prev_prev_prev_prev_roman = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman =\
    \ 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = 0;\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpr_0zlbq9.rs:41:83\n   |\n\
    41 |     let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_\n\
    \   |                                                                        \
    \           ^ help: add `;` here\n42 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr_0zlbq9.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr_0zlbq9.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr_0zlbq9.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr_0zlbq9.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr_0zlbq9.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr_0zlbq9.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr_0zlbq9.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpr_0zlbq9.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr_0zlbq9.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr_0zlbq9.rs:50:25\n   |\n50 |     a"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        7\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppb6j91m9.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmppb6j91m9.rs:83:1\n   |\n82 |         7\n  \
    \ |          - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n83 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppb6j91m9.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"\
    D\"),\n                           String::from(\"CD\"), String::from(\"C\"), String::from(\"\
    XC\"),\n                           String::from(\"L\"), String::from(\"XL\"),\
    \ String::from(\"X\"),\n                           String::from(\"IX\"), String::from(\"\
    V\"), String::from(\"IV\"),\n                           String::from(\"I\")];\n\
    \    let mut numeral_len = String::from(\"M\");\n    let mut numeral_lens = vec![String::from(\"\
    M\"), String::from(\"CM\"), String::from(\"D\"),\n                           \
    \   String::from(\"CD\"), String::from(\"C\"), String::from(\"XC\"),\n       \
    \                       String::from(\"L\"), String::from(\"XL\"), String::from(\"\
    X\"),\n                              String::from(\"IX\"), String::from(\"V\"\
    ), String::from(\"IV\"),\n                              String::from(\"I\")];\n\
    \    let mut numeral_lens_len = String::from(\"M\");\n    let mut numeral_lens_lens\
    \ = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"D\"),\n   \
    \                                String::from(\"CD\"), String::from(\"C\"), String::from(\"\
    XC\"),\n                                   String::from(\"L\"), String::from(\"\
    XL\"), String::from(\"X\"),\n                                   String::from(\"\
    IX\"), String::from(\"V\"), String::from(\"IV\"),\n                          \
    \         String::from(\"I\")];\n    let mut numeral_lens_lens_len = String::from(\"\
    M\");\n    let mut numeral_lens_lens_lens = vec![String::from(\"M\"), String::from(\"\
    CM\"), String::from(\"D\"),\n                                      String::from(\"\
    CD\"), String::from(\"C\"), String::from(\"XC\"),\n                          \
    \            String::from(\"L\"), String::from(\"XL\"), String::from(\"X\"),\n\
    \                                      String::from(\"IX\"), String::from(\"V\"\
    ), String::from(\"IV\"),\n                                      String::from(\"\
    I\")];\n    let mut numeral_lens_lens_lens_len = String::from(\"M\");\n    let\
    \ mut numeral_lens_lens_lens_lens = vec![String::from(\"M\"), String::from(\"\
    CM\"), String::from\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `}`\n\
    \  --> /tmp/tmpuaw2uktf.rs:39:1\n   |\n39 | }\n   | ^ expected one of `.`, `;`,\
    \ `?`, `else`, or an operator\n\nerror: mismatched closing delimiter: `}`\n  -->\
    \ /tmp/tmpuaw2uktf.rs:38:47\n   |\n11 | fn int_to_mini_roman(number: isize) ->\
    \ String {\n   |                                               - closing delimiter\
    \ possibly meant for this\n...\n38 |     let mut numeral_lens_lens_lens_lens =\
    \ vec![String::from(\"M\"), String::from(\"CM\"), String::from\n   |         \
    \                                      ^ unclosed delimiter\n39 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuaw2uktf.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuaw2uktf.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuaw2uktf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuaw2uktf.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuaw2uktf.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuaw2uktf.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuaw2uktf.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuaw2uktf.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |     "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral_index = 0;\n    let mut numeral_value = 0;\n    let mut numeral_value_next\
    \ = 0;\n    let mut numeral_value_next2 = 0;\n    let mut numeral_value_next3\
    \ = 0;\n    let mut numeral_value_next4 = 0;\n    let mut numeral_value_next5\
    \ = 0;\n    let mut numeral_value_next6 = 0;\n    let mut numeral_value_next7\
    \ = 0;\n    let mut numeral_value_next8 = 0;\n    let mut numeral_value_next9\
    \ = 0;\n    let mut numeral_value_next10 = 0;\n    let mut numeral_value_next11\
    \ = 0;\n    let mut numeral_value_next12 = 0;\n    let mut numeral_value_next13\
    \ = 0;\n    let mut numeral_value_next14 = 0;\n    let mut numeral_value_next15\
    \ = 0;\n    let mut numeral_value_next16 = 0;\n    let mut numeral_value_next17\
    \ = 0;\n    let mut numeral_value_next18 = 0;\n    let mut numeral_value_next19\
    \ = 0;\n    let mut numeral_value_next20 = 0;\n    let mut numeral_value_next21\
    \ = 0;\n    let mut numeral_value_next22 = 0;\n    let mut numeral_value_next23\
    \ = 0;\n    let mut numeral_value_next24 = 0;\n    let mut numeral_value_next25\
    \ = 0;\n    let mut numeral_value_next26 = 0;\n    let mut numeral_value_next27\
    \ = 0;\n    let mut numeral_value_next28 = 0;\n    let mut numeral_value_next29\
    \ = 0;\n    let mut numeral_value_next30 = 0;\n    let mut numeral_value_next31\
    \ = 0;\n    let mut numeral_value_next32 = 0;\n    let mut numeral_value_next33\
    \ = 0;\n    let mut numeral_value_next34 = 0;\n    let mut numeral_value_next35\
    \ = 0;\n    let mut numeral_value_next36 = 0;\n    let mut numeral_value_next37\
    \ = 0;\n    let mut numeral_value_next38 = 0;\n    let mut numeral_value_next39\
    \ = 0;\n    let mut numeral_value_next40 = 0;\n    let mut numeral_value_next41\
    \ = 0;\n    let mut numeral_value_next42 = 0;\n    let mut numeral_value_next43\
    \ = 0;\n    let mut numeral_value_next44 = 0;\n    let mut numeral_value_next45\
    \ = 0;\n    let mut numeral_value_next46 = 0;\n    let mut numeral_value_next47\
    \ = 0;\n    let mut numeral_value_next48 = 0;\n\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpr_me6vq1.rs:69:17\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr_me6vq1.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr_me6vq1.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr_me6vq1.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr_me6vq1.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr_me6vq1.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr_me6vq1.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpr_me6vq1.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr_me6vq1.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr_me6vq1.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr_me6vq1.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 0;\n    let mut\
    \ remainder: isize = 0;\n    let mut numeral: isize = 0;\n    let mut numeral_string:\
    \ String = String::new();\n    let mut numeral_string_reverse: String = String::new();\n\
    \    let mut numeral_string_reverse_2: String = String::new();\n    let mut numeral_string_reverse_3:\
    \ String = String::new();\n    let mut numeral_string_reverse_4: String = String::new();\n\
    \    let mut numeral_string_reverse_5: String = String::new();\n    let mut numeral_string_reverse_6:\
    \ String = String::new();\n    let mut numeral_string_reverse_7: String = String::new();\n\
    \    let mut numeral_string_reverse_8: String = String::new();\n    let mut numeral_string_reverse_9:\
    \ String = String::new();\n    let mut numeral_string_reverse_10: String = String::new();\n\
    \    let mut numeral_string_reverse_11: String = String::new();\n    let mut numeral_string_reverse_12:\
    \ String = String::new();\n    let mut numeral_string_reverse_13: String = String::new();\n\
    \    let mut numeral_string_reverse_14: String = String::new();\n    let mut numeral_string_reverse_15:\
    \ String = String::new();\n    let mut numeral_string_reverse_16: String = String::new();\n\
    \    let mut numeral_string_reverse_17: String = String::new();\n    let mut numeral_string_reverse_18:\
    \ String = String::new();\n    let mut numeral_string_reverse_19: String = String::new();\n\
    \    let mut numeral_string_reverse_20: String = String::new();\n    let mut numeral_string_reverse_21:\
    \ String = String::new();\n    let mut numeral_string_reverse_22: String = String::new();\n\
    \    let mut numeral_string_reverse_23: String = String::new();\n    let mut numeral_string_reverse_24:\
    \ String = String::new();\n    let mut numeral_string_reverse_25: String = String::new();\n\
    \    let mut numeral_string_reverse_26: String = String::new();\n    let mut numeral_string_reverse_27:\
    \ String = String::new();\n    let mut numeral_string_reverse_28: String = String::new();\n\
    \    let mut numeral_string_reverse_29: String = String::new();\n\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmk8utsqc.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmk8utsqc.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmk8utsqc.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmk8utsqc.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmk8utsqc.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmk8utsqc.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmk8utsqc.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmk8utsqc.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmk8utsqc.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmk8utsqc.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmk8utsqc.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"\
    D\"),\n                           String::from(\"CD\"), String::from(\"C\"), String::from(\"\
    XC\"),\n                           String::from(\"L\"), String::from(\"XL\"),\
    \ String::from(\"X\"),\n                           String::from(\"IX\"), String::from(\"\
    V\"), String::from(\"IV\"),\n                           String::from(\"I\")];\n\
    \    let mut numeral_index = 0;\n    let mut numeral_length = numerals.len();\n\
    \    let mut numeral_string = \"\";\n    let mut numeral_strings = vec![String::from(\"\
    M\"), String::from(\"CM\"), String::from(\"D\"),\n                           \
    \      String::from(\"CD\"), String::from(\"C\"), String::from(\"XC\"),\n    \
    \                             String::from(\"L\"), String::from(\"XL\"), String::from(\"\
    X\"),\n                                 String::from(\"IX\"), String::from(\"\
    V\"), String::from(\"IV\"),\n                                 String::from(\"\
    I\")];\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = numeral_strings.len();\n    let mut numeral_string = \"\";\n    let mut numeral_strings\
    \ = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"D\"),\n   \
    \                              String::from(\"CD\"), String::from(\"C\"), String::from(\"\
    XC\"),\n                                 String::from(\"L\"), String::from(\"\
    XL\"), String::from(\"X\"),\n                                 String::from(\"\
    IX\"), String::from(\"V\"), String::from(\"IV\"),\n                          \
    \       String::from(\"I\")];\n    let mut numeral_string_index = 0;\n    let\
    \ mut numeral_string_length = numeral_strings.len();\n    let mut numeral_string\
    \ = \"\";\n    let mut numeral_strings = vec![String::from(\"M\"), String::from(\"\
    CM\"), String::from(\"D\"),\n                                 String::from(\"\
    CD\"), String::from(\"C\"), String::from(\"XC\"),\n                          \
    \       String::from(\"L\"), String::from(\"XL\"), String::from(\"X\"),\n    \
    \                             String::from(\"IX\"), String::from(\"V\"), String::from(\"\
    IV\"),\n                                 String::from(\"I\")];\n    let mut numeral_string_index\
    \ = 0;\n    let mut \n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmposb5ib8a.rs:45:1\n\
    \   |\n45 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmposb5ib8a.rs:49:17\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmposb5ib8a.rs:49:25\n \
    \  |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmposb5ib8a.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmposb5ib8a.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmposb5ib8a.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmposb5ib8a.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmposb5ib8a.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmposb5ib8a.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmposb5ib8a.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmposb5ib8a.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmposb5ib8a.rs:54:17\n   |\n54 |     "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n\n    let mut roman = String::new();\n    let mut\
    \ numerals = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"\
    ];\n\n    if number < 0 {\n        roman.push_str(\"i\");\n        numerals.insert(0,\
    \ \"\");\n        number = -number;\n    }\n\n    let mut numeral_count = 1;\n\
    \    let mut numeral_value = number;\n\n    while numeral_value >= 1000 {\n  \
    \      numeral_value -= 1000;\n        numeral_count += 1;\n    }\n\n    let mut\
    \ numeral_value = number;\n    while numeral_value >= 100 {\n        numeral_value\
    \ -= 100;\n        numeral_count += 1;\n    }\n\n    let mut numeral_value = number;\n\
    \    while numeral_value >= 10 {\n        numeral_value -= 10;\n        numeral_count\
    \ += 1;\n    }\n\n    let mut numeral_value = number;\n    while numeral_value\
    \ >= 1 {\n        numeral_value -= 1;\n        numeral_count += 1;\n    }\n\n\
    \    if numeral_count > 0 {\n        roman.push_str(numerals[numeral_count - 1]);\n\
    \    }\n\n    if number < 0 {\n        roman.push_str(\"i\");\n    }\n\n    roman\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_ra1qrlo.rs:62:17\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_ra1qrlo.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_ra1qrlo.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_ra1qrlo.rs:63:25\n\
    \   |\n63 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_ra1qrlo.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_ra1qrlo.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_ra1qrlo.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_ra1qrlo.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_ra1qrlo.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_ra1qrlo.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_ra1qrlo.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n        \"i\", \"i\",\
    \ \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    ,\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n    \
    \    \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\",\n\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `}`\n\
    \  --> /tmp/tmpd_i7z2dt.rs:32:1\n   |\n32 | }\n   | ^ expected one of `.`, `;`,\
    \ `?`, `else`, or an operator\n\nerror: mismatched closing delimiter: `}`\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:13:28\n   |\n11 | fn int_to_mini_roman(number: isize) ->\
    \ String {\n   |                                               - closing delimiter\
    \ possibly meant for this\n12 |     let mut roman = String::new();\n13 |     let\
    \ mut numerals = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\"\
    , \"l\",\n   |                            ^ unclosed delimiter\n...\n32 | }\n\
    \   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpd_i7z2dt.rs:36:17\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:36:25\n \
    \  |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd_i7z2dt.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \       "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    let mut\
    \ last_digit = number % 10;\n    while number > 0 {\n        if number % 10 ==\
    \ 0 {\n            roman += &format!(\"{}\", num);\n            num = 1;\n   \
    \     } else {\n            num += 1;\n        }\n        number /= 10;\n    }\n\
    \    if last_digit != 0 {\n        roman += &format!(\"{}\", num);\n    }\n  \
    \  roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpiifaiact.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiifaiact.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpiifaiact.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpiifaiact.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpiifaiact.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpiifaiact.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpiifaiact.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpiifaiact.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpiifaiact.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiifaiact.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpiifaiact.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"l\", \"x\", \"i\"];\n    let mut numeral_index = 0;\n    let mut numeral_value\
    \ = 0;\n    let mut numeral_value_index = 0;\n    let mut numeral_value_length\
    \ = 0;\n    let mut numeral_value_length_index = 0;\n    let mut numeral_value_length_value\
    \ = 0;\n    let mut numeral_value_length_value_index = 0;\n    let mut numeral_value_length_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_index = 0;\n    let mut numeral_value_length_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnx30gi7h.rs:53:33\n   |\n\
    53 |     let mut numeral_value_length\n   |                                 ^\
    \ help: add `;` here\n54 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnx30gi7h.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnx30gi7h.rs:58:25\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnx30gi7h.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnx30gi7h.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnx30gi7h.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnx30gi7h.rs:60:25\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnx30gi7h.rs:61:17\n  \
    \ |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnx30gi7h.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnx30gi7h.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnx30gi7h.rs:62:25\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 0;\n    let mut\
    \ remainder: isize = 0;\n    let mut numerals: Vec<isize> = vec![];\n    let mut\
    \ numeral: isize = 0;\n    let mut numeral_string: String = String::new();\n\n\
    \    while num < number {\n        remainder = num % 10;\n        numerals.push(remainder);\n\
    \        num /= 10;\n    }\n\n    numerals.sort_unstable();\n\n    for numeral\
    \ in numerals {\n        numeral_string.push_str(numeral.to_string());\n    }\n\
    \n    roman.push_str(numeral_string);\n    roman.push_str(\"i\");\n\n    roman\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpu3rv0bve.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu3rv0bve.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu3rv0bve.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu3rv0bve.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu3rv0bve.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu3rv0bve.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu3rv0bve.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu3rv0bve.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpu3rv0bve.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu3rv0bve.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu3rv0bve.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_len = String::new();\n    let mut numeral_digits_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len = String::new();\n\
    \    let mut numeral_digits_len_len_len_len_len = String::new();\n    let mut\
    \ numeral_digits_len_len_len_len_len_len = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp2v1s7fvg.rs:36:72\n   |\n\
    36 |     let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_\n\
    \   |                                                                        ^\
    \ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2v1s7fvg.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2v1s7fvg.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2v1s7fvg.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2v1s7fvg.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2v1s7fvg.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2v1s7fvg.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2v1s7fvg.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2v1s7fvg.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2v1s7fvg.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2v1s7fvg.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {rig"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"\
    D\"),\n                            String::from(\"CD\"), String::from(\"C\"),\
    \ String::from(\"XC\"),\n                            String::from(\"L\"), String::from(\"\
    XL\"), String::from(\"X\"),\n                            String::from(\"IX\"),\
    \ String::from(\"V\"), String::from(\"IV\"),\n                            String::from(\"\
    I\")];\n    let mut numeral_index = 0;\n    let mut numeral_length = 0;\n    let\
    \ mut numeral_string = \"\";\n    let mut numeral_strings = vec![String::from(\"\
    M\"), String::from(\"CM\"), String::from(\"D\"),\n                           \
    \      String::from(\"CD\"), String::from(\"C\"), String::from(\"XC\"),\n    \
    \                             String::from(\"L\"), String::from(\"XL\"), String::from(\"\
    X\"),\n                                 String::from(\"IX\"), String::from(\"\
    V\"), String::from(\"IV\"),\n                                 String::from(\"\
    I\")];\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mut numeral_string_index = 0;\n    let mut numeral_string_length\
    \ = 0;\n    let mu\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpcy3vsgdk.rs:57:11\n   |\n\
    57 |     let mu\n   |           ^ help: add `;` here\n58 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcy3vsgdk.rs:62:17\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcy3vsgdk.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcy3vsgdk.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcy3vsgdk.rs:63:25\n\
    \   |\n63 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcy3vsgdk.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcy3vsgdk.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcy3vsgdk.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcy3vsgdk.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcy3vsgdk.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcy3vsgdk.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_map = [0; 4];\n    let mut numeral_map_index = 0;\n    let\
    \ mut numeral_map_size = 4;\n    let mut numeral_map_roman = [0; 3];\n    let\
    \ mut numeral_map_roman_index = 0;\n    let mut numeral_map_roman_size = 3;\n\
    \    let mut numeral_map_roman_map = [0; 3];\n    let mut numeral_map_roman_map_index\
    \ = 0;\n    let mut numeral_map_roman_map_size = 3;\n    let mut numeral_map_roman_map_roman\
    \ = [0; 3];\n    let mut numeral_map_roman_map_roman_index = 0;\n    let mut numeral_map_roman_map_roman_size\
    \ = 3;\n    let mut numeral_map_roman_map_roman_map = [0; 3];\n    let mut numeral_map_roman_map_roman_map_index\
    \ = 0;\n    let mut numeral_map_roman_map_roman_map_size = 3;\n    let mut numeral_map_roman_map_roman_map_roman\
    \ = [0; 3];\n    let mut numeral_map_roman_map_roman_map_roman_index = 0;\n  \
    \  let mut numeral_map_roman_map_roman_map_roman_size = 3;\n    let mut numeral_map_roman_map_roman_map_roman_map\
    \ = [0; 3];\n    let mut numeral_map_roman_map_roman_map_roman_map_index = 0;\n\
    \    let mut numeral_map_roman_map_roman_map_roman_map_size = 3;\n    let mut\
    \ numeral_map_roman_map_roman_map_roman_map_roman = [0; 3];\n    let mut numeral_map_roman_map_roman_map_roman_map_roman_index\
    \ = 0;\n    let mut numeral_map_roman_map_roman_map_roman_map_roman_size = 3;\n\
    \    let mut numeral_map_roman_map_roman_map_roman_map_roman_map = [0; 3];\n \
    \   let mut numeral_map_roman_map_roman_map_roman_map_roman_map_index = 0;\n \
    \   let mut numeral_map_roman_map_roman_map_roman_map_roman_map_size = 3;\n  \
    \  let mut numeral_map_roman_map_roman_map_roman_map_roman_map_roman = [0; 3];\n\
    \    let mut numeral_map_roman_map_roman_map_roman_map_roman_map_roman_index =\
    \ 0;\n    let mut numeral_map_roman_map_roman_map_roman_\n}\n\nfn main() {\n \
    \   let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpn_gyfo3k.rs:43:51\n   |\n\
    43 |     let mut numeral_map_roman_map_roman_map_roman_\n   |                \
    \                                   ^ help: add `;` here\n44 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpn_gyfo3k.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn_gyfo3k.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn_gyfo3k.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn_gyfo3k.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn_gyfo3k.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn_gyfo3k.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn_gyfo3k.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn_gyfo3k.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn_gyfo3k.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn_gyfo3k.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ n"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n        \"i\", \"i\",\
    \ \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    ,\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n    \
    \    \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\",\n\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `}`\n\
    \  --> /tmp/tmpd_i7z2dt.rs:32:1\n   |\n32 | }\n   | ^ expected one of `.`, `;`,\
    \ `?`, `else`, or an operator\n\nerror: mismatched closing delimiter: `}`\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:13:28\n   |\n11 | fn int_to_mini_roman(number: isize) ->\
    \ String {\n   |                                               - closing delimiter\
    \ possibly meant for this\n12 |     let mut roman = String::new();\n13 |     let\
    \ mut numerals = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\"\
    , \"l\",\n   |                            ^ unclosed delimiter\n...\n32 | }\n\
    \   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpd_i7z2dt.rs:36:17\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:36:25\n \
    \  |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd_i7z2dt.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \       "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map_inv = HashMap::new();\n\
    \    let mut numerals_map_inv2 = HashMap::new();\n    let mut numerals_map_inv3\
    \ = HashMap::new();\n    let mut numerals_map_inv4 = HashMap::new();\n    let\
    \ mut numerals_map_inv5 = HashMap::new();\n    let mut numerals_map_inv6 = HashMap::new();\n\
    \    let mut numerals_map_inv7 = HashMap::new();\n    let mut numerals_map_inv8\
    \ = HashMap::new();\n    let mut numerals_map_inv9 = HashMap::new();\n    let\
    \ mut numerals_map_inv10 = HashMap::new();\n    let mut numerals_map_inv11 = HashMap::new();\n\
    \    let mut numerals_map_inv12 = HashMap::new();\n    let mut numerals_map_inv13\
    \ = HashMap::new();\n    let mut numerals_map_inv14 = HashMap::new();\n    let\
    \ mut numerals_map_inv15 = HashMap::new();\n    let mut numerals_map_inv16 = HashMap::new();\n\
    \    let mut numerals_map_inv17 = HashMap::new();\n    let mut numerals_map_inv18\
    \ = HashMap::new();\n    let mut numerals_map_inv19 = HashMap::new();\n    let\
    \ mut numerals_map_inv20 = HashMap::new();\n    let mut numerals_map_inv21 = HashMap::new();\n\
    \    let mut numerals_map_inv22 = HashMap::new();\n    let mut numerals_map_inv23\
    \ = HashMap::new();\n    let mut numerals_map_inv24 = HashMap::new();\n    let\
    \ mut numerals_map_inv25 = HashMap::new();\n    let mut numerals_map_inv26 = HashMap::new();\n\
    \    let mut numerals_map_inv27 = HashMap::new();\n    let mut numerals_map_inv28\
    \ = HashMap::new();\n    let mut numerals_map_inv29 = HashMap::new();\n    let\
    \ mut numerals_map_inv30 = HashMap::new();\n    let mut numerals_map_inv3\n}\n\
    \nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpiipi8v2m.rs:45:30\n   |\n\
    45 |     let mut numerals_map_inv3\n   |                              ^ help:\
    \ add `;` here\n46 | }\n   | - unexpected token\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:14:28\n   |\n14\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:15:32\n   |\n15\
    \ |     let mut numerals_map_inv = HashMap::new();\n   |                     \
    \           ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this\
    \ struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:16:33\n\
    \   |\n16 |     let mut numerals_map_inv2 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:17:33\n\
    \   |\n17 |     let mut numerals_map_inv3 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:18:33\n\
    \   |\n18 |     let mut numerals_map_inv4 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:19:33\n\
    \   |\n19 |     let mut numerals_map_inv5 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::H"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_rev = String::new();\n    let mut numeral_digits_len_rev_len\
    \ = String::new();\n    let mut numeral_digits_len_rev_len2 = String::new();\n\
    \    let mut numeral_digits_len_rev_len3 = String::new();\n    let mut numeral_digits_len_rev_len4\
    \ = String::new();\n    let mut numeral_digits_len_rev_len5 = String::new();\n\
    \    let mut numeral_digits_len_rev_len6 = String::new();\n    let mut numeral_digits_len_rev_len7\
    \ = String::new();\n    let mut numeral_digits_len_rev_len8 = String::new();\n\
    \    let mut numeral_digits_len_rev_len9 = String::new();\n    let mut numeral_digits_len_rev_len10\
    \ = String::new();\n    let mut numeral_digits_len_rev_len11 = String::new();\n\
    \    let mut numeral_digits_len_rev_len12 = String::new();\n    let mut numeral_digits_len_rev_len13\
    \ = String::new();\n    let mut numeral_digits_len_rev_len14 = String::new();\n\
    \    let mut numeral_digits_len_rev_len15 = String::new();\n    let mut numeral_digits_len_rev_len16\
    \ = String::new();\n    let mut numeral_digits_len_rev_len17 = String::new();\n\
    \    let mut numeral_digits_len_rev_len18 = String::new();\n    let mut numeral_digits_len_rev_len19\
    \ = String::new();\n    let mut numeral_digits_len_rev_len20 = String::new();\n\
    \    let mut numeral_digits_len_rev_len21 = String::new();\n    let mut numeral_digits_len_rev_len22\
    \ = String::new();\n    let mut numeral_digits_len_rev_len23 = String::new();\n\
    \    let mut numeral_digits_len_rev_len24 = String::new();\n    let mut numeral_digits_len_rev_len25\
    \ = String::new();\n    let mut numeral_digits_len_rev_len26 = String\n}\n\nfn\
    \ main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmptfrwiszc.rs:42:50\n   |\n\
    42 |     let mut numeral_digits_len_rev_len26 = String\n   |                 \
    \                                 ^ help: add `;` here\n43 | }\n   | - unexpected\
    \ token\n\nerror[E0423]: expected value, found struct `String`\n   --> /tmp/tmptfrwiszc.rs:42:44\n\
    \    |\n42  |       let mut numeral_digits_len_rev_len26 = String\n    |     \
    \                                         ^^^^^^ help: use struct literal syntax\
    \ instead: `String { vec: val }`\n\nerror[E0425]: cannot find value `left` in\
    \ this scope\n  --> /tmp/tmptfrwiszc.rs:47:17\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmptfrwiszc.rs:47:25\n \
    \  |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptfrwiszc.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptfrwiszc.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptfrwiszc.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptfrwiszc.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptfrwiszc.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptfrwiszc.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptfrwiszc"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"e\", \"f\", \"\
    ff\", \"fff\", \"g\", \"h\", \"hh\", \"hhi\", \"i\", \"ii\", \"iii\", \"j\", \"\
    jj\", \"jjj\", \"k\", \"l\", \"ll\", \"lll\", \"m\", \"n\", \"nn\", \"nnn\", \"\
    o\", \"p\", \"pp\", \"ppp\", \"q\", \"r\", \"rr\", \"rr\"\n    ];\n    let mut\
    \ numeral_index = 0;\n    let mut numeral_index2 = 0;\n    let mut numeral_index3\
    \ = 0;\n    let mut numeral_index4 = 0;\n    let mut numeral_index5 = 0;\n   \
    \ let mut numeral_index6 = 0;\n    let mut numeral_index7 = 0;\n    let mut numeral_index8\
    \ = 0;\n    let mut numeral_index9 = 0;\n    let mut numeral_index10 = 0;\n  \
    \  let mut numeral_index11 = 0;\n    let mut numeral_index12 = 0;\n    let mut\
    \ numeral_index13 = 0;\n    let mut numeral_index14 = 0;\n    let mut numeral_index15\
    \ = 0;\n    let mut numeral_index16 = 0;\n    let mut numeral_index17 = 0;\n \
    \   let mut numeral_index18 = 0;\n    let mut numeral_index19 = 0;\n    let mut\
    \ numeral_index20 = 0;\n    let mut numeral_index21 = 0;\n    let mut numeral_index22\
    \ = 0;\n    let mut numeral_index23 = 0;\n    let mut numeral_index24 = 0;\n \
    \   let mut numeral_index25 = 0;\n    let mut numeral_index26 = 0;\n    let mut\
    \ numeral_index27 = 0;\n    let mut numeral_index28 = 0;\n    let mut numeral_index29\
    \ = 0;\n    let mut numeral_index30 = 0;\n    let mut numeral_index31 = 0;\n \
    \   let mut numeral_index32 = 0;\n    let mut numeral_index33 = 0;\n    let mut\
    \ numeral_index34 = 0;\n    let mut numeral_index35 = 0;\n    let mut numeral_index36\
    \ = 0;\n    let mut numeral_index37 = 0;\n    let mut numeral_index38 = 0;\n \
    \   let mut numeral_index39 = 0;\n    let mut numeral_index40 = 0;\n    let mut\
    \ numeral_index41 = 0;\n    let mut numeral_index42 = 0;\n    let mut numeral_index43\
    \ = 0;\n    let mut numeral_index44 = 0;\n    let mut numeral_index45 = 0;\n \
    \   let mut numeral_index46\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpv9ff22bh.rs:60:28\n   |\n\
    60 |     let mut numeral_index46\n   |                            ^ help: add\
    \ `;` here\n61 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpv9ff22bh.rs:65:17\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpv9ff22bh.rs:65:25\n \
    \  |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv9ff22bh.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv9ff22bh.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv9ff22bh.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv9ff22bh.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv9ff22bh.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv9ff22bh.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv9ff22bh.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv9ff22bh.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot f"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"x\",\n        3 => \"\
    l\",\n        4 => \"l\",\n        5 => \"c\",\n        6 => \"c\",\n        7\
    \ => \"d\",\n        8 => \"d\",\n        9 => \"m\",\n        10 => \"m\",\n\
    \        11 => \"l\",\n        12 => \"l\",\n        13 => \"x\",\n        14\
    \ => \"x\",\n        15 => \"c\",\n        16 => \"c\",\n        17 => \"d\",\n\
    \        18 => \"d\",\n        19 => \"m\",\n        20 => \"m\",\n        21\
    \ => \"l\",\n        22 => \"l\",\n        23 => \"x\",\n        24 => \"x\",\n\
    \        25 => \"c\",\n        26 => \"c\",\n        27 => \"d\",\n        28\
    \ => \"d\",\n        29 => \"m\",\n        30 => \"m\",\n        31 => \"l\",\n\
    \        32 => \"l\",\n        33 => \"x\",\n        34 => \"x\",\n        35\
    \ => \"c\",\n        36 => \"c\",\n        37 => \"d\",\n        38 => \"d\",\n\
    \        39 => \"m\",\n        40 => \"m\",\n        41 => \"l\",\n        42\
    \ => \"l\",\n        43 => \"x\",\n        44 => \"x\",\n        45 => \"c\",\n\
    \        46 => \"c\",\n        47 => \"d\",\n        48 => \"d\",\n        49\
    \ => \"m\",\n        50 => \"m\",\n        51 => \"l\",\n        52 => \"l\",\n\
    \        53 => \"x\",\n        54 => \"x\",\n        55 => \"c\",\n        56\
    \ => \"c\",\n        57 => \"d\",\n        58 => \"d\",\n        59 => \"m\",\n\
    \        60 => \"m\",\n        61 => \"l\",\n        62 => \"l\",\n        63\
    \ => \"x\",\n        64 => \"x\",\n        65 => \"c\",\n        66 => \"c\",\n\
    \        67 => \"d\",\n        68 => \"d\",\n        69 => \"m\",\n        70\
    \ => \"m\",\n        71 => \"l\",\n        72 => \"l\",\n        73 => \"x\",\n\
    \        74 => \"x\",\n        75 => \"c\",\n        76 => \"c\",\n        77\
    \ => \"d\",\n        78 => \"d\",\n        79 => \"m\",\n        80 => \"m\",\n\
    \        81 => \"l\",\n        82 => \"l\",\n        83 => \"x\",\n        84\
    \ => \"x\",\n        85 => \"c\",\n        86 => \"c\",\n        87\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpu8434nl7.rs:118:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n100 | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n118 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n   --> /tmp/tmpu8434nl7.rs:100:1\n    |\n99  |         87\n\
    \    |           - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n100\
    \ | }\n    | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpu8434nl7.rs:104:17\n    |\n104 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpu8434nl7.rs:104:25\n\
    \    |\n104 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpu8434nl7.rs:105:17\n    |\n105 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpu8434nl7.rs:105:25\n\
    \    |\n105 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpu8434nl7.rs:106:17\n    |\n106 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpu8434nl7.rs:106:25\n\
    \    |\n106 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpu8434nl7.rs:107:17\n    |\n107 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpu8434nl7.rs:107:"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        7\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppb6j91m9.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmppb6j91m9.rs:83:1\n   |\n82 |         7\n  \
    \ |          - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n83 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppb6j91m9.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::fmt::{self, Display};\n    use std::str::FromStr;\n\
    \n    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\"\
    , \"c\", \"l\", \"l\", \"x\", \"x\", \"x\", \"c\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_value = number;\n    while numeral_value >= 1000 {\n\
    \        numeral_index += 1;\n        numeral_value -= 1000;\n        numerals.insert(numeral_index,\
    \ \"\");\n    }\n    while numeral_value >= 100 {\n        numeral_index += 1;\n\
    \        numeral_value -= 100;\n        numerals.insert(numeral_index, \"\");\n\
    \    }\n    while numeral_value >= 10 {\n        numeral_index += 1;\n       \
    \ numeral_value -= 10;\n        numerals.insert(numeral_index, \"\");\n    }\n\
    \    while numeral_value >= 1 {\n        numeral_index += 1;\n        numeral_value\
    \ -= 1;\n        numerals.insert(numeral_index, \"\");\n    }\n    while numeral_value\
    \ >= 5 {\n        numeral_index += 1;\n        numeral_value -= 5;\n        numerals.insert(numeral_index,\
    \ \"\");\n    }\n    while numeral_value >= 4 {\n        numeral_index += 1;\n\
    \        numeral_value -= 4;\n        numerals.insert(numeral_index, \"\");\n\
    \    }\n    while numeral_value >= 3 {\n        numeral_index += 1;\n        numeral_value\
    \ -= 3;\n        numerals.insert(numeral_index, \"\");\n    }\n    while numeral_value\
    \ >= 2 {\n        numeral_index += 1;\n        numeral_value -= 2;\n        numerals.insert(numeral_index,\
    \ \"\");\n    }\n    while numeral_value >= 1 {\n        numeral_index += 1;\n\
    \        numeral_value -= 1;\n        numerals.insert(numeral_index, \"\");\n\
    \    }\n    while numeral_value >= 0 {\n        numeral_index += 1;\n        numeral_value\
    \ -= 0;\n        numerals.insert(numeral_index, \"\");\n    }\n    numerals.insert(numeral_index,\
    \ \"\");\n    numerals.sort_by(|a, b| a.cmp(b).unwrap_or(Ordering::Equal));\n\
    \    for i in numerals.iter() {\n        if i.is_empty() {\n            continue;\n\
    \        }\n        if numeral_index == 0 {\n            roman += i.to_owned();\n\
    \        } else {\n            roman += numerals[numeral_index - 1].to_owned();\n\
    \            roman += i.to_owned();\n        }\n    }\n\n}\n\nfn main() {\n  \
    \  let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpy4w62vq8.rs:88:17\n\
    \   |\n88 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpy4w62vq8.rs:88:25\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpy4w62vq8.rs:89:17\n   |\n89 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpy4w62vq8.rs:89:25\n\
    \   |\n89 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpy4w62vq8.rs:90:17\n   |\n90 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpy4w62vq8.rs:90:25\n   |\n90 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpy4w62vq8.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpy4w62vq8.rs:91:25\n   |\n91 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpy4w62vq8.rs:92:17\n  \
    \ |\n92 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpy4w62vq8.rs:92:25\n   |\n92 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpy4w62vq8.rs:93:17\n   |\n93 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::cmp::Ordering::*;\n\n    let mut roman\
    \ = String::new();\n    let mut numerals = vec![];\n\n    // The first 10 numbers\
    \ are in descending order\n    for num in 1..10 {\n        if number >= num {\n\
    \            numerals.push(num.to_string());\n            number -= num;\n   \
    \     }\n    }\n\n    // The remaining numbers are in ascending order\n    for\
    \ num in number..100 {\n        if number >= num {\n            numerals.push(num.to_string());\n\
    \            number -= num;\n        }\n    }\n\n    // The first 10 numbers are\
    \ in descending order\n    for num in 1..10 {\n        if number >= num {\n  \
    \          numerals.push(num.to_string());\n            number -= num;\n     \
    \   }\n    }\n\n    // The remaining numbers are in ascending order\n    for num\
    \ in number..100 {\n        if number >= num {\n            numerals.push(num.to_string());\n\
    \            number -= num;\n        }\n    }\n\n    // The first 10 numbers are\
    \ in descending order\n    for num in 1..10 {\n        if number >= num {\n  \
    \          numerals.push(num.to_string());\n            number -= num;\n     \
    \   }\n    }\n\n    // The remaining numbers are in ascending order\n    for num\
    \ in number..100 {\n        if number >= num {\n            numerals.push(num.to_string());\n\
    \            number -= num;\n        }\n    }\n\n    // The first 10 numbers are\
    \ in descending order\n    for num in 1..10 {\n        if number >= num {\n  \
    \          numerals.push(num.to_string());\n            number -= num;\n     \
    \   }\n    }\n\n    // The remaining numbers are in ascending order\n    for num\
    \ in number..100 {\n        if number >= num {\n            numerals.push(num.to_string());\n\
    \            number -= num;\n        }\n    }\n\n    // The first 10 numbers are\
    \ in descending order\n    for num in 1..10 {\n        if number >= num {\n  \
    \          numerals.push(num.to_string());\n            number -= num;\n     \
    \   }\n    }\n\n    // The remaining numbers are in ascending order\n    for num\
    \ in number..100 {\n        if number >= num {\n            numerals.push(num.to_string());\n\
    \            number -= num;\n        }\n    }\n\n    // The first 10 numbers are\
    \ in descending order\n    for num in 1..10 {\n        if number >= num {\n  \
    \          numerals.push(num.to_string());\n            number \n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpqygkft6q.rs:121:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n...\n99  |     for\
    \ num in 1..10 {\n    |                      - unclosed delimiter\n100 |     \
    \    if number >= num {\n    |                          - this delimiter might\
    \ not be properly closed...\n...\n103 | }\n    | - ...as it matches this but it\
    \ has different indentation\n...\n121 | }\n    |   ^\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n   --> /tmp/tmpqygkft6q.rs:107:17\n    |\n107 |\
    \     assert_eq!({left}, {right});\n    |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n   --> /tmp/tmpqygkft6q.rs:107:25\n\
    \    |\n107 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpqygkft6q.rs:108:17\n    |\n108 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpqygkft6q.rs:108:25\n\
    \    |\n108 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpqygkft6q.rs:109:17\n    |\n109 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpqygkft6q.rs:109:25\n\
    \    |\n109 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpqygkft6q.rs:110:17\n    |\n110 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpqygkft6q.rs:110:25\n\
    \    |\n110 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find valu"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![String::from(\"\
    M\"), String::from(\"CM\"), String::from(\"D\"), String::from(\"CD\"),\n     \
    \                      String::from(\"C\"), String::from(\"XC\"), String::from(\"\
    L\"), String::from(\"XL\"),\n                           String::from(\"X\"), String::from(\"\
    IX\"), String::from(\"V\"), String::from(\"IV\"),\n                          \
    \ String::from(\"I\")];\n    let mut numeral_to_roman = vec![String::from(\"M\"\
    ), String::from(\"CM\"), String::from(\"D\"), String::from(\"CD\"),\n        \
    \                          String::from(\"C\"), String::from(\"XC\"), String::from(\"\
    L\"), String::from(\"XL\"),\n                                  String::from(\"\
    X\"), String::from(\"IX\"), String::from(\"V\"), String::from(\"IV\"),\n     \
    \                             String::from(\"I\")];\n    let mut numeral_to_roman_counter\
    \ = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"D\"), String::from(\"\
    CD\"),\n                                         String::from(\"C\"), String::from(\"\
    XC\"), String::from(\"L\"), String::from(\"XL\"),\n                          \
    \               String::from(\"X\"), String::from(\"IX\"), String::from(\"V\"\
    ), String::from(\"IV\"),\n                                         String::from(\"\
    I\")];\n    let mut numeral_to_roman_counter2 = vec![String::from(\"M\"), String::from(\"\
    CM\"), String::from(\"D\"), String::from(\"CD\"),\n                          \
    \                String::from(\"C\"), String::from(\"XC\"), String::from(\"L\"\
    ), String::from(\"XL\"),\n                                          String::from(\"\
    X\"), String::from(\"IX\"), String::from(\"V\"), String::from(\"IV\"),\n     \
    \                                     String::from(\"I\")];\n    let mut numeral_to_roman_counter3\
    \ = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"D\"), String::from(\"\
    CD\"),\n                                          String::from(\"C\"), String::from(\"\
    XC\"), String::from(\"L\"), String::from(\"XL\"),\n                          \
    \                String::from(\"X\"), String::from(\"IX\"), String::from(\"V\"\
    ), String::from(\"IV\"),\n                                          String::from(\"\
    I\")];\n    let mut numeral_to_roman_counter4 = vec\n}\n\nfn main() {\n    let\
    \ candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpqgwrb4ck.rs:33:44\n   |\n\
    33 |     let mut numeral_to_roman_counter4 = vec\n   |                       \
    \                     ^ help: add `;` here\n34 | }\n   | - unexpected token\n\n\
    error[E0423]: expected value, found macro `vec`\n  --> /tmp/tmpqgwrb4ck.rs:33:41\n\
    \   |\n33 |     let mut numeral_to_roman_counter4 = vec\n   |                \
    \                         ^^^ not a value\n   |\nhelp: use `!` to invoke the macro\n\
    \   |\n33 |     let mut numeral_to_roman_counter4 = vec!\n   |               \
    \                             +\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpqgwrb4ck.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqgwrb4ck.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqgwrb4ck.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqgwrb4ck.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqgwrb4ck.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqgwrb4ck.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqgwrb4ck.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqgwrb4ck.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cann"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_iter = numerals.iter();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmp7sv6ufa5.rs:45:1\n   |\n45\
    \ | }\n   | ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmp7sv6ufa5.rs:44:47\n\
    \   |\n44 |     let mut numerals_iter_mut = numerals_iter.\n   |             \
    \                                  ^ help: add `;` here\n45 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7sv6ufa5.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7sv6ufa5.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7sv6ufa5.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7sv6ufa5.rs:53:25\n   |\n53"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        7\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppb6j91m9.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmppb6j91m9.rs:83:1\n   |\n82 |         7\n  \
    \ |          - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n83 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppb6j91m9.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\",\
    \ \"xl\", \"lx\", \"x\", \"ix\", \"iv\", \"v\", \"vi\", \"vii\", \"i\"];\n   \
    \ let mut numeral_index = 0;\n    let mut numeral_length = 0;\n    let mut numeral_lengths\
    \ = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\", \"lx\", \"x\", \"l\"\
    , \"xl\", \"lx\", \"x\", \"l\", \"xl\", \"lx\"];\n    let mut numeral_length_index\
    \ = 0;\n    let mut numeral_length_length = 0;\n    let mut numeral_length_lengths\
    \ = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\", \"lx\", \"x\", \"l\"\
    , \"xl\", \"lx\", \"x\", \"l\", \"xl\", \"lx\"];\n    let mut numeral_length_length_index\
    \ = 0;\n    let mut numeral_length_length_length = 0;\n    let mut numeral_length_length_lengths\
    \ = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\", \"lx\", \"x\", \"l\"\
    , \"xl\", \"lx\", \"x\", \"l\", \"xl\", \"lx\"];\n    let mut numeral_length_length_length_index\
    \ = 0;\n    let mut numeral_length_length_length_length = 0;\n    let mut numeral_length_length_length_lengths\
    \ = vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\", \"lx\", \"x\", \"l\"\
    , \"xl\", \"lx\", \"x\", \"l\", \"xl\", \"lx\"];\n    let mut numeral_length_length_length_length_index\
    \ = 0;\n    let mut numeral_length_length_length_length_length = 0;\n    let mut\
    \ numeral_length_length_length_length_lengths = vec![\"\", \"c\", \"d\", \"i\"\
    , \"x\", \"l\", \"xl\", \"lx\", \"x\", \"l\", \"xl\", \"lx\", \"x\", \"l\", \"\
    xl\", \"lx\"];\n    let mut numeral_length_length_length_length_length_index =\
    \ 0;\n    let mut numeral_length_length_length_length_length_length = 0;\n   \
    \ let mut numeral_length_length_length_length_length_lengths = vec![\"\", \"c\"\
    , \"d\", \"i\", \"x\", \"l\", \"xl\", \"lx\", \"x\", \"l\", \"xl\", \"lx\", \"\
    x\", \"l\", \"xl\", \"lx\"];\n    let mut numeral_length_length_length_length_length_length_index\
    \ = 0;\n    let mut numeral_length_length_length_length_length_length_length =\
    \ 0;\n    let mut numeral_length_length_length_length_length_length_lengths =\
    \ vec![\"\", \"c\", \"d\", \"i\", \"x\", \"l\", \"xl\", \"lx\", \"x\", \"l\",\
    \ \"xl\", \"lx\", \"x\", \"l\", \"xl\", \"lx\"];\n    let mut numeral_length_length_length_length_length_length_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp6fgrdx3w.rs:36:63\n   |\n\
    36 |     let mut numeral_length_length_length_length_length_length_\n   |    \
    \                                                           ^ help: add `;` here\n\
    37 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp6fgrdx3w.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6fgrdx3w.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6fgrdx3w.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6fgrdx3w.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6fgrdx3w.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6fgrdx3w.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6fgrdx3w.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6fgrdx3w.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6fgrdx3w.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6fgrdx3w.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |        "
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::fmt::{self, Display};\n\n    let mut\
    \ roman = String::new();\n    let mut num = 0;\n    let mut prev_num = 0;\n  \
    \  let mut prev_roman = String::new();\n    let mut prev_roman_num = 0;\n\n  \
    \  while number > 0 {\n        let mut roman_num = 0;\n        let mut roman_num_str\
    \ = \"\";\n\n        while number > 0 {\n            let digit = number % 10;\n\
    \            roman_num += digit as isize;\n            number /= 10;\n       \
    \     roman_num_str.push((digit as char).to_string());\n        }\n\n        if\
    \ roman_num > 0 {\n            if roman_num > prev_num {\n                roman.push((prev_roman\
    \ as char).to_string());\n                prev_roman_num += roman_num as isize;\n\
    \            } else {\n                roman.push((prev_roman as char).to_string());\n\
    \                roman.push((roman_num_str as char).to_string());\n          \
    \      prev_roman_num += roman_num as isize;\n            }\n        } else {\n\
    \            roman.push((prev_roman as char).to_string());\n            prev_roman_num\
    \ += roman_num as isize;\n        }\n\n        prev_num = roman_num;\n       \
    \ prev_roman = roman_num_str;\n    }\n\n    roman\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpavpipq8r.rs:55:17\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavpipq8r.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavpipq8r.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpavpipq8r.rs:56:25\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpavpipq8r.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpavpipq8r.rs:57:25\n   |\n57 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpavpipq8r.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpavpipq8r.rs:58:25\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpavpipq8r.rs:59:17\n  \
    \ |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpavpipq8r.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpavpipq8r.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map_inv = HashMap::new();\n\
    \    let mut numerals_map_inv2 = HashMap::new();\n    let mut numerals_map_inv3\
    \ = HashMap::new();\n    let mut numerals_map_inv4 = HashMap::new();\n    let\
    \ mut numerals_map_inv5 = HashMap::new();\n    let mut numerals_map_inv6 = HashMap::new();\n\
    \    let mut numerals_map_inv7 = HashMap::new();\n    let mut numerals_map_inv8\
    \ = HashMap::new();\n    let mut numerals_map_inv9 = HashMap::new();\n    let\
    \ mut numerals_map_inv10 = HashMap::new();\n    let mut numerals_map_inv11 = HashMap::new();\n\
    \    let mut numerals_map_inv12 = HashMap::new();\n    let mut numerals_map_inv13\
    \ = HashMap::new();\n    let mut numerals_map_inv14 = HashMap::new();\n    let\
    \ mut numerals_map_inv15 = HashMap::new();\n    let mut numerals_map_inv16 = HashMap::new();\n\
    \    let mut numerals_map_inv17 = HashMap::new();\n    let mut numerals_map_inv18\
    \ = HashMap::new();\n    let mut numerals_map_inv19 = HashMap::new();\n    let\
    \ mut numerals_map_inv20 = HashMap::new();\n    let mut numerals_map_inv21 = HashMap::new();\n\
    \    let mut numerals_map_inv22 = HashMap::new();\n    let mut numerals_map_inv23\
    \ = HashMap::new();\n    let mut numerals_map_inv24 = HashMap::new();\n    let\
    \ mut numerals_map_inv25 = HashMap::new();\n    let mut numerals_map_inv26 = HashMap::new();\n\
    \    let mut numerals_map_inv27 = HashMap::new();\n    let mut numerals_map_inv28\
    \ = HashMap::new();\n    let mut numerals_map_inv29 = HashMap::new();\n    let\
    \ mut numerals_map_inv30 = HashMap::new();\n    let mut numerals_map_inv3\n}\n\
    \nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpiipi8v2m.rs:45:30\n   |\n\
    45 |     let mut numerals_map_inv3\n   |                              ^ help:\
    \ add `;` here\n46 | }\n   | - unexpected token\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:14:28\n   |\n14\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:15:32\n   |\n15\
    \ |     let mut numerals_map_inv = HashMap::new();\n   |                     \
    \           ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this\
    \ struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:16:33\n\
    \   |\n16 |     let mut numerals_map_inv2 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:17:33\n\
    \   |\n17 |     let mut numerals_map_inv3 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:18:33\n\
    \   |\n18 |     let mut numerals_map_inv4 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpiipi8v2m.rs:19:33\n\
    \   |\n19 |     let mut numerals_map_inv5 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::H"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"c\", \"l\", \"l\", \"x\", \"x\"];\n    let mut numeral_index = 0;\n    let\
    \ mut numeral_value = 0;\n    let mut numeral_string = \"\";\n    let mut numeral_length\
    \ = number;\n    let mut numeral_length_string = String::new();\n    let mut numeral_length_numerals\
    \ = String::new();\n    let mut numeral_length_numerals_string = \"\";\n    let\
    \ mut numeral_length_numerals_numerals = String::new();\n    let mut numeral_length_numerals_numerals_string\
    \ = \"\";\n    let mut numeral_length_numerals_numerals_numerals = String::new();\n\
    \    let mut numeral_length_numerals_numerals_numerals_string = \"\";\n    let\
    \ mut numeral_length_numerals_numerals_numerals_numerals = String::new();\n  \
    \  let mut numeral_length_numerals_numerals_numerals_numerals_string = \"\";\n\
    \    let mut numeral_length_numerals_numerals_numerals_numerals_numerals = String::new();\n\
    \    let mut numeral_length_numerals_numerals_numerals_numerals_numerals_string\
    \ = \"\";\n    let mut numeral_length_numerals_numerals_numerals_numerals_numerals_numerals\
    \ = String::new();\n    let mut numeral_length_numerals_numerals_numerals_numerals_numerals_numerals_string\
    \ = \"\";\n    let mut numeral_length_numerals_numerals_numerals_numerals_numerals_numerals_numerals\
    \ = String::new();\n    let mut numeral_length_numerals_numerals_numerals_numerals_numerals_numerals_numerals_string\
    \ = \"\";\n    let mut numeral_length_numerals_numerals_numerals_numerals_numerals_numerals_numerals_numerals\
    \ = String::new();\n    let mut numeral_length_numerals_numerals_numerals_numerals_numerals_numerals_numerals_numerals_string\
    \ = \"\";\n    let mut numeral_length_numerals_numerals_numerals_numerals_numerals_numerals_numerals_numerals_numerals\
    \ = String::new();\n    let mut numeral_length_numerals_numerals_numerals_numerals_numerals_numer\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp_712qfrv.rs:36:78\n   |\n\
    36 |     let mut numeral_length_numerals_numerals_numerals_numerals_numerals_numer\n\
    \   |                                                                        \
    \      ^ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_712qfrv.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_712qfrv.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_712qfrv.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_712qfrv.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_712qfrv.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_712qfrv.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_712qfrv.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_712qfrv.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_712qfrv.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_712qfrv.rs:45:25\n   |\n45 |     assert_eq!("
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n                     \
    \       \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n     \
    \                       \"v\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\"\
    , \"vi\",\n                            \"vi\", \"vi\", \"vi\", \"vi\", \"vi\"\
    , \"vi\", \"vi\", \"vi\",\n                            \"vi\", \"vi\", \"vi\"\
    , \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                            \"vi\"\
    , \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                  \
    \          \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n \
    \                           \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"\
    vi\", \"vi\",\n                            \"vi\", \"vi\", \"vi\", \"vi\", \"\
    vi\", \"vi\", \"vi\", \"vi\",\n                            \"vi\", \"vi\", \"\
    vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                            \"\
    vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n              \
    \              \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\"\
    ,\n                            \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\"\
    , \"vi\", \"vi\",\n                            \"vi\", \"vi\", \"vi\", \"vi\"\
    , \"vi\", \"vi\", \"vi\", \"vi\",\n                            \"vi\", \"vi\"\
    , \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                          \
    \  \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n         \
    \                   \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"\
    vi\",\n                            \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"\
    vi\", \"vi\", \"vi\",\n                            \"vi\", \"vi\", \"vi\", \"\
    vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                            \"vi\", \"\
    vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                      \
    \      \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n     \
    \                       \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\"\
    , \"vi\",\n                            \"vi\", \"vi\", \"vi\", \"vi\", \"vi\"\
    , \"vi\", \"vi\", \"vi\",\n                            \"vi\", \"vi\", \"vi\"\
    , \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                            \"vi\"\
    , \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                  \
    \          \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n \
    \                           \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"\
    vi\", \"vi\",\n                            \"vi\", \"vi\", \"vi\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n  --> /tmp/tmpbxhradks.rs:40:41\n\
    \   |\n40 |                               \"vi\", \"vi\", \"vi\n   |  _________________________________________^\n\
    41 | | }\n42 | |\n43 | | fn main() {\n...  |\n58 | |     assert_eq!({left}, {right});\n\
    59 | | }\n   | |__^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0765`.\n"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_len = String::new();\n    let mut numeral_digits_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len = String::new();\n\
    \    let mut numeral_digits_len_len_len_len_len = String::new();\n    let mut\
    \ numeral_digits_len_len_len_len_len_len = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4et54hwf.rs:36:80\n   |\n\
    36 |     let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    \   |                                                                        \
    \        ^ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4et54hwf.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:45:25\n   |\n45 |     assert_"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut prev_num = 0;\n    let mut prev_char:\
    \ char;\n    for num in number.iter() {\n        let mut new_num = 0;\n      \
    \  let mut new_char: char;\n        match num {\n            0 => new_num += 1,\n\
    \            1 => new_num += 1,\n            2 => new_num += 1,\n            3\
    \ => new_num += 1,\n            4 => new_num += 1,\n            5 => new_num +=\
    \ 1,\n            6 => new_num += 1,\n            7 => new_num += 1,\n       \
    \     8 => new_num += 1,\n            9 => new_num += 1,\n            10 => new_num\
    \ += 1,\n            11 => new_num += 1,\n            12 => new_num += 1,\n  \
    \          13 => new_num += 1,\n            14 => new_num += 1,\n            15\
    \ => new_num += 1,\n            16 => new_num += 1,\n            17 => new_num\
    \ += 1,\n            18 => new_num += 1,\n            19 => new_num += 1,\n  \
    \          20 => new_num += 1,\n            21 => new_num += 1,\n            22\
    \ => new_num += 1,\n            23 => new_num += 1,\n            24 => new_num\
    \ += 1,\n            25 => new_num += 1,\n            26 => new_num += 1,\n  \
    \          27 => new_num += 1,\n            28 => new_num += 1,\n            29\
    \ => new_num += 1,\n            30 => new_num += 1,\n            31 => new_num\
    \ += 1,\n            32 => new_num += 1,\n            33 => new_num += 1,\n  \
    \          34 => new_num += 1,\n            35 => new_num += 1,\n            36\
    \ => new_num += 1,\n            37 => new_num += 1,\n            38 => new_num\
    \ += 1,\n            39 => new_num += 1,\n            40 => new_num += 1,\n  \
    \          41 => new_num += 1,\n            42 => new_num += 1,\n            43\
    \ => new_num += 1,\n            44 => new_num += 1,\n            45 => new_num\
    \ += 1,\n            46 => new_num += 1,\n            47 => new_num += 1,\n  \
    \          48 => new_num += 1,\n            49 => new_num += 1,\n            50\
    \ => new_num += 1,\n            51 => new_num += 1,\n            52 => new_num\
    \ += 1,\n            53 => new_num += 1,\n            54 => new_num += 1,\n  \
    \          55 \n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpdqqzihzn.rs:93:3\n\
    \   |\n11 | fn int_to_mini_roman(number: isize) -> String {\n   |            \
    \                                   - unclosed delimiter\n...\n15 |     for num\
    \ in number.iter() {\n   |                              - unclosed delimiter\n\
    ...\n18 |         match num {\n   |                   - this delimiter might not\
    \ be properly closed...\n...\n75 | }\n   | - ...as it matches this but it has\
    \ different indentation\n...\n93 | }\n   |   ^\n\nerror: expected one of `...`,\
    \ `..=`, `..`, `=>`, `if`, or `|`, found `}`\n  --> /tmp/tmpdqqzihzn.rs:75:1\n\
    \   |\n74 |             55 \n   |               - expected one of `...`, `..=`,\
    \ `..`, `=>`, `if`, or `|`\n75 | }\n   | ^ unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdqqzihzn.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdqqzihzn.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdqqzihzn.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdqqzihzn.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdqqzihzn.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdqqzihzn.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdqqzihzn.rs:82:17\n  \
    \ |\n82 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find va"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut remainder = number;\n    let mut i = 0;\n    while remainder > 1000\
    \ {\n        remainder -= 1000;\n        roman.push(\"M\");\n        numeral.push(\"\
    M\");\n        i += 1;\n    }\n    while remainder > 500 {\n        remainder\
    \ -= 500;\n        roman.push(\"D\");\n        numeral.push(\"D\");\n        i\
    \ += 1;\n    }\n    while remainder > 100 {\n        remainder -= 100;\n     \
    \   roman.push(\"C\");\n        numeral.push(\"C\");\n        i += 1;\n    }\n\
    \    while remainder > 50 {\n        remainder -= 50;\n        roman.push(\"L\"\
    );\n        numeral.push(\"L\");\n        i += 1;\n    }\n    while remainder\
    \ > 10 {\n        remainder -= 10;\n        roman.push(\"X\");\n        numeral.push(\"\
    X\");\n        i += 1;\n    }\n    while remainder > 5 {\n        remainder -=\
    \ 5;\n        roman.push(\"V\");\n        numeral.push(\"V\");\n        i += 1;\n\
    \    }\n    while remainder > 1 {\n        remainder -= 1;\n        roman.push(\"\
    I\");\n        numeral.push(\"I\");\n        i += 1;\n    }\n    while remainder\
    \ > 0 {\n        remainder -= 1;\n        roman.push(\"I\");\n        numeral.push(\"\
    I\");\n        i += 1;\n    }\n    roman.push(i);\n    numeral.push(i);\n    roman\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqtrg6n9d.rs:71:17\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqtrg6n9d.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqtrg6n9d.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqtrg6n9d.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqtrg6n9d.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqtrg6n9d.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqtrg6n9d.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqtrg6n9d.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqtrg6n9d.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqtrg6n9d.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqtrg6n9d.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num = 0;\n    let mut i = 0;\n\
    \    while number > 0 {\n        roman.push((number % 10).to_string());\n    \
    \    number /= 10;\n        i += 1;\n    }\n    while i < roman.len() {\n    \
    \    roman.push((roman[i] - '0').to_string());\n        i += 1;\n    }\n    roman\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_15g68q0.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_15g68q0.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_15g68q0.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_15g68q0.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_15g68q0.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_15g68q0.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_15g68q0.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_15g68q0.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_15g68q0.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_15g68q0.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_15g68q0.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral_index = 0;\n    let mut numeral_value = 0;\n    let mut numeral_value_index\
    \ = 0;\n    let mut numeral_value_length = 0;\n    let mut numeral_value_length_index\
    \ = 0;\n    let mut numeral_value_length_value = 0;\n    let mut numeral_value_length_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp8td60n8z.rs:56:33\n   |\n\
    56 |     let mut numeral_value_length\n   |                                 ^\
    \ help: add `;` here\n57 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8td60n8z.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8td60n8z.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8td60n8z.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8td60n8z.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8td60n8z.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8td60n8z.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8td60n8z.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8td60n8z.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8td60n8z.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8td60n8z.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral_index = 0;\n    let mut numeral_string = \"\";\n\n    while numeral_index\
    \ < number {\n        let numeral = number % 10;\n        roman.push((numerals\
    \ as &str)[numeral_index]);\n        numeral_index += 1;\n        numerals.push(numeral);\n\
    \    }\n\n    numerals.reverse();\n    numerals.dedup();\n\n    for numeral in\
    \ numerals {\n        numeral_string += numeral;\n    }\n\n    numeral_string.to_lowercase()\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpt78ljude.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt78ljude.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt78ljude.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpt78ljude.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt78ljude.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpt78ljude.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpt78ljude.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpt78ljude.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpt78ljude.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt78ljude.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt78ljude.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    while num\
    \ < number {\n        roman.push((num % 10).to_string());\n        num /= 10;\n\
    \    }\n    roman.push((num % 10).to_string());\n    roman\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn_ulhkz0.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn_ulhkz0.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn_ulhkz0.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:27:25\n   |\n27 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:28:17\n  \
    \ |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn_ulhkz0.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    let mut\
    \ numerals: Vec<String> = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"\
    D\"), String::from(\"CD\"), String::from(\"C\"), String::from(\"XC\"), String::from(\"\
    L\"), String::from(\"XL\"), String::from(\"X\"), String::from(\"IX\"), String::from(\"\
    V\"), String::from(\"IV\"), String::from(\"I\")];\n    let mut numeral_string:\
    \ String;\n    let mut numeral_strings: Vec<String> = vec![String::from(\"M\"\
    ), String::from(\"CM\"), String::from(\"D\"), String::from(\"CD\"), String::from(\"\
    C\"), String::from(\"XC\"), String::from(\"L\"), String::from(\"XL\"), String::from(\"\
    X\"), String::from(\"IX\"), String::from(\"V\"), String::from(\"IV\"), String::from(\"\
    I\")];\n    let mut numeral_strings_reverse: Vec<String> = vec![String::from(\"\
    I\"), String::from(\"IV\"), String::from(\"V\"), String::from(\"IX\"), String::from(\"\
    X\"), String::from(\"XL\"), String::from(\"L\"), String::from(\"XC\"), String::from(\"\
    CD\"), String::from(\"D\"), String::from(\"CM\"), String::from(\"M\")];\n    let\
    \ mut numeral_strings_reverse2: Vec<String> = vec![String::from(\"I\"), String::from(\"\
    IV\"), String::from(\"V\"), String::from(\"IX\"), String::from(\"X\"), String::from(\"\
    XL\"), String::from(\"L\"), String::from(\"XC\"), String::from(\"CD\"), String::from(\"\
    D\"), String::from(\"CM\"), String::from(\"M\")];\n    let mut numeral_strings_reverse3:\
    \ Vec<String> = vec![String::from(\"I\"), String::from(\"IV\"), String::from(\"\
    V\"), String::from(\"IX\"), String::from(\"X\"), String::from(\"XL\"), String::from(\"\
    L\"), String::from(\"XC\"), String::from(\"CD\"), String::from(\"D\"), String::from(\"\
    CM\"), String::from(\"M\")];\n    let mut numeral_strings_reverse4: Vec<String>\
    \ = vec![String::from(\"I\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n  --> /tmp/tmpit3_mzxx.rs:20:71\n\
    \   |\n20 |       let mut numeral_strings_reverse4: Vec<String> = vec![String::from(\"\
    I\n   |  _______________________________________________________________________^\n\
    21 | | }\n22 | |\n23 | | fn main() {\n...  |\n38 | |     assert_eq!({left}, {right});\n\
    39 | | }\n   | |__^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0765`.\n"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_rev = String::new();\n    let mut numeral_digits_rev\
    \ = 0;\n    let mut numeral_digits_rev_big = 0;\n    let mut numeral_digits_rev_big_len\
    \ = 0;\n    let mut numeral_digits_rev_big_rev = 0;\n    let mut numeral_digits_rev_big_rev_len\
    \ = 0;\n    let mut numeral_digits_rev_big_rev_len_rev = 0;\n    let mut numeral_digits_rev_big_rev_len_rev_len\
    \ = 0;\n    let mut numeral_digits_rev_big_rev_len_rev_len_rev = 0;\n    let mut\
    \ numeral_digits_rev_big_rev_len_rev_len_rev_len = 0;\n    let mut numeral_digits_rev_big_rev_len_rev_len_rev_len_rev\
    \ = 0;\n    let mut numeral_digits_rev_big_rev_len_rev_len_rev_len_rev_len = 0;\n\
    \    let mut numeral_digits_rev_big_rev_len_rev_len_rev_len_rev_len_rev = 0;\n\
    \    let mut numeral_digits_rev_big_rev_len_rev_len_rev_len_rev_len_rev_len =\
    \ 0;\n    let mut numeral_digits_rev_big_rev_len_rev_len_rev_len_rev_len_rev_len\
    \ = 0;\n    let mut numeral_digits_rev_big_rev_len_rev_len_rev_len_rev_len_rev_len_rev\
    \ = 0;\n    let mut numeral_digits_rev_big_rev_len_rev_len_rev_len_rev_len_rev_len_rev_len\
    \ = 0;\n    let mut numeral_digits_rev_big_rev_len_rev_len_rev_len_rev_len_rev_len_rev_len\
    \ = 0;\n    let mut numeral_digits_rev_big_rev_len_rev_len_rev_len_rev_len_rev_len_rev_len\
    \ = 0;\n    let mut numeral_digits_rev_big_rev_len_rev_len_rev_len_rev_len_rev_len_rev_len_rev\
    \ = 0;\n    let mut numeral_digits_rev_big_rev_len_rev_len_rev_len_rev_len_rev_len_rev_len_rev_len\
    \ = 0;\n\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpp095zml6.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp095zml6.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp095zml6.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp095zml6.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp095zml6.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp095zml6.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp095zml6.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp095zml6.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp095zml6.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp095zml6.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp095zml6.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp2xnr_ud4.rs:51:45\n   |\n\
    51 |     let mut numeral_digits_len = String::new\n   |                      \
    \                       ^ help: add `;` here\n52 | }\n   | - unexpected token\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2xnr_ud4.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_value = number;\n    while numeral_value >= 1000 {\n\
    \        numeral_index += 1;\n        numeral_value -= 1000;\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    while numeral_value >= 100 {\n        numeral_index += 1;\n        numeral_value\
    \ -= 100;\n        roman.push_str(numerals[numeral_index]);\n    }\n    while\
    \ numeral_value >= 10 {\n        numeral_index += 1;\n        numeral_value -=\
    \ 10;\n        roman.push_str(numerals[numeral_index]);\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmp4x2i33s5.rs:55:28\n\
    \   |\n11 | fn int_to_mini_roman(number: isize) -> String {\n   |            \
    \                                   - closing delimiter possibly meant for this\n\
    ...\n55 |     roman.push_str(numerals[numeral_index\n   |                    \
    \        ^ unclosed delimiter\n56 | }\n   | ^ mismatched closing delimiter\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4x2i33s5.rs:60:17\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4x2i33s5.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4x2i33s5.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4x2i33s5.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4x2i33s5.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4x2i33s5.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4x2i33s5.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4x2i33s5.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4x2i33s5.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot fi"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::fmt::{self, Display};\n    use std::str::FromStr;\n\
    \n    let mut roman = String::new();\n    let mut numerals = vec![];\n    let\
    \ mut numerals_map = HashMap::new();\n    let mut numerals_map_inv = HashMap::new();\n\
    \n    let mut numerals_map_inv2 = HashMap::new();\n    let mut numerals_map_inv3\
    \ = HashMap::new();\n\n    let mut numerals_map_inv4 = HashMap::new();\n    let\
    \ mut numerals_map_inv5 = HashMap::new();\n\n    let mut numerals_map_inv6 = HashMap::new();\n\
    \    let mut numerals_map_inv7 = HashMap::new();\n\n    let mut numerals_map_inv8\
    \ = HashMap::new();\n    let mut numerals_map_inv8 = HashMap::new();\n\n    let\
    \ mut numerals_map_inv9 = HashMap::new();\n    let mut numerals_map_inv10 = HashMap::new();\n\
    \n    let mut numerals_map_inv11 = HashMap::new();\n    let mut numerals_map_inv12\
    \ = HashMap::new();\n\n    let mut numerals_map_inv13 = HashMap::new();\n    let\
    \ mut numerals_map_inv14 = HashMap::new();\n\n    let mut numerals_map_inv15 =\
    \ HashMap::new();\n    let mut numerals_map_inv16 = HashMap::new();\n\n    let\
    \ mut numerals_map_inv17 = HashMap::new();\n    let mut numerals_map_inv18 = HashMap::new();\n\
    \n    let mut numerals_map_inv19 = HashMap::new();\n    let mut numerals_map_inv20\
    \ = HashMap::new();\n\n    let mut numerals_map_inv21 = HashMap::new();\n    let\
    \ mut numerals_map_inv22 = HashMap::new();\n\n    let mut numerals_map_inv23 =\
    \ HashMap::new();\n    let mut numerals_map_inv24 = HashMap::new();\n\n    let\
    \ mut numerals_map_inv25 = HashMap::new();\n    let mut numerals_map_inv26 = HashMap::new();\n\
    \n    let mut numerals_map_inv27 = HashMap::new();\n    let mut numerals_map_inv28\
    \ = HashMap::new\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpkjuaan4x.rs:61:46\n   |\n\
    61 |     let mut numerals_map_inv28 = HashMap::new\n   |                     \
    \                         ^ help: add `;` here\n62 | }\n   | - unexpected token\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpkjuaan4x.rs:61:34\n\
    \   |\n61 |     let mut numerals_map_inv28 = HashMap::new\n   |              \
    \                    ^^^^^^^ use of undeclared type `HashMap`\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpkjuaan4x.rs:18:28\n\
    \   |\n18 |     let mut numerals_map = HashMap::new();\n   |                 \
    \           ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this\
    \ struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed\
    \ to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpkjuaan4x.rs:19:32\n\
    \   |\n19 |     let mut numerals_map_inv = HashMap::new();\n   |             \
    \                   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpkjuaan4x.rs:21:33\n\
    \   |\n21 |     let mut numerals_map_inv2 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpkjuaan4x.rs:22:33\n\
    \   |\n22 |     let mut numerals_map_inv3 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpkjuaan4x.rs:24:33\n\
    \   |\n24 |     let mut numerals_map_inv4 = HashMap::new();\n   |            \
    \                     ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: u"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"c\", \"l\", \"l\", \"x\", \"x\", \"x\", \"c\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_value = 0;\n    let mut numeral_string = \"\";\n \
    \   let mut numeral_string_index = 0;\n    let mut numeral_string_length = 0;\n\
    \    let mut numeral_string_length_index = 0;\n    let mut numeral_string_length_value\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index2\
    \ = 0;\n    let mut numeral_string_length_value_index3 = 0;\n    let mut numeral_string_length_value_index4\
    \ = 0;\n    let mut numeral_string_length_value_index5 = 0;\n    let mut numeral_string_length_value_index6\
    \ = 0;\n    let mut numeral_string_length_value_index7 = 0;\n    let mut numeral_string_length_value_index8\
    \ = 0;\n    let mut numeral_string_length_value_index9 = 0;\n    let mut numeral_string_length_value_index10\
    \ = 0;\n    let mut numeral_string_length_value_index11 = 0;\n    let mut numeral_string_length_value_index12\
    \ = 0;\n    let mut numeral_string_length_value_index13 = 0;\n    let mut numeral_string_length_value_index14\
    \ = 0;\n    let mut numeral_string_length_value_index15 = 0;\n    let mut numeral_string_length_value_index16\
    \ = 0;\n    let mut numeral_string_length_value_index17 = 0;\n    let mut numeral_string_length_value_index18\
    \ = 0;\n    let mut numeral_string_length_value_index19 = 0;\n    let mut numeral_string_length_value_index20\
    \ = 0;\n    let mut numeral_string_length_value_index21 = 0;\n    let mut numeral_string_length_value_index22\
    \ = 0;\n    let mut numeral_string_length_value_index23 = 0;\n    let mut numeral_string_length_value_index24\
    \ = 0;\n    let mut numeral_string_length_value_index25 = 0;\n    let mut numeral_string_length_value_index26\
    \ = 0;\n    let mut numeral_string_length_value_index27 = 0;\n    let mut numeral_string_length_value_index28\
    \ = 0;\n    let mut numeral_string_length_value_index29 = 0;\n    let mut numeral_string_length_value_index30\
    \ = 0;\n    let mut numeral_string_length_value_index31 = 0;\n    let mut numeral_string_length_value_index32\
    \ = 0;\n    let mut numeral_string_length_value_index33 = 0;\n    let mut numeral_string_length_value_index34\
    \ = 0;\n    let mut numeral_string_length_value_index35 = 0;\n    let mu\n}\n\n\
    fn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp5ucuzwnl.rs:56:11\n   |\n\
    56 |     let mu\n   |           ^ help: add `;` here\n57 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5ucuzwnl.rs:61:17\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5ucuzwnl.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5ucuzwnl.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5ucuzwnl.rs:62:25\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5ucuzwnl.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5ucuzwnl.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5ucuzwnl.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5ucuzwnl.rs:64:25\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5ucuzwnl.rs:65:17\n  \
    \ |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5ucuzwnl.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    while num\
    \ < number {\n        let mut digit = num % 10;\n        roman += if digit > 0\
    \ {\n            &\"M\"\n        } else {\n            &\"m\"\n        };\n  \
    \      num /= 10;\n    }\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0jr64axm.rs:28:17\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0jr64axm.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0jr64axm.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0jr64axm.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0jr64axm.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0jr64axm.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0jr64axm.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0jr64axm.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0jr64axm.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0jr64axm.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0jr64axm.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut remainder = number;\n    let mut i = 1;\n    while remainder > 0 {\n\
    \        remainder -= 10;\n        roman.push((remainder % 10).to_string());\n\
    \        numeral.push((i as i32).to_string());\n        i += 1;\n    }\n    roman.push(numeral.to_lowercase());\n\
    \    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_fd189mb.rs:28:17\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_fd189mb.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_fd189mb.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_fd189mb.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_fd189mb.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_fd189mb.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_fd189mb.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_fd189mb.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_fd189mb.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_fd189mb.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_fd189mb.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n\n    let mut roman = String::new();\n    let mut\
    \ numeral = String::new();\n\n    let mut numeral_digits = Vec::new();\n    let\
    \ mut numeral_digits_len = Vec::new();\n\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \n    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \n    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \n    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \n    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \n    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \n    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \n    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \n    let mut numeral_digits_len = numeral_digits_len.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut numeral_digits_len = numeral_digits_len\n}\n\nfn main() {\n    let\
    \ candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpsw3te9wv.rs:45:52\n   |\n\
    45 |     let mut numeral_digits_len = numeral_digits_len\n   |               \
    \                                     ^ help: add `;` here\n46 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsw3te9wv.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsw3te9wv.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsw3te9wv.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsw3te9wv.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsw3te9wv.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsw3te9wv.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsw3te9wv.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsw3te9wv.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsw3te9wv.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsw3te9wv.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut nums = vec![];\n    let mut nums_iter\
    \ = nums.iter();\n    let mut nums_iter = nums_iter.map(|n| n.to_string());\n\
    \    let mut nums_iter = nums_iter.map(|n| n.to_ascii_lowercase());\n    let mut\
    \ nums_iter = nums_iter.map(|n| n.to_ascii_uppercase());\n    let mut nums_iter\
    \ = nums_iter.map(|n| n.to_lowercase());\n    let mut nums_iter = nums_iter.map(|n|\
    \ n.to_uppercase());\n    let mut nums_iter = nums_iter.map(|n| n.to_digit(10));\n\
    \    let mut nums_iter = nums_iter.map(|n| n.to_digit(100));\n    let mut nums_iter\
    \ = nums_iter.map(|n| n.to_digit(1000));\n    let mut nums_iter = nums_iter.map(|n|\
    \ n.to_digit(10000));\n    let mut nums_iter = nums_iter.map(|n| n.to_digit(100000));\n\
    \    let mut nums_iter = nums_iter.map(|n| n.to_digit(1000000));\n    let mut\
    \ nums_iter = nums_iter.map(|n| n.to_digit(10000000));\n    let mut nums_iter\
    \ = nums_iter.map(|n| n.to_digit(100000000));\n    let mut nums_iter = nums_iter.map(|n|\
    \ n.to_digit(1000000000));\n    let mut nums_iter = nums_iter.map(|n| n.to_digit(10000000000));\n\
    \    let mut nums_iter = nums_iter.map(|n| n.to_digit(100000000000));\n    let\
    \ mut nums_iter = nums_iter.map(|n| n.to_digit(1000000000000));\n    let mut nums_iter\
    \ = nums_iter.map(|n| n.to_digit(10000000000000));\n    let mut nums_iter = nums_iter.map(|n|\
    \ n.to_digit(100000000000000));\n    let mut nums_iter = nums_iter.map(|n| n.to_digit(1000000000000000));\n\
    \    let mut nums_iter = nums_iter.map(|n| n.to_digit(10000000000000000));\n \
    \   let mut nums_iter = nums_iter.map(|n| n.to_digit(100000000000000000));\n \
    \   let mut nums_iter = nums_iter.map(|n| n.to_digit(1000000000000000000));\n\
    \    let mut nums_iter = nums_iter.map(|n| \n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `)`\n  --> /tmp/tmpljkq6uv5.rs:39:1\n\
    \   |\n39 | }\n   | ^ expected expression\n\nerror: mismatched closing delimiter:\
    \ `}`\n  --> /tmp/tmpljkq6uv5.rs:38:38\n   |\n11 | fn int_to_mini_roman(number:\
    \ isize) -> String {\n   |                                               - closing\
    \ delimiter possibly meant for this\n...\n38 |     let mut nums_iter = nums_iter.map(|n|\
    \ \n   |                                      ^ unclosed delimiter\n39 | }\n \
    \  | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpljkq6uv5.rs:43:17\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpljkq6uv5.rs:43:25\n \
    \  |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpljkq6uv5.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpljkq6uv5.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpljkq6uv5.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpljkq6uv5.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpljkq6uv5.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpljkq6uv5.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpljkq6uv5.rs:47:"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n                     \
    \      \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n\
    \                           \"v\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"\
    vi\", \"vi\",\n                           \"vi\", \"vi\", \"vi\", \"vi\", \"vi\"\
    , \"vi\", \"vi\", \"vi\",\n                           \"vi\", \"vi\", \"vi\",\
    \ \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                           \"vi\",\
    \ \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                  \
    \         \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n  \
    \                         \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\"\
    , \"vi\",\n                           \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\
    \ \"vi\", \"vi\", \"vi\",\n                           \"vi\", \"vi\", \"vi\",\
    \ \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                           \"vi\",\
    \ \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                  \
    \         \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n  \
    \                         \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\"\
    , \"vi\",\n                           \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\
    \ \"vi\", \"vi\", \"vi\",\n                           \"vi\", \"vi\", \"vi\",\
    \ \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                           \"vi\",\
    \ \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                  \
    \         \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n  \
    \                         \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\"\
    , \"vi\",\n                           \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\
    \ \"vi\", \"vi\", \"vi\",\n                           \"vi\", \"vi\", \"vi\",\
    \ \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                           \"vi\",\
    \ \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                  \
    \         \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n  \
    \                         \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\"\
    , \"vi\",\n                           \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\
    \ \"vi\", \"vi\", \"vi\",\n                           \"vi\", \"vi\", \"vi\",\
    \ \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                           \"vi\",\
    \ \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n                  \
    \         \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\", \"vi\",\n  \
    \                         \"vi\", \"vi\n}\n\nfn main() {\n    let candidate =\
    \ int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n  --> /tmp/tmp38641cq5.rs:40:34\n\
    \   |\n40 |                              \"vi\", \"vi\n   |  __________________________________^\n\
    41 | | }\n42 | |\n43 | | fn main() {\n...  |\n58 | |     assert_eq!({left}, {right});\n\
    59 | | }\n   | |__^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0765`.\n"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num = 0;\n    let mut prev_num\
    \ = 0;\n    let mut prev_roman = String::new();\n    let mut prev_roman_num =\
    \ 0;\n    let mut prev_roman_num_str = \"\";\n    let mut roman_num_str = \"\"\
    ;\n    let mut roman_num_str_len = 0;\n    let mut roman_num_str_len_max = 0;\n\
    \    let mut roman_num_str_len_min = 0;\n    let mut roman_num_str_len_avg = 0;\n\
    \    let mut roman_num_str_len_sum = 0;\n    let mut roman_num_str_len_max = roman_num_str_len_min;\n\
    \    let mut roman_num_str_len_avg = roman_num_str_len_sum;\n    let mut roman_num_str_len_min\
    \ = roman_num_str_len_sum;\n    let mut roman_num_str_len_sum = 0;\n    let mut\
    \ roman_num_str_len_max = roman_num_str_len_min;\n    let mut roman_num_str_len_avg\
    \ = roman_num_str_len_sum;\n    let mut roman_num_str_len_min = roman_num_str_len_sum;\n\
    \    let mut roman_num_str_len_sum = 0;\n    let mut roman_num_str_len_max = roman_num_str_len_min;\n\
    \    let mut roman_num_str_len_avg = roman_num_str_len_sum;\n    let mut roman_num_str_len_min\
    \ = roman_num_str_len_sum;\n    let mut roman_num_str_len_sum = 0;\n    let mut\
    \ roman_num_str_len_max = roman_num_str_len_min;\n    let mut roman_num_str_len_avg\
    \ = roman_num_str_len_sum;\n    let mut roman_num_str_len_min = roman_num_str_len_sum;\n\
    \    let mut roman_num_str_len_sum = 0;\n    let mut roman_num_str_len_max = roman_num_str_len_min;\n\
    \    let mut roman_num_str_len_avg = roman_num_str_len_sum;\n    let mut roman_num_str_len_min\
    \ = roman_num_str_len_sum;\n    let mut roman_num_str_len_sum = 0;\n    let mut\
    \ roman_num_str_len_max = roman_num_str_len_min;\n    let mut roman_num_str_len_avg\
    \ = roman_num_str_len_sum;\n    let mut roman_num_str_len_min = roman_num_str_len_sum;\n\
    \    let mut roman_num_str_len_sum = 0;\n    let mut roman_num_str_len_max = roman_num_str_len_min;\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpuw9gunwg.rs:53:17\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuw9gunwg.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuw9gunwg.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuw9gunwg.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuw9gunwg.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuw9gunwg.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuw9gunwg.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuw9gunwg.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuw9gunwg.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuw9gunwg.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuw9gunwg.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::fmt::{self, Display};\n    use std::str::FromStr;\n\
    \n    let mut roman = String::new();\n    let mut num: isize = number;\n    let\
    \ mut prev_num: isize = 0;\n    let mut prev_roman: isize = 0;\n\n    while num\
    \ > 0 {\n        let mut roman_digit: isize = 0;\n        let mut num_digit: isize\
    \ = 0;\n\n        while num > 0 {\n            let digit = num % 10;\n       \
    \     roman_digit += digit as isize;\n            num /= 10;\n            num_digit\
    \ += 1;\n        }\n\n        if roman_digit > prev_roman {\n            roman\
    \ += String::from(&format!(\"{}{}\", prev_num, prev_roman));\n            prev_roman\
    \ = roman_digit;\n        }\n\n        if num_digit > 0 {\n            roman +=\
    \ String::from(&format!(\"{}\", num_digit));\n        }\n\n        prev_num =\
    \ num_digit;\n    }\n\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpih0t8e64.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpih0t8e64.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpih0t8e64.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpih0t8e64.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpih0t8e64.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpih0t8e64.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpih0t8e64.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpih0t8e64.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpih0t8e64.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpih0t8e64.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpih0t8e64.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_value = 0;\n    let mut numeral_length = 0;\n    let\
    \ mut numeral_digit = 0;\n    let mut numeral_numeral = 0;\n    let mut numeral_numeral_length\
    \ = 0;\n    let mut numeral_numeral_digit = 0;\n    let mut numeral_numeral_numeral\
    \ = 0;\n    let mut numeral_numeral_numeral_length = 0;\n    let mut numeral_numeral_numeral_digit\
    \ = 0;\n    let mut numeral_numeral_numeral_numeral = 0;\n    let mut numeral_numeral_numeral_numeral_length\
    \ = 0;\n    let mut numeral_numeral_numeral_numeral_digit = 0;\n    let mut numeral_numeral_numeral_numeral_numeral\
    \ = 0;\n    let mut numeral_numeral_numeral_numeral_numeral_length = 0;\n    let\
    \ mut numeral_numeral_numeral_numeral_numeral_digit = 0;\n    let mut numeral_numeral_numeral_numeral_numeral_numeral\
    \ = 0;\n    let mut numeral_numeral_numeral_numeral_numeral_numeral_length = 0;\n\
    \    let mut numeral_numeral_numeral_numeral_numeral_numeral_digit = 0;\n    let\
    \ mut numeral_numeral_numeral_numeral_numeral_numeral_numeral = 0;\n    let mut\
    \ numeral_numeral_numeral_numeral_numeral_numeral_numeral_length = 0;\n    let\
    \ mut numeral_numeral_numeral_numeral_numeral_numeral_numeral_digit = 0;\n   \
    \ let mut numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral = 0;\n\
    \    let mut numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_length\
    \ = 0;\n    let mut numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_digit\
    \ = 0;\n    let mut numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral\
    \ = 0;\n    let mut numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_length\
    \ = 0;\n    let mut numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral\
    \ = 0;\n    let mut numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_length\
    \ = 0;\n    let mut numer\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpe7oquv87.rs:43:18\n   |\n\
    43 |     let mut numer\n   |                  ^ help: add `;` here\n44 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpe7oquv87.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpe7oquv87.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpe7oquv87.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpe7oquv87.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpe7oquv87.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe7oquv87.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe7oquv87.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpe7oquv87.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpe7oquv87.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpe7oquv87.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![String::from(\"\
    M\"), String::from(\"CM\"), String::from(\"D\"),\n                           String::from(\"\
    CD\"), String::from(\"C\"), String::from(\"XC\"),\n                          \
    \ String::from(\"L\"), String::from(\"XL\"), String::from(\"X\"),\n          \
    \                 String::from(\"IX\"), String::from(\"V\"), String::from(\"IV\"\
    ),\n                           String::from(\"I\")];\n    let mut numerals_iter\
    \ = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n    let mut\
    \ numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let \n}\n\nfn main() {\n  \
    \  let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp3ntvkeuy.rs:50:1\n  \
    \ |\n50 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp3ntvkeuy.rs:54:17\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp3ntvkeuy.rs:54:25\n \
    \  |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3ntvkeuy.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3ntvkeuy.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3ntvkeuy.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3ntvkeuy.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3ntvkeuy.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3ntvkeuy.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3ntvkeuy.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3ntvkeuy.rs:58:25\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3ntvkeuy.rs:59:17\n   |\n59 |     assert"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"\
    D\"),\n                           String::from(\"CD\"), String::from(\"C\"), String::from(\"\
    XC\"),\n                           String::from(\"L\"), String::from(\"XL\"),\
    \ String::from(\"X\"),\n                           String::from(\"IX\"), String::from(\"\
    V\"), String::from(\"IV\"),\n                           String::from(\"I\")];\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numerals_iter = numerals.iter();\n    let mut numerals_iter = numerals.iter();\n\
    \    let mut numer\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpdi3sdgeh.rs:49:18\n   |\n\
    49 |     let mut numer\n   |                  ^ help: add `;` here\n50 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdi3sdgeh.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdi3sdgeh.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdi3sdgeh.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdi3sdgeh.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdi3sdgeh.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdi3sdgeh.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdi3sdgeh.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdi3sdgeh.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdi3sdgeh.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdi3sdgeh.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut nums = vec![number];\n    let\
    \ mut nums_copy = nums.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_copy.clone();\n    let mut nums_copy = nums_copy.clone();\n\
    \    let mut nums_copy = nums_\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp79fljm0n.rs:58:30\n   |\n\
    58 |     let mut nums_copy = nums_\n   |                              ^ help:\
    \ add `;` here\n59 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `nums_` in this scope\n  --> /tmp/tmp79fljm0n.rs:58:25\n   |\n58 |     let mut\
    \ nums_copy = nums_\n   |                         ^^^^^ help: a local variable\
    \ with a similar name exists: `nums`\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp79fljm0n.rs:63:17\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp79fljm0n.rs:63:25\n \
    \  |\n63 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp79fljm0n.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp79fljm0n.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp79fljm0n.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp79fljm0n.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp79fljm0n.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp79fljm0n.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp79fljm0n.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        7\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppb6j91m9.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmppb6j91m9.rs:83:1\n   |\n82 |         7\n  \
    \ |          - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n83 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppb6j91m9.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::fmt::{self, Display};\n\n    let mut\
    \ roman = String::new();\n    let mut numeral = String::new();\n    let mut numeral_len\
    \ = String::new();\n    let mut numeral_len2 = String::new();\n    let mut numeral_len3\
    \ = String::new();\n    let mut numeral_len4 = String::new();\n    let mut numeral_len5\
    \ = String::new();\n    let mut numeral_len6 = String::new();\n    let mut numeral_len7\
    \ = String::new();\n    let mut numeral_len8 = String::new();\n    let mut numeral_len9\
    \ = String::new();\n    let mut numeral_len10 = String::new();\n    let mut numeral_len11\
    \ = String::new();\n    let mut numeral_len12 = String::new();\n    let mut numeral_len13\
    \ = String::new();\n    let mut numeral_len14 = String::new();\n    let mut numeral_len15\
    \ = String::new();\n    let mut numeral_len16 = String::new();\n    let mut numeral_len17\
    \ = String::new();\n    let mut numeral_len18 = String::new();\n    let mut numeral_len19\
    \ = String::new();\n    let mut numeral_len20 = String::new();\n    let mut numeral_len21\
    \ = String::new();\n    let mut numeral_len22 = String::new();\n    let mut numeral_len23\
    \ = String::new();\n    let mut numeral_len24 = String::new();\n    let mut numeral_len25\
    \ = String::new();\n    let mut numeral_len26 = String::new();\n    let mut numeral_len27\
    \ = String::new();\n    let mut numeral_len28 = String::new();\n    let mut numeral_len29\
    \ = String::new();\n    let mut numeral_len30 = String::new();\n    let mut numeral_len31\
    \ = String::new();\n    let mut numeral_len32 = String::new();\n    let mut numeral_len33\
    \ = String::new();\n    let mut numeral_len34 = String::new();\n    let mut numeral_len35\
    \ = String::new();\n    let mut numeral_len36 = String::new();\n    let mut numeral_len37\
    \ = String::new();\n    let mut numer\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmppqfyohtw.rs:54:18\n   |\n\
    54 |     let mut numer\n   |                  ^ help: add `;` here\n55 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppqfyohtw.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppqfyohtw.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppqfyohtw.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppqfyohtw.rs:60:25\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppqfyohtw.rs:61:17\n  \
    \ |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppqfyohtw.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppqfyohtw.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppqfyohtw.rs:62:25\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppqfyohtw.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppqfyohtw.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n        \"i\", \"i\",\
    \ \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    ,\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n    \
    \    \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\",\n\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `}`\n\
    \  --> /tmp/tmpd_i7z2dt.rs:32:1\n   |\n32 | }\n   | ^ expected one of `.`, `;`,\
    \ `?`, `else`, or an operator\n\nerror: mismatched closing delimiter: `}`\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:13:28\n   |\n11 | fn int_to_mini_roman(number: isize) ->\
    \ String {\n   |                                               - closing delimiter\
    \ possibly meant for this\n12 |     let mut roman = String::new();\n13 |     let\
    \ mut numerals = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\"\
    , \"l\",\n   |                            ^ unclosed delimiter\n...\n32 | }\n\
    \   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpd_i7z2dt.rs:36:17\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:36:25\n \
    \  |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd_i7z2dt.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \       "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xix\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        \n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpsqoxckx3.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_len = String::new();\n    let mut numeral_digits_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len = String::new();\n\
    \    let mut numeral_digits_len_len_len_len_len = String::new();\n    let mut\
    \ numeral_digits_len_len_len_len_len_len = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4et54hwf.rs:36:80\n   |\n\
    36 |     let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    \   |                                                                        \
    \        ^ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4et54hwf.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:45:25\n   |\n45 |     assert_"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"\
    D\"),\n                           String::from(\"CD\"), String::from(\"C\"), String::from(\"\
    XC\"),\n                           String::from(\"L\"), String::from(\"XL\"),\
    \ String::from(\"X\"),\n                           String::from(\"IX\"), String::from(\"\
    V\"), String::from(\"IV\"),\n                           String::from(\"I\")];\n\
    \    let mut numeral_length = numerals.len();\n    let mut numeral_lengths = vec![numeral_length];\n\
    \    let mut numeral_lengths_reversed = vec![numeral_length];\n    let mut numeral_lengths_reversed_index\
    \ = numeral_lengths.len();\n    let mut numeral_lengths_reversed_index2 = numeral_lengths.len();\n\
    \    let mut numeral_lengths_reversed_index3 = numeral_lengths.len();\n    let\
    \ mut numeral_lengths_reversed_index4 = numeral_lengths.len();\n    let mut numeral_lengths_reversed_index5\
    \ = numeral_lengths.len();\n    let mut numeral_lengths_reversed_index6 = numeral_lengths.len();\n\
    \    let mut numeral_lengths_reversed_index7 = numeral_lengths.len();\n    let\
    \ mut numeral_lengths_reversed_index8 = numeral_lengths.len();\n    let mut numeral_lengths_reversed_index9\
    \ = numeral_lengths.len();\n    let mut numeral_lengths_reversed_index10 = numeral_lengths.len();\n\
    \    let mut numeral_lengths_reversed_index11 = numeral_lengths.len();\n    let\
    \ mut numeral_lengths_reversed_index12 = numeral_lengths.len();\n    let mut numeral_lengths_reversed_index13\
    \ = numeral_lengths.len();\n    let mut numeral_lengths_reversed_index14 = numeral_lengths.len();\n\
    \    let mut numeral_lengths_reversed_index15 = numeral_lengths.len();\n    let\
    \ mut numeral_lengths_reversed_index16 = numeral_lengths.len();\n    let mut numeral_lengths_reversed_index17\
    \ = numeral_lengths.len();\n    let mut numeral_lengths_reversed_index18 = numeral_lengths.len();\n\
    \    let mut numeral_lengths_reversed_index19 = numeral_lengths.len();\n    let\
    \ mut numer\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpi1nmk5_9.rs:41:18\n   |\n\
    41 |     let mut numer\n   |                  ^ help: add `;` here\n42 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi1nmk5_9.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi1nmk5_9.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi1nmk5_9.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi1nmk5_9.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi1nmk5_9.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi1nmk5_9.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi1nmk5_9.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi1nmk5_9.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi1nmk5_9.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi1nmk5_9.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral_index = 0;\n    let mut numeral_string = \"\";\n    let mut numeral_string_index\
    \ = 0;\n    let mut numeral_string_index2 = 0;\n    let mut numeral_string_index3\
    \ = 0;\n    let mut numeral_string_index4 = 0;\n    let mut numeral_string_index5\
    \ = 0;\n    let mut numeral_string_index6 = 0;\n    let mut numeral_string_index7\
    \ = 0;\n    let mut numeral_string_index8 = 0;\n    let mut numeral_string_index9\
    \ = 0;\n    let mut numeral_string_index10 = 0;\n    let mut numeral_string_index11\
    \ = 0;\n    let mut numeral_string_index12 = 0;\n    let mut numeral_string_index13\
    \ = 0;\n    let mut numeral_string_index14 = 0;\n    let mut numeral_string_index15\
    \ = 0;\n    let mut numeral_string_index16 = 0;\n    let mut numeral_string_index17\
    \ = 0;\n    let mut numeral_string_index18 = 0;\n    let mut numeral_string_index19\
    \ = 0;\n    let mut numeral_string_index20 = 0;\n    let mut numeral_string_index21\
    \ = 0;\n    let mut numeral_string_index22 = 0;\n    let mut numeral_string_index23\
    \ = 0;\n    let mut numeral_string_index24 = 0;\n    let mut numeral_string_index25\
    \ = 0;\n    let mut numeral_string_index26 = 0;\n    let mut numeral_string_index27\
    \ = 0;\n    let mut numeral_string_index28 = 0;\n    let mut numeral_string_index29\
    \ = 0;\n    let mut numeral_string_index30 = 0;\n    let mut numeral_string_index31\
    \ = 0;\n    let mut numeral_string_index32 = 0;\n    let mut numeral_string_index33\
    \ = 0;\n    let mut numeral_string_index34 = 0;\n    let mut numeral_string_index35\
    \ = 0;\n    let mut numeral_string_index36 = 0;\n    let mut numeral_string_index37\
    \ = 0;\n    let mut numeral_string_index38 = 0;\n    let mut numeral_string_index39\
    \ = 0;\n    let mut numeral_string_index40 = 0;\n    let mut numeral_string_index41\
    \ = 0;\n    let mut numeral_string_index42 = 0;\n    let mut numeral_string_index43\
    \ = 0;\n    let mut numeral_string_index44 = 0;\n    let mut numeral_string_index45\
    \ = 0;\n    let mut numeral_string_index46 = 0;\n    let mut numeral_string_index47\
    \ = 0;\n    let mut numeral_string_index48 = 0;\n\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:69:17\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcxlb4nz8.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcxlb4nz8.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcxlb4nz8.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcxlb4nz8.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcxlb4nz8.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_max = String::new();\n    let mut numeral_digits_len_max_len\
    \ = String::new();\n    let mut numeral_digits_len_max_len2 = String::new();\n\
    \    let mut numeral_digits_len_max_len3 = String::new();\n    let mut numeral_digits_len_max_len4\
    \ = String::new();\n    let mut numeral_digits_len_max_len5 = String::new();\n\
    \    let mut numeral_digits_len_max_len6 = String::new();\n    let mut numeral_digits_len_max_len7\
    \ = String::new();\n    let mut numeral_digits_len_max_len8 = String::new();\n\
    \    let mut numeral_digits_len_max_len9 = String::new();\n    let mut numeral_digits_len_max_len10\
    \ = String::new();\n    let mut numeral_digits_len_max_len11 = String::new();\n\
    \    let mut numeral_digits_len_max_len12 = String::new();\n    let mut numeral_digits_len_max_len13\
    \ = String::new();\n    let mut numeral_digits_len_max_len14 = String::new();\n\
    \    let mut numeral_digits_len_max_len15 = String::new();\n    let mut numeral_digits_len_max_len16\
    \ = String::new();\n    let mut numeral_digits_len_max_len17 = String::new();\n\
    \    let mut numeral_digits_len_max_len18 = String::new();\n    let mut numeral_digits_len_max_len19\
    \ = String::new();\n    let mut numeral_digits_len_max_len20 = String::new();\n\
    \    let mut numeral_digits_len_max_len21 = String::new();\n    let mut numeral_digits_len_max_len22\
    \ = String::new();\n    let mut numeral_digits_len_max_len23 = String::new();\n\
    \    let mut numeral_digits_len_max_len24 = String::new();\n    let mut numeral_digits_len_max_len25\
    \ = String::new();\n    let mut numeral_digits_len_max_len26 = String::new();\n\
    \    let mut numeral_digits_len_max_len27 = String::new();\n    let mut numeral_digit\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpxuj5ayr4.rs:44:26\n   |\n\
    44 |     let mut numeral_digit\n   |                          ^ help: add `;`\
    \ here\n45 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpxuj5ayr4.rs:49:17\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpxuj5ayr4.rs:49:25\n \
    \  |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxuj5ayr4.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxuj5ayr4.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxuj5ayr4.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxuj5ayr4.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxuj5ayr4.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxuj5ayr4.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxuj5ayr4.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxuj5ayr4.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find "
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map_size = 100;\n    let\
    \ mut numerals_map_size_increment = numerals_map_size;\n    let mut numerals_map_size_increment_max\
    \ = numerals_map_size;\n    let mut numerals_map_size_increment_min = 1;\n   \
    \ let mut numerals_map_size_increment_step = 1;\n    let mut numerals_map_size_increment_step_max\
    \ = numerals_map_size_increment_max;\n    let mut numerals_map_size_increment_step_min\
    \ = 1;\n    let mut numerals_map_size_increment_step_step = 1;\n    let mut numerals_map_size_increment_step_step_max\
    \ = numerals_map_size_increment_step_max;\n    let mut numerals_map_size_increment_step_step_min\
    \ = 1;\n    let mut numerals_map_size_increment_step_step_step = 1;\n    let mut\
    \ numerals_map_size_increment_step_step_step_max = numerals_map_size_increment_step_step_max;\n\
    \    let mut numerals_map_size_increment_step_step_step_min = 1;\n    let mut\
    \ numerals_map_size_increment_step_step_step_step = 1;\n    let mut numerals_map_size_increment_step_step_step_max\
    \ = numerals_map_size_increment_step_step_step_max;\n    let mut numerals_map_size_increment_step_step_step_min\
    \ = 1;\n    let mut numerals_map_size_increment_step_step_step_step = 1;\n   \
    \ let mut numerals_map_size_increment_step_step_step_step_max = numerals_map_size_increment_step_step_step_step_max;\n\
    \    let mut numerals_map_size_increment_step_step_step_step_min = 1;\n    let\
    \ mut numerals_map_size_increment_step_step_step_step_step = 1;\n    let mut numerals_map_size_increment_step_step_step_step_max\
    \ = numerals_map_size_increment_step_step_step_step_max;\n    let mut numerals_map_size_increment_step_step_step_step_min\
    \ = 1;\n    let mut numerals_map_size_increment_step_step_step_step_step_step\
    \ = 1;\n    let mut numerals_map_size_increment_step_step_step_step_step_max =\
    \ numerals_map_size_increment_step_step_step_step_step_max;\n    let mut numerals_map_size_increment_step_step_step_step_step_min\
    \ = 1;\n    let mut numerals_map_size_increment_step_\n}\n\nfn main() {\n    let\
    \ candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpgpo521no.rs:40:46\n   |\n\
    40 |     let mut numerals_map_size_increment_step_\n   |                     \
    \                         ^ help: add `;` here\n41 | }\n   | - unexpected token\n\
    \nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmpgpo521no.rs:14:28\n\
    \   |\n14 |     let mut numerals_map = HashMap::new();\n   |                 \
    \           ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this\
    \ struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0425]: cannot\
    \ find value `numerals_map_size_increment_step_step_step_step_max` in this scope\n\
    \  --> /tmp/tmpgpo521no.rs:32:67\n   |\n32 |     let mut numerals_map_size_increment_step_step_step_step_max\
    \ = numerals_map_size_increment_step_step_step_step_max;\n   |               \
    \                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `numerals_map_size_increment_step_step_step_step`\n\
    \nerror[E0425]: cannot find value `numerals_map_size_increment_step_step_step_step_step_max`\
    \ in this scope\n  --> /tmp/tmpgpo521no.rs:38:72\n   |\n38 |     let mut numerals_map_size_increment_step_step_step_step_step_max\
    \ = numerals_map_size_increment_step_step_step_step_step_max;\n   |          \
    \                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `numerals_map_size_increment_step_step_step_step_step`\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgpo521no.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgpo521no.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgpo521no.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut prev_numeral = String::new();\n    let mut prev_roman = String::new();\n\
    \    let mut prev_prev_numeral = String::new();\n    let mut prev_prev_roman =\
    \ String::new();\n    let mut prev_prev_prev_numeral = String::new();\n    let\
    \ mut prev_prev_prev_roman = String::new();\n    let mut prev_prev_prev_prev_numeral\
    \ = String::new();\n    let mut prev_prev_prev_prev_roman = String::new();\n \
    \   let mut prev_prev_prev_prev_prev_numeral = String::new();\n    let mut prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_numeral = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_roman = String::new();\n    let mut\
    \ prev_prev_prev_prev_prev_prev_prev_numeral = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_numeral\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_numeral\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_numeral\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_numeral\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_numeral\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_numeral\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_numeral\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_numeral\
    \ = String::new\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpr7_on2u2.rs:42:84\n   |\n\
    42 |     let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_numeral = String::new\n\
    \   |                                                                        \
    \            ^ help: add `;` here\n43 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr7_on2u2.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr7_on2u2.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr7_on2u2.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr7_on2u2.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr7_on2u2.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr7_on2u2.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr7_on2u2.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpr7_on2u2.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr7_on2u2.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr7_on2u2.rs:51:25\n   |\n51 |    "
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n\n\
    \    // The first 10 roman numerals are the same as the numbers\n    // from 1\
    \ to 9.\n    for num in 1..10 {\n        let mut numeral_digit = String::new();\n\
    \        let mut numeral_digit_str = String::new();\n\n        // The first 10\
    \ digits are the same as the numbers from 1 to 9.\n        for digit in 1..10\
    \ {\n            let mut numeral_digit_digit = String::new();\n            let\
    \ mut numeral_digit_digit_str = String::new();\n\n            // The first 10\
    \ numerals are the same as the numbers from 1 to 9.\n            for numeral in\
    \ 1..10 {\n                numeral_digit_digit.clear();\n                numeral_digit_digit_str.clear();\n\
    \n                // The first 10 numerals are the same as the numbers from 1\
    \ to 9.\n                for numeral_digit in 1..10 {\n                    numeral_digit_digit.clear();\n\
    \                    numeral_digit_digit_str.clear();\n\n                    //\
    \ The first 10 numerals are the same as the numbers from 1 to 9.\n           \
    \         for numeral_digit_digit in 1..10 {\n                        numeral_digit_digit.clear();\n\
    \                        numeral_digit_digit_str.clear();\n\n                \
    \        // The first 10 numerals are the same as the numbers from 1 to 9.\n \
    \                       for numeral_digit_digit_str in 1..10 {\n             \
    \               numeral_digit_digit_str.clear();\n\n                         \
    \   numeral_digit_digit_str.clear();\n\n                            numeral_digit_digit_str.clear();\n\
    \n                            numeral_digit_digit_str.clear();\n\n           \
    \                 numeral_digit_digit_str.clear();\n\n                       \
    \     numeral_digit_digit_str.clear();\n\n                            numeral_digit_digit_str.clear();\n\
    \n                            numeral_digit_digit_str.clear();\n\n           \
    \                 numeral_digit_digit_str.clear();\n\n                       \
    \     numeral_digit_digit_str.clear();\n\n                            numeral_digit_digit_str.clear();\n\
    \n                            numeral_digit_digit_str.clear();\n\n           \
    \                 numeral_digit_digit_str.clear();\n\n                       \
    \     numeral_digit_digit_str.clear();\n\n                            numeral_digit_digit_str.clear();\n\
    \n                            numeral_digit_digit_str.clear();\n\n           \
    \                 numeral_digit_digit_str.clear();\n\n                       \
    \     numeral_digit_digit_str.clear();\n\n                            numeral_digit_digit_str.clear();\n\
    \n                            numeral_digit_digit_str.clear();\n\n           \
    \                 numeral_digit_digit_str.clear();\n\n                       \
    \     numeral_digit_digit_str.clear();\n\n                            numeral_digit_digit_str.clear();\n\
    \n                            numeral_digit_digit_str.clear();\n\n           \
    \                 numeral_digit_digit_str.clear();\n\n                       \
    \     numeral_digit_digit_str.clear();\n\n                            numeral_digit_digit_str.clear();\n\
    \n                            numeral_digit_digit_str.clear();\n\n           \
    \                 numeral_digit_digit_str.clear();\n\n                       \
    \     numeral_digit_digit_str.clear();\n\n                            numeral_digit_digit_str.clear();\n\
    \n\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp2xns_llq.rs:124:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n...\n17  |     for\
    \ num in 1..10 {\n    |                      - unclosed delimiter\n...\n22  |\
    \         for digit in 1..10 {\n    |                            - unclosed delimiter\n\
    ...\n27  |             for numeral in 1..10 {\n    |                         \
    \         - unclosed delimiter\n...\n32  |                 for numeral_digit in\
    \ 1..10 {\n    |                                            - unclosed delimiter\n\
    ...\n37  |                     for numeral_digit_digit in 1..10 {\n    |     \
    \                                                 - unclosed delimiter\n...\n\
    42  |                         for numeral_digit_digit_str in 1..10 {\n    |  \
    \                                                            - this delimiter\
    \ might not be properly closed...\n...\n106 | }\n    | - ...as it matches this\
    \ but it has different indentation\n...\n124 | }\n    |   ^\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n   --> /tmp/tmp2xns_llq.rs:110:17\n    |\n\
    110 |     assert_eq!({left}, {right});\n    |                 ^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find value `right` in this scope\n   -->\
    \ /tmp/tmp2xns_llq.rs:110:25\n    |\n110 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp2xns_llq.rs:111:17\n\
    \    |\n111 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp2xns_llq.rs:111:25\n    |\n111 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp2xns_llq.rs:112:17\n\
    \    |\n112 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   -"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = 0;\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_index = 0;\n    let mut numeral_digits_len = number.digits();\n\
    \    let mut numeral_digits_\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp2y8qx8mi.rs:58:28\n   |\n\
    58 |     let mut numeral_digits_\n   |                            ^ help: add\
    \ `;` here\n59 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmp2y8qx8mi.rs:63:17\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp2y8qx8mi.rs:63:25\n \
    \  |\n63 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2y8qx8mi.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2y8qx8mi.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2y8qx8mi.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2y8qx8mi.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2y8qx8mi.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2y8qx8mi.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2y8qx8mi.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2y8qx8mi.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot f"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"l\", \"x\", \"i\"];\n    let mut numeral_index = 0;\n    let mut numeral_value\
    \ = number;\n    while numeral_value >= 1000 {\n        numeral_index += 1;\n\
    \        numeral_value -= 1000;\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    while numeral_value >= 100 {\n        numeral_index += 1;\n        numeral_value\
    \ -= 100;\n        roman.push_str(numerals[numeral_index]);\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    while numeral_value >= 10 {\n        numeral_index += 1;\n        numeral_value\
    \ -= 10;\n        roman.push_str(numerals[numeral_index]);\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman.push_str(numerals[numeral_index]);\n    roman\n}\n\nfn main() {\n \
    \   let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0tkx237g.rs:61:17\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0tkx237g.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0tkx237g.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0tkx237g.rs:62:25\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0tkx237g.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0tkx237g.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0tkx237g.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0tkx237g.rs:64:25\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0tkx237g.rs:65:17\n  \
    \ |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0tkx237g.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0tkx237g.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numerals_index\
    \ = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let\
    \ mut numerals_index = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"\
    x\", \"l\"];\n    let mut numerals_index = vec![\"\", \"c\", \"d\", \"x\", \"\
    l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numerals_index = vec![\"\", \"\
    c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numerals_index\
    \ = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let\
    \ mut numerals_index = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"\
    x\", \"l\"];\n    let mut numerals_index = vec![\"\", \"c\", \"d\", \"x\", \"\
    l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numerals_index = vec![\"\", \"\
    c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numerals_index\
    \ = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let\
    \ mut numerals_index = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"\
    x\", \"l\"];\n    let mut numerals_index = vec![\"\", \"c\", \"d\", \"x\", \"\
    l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numerals_index = vec![\"\", \"\
    c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numerals_index\
    \ = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let\
    \ mut numerals_index = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"\
    x\", \"l\"];\n    let mut numerals_index = vec![\"\", \"c\", \"d\", \"x\", \"\
    l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numerals_index = vec![\"\", \"\
    c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numerals_index\
    \ = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let\
    \ mut numerals_index = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"\
    x\", \"l\"];\n    let mut numerals_index = vec![\"\", \"c\", \"d\", \"x\", \"\
    l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numerals_index = vec![\"\", \"\
    c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numerals_index\
    \ = vec![\"\", \"c\", \"d\", \"x\", \"l\", \"m\", \"c\", \"\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n  --> /tmp/tmpea40pctl.rs:34:69\n\
    \   |\n34 |       let mut numerals_index = vec![\"\", \"c\", \"d\", \"x\", \"\
    l\", \"m\", \"c\", \"\n   |  _____________________________________________________________________^\n\
    35 | | }\n36 | |\n37 | | fn main() {\n...  |\n52 | |     assert_eq!({left}, {right});\n\
    53 | | }\n   | |__^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0765`.\n"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut remainder = number;\n    let mut i = 0;\n    while remainder > 0 {\n\
    \        if remainder >= 100 {\n            roman.push(\"M\");\n            remainder\
    \ -= 100;\n        }\n        if remainder >= 50 {\n            roman.push(\"\
    D\");\n            remainder -= 50;\n        }\n        if remainder >= 10 {\n\
    \            roman.push(\"C\");\n            remainder -= 10;\n        }\n   \
    \     if remainder >= 5 {\n            roman.push(\"L\");\n            remainder\
    \ -= 5;\n        }\n        if remainder >= 1 {\n            roman.push(\"X\"\
    );\n            remainder -= 1;\n        }\n        numeral.push(remainder);\n\
    \        i += 1;\n    }\n    roman.push(i);\n    roman\n}\n\nfn main() {\n   \
    \ let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx1oifjhu.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx1oifjhu.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx1oifjhu.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx1oifjhu.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx1oifjhu.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx1oifjhu.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx1oifjhu.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx1oifjhu.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx1oifjhu.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx1oifjhu.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx1oifjhu.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    while num\
    \ < number {\n        roman.push((num % 10).to_string());\n        num /= 10;\n\
    \    }\n    roman.push((num % 10).to_string());\n    roman\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn_ulhkz0.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn_ulhkz0.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn_ulhkz0.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:27:25\n   |\n27 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:28:17\n  \
    \ |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn_ulhkz0.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn_ulhkz0.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut remainder = number;\n    while remainder > 0 {\n        let mut numeral_digit\
    \ = remainder % 10;\n        remainder = remainder / 10;\n        roman.push((numeral_digit\
    \ as char).to_string());\n    }\n    while numeral.len() < roman.len() {\n   \
    \     numeral.push('_');\n    }\n    roman.push_str(numeral);\n    roman.to_lowercase()\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpj05vgpcf.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj05vgpcf.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpj05vgpcf.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpj05vgpcf.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpj05vgpcf.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpj05vgpcf.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpj05vgpcf.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpj05vgpcf.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpj05vgpcf.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj05vgpcf.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpj05vgpcf.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"\
    D\"),\n                           String::from(\"CD\"), String::from(\"C\"), String::from(\"\
    XC\"),\n                           String::from(\"L\"), String::from(\"XL\"),\
    \ String::from(\"X\"),\n                           String::from(\"IX\"), String::from(\"\
    V\"), String::from(\"IV\"),\n                           String::from(\"I\")];\n\
    \    let mut numeral_length = numerals.len();\n    let mut numeral_lengths = vec![numeral_length];\n\
    \    let mut numeral_lengths_reversed = vec![numeral_length];\n    let mut numeral_lengths_reversed_index\
    \ = numeral_lengths.len() - 1;\n    let mut numeral_lengths_reversed_index2 =\
    \ numeral_lengths.len() - 2;\n    let mut numeral_lengths_reversed_index3 = numeral_lengths.len()\
    \ - 3;\n    let mut numeral_lengths_reversed_index4 = numeral_lengths.len() -\
    \ 4;\n    let mut numeral_lengths_reversed_index5 = numeral_lengths.len() - 5;\n\
    \    let mut numeral_lengths_reversed_index6 = numeral_lengths.len() - 6;\n  \
    \  let mut numeral_lengths_reversed_index7 = numeral_lengths.len() - 7;\n    let\
    \ mut numeral_lengths_reversed_index8 = numeral_lengths.len() - 8;\n    let mut\
    \ numeral_lengths_reversed_index9 = numeral_lengths.len() - 9;\n    let mut numeral_lengths_reversed_index10\
    \ = numeral_lengths.len() - 10;\n    let mut numeral_lengths_reversed_index11\
    \ = numeral_lengths.len() - 11;\n    let mut numeral_lengths_reversed_index12\
    \ = numeral_lengths.len() - 12;\n    let mut numeral_lengths_reversed_index13\
    \ = numeral_lengths.len() - 13;\n    let mut numeral_lengths_reversed_index14\
    \ = numeral_lengths.len() - 14;\n    let mut numeral_lengths_reversed_index15\
    \ = numeral_lengths.len() - 15;\n    let mut numeral_lengths_reversed_index16\
    \ = numeral_lengths.len() - 16;\n    let mut numeral_lengths_reversed_index17\
    \ = numeral_lengths.len() - 17;\n    let mut numeral_lengths_reversed_index18\
    \ = numeral_lengths.len() - 18;\n    let mut numer\n}\n\nfn main() {\n    let\
    \ candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpn8b_gjng.rs:40:18\n   |\n\
    40 |     let mut numer\n   |                  ^ help: add `;` here\n41 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn8b_gjng.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn8b_gjng.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn8b_gjng.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn8b_gjng.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn8b_gjng.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn8b_gjng.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn8b_gjng.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn8b_gjng.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn8b_gjng.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn8b_gjng.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 0;\n    let mut\
    \ nums: Vec<isize> = vec![];\n    let mut nums_str: Vec<String> = vec![];\n  \
    \  let mut nums_strs: Vec<String> = vec![];\n    let mut nums_strs_rev: Vec<String>\
    \ = vec![];\n    let mut nums_strs_revs: Vec<String> = vec![];\n    let mut nums_strs_revs_rev:\
    \ Vec<String> = vec![];\n    let mut nums_strs_revs_revs: Vec<String> = vec![];\n\
    \    let mut nums_strs_revs_revs_rev: Vec<String> = vec![];\n    let mut nums_strs_revs_revs_revs:\
    \ Vec<String> = vec![];\n    let mut nums_strs_revs_revs_revs_rev: Vec<String>\
    \ = vec![];\n    let mut nums_strs_revs_revs_revs_revs: Vec<String> = vec![];\n\
    \    let mut nums_strs_revs_revs_revs_revs_rev: Vec<String> = vec![];\n    let\
    \ mut nums_strs_revs_revs_revs_revs_revs: Vec<String> = vec![];\n    let mut nums_strs_revs_revs_revs_revs_revs_rev:\
    \ Vec<String> = vec![];\n    let mut nums_strs_revs_revs_revs_revs_revs_rev: Vec<String>\
    \ = vec![];\n    let mut nums_strs_revs_revs_revs_revs_revs_revs: Vec<String>\
    \ = vec![];\n    let mut nums_strs_revs_revs_revs_revs_revs_revs_rev: Vec<String>\
    \ = vec![];\n    let mut nums_strs_revs_revs_revs_revs_revs_revs_revs: Vec<String>\
    \ = vec![];\n    let mut nums_strs_revs_revs_revs_revs_revs_revs_revs_rev: Vec<String>\
    \ = vec![];\n    let mut nums_strs_revs_revs_revs_revs_revs_revs_revs_revs: Vec<String>\
    \ = vec![];\n    let mut nums_strs_revs_revs_revs_revs_revs_\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3tea0uy3.rs:34:48\n   |\n\
    34 |     let mut nums_strs_revs_revs_revs_revs_revs_\n   |                   \
    \                             ^ help: add `;` here\n35 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3tea0uy3.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3tea0uy3.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3tea0uy3.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3tea0uy3.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3tea0uy3.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3tea0uy3.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3tea0uy3.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3tea0uy3.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3tea0uy3.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3tea0uy3.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not fou"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut nums = vec![number];\n    let\
    \ mut denom = vec![number];\n    let mut prev_denom = vec![number];\n    let mut\
    \ prev_nums = vec![number];\n    let mut prev_nums_iter = vec![number];\n    let\
    \ mut prev_denom_iter = vec![number];\n    let mut prev_nums_iter_iter = vec![number];\n\
    \    let mut prev_denom_iter_iter = vec![number];\n    let mut prev_nums_iter_iter_iter\
    \ = vec![number];\n    let mut prev_denom_iter_iter_iter = vec![number];\n   \
    \ let mut prev_nums_iter_iter_iter_iter = vec![number];\n    let mut prev_denom_iter_iter_iter_iter\
    \ = vec![number];\n    let mut prev_nums_iter_iter_iter_iter_iter = vec![number];\n\
    \    let mut prev_denom_iter_iter_iter_iter_iter = vec![number];\n    let mut\
    \ prev_nums_iter_iter_iter_iter_iter_iter = vec![number];\n    let mut prev_denom_iter_iter_iter_iter_iter_iter\
    \ = vec![number];\n    let mut prev_nums_iter_iter_iter_iter_iter_iter_iter =\
    \ vec![number];\n    let mut prev_denom_iter_iter_iter_iter_iter_iter_iter = vec![number];\n\
    \    let mut prev_nums_iter_iter_iter_iter_iter_iter_iter = vec![number];\n  \
    \  let mut prev_denom_iter_iter_iter_iter_iter_iter_iter = vec![number];\n   \
    \ let mut prev_nums_iter_iter_iter_iter_iter_iter_iter_iter = vec![number];\n\
    \    let mut prev_denom_iter_iter_iter_iter_iter_iter_iter_iter = vec![number];\n\
    \    let mut prev_nums_iter_iter_iter_iter_iter_iter_iter_iter_iter = vec![number];\n\
    \    let mut prev_denom_iter_iter_iter_iter_iter_iter_iter_iter_iter = vec![number];\n\
    \    let mut prev_nums_iter_iter_iter_iter_iter_iter_iter_iter_iter_iter = vec![number];\n\
    \    let mut prev_denom_iter_iter_iter_iter_iter_iter_iter_iter_iter = vec![number];\n\
    \    let mut prev_nums_iter_iter_iter_iter_iter_iter_iter_iter_iter_iter = vec![number];\n\
    \    let mut prev_denom_iter_iter_iter_iter_iter_iter_iter_iter_iter = vec![number];\n\
    \    let mut prev_nums_iter_iter_iter_iter_iter_iter_iter_iter_iter_iter = vec![number];\n\
    \    let mut prev_denom_iter_iter_iter_iter_iter_iter_iter_iter_iter_iter = vec![number];\n\
    \    let mut prev_nums_iter_iter_iter_iter_iter_\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpaana6n5r.rs:43:48\n   |\n\
    43 |     let mut prev_nums_iter_iter_iter_iter_iter_\n   |                   \
    \                             ^ help: add `;` here\n44 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpaana6n5r.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpaana6n5r.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpaana6n5r.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpaana6n5r.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpaana6n5r.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpaana6n5r.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpaana6n5r.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpaana6n5r.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpaana6n5r.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpaana6n5r.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not fou"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut prev_digit = 0;\n    let mut\
    \ num_digits = 1;\n    let mut prev_roman = String::from(\"i\");\n    while number\
    \ > 0 {\n        let digit = number % 10;\n        roman += prev_digit.to_string();\n\
    \        prev_digit = digit;\n        number /= 10;\n        num_digits += 1;\n\
    \        prev_roman = roman.chars().nth(num_digits).unwrap().to_string();\n  \
    \      roman = prev_roman.to_string();\n    }\n    roman\n}\n\nfn main() {\n \
    \   let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjdi5i9k0.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjdi5i9k0.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjdi5i9k0.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjdi5i9k0.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjdi5i9k0.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjdi5i9k0.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjdi5i9k0.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjdi5i9k0.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjdi5i9k0.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjdi5i9k0.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjdi5i9k0.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len_len = String::new();\n    let mut numeral_digits_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len = String::new();\n\
    \    let mut numeral_digits_len_len_len_len_len = String::new();\n    let mut\
    \ numeral_digits_len_len_len_len_len_len = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = String::new();\n    let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4et54hwf.rs:36:80\n   |\n\
    36 |     let mut numeral_digits_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    \   |                                                                        \
    \        ^ help: add `;` here\n37 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4et54hwf.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4et54hwf.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4et54hwf.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4et54hwf.rs:45:25\n   |\n45 |     assert_"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map_inv = HashMap::new();\n\
    \    let mut numerals_map_reverse = HashMap::new();\n    let mut numerals_map_reverse_inv\
    \ = HashMap::new();\n    let mut numerals_map_reverse2 = HashMap::new();\n   \
    \ let mut numerals_map_reverse2_inv = HashMap::new();\n    let mut numerals_map_reverse3\
    \ = HashMap::new();\n    let mut numerals_map_reverse3_inv = HashMap::new();\n\
    \    let mut numerals_map_reverse4 = HashMap::new();\n    let mut numerals_map_reverse4_inv\
    \ = HashMap::new();\n    let mut numerals_map_reverse5 = HashMap::new();\n   \
    \ let mut numerals_map_reverse5_inv = HashMap::new();\n    let mut numerals_map_reverse6\
    \ = HashMap::new();\n    let mut numerals_map_reverse6_inv = HashMap::new();\n\
    \    let mut numerals_map_reverse7 = HashMap::new();\n    let mut numerals_map_reverse7_inv\
    \ = HashMap::new();\n    let mut numerals_map_reverse8 = HashMap::new();\n   \
    \ let mut numerals_map_reverse8_inv = HashMap::new();\n    let mut numerals_map_reverse9\
    \ = HashMap::new();\n    let mut numerals_map_reverse9_inv = HashMap::new();\n\
    \    let mut numerals_map_reverse10 = HashMap::new();\n    let mut numerals_map_reverse10_inv\
    \ = HashMap::new();\n    let mut numerals_map_reverse11 = HashMap::new();\n  \
    \  let mut numerals_map_reverse11_inv = HashMap::new();\n    let mut numerals_map_reverse12\
    \ = HashMap::new();\n    let mut numerals_map_reverse12_inv = HashMap::new();\n\
    \    let mut numerals_map_reverse13 = HashMap::new();\n    let mut numerals_map_reverse13_inv\
    \ = HashMap::new();\n    let mut numerals_map_reverse14 = HashMap::new();\n  \
    \  let mut numerals_map_reverse14_inv = HashMap::new();\n    let mut numerals_map_reverse15\
    \ = HashMap::new\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpv5s5pocx.rs:44:50\n   |\n\
    44 |     let mut numerals_map_reverse15 = HashMap::new\n   |                 \
    \                                 ^ help: add `;` here\n45 | }\n   | - unexpected\
    \ token\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n\
    \  --> /tmp/tmpv5s5pocx.rs:44:38\n   |\n44 |     let mut numerals_map_reverse15\
    \ = HashMap::new\n   |                                      ^^^^^^^ use of undeclared\
    \ type `HashMap`\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n\
    \  --> /tmp/tmpv5s5pocx.rs:14:28\n   |\n14 |     let mut numerals_map = HashMap::new();\n\
    \   |                            ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpv5s5pocx.rs:15:32\n   |\n15 |     let mut numerals_map_inv = HashMap::new();\n\
    \   |                                ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpv5s5pocx.rs:16:36\n   |\n16 |     let mut numerals_map_reverse =\
    \ HashMap::new();\n   |                                    ^^^^^^^ not found in\
    \ this scope\n   |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpv5s5pocx.rs:17:40\n   |\n17 |     let mut numerals_map_reverse_inv\
    \ = HashMap::new();\n   |                                        ^^^^^^^ not found\
    \ in this scope\n   |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpv5s5pocx.rs:18:37\n   |\n18 |     let mut numerals_map_reverse2\
    \ = HashMap::new();\n   |                                     ^^^^^^^ not found\
    \ in this scope\n   |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashM"
  stdout: ''
  timestamp: 1659823293
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral: isize = 0;\n    let mut numeral_string: String;\n    let mut numeral_strings:\
    \ Vec<String> = vec![];\n    let mut numeral_strings_len: usize = 0;\n    let\
    \ mut numeral_strings_lens: Vec<usize> = vec![];\n    let mut numeral_strings_lens_len:\
    \ usize = 0;\n    let mut numeral_strings_lens_lens: Vec<usize> = vec![];\n  \
    \  let mut numeral_strings_lens_lens_len: usize = 0;\n    let mut numeral_strings_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut numeral_strings_lens_lens_lens_len: usize\
    \ = 0;\n    let mut numeral_strings_lens_lens_lens_lens: Vec<usize> = vec![];\n\
    \    let mut numeral_strings_lens_lens_lens_lens_len: usize = 0;\n    let mut\
    \ numeral_strings_lens_lens_lens_lens_lens: Vec<usize> = vec![];\n    let mut\
    \ numeral_strings_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ u\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpabxyhodx.rs:35:87\n   |\n\
    35 |     let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ u\n   |                                                                    \
    \                   ^ help: add `;` here\n36 | }\n   | - unexpected token\n\n\
    error[E0412]: cannot find type `u` in this scope\n  --> /tmp/tmpabxyhodx.rs:35:86\n\
    \   |\n35 |     let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ u\n   |                                                                    \
    \                  ^ help: a builtin type with a similar name exists: `u8`\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpabxyhodx.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpabxyhodx.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpabxyhodx.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpabxyhodx.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpabxyhodx.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpabxyhodx.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpabxyhodx.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpabxyhodx.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |   "
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num = 0;\n    let mut denom =\
    \ 1;\n    let mut remainder = 0;\n    while number > 0 {\n        remainder =\
    \ number % 10;\n        roman += &format!(\"{}\", remainder);\n        number\
    \ /= 10;\n        denom += 1;\n    }\n    if number > 0 {\n        roman += &format!(\"\
    {}\", number);\n    }\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcxugyzh4.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcxugyzh4.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcxugyzh4.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcxugyzh4.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcxugyzh4.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcxugyzh4.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcxugyzh4.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcxugyzh4.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcxugyzh4.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcxugyzh4.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcxugyzh4.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut prev_digit = 0;\n    let mut\
    \ prev_roman = 0;\n    let mut num_digits = 1;\n    let mut roman_digits = String::new();\n\
    \    let mut roman_digits_len = roman_digits.len();\n    let mut roman_digits_len2\
    \ = roman_digits_len;\n    let mut roman_digits_len3 = roman_digits_len2;\n  \
    \  let mut roman_digits_len4 = roman_digits_len3;\n    let mut roman_digits_len5\
    \ = roman_digits_len4;\n    let mut roman_digits_len6 = roman_digits_len5;\n \
    \   let mut roman_digits_len7 = roman_digits_len6;\n    let mut roman_digits_len8\
    \ = roman_digits_len7;\n    let mut roman_digits_len9 = roman_digits_len8;\n \
    \   let mut roman_digits_len10 = roman_digits_len9;\n    let mut roman_digits_len11\
    \ = roman_digits_len10;\n    let mut roman_digits_len12 = roman_digits_len11;\n\
    \    let mut roman_digits_len13 = roman_digits_len12;\n    let mut roman_digits_len14\
    \ = roman_digits_len13;\n    let mut roman_digits_len15 = roman_digits_len14;\n\
    \    let mut roman_digits_len16 = roman_digits_len15;\n    let mut roman_digits_len17\
    \ = roman_digits_len16;\n    let mut roman_digits_len18 = roman_digits_len17;\n\
    \    let mut roman_digits_len19 = roman_digits_len18;\n    let mut roman_digits_len20\
    \ = roman_digits_len19;\n    let mut roman_digits_len21 = roman_digits_len20;\n\
    \    let mut roman_digits_len22 = roman_digits_len21;\n    let mut roman_digits_len23\
    \ = roman_digits_len22;\n    let mut roman_digits_len24 = roman_digits_len23;\n\
    \    let mut roman_digits_len25 = roman_digits_len24;\n    let mut roman_digits_len26\
    \ = roman_digits_len25;\n    let mut roman_digits_len27 = roman_digits_len26;\n\
    \    let mut roman_digits_len28 = roman_digit\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp8cke6mxt.rs:44:45\n   |\n\
    44 |     let mut roman_digits_len28 = roman_digit\n   |                      \
    \                       ^ help: add `;` here\n45 | }\n   | - unexpected token\n\
    \nerror[E0425]: cannot find value `roman_digit` in this scope\n  --> /tmp/tmp8cke6mxt.rs:44:34\n\
    \   |\n44 |     let mut roman_digits_len28 = roman_digit\n   |               \
    \                   ^^^^^^^^^^^ help: a local variable with a similar name exists:\
    \ `roman_digits`\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8cke6mxt.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8cke6mxt.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8cke6mxt.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8cke6mxt.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8cke6mxt.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8cke6mxt.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8cke6mxt.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8cke6mxt.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8cke6mxt.rs:53:17\n   |\n53"
  stdout: ''
  timestamp: 1659823294
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::cmp::PartialOrd;\n\n    let mut roman\
    \ = String::new();\n    let mut prev_digit = String::new();\n    let mut prev_roman\
    \ = String::new();\n    let mut prev_prev_digit = String::new();\n\n    let mut\
    \ digits = vec![String::new(), String::new(), String::new(), String::new()];\n\
    \    let mut roman_digits = vec![String::new(), String::new(), String::new(),\
    \ String::new()];\n\n    let mut roman_digits_iter = roman_digits.iter();\n  \
    \  let mut digits_iter = digits.iter();\n\n    let mut roman_iter = roman.chars().enumerate().rev();\n\
    \n    let mut prev_digits_iter = prev_digit.chars().enumerate().rev();\n\n   \
    \ let mut prev_roman_iter = prev_roman.chars().enumerate().rev();\n\n    let mut\
    \ prev_prev_digits_iter = prev_prev_digit.chars().enumerate().rev();\n\n    let\
    \ mut roman_digits_iter = roman_digits.iter();\n    let mut digits_iter = digits.iter();\n\
    \n    let mut roman_iter = roman.chars().enumerate().rev();\n\n    let mut prev_digits_iter\
    \ = prev_digit.chars().enumerate().rev();\n\n    let mut prev_roman_iter = prev_roman.chars().enumerate().rev();\n\
    \n    let mut prev_prev_digits_iter = prev_prev_digit.chars().enumerate().rev();\n\
    \n    let mut roman_digits_iter = roman_digits.iter();\n    let mut digits_iter\
    \ = digits.iter();\n\n    let mut roman_iter = roman.chars().enumerate().rev();\n\
    \n    let mut prev_digits_iter = prev_digit.chars().enumerate().rev();\n\n   \
    \ let mut prev_roman_iter = prev_roman.chars().enumerate().rev();\n\n    let mut\
    \ prev_prev_digits_iter = prev_prev_digit.chars().enumerate().rev();\n\n    let\
    \ mut roman_digits_iter = roman_digits.iter();\n    let mut digits_iter = digits.iter();\n\
    \n    let mut roman_iter = roman.chars().enumerate().rev();\n\n    let mut prev_digits_iter\
    \ = prev_digit.chars().enumerate().rev();\n\n    let mut prev_roman_iter = prev_roman.chars().enumerate().rev();\n\
    \n    let mut prev_prev_digits_iter = prev_prev_digit.chars().enumerate().rev();\n\
    \n    let mut roman_digits_iter = roman_digits.iter();\n    let mut digits_iter\
    \ = digits.iter\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpe7sx6oza.rs:68:38\n   |\n\
    68 |     let mut digits_iter = digits.iter\n   |                             \
    \         ^ help: add `;` here\n69 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpe7sx6oza.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe7sx6oza.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe7sx6oza.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpe7sx6oza.rs:74:25\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpe7sx6oza.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpe7sx6oza.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpe7sx6oza.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpe7sx6oza.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpe7sx6oza.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe7sx6oza.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\ner"
  stdout: ''
  timestamp: 1659823294

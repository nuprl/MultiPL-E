language: rs
name: HumanEval_156_int_to_mini_roman
results:
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xix\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        \n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpsqoxckx3.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n        \"i\", \"i\",\
    \ \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    ,\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\"\
    , \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n    \
    \    \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\",\n        \"\
    i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\",\n        \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"i\", \"\
    i\", \"i\", \"i\", \"i\", \"i\",\n\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `}`\n\
    \  --> /tmp/tmpd_i7z2dt.rs:32:1\n   |\n32 | }\n   | ^ expected one of `.`, `;`,\
    \ `?`, `else`, or an operator\n\nerror: mismatched closing delimiter: `}`\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:13:28\n   |\n11 | fn int_to_mini_roman(number: isize) ->\
    \ String {\n   |                                               - closing delimiter\
    \ possibly meant for this\n12 |     let mut roman = String::new();\n13 |     let\
    \ mut numerals = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\"\
    , \"l\",\n   |                            ^ unclosed delimiter\n...\n32 | }\n\
    \   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpd_i7z2dt.rs:36:17\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:36:25\n \
    \  |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd_i7z2dt.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd_i7z2dt.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd_i7z2dt.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \       "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len2 = String::new();\n    let mut numeral_digits_len3\
    \ = String::new();\n    let mut numeral_digits_len4 = String::new();\n    let\
    \ mut numeral_digits_len5 = String::new();\n    let mut numeral_digits_len6 =\
    \ String::new();\n    let mut numeral_digits_len7 = String::new();\n    let mut\
    \ numeral_digits_len8 = String::new();\n    let mut numeral_digits_len9 = String::new();\n\
    \    let mut numeral_digits_len10 = String::new();\n    let mut numeral_digits_len11\
    \ = String::new();\n    let mut numeral_digits_len12 = String::new();\n    let\
    \ mut numeral_digits_len13 = String::new();\n    let mut numeral_digits_len14\
    \ = String::new();\n    let mut numeral_digits_len15 = String::new();\n    let\
    \ mut numeral_digits_len16 = String::new();\n    let mut numeral_digits_len17\
    \ = String::new();\n    let mut numeral_digits_len18 = String::new();\n    let\
    \ mut numeral_digits_len19 = String::new();\n    let mut numeral_digits_len20\
    \ = String::new();\n    let mut numeral_digits_len21 = String::new();\n    let\
    \ mut numeral_digits_len22 = String::new();\n    let mut numeral_digits_len23\
    \ = String::new();\n    let mut numeral_digits_len24 = String::new();\n    let\
    \ mut numeral_digits_len25 = String::new();\n    let mut numeral_digits_len26\
    \ = String::new();\n    let mut numeral_digits_len27 = String::new();\n    let\
    \ mut numeral_digits_len28 = String::new();\n    let mut numeral_digits_len29\
    \ = String::new();\n    let mut numeral_digits_len30 = String::new();\n    let\
    \ mut numeral_digits_len31 = String::new();\n    let mut numeral_digits_len32\
    \ = String::new();\n    let mut numeral_digits_len33 = String::\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpknmh599h.rs:48:1\n\
    \   |\n48 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpknmh599h.rs:52:17\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpknmh599h.rs:52:25\n \
    \  |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpknmh599h.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpknmh599h.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpknmh599h.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpknmh599h.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpknmh599h.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpknmh599h.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpknmh599h.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpknmh599h.rs:56:25\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpknmh599h.rs:57:17\n   |\n57 |     "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_len = String::new();\n    let mut numeral_len2 = String::new();\n\
    \    let mut numeral_len3 = String::new();\n    let mut numeral_len4 = String::new();\n\
    \    let mut numeral_len5 = String::new();\n    let mut numeral_len6 = String::new();\n\
    \    let mut numeral_len7 = String::new();\n    let mut numeral_len8 = String::new();\n\
    \    let mut numeral_len9 = String::new();\n    let mut numeral_len10 = String::new();\n\
    \    let mut numeral_len11 = String::new();\n    let mut numeral_len12 = String::new();\n\
    \    let mut numeral_len13 = String::new();\n    let mut numeral_len14 = String::new();\n\
    \    let mut numeral_len15 = String::new();\n    let mut numeral_len16 = String::new();\n\
    \    let mut numeral_len17 = String::new();\n    let mut numeral_len18 = String::new();\n\
    \    let mut numeral_len19 = String::new();\n    let mut numeral_len20 = String::new();\n\
    \    let mut numeral_len21 = String::new();\n    let mut numeral_len22 = String::new();\n\
    \    let mut numeral_len23 = String::new();\n    let mut numeral_len24 = String::new();\n\
    \    let mut numeral_len25 = String::new();\n    let mut numeral_len26 = String::new();\n\
    \    let mut numeral_len27 = String::new();\n    let mut numeral_len28 = String::new();\n\
    \    let mut numeral_len29 = String::new();\n    let mut numeral_len30 = String::new();\n\
    \    let mut numeral_len31 = String::new();\n    let mut numeral_len32 = String::new();\n\
    \    let mut numeral_len33 = String::new();\n    let mut numeral_len34 = String::new();\n\
    \    let mut numeral_len35 = String::new();\n    let mut numeral_len36 = String::new();\n\
    \    let mut numeral_len37 = String::new();\n    let mut numeral_len38 = String::new();\n\
    \    let mut numeral_len39 = String::\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpxq3adpsh.rs:53:1\n\
    \   |\n53 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpxq3adpsh.rs:57:17\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpxq3adpsh.rs:57:25\n \
    \  |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxq3adpsh.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxq3adpsh.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxq3adpsh.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxq3adpsh.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxq3adpsh.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxq3adpsh.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxq3adpsh.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxq3adpsh.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxq3adpsh.rs:62:17\n   |\n62 |     "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n\n    let mut roman = String::new();\n    let mut\
    \ numeral = String::new();\n\n    let mut numerals = vec![String::from(\"M\"),\
    \ String::from(\"CM\"), String::from(\"D\"),\n                           String::from(\"\
    CD\"), String::from(\"C\"), String::from(\"XC\"),\n                          \
    \ String::from(\"L\"), String::from(\"XL\"), String::from(\"X\"),\n          \
    \                 String::from(\"IX\"), String::from(\"V\"), String::from(\"IV\"\
    ),\n                           String::from(\"I\")];\n\n    let mut numerals_count\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n\n    let mut numerals_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n\
    \                                  0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n    let\
    \ mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                 \
    \                      0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n          \
    \                             0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n          \
    \                             0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n          \
    \                             0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = vec![0, 0, 0, 0, 0, 0, 0, 0,\n          \
    \                             0, 0, 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0,\n                                       0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n\n    let mut numerals_value_length = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0,\n                                       0, 0, 0, 0, 0, 0, 0, 0];\n\n\
    \    let mut numerals_value_length = \n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmplejjvd5f.rs:81:1\n\
    \   |\n81 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmplejjvd5f.rs:85:17\n   |\n85 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmplejjvd5f.rs:85:25\n \
    \  |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplejjvd5f.rs:86:17\n   |\n86 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplejjvd5f.rs:86:25\n   |\n86 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplejjvd5f.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplejjvd5f.rs:87:25\n   |\n87 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplejjvd5f.rs:88:17\n  \
    \ |\n88 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplejjvd5f.rs:88:25\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplejjvd5f.rs:89:17\n   |\n89 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplejjvd5f.rs:89:25\n\
    \   |\n89 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplejjvd5f.rs:90:17\n   |\n90 |     "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral: isize = 0;\n    let mut numeral_index = 0;\n    let mut numeral_string:\
    \ String = String::from(\"i\");\n    let mut numeral_string_index = 0;\n    let\
    \ mut numeral_string_index2 = 0;\n    let mut numeral_string_index3 = 0;\n   \
    \ let mut numeral_string_index4 = 0;\n    let mut numeral_string_index5 = 0;\n\
    \    let mut numeral_string_index6 = 0;\n    let mut numeral_string_index7 = 0;\n\
    \    let mut numeral_string_index8 = 0;\n    let mut numeral_string_index9 = 0;\n\
    \    let mut numeral_string_index10 = 0;\n    let mut numeral_string_index11 =\
    \ 0;\n    let mut numeral_string_index12 = 0;\n    let mut numeral_string_index13\
    \ = 0;\n    let mut numeral_string_index14 = 0;\n    let mut numeral_string_index15\
    \ = 0;\n    let mut numeral_string_index16 = 0;\n    let mut numeral_string_index17\
    \ = 0;\n    let mut numeral_string_index18 = 0;\n    let mut numeral_string_index19\
    \ = 0;\n    let mut numeral_string_index20 = 0;\n    let mut numeral_string_index21\
    \ = 0;\n    let mut numeral_string_index22 = 0;\n    let mut numeral_string_index23\
    \ = 0;\n    let mut numeral_string_index24 = 0;\n    let mut numeral_string_index25\
    \ = 0;\n    let mut numeral_string_index26 = 0;\n    let mut numeral_string_index27\
    \ = 0;\n    let mut numeral_string_index28 = 0;\n    let mut numeral_string_index29\
    \ = 0;\n    let mut numeral_string_index30 = 0;\n    let mut numeral_string_index31\
    \ = 0;\n    let mut numeral_string_index32 = 0;\n    let mut numeral_string_index33\
    \ = 0;\n    let mut numeral_string_index34 = 0;\n    let mut numeral_string_index35\
    \ = 0;\n    let mut numeral_string_index36 = 0;\n    let mut numeral_string_index37\
    \ = 0;\n    let mut numeral_string_index38 = 0;\n    let mut numeral_string_index39\
    \ = 0;\n    let mut numeral_string_index40 = 0;\n    let mut numeral_string_index41\
    \ = 0;\n    let mut numeral_string_index42 = 0;\n    let mut numeral_string_index43\
    \ = 0;\n    let mut numeral_string_index44 = 0;\n    let mut numeral_string_index45\
    \ = 0;\n    let mut numeral_string_index46 = 0;\n    let mut numer\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmptn33y_mz.rs:63:18\n   |\n\
    63 |     let mut numer\n   |                  ^ help: add `;` here\n64 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptn33y_mz.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptn33y_mz.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptn33y_mz.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptn33y_mz.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptn33y_mz.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptn33y_mz.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptn33y_mz.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptn33y_mz.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptn33y_mz.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptn33y_mz.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral: isize = 0;\n    let mut numeral_string: String = String::new();\n \
    \   let mut numeral_strings: Vec<String> = vec![];\n    let mut numeral_strings_len:\
    \ usize = 0;\n    let mut numeral_strings_lens: Vec<usize> = vec![];\n    let\
    \ mut numeral_strings_lens_len: usize = 0;\n    let mut numeral_strings_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut numeral_strings_lens_lens_len: usize = 0;\n\
    \    let mut numeral_strings_lens_lens_lens: Vec<usize> = vec![];\n    let mut\
    \ numeral_strings_lens_lens_lens_len: usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut numeral_strings_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens: Vec<usize> = vec![];\n\
    \    let mut numeral_strings_lens_lens_lens_lens_lens_len: usize = 0;\n    let\
    \ mut numeral_strings_lens_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut\
    \ numeral_strings_lens_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpbqsfe_2u.rs:32:319\n   |\n\
    32 |     let mut numeral_strings_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_\n\
    \   |                                                                        \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                   ^ help: add `;` here\n33 | }\n   | - unexpected token\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbqsfe_2u.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbqsfe_2u.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbqsfe_2u.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbqsfe_2u.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbqsfe_2u.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbqsfe_2u.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbqsfe_2u.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this sco"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n\n\
    \    // The first 10 roman numerals are the same as the decimal numerals.\n  \
    \  // The first 10 decimal numerals are the same as the roman numerals.\n    let\
    \ mut decimal = number.to_digits();\n    decimal.pop();\n    decimal.pop();\n\
    \    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n\
    \    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n\
    \    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n    decimal.pop();\n\
    \    decimal.pop();\n    decimal.pop();\n\n    // The first 10 roman numerals\
    \ are the same as the decimal numerals.\n    // The first 10 decimal numerals\
    \ are the same as the roman numerals.\n    let mut roman = number.to_digits();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n\
    \    roman.pop();\n    roman.pop();\n    roman.pop();\n    roman.pop();\n    ro\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `ro` in this scope\n  --> /tmp/tmppfrs0jpx.rs:92:5\n\
    \   |\n92 |     ro\n   |     ^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppfrs0jpx.rs:97:17\n   |\n97 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppfrs0jpx.rs:97:25\n\
    \   |\n97 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppfrs0jpx.rs:98:17\n   |\n98 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppfrs0jpx.rs:98:25\n   |\n98 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppfrs0jpx.rs:99:17\n   |\n99 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppfrs0jpx.rs:99:25\n   |\n99 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmppfrs0jpx.rs:100:17\n\
    \    |\n100 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmppfrs0jpx.rs:100:25\n    |\n100 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmppfrs0jpx.rs:101:17\n\
    \    |\n101 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmppfrs0jpx.rs:101:25\n    |\n101 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp2xnr_ud4.rs:51:45\n   |\n\
    51 |     let mut numeral_digits_len = String::new\n   |                      \
    \                       ^ help: add `;` here\n52 | }\n   | - unexpected token\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2xnr_ud4.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    while num\
    \ < number {\n        let mut digit = num % 10;\n        roman += if digit ==\
    \ 0 {\n            \"i\"\n        } else {\n            match digit {\n      \
    \          1 => \"m\",\n                2 => \"cm\",\n                3 => \"\
    d\",\n                4 => \"cd\",\n                5 => \"xd\",\n           \
    \     6 => \"xc\",\n                7 => \"l\",\n                8 => \"xl\",\n\
    \                9 => \"x\",\n                _ => \"\".to_string(),\n       \
    \     }\n        };\n        num /= 10;\n    }\n    roman\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd4dcqhrg.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd4dcqhrg.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd4dcqhrg.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd4dcqhrg.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd4dcqhrg.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut remainder = number;\n    while remainder > 0 {\n        let mut digit\
    \ = remainder % 10;\n        remainder = remainder / 10;\n        roman.push((digit\
    \ as char).to_string());\n    }\n    while numeral.len() < roman.len() {\n   \
    \     numeral.push('_');\n    }\n    roman.push_str(numeral);\n    roman.to_lowercase()\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpihcupt46.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpihcupt46.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpihcupt46.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpihcupt46.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpihcupt46.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpihcupt46.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpihcupt46.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpihcupt46.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpihcupt46.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpihcupt46.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpihcupt46.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_value = 0;\n    let mut numeral_value_index = 0;\n\
    \    let mut numeral_value_length = 0;\n    let mut numeral_value_length_index\
    \ = 0;\n    let mut numeral_value_length_value = 0;\n    let mut numeral_value_length_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mu\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpw70gqrrt.rs:53:11\n   |\n\
    53 |     let mu\n   |           ^ help: add `;` here\n54 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw70gqrrt.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw70gqrrt.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw70gqrrt.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw70gqrrt.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw70gqrrt.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw70gqrrt.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw70gqrrt.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw70gqrrt.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw70gqrrt.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw70gqrrt.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![];\n    let mut numeral_index = 0;\n    let mut numeral_strings\
    \ = vec![];\n    let mut numeral_string_index = 0;\n    let mut numeral_strings_index\
    \ = 0;\n    let mut numeral_strings_length = 0;\n    let mut numeral_strings_length_index\
    \ = 0;\n    let mut numeral_strings_length_max = 0;\n    let mut numeral_strings_length_max_index\
    \ = 0;\n    let mut numeral_strings_length_min = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_max\
    \ = 0;\n    let mut numeral_strings_length_max_index = 0;\n    let mut numeral_strings_length_min\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_max = 0;\n    let mut numeral_strings_length_max_index\
    \ = 0;\n    let mut numeral_strings_length_min = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_max\
    \ = 0;\n    let mut numeral_strings_length_max_index = 0;\n    let mut numeral_strings_length_min\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_max = 0;\n    let mut numeral_strings_length_max_index\
    \ = 0;\n    let mut numeral_strings_length_min = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_max\
    \ = 0;\n    let mut numeral_strings_length_max_index = 0;\n    let mut numeral_strings_length_min\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_max = 0;\n    let mut numeral_strings_length_max_index\
    \ = 0;\n    let mut numeral_strings_length_min = 0;\n    let mut numeral_strings_length_min_index\
    \ = 0;\n    let mut numeral_strings_length_min_index = 0;\n    let mut numeral_strings_length_max\
    \ = 0;\n    let mut numeral_\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpizqyaffx.rs:57:21\n   |\n\
    57 |     let mut numeral_\n   |                     ^ help: add `;` here\n58 |\
    \ }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpizqyaffx.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpizqyaffx.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpizqyaffx.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpizqyaffx.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpizqyaffx.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpizqyaffx.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpizqyaffx.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpizqyaffx.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpizqyaffx.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpizqyaffx.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `lef"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_value = 0;\n    let mut numeral_value_index = 0;\n\
    \    let mut numeral_value_length = 0;\n    let mut numeral_value_length_index\
    \ = 0;\n    let mut numeral_value_length_value = 0;\n    let mut numeral_value_length_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mu\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpw70gqrrt.rs:53:11\n   |\n\
    53 |     let mu\n   |           ^ help: add `;` here\n54 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw70gqrrt.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw70gqrrt.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw70gqrrt.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw70gqrrt.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw70gqrrt.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw70gqrrt.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw70gqrrt.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw70gqrrt.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw70gqrrt.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw70gqrrt.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut remainder = number;\n    let mut numerals = vec![];\n    while remainder\
    \ > 0 {\n        let numeral = remainder % 10;\n        roman.push((numerals as\
    \ &str).to_lowercase());\n        numerals.push(numeral);\n        remainder =\
    \ remainder / 10;\n    }\n    roman.push((numerals as &str).to_lowercase());\n\
    \    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpap4rdql9.rs:28:17\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpap4rdql9.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpap4rdql9.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpap4rdql9.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpap4rdql9.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpap4rdql9.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpap4rdql9.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpap4rdql9.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpap4rdql9.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpap4rdql9.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpap4rdql9.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    let mut\
    \ remainder: isize = 1;\n    let mut numeral: Char = Char::from('A');\n    while\
    \ num < number {\n        remainder *= 10;\n        remainder += num % 10;\n \
    \       num /= 10;\n        numeral += Char::from((num % 10) + 1);\n    }\n  \
    \  roman.push_str(numeral.to_string());\n    roman.push_str(&format!(\"{}\", remainder).to_string());\n\
    \    roman.to_lowercase()\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `Char`\n  --> /tmp/tmpq0_zay0q.rs:15:29\n\
    \   |\n15 |     let mut numeral: Char = Char::from('A');\n   |               \
    \              ^^^^ use of undeclared type `Char`\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `Char`\n  --> /tmp/tmpq0_zay0q.rs:20:20\n   |\n20 | \
    \        numeral += Char::from((num % 10) + 1);\n   |                    ^^^^\
    \ use of undeclared type `Char`\n\nerror[E0412]: cannot find type `Char` in this\
    \ scope\n  --> /tmp/tmpq0_zay0q.rs:15:22\n   |\n15 |     let mut numeral: Char\
    \ = Char::from('A');\n   |                      ^^^^ help: a builtin type with\
    \ a similar name exists (notice the capitalization): `char`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpq0_zay0q.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpq0_zay0q.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpq0_zay0q.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpq0_zay0q.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpq0_zay0q.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpq0_zay0q.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpq0_zay0q.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq0_zay0q.rs"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_map = [0; 4];\n    let mut numeral_map_index = 0;\n    let\
    \ mut numeral_map_reverse = [0; 4];\n    let mut numeral_map_reverse_index = 0;\n\
    \    let mut numeral_map_reverse_index2 = 0;\n    let mut numeral_map_reverse_index3\
    \ = 0;\n    let mut numeral_map_reverse_index4 = 0;\n    let mut numeral_map_reverse_index5\
    \ = 0;\n    let mut numeral_map_reverse_index6 = 0;\n    let mut numeral_map_reverse_index7\
    \ = 0;\n    let mut numeral_map_reverse_index8 = 0;\n    let mut numeral_map_reverse_index9\
    \ = 0;\n    let mut numeral_map_reverse_index10 = 0;\n    let mut numeral_map_reverse_index11\
    \ = 0;\n    let mut numeral_map_reverse_index12 = 0;\n    let mut numeral_map_reverse_index13\
    \ = 0;\n    let mut numeral_map_reverse_index14 = 0;\n    let mut numeral_map_reverse_index15\
    \ = 0;\n    let mut numeral_map_reverse_index16 = 0;\n    let mut numeral_map_reverse_index17\
    \ = 0;\n    let mut numeral_map_reverse_index18 = 0;\n    let mut numeral_map_reverse_index19\
    \ = 0;\n    let mut numeral_map_reverse_index20 = 0;\n    let mut numeral_map_reverse_index21\
    \ = 0;\n    let mut numeral_map_reverse_index22 = 0;\n    let mut numeral_map_reverse_index23\
    \ = 0;\n    let mut numeral_map_reverse_index24 = 0;\n    let mut numeral_map_reverse_index25\
    \ = 0;\n    let mut numeral_map_reverse_index26 = 0;\n    let mut numeral_map_reverse_index27\
    \ = 0;\n    let mut numeral_map_reverse_index28 = 0;\n    let mut numeral_map_reverse_index29\
    \ = 0;\n    let mut numeral_map_reverse_index30 = 0;\n    let mut numeral_map_reverse_index31\
    \ = 0;\n    let mut numeral_map_reverse_index32 = 0;\n    let mut numeral_map_reverse_index33\
    \ = 0;\n    let mut numeral_map_reverse_index34 = 0;\n    let mut numeral_map_reverse_index35\
    \ = 0;\n    let mut numeral_map_reverse_index36 = 0;\n    let mut numeral_map_reverse_index37\
    \ = 0;\n    let mut numeral_map_reverse_index38 = 0;\n    let mut numeral_map_reverse_index39\
    \ = 0;\n    let mut numeral_map_reverse_index40 = 0;\n    let mut numeral_map_reverse_index41\
    \ = 0;\n    let mut numeral_map_reverse_index42 = 0;\n    let mu\n}\n\nfn main()\
    \ {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmphdk08q9c.rs:59:11\n   |\n\
    59 |     let mu\n   |           ^ help: add `;` here\n60 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphdk08q9c.rs:64:17\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphdk08q9c.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphdk08q9c.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphdk08q9c.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphdk08q9c.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphdk08q9c.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphdk08q9c.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphdk08q9c.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphdk08q9c.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphdk08q9c.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\",\n                     \
    \      \"x\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\", \"xl\", \"l\"];\n \
    \   let mut numeral_index = 0;\n    let mut numeral_length = 0;\n    let mut numeral_value\
    \ = number;\n    let mut numeral_string = \"\";\n    let mut numeral_string_index\
    \ = 0;\n    let mut numeral_string_length = 0;\n    let mut numeral_string_length_index\
    \ = 0;\n    let mut numeral_string_length_value = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_index\
    \ = 0;\n    let mut numer\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpuq0tceqd.rs:58:18\n   |\n\
    58 |     let mut numer\n   |                  ^ help: add `;` here\n59 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuq0tceqd.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuq0tceqd.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuq0tceqd.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuq0tceqd.rs:64:25\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuq0tceqd.rs:65:17\n  \
    \ |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuq0tceqd.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuq0tceqd.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuq0tceqd.rs:66:25\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuq0tceqd.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuq0tceqd.rs:67:25\n   |\n67 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"c\", \"l\", \"l\", \"x\", \"x\", \"x\", \"c\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_length = 0;\n    let mut numeral_value = number;\n\
    \    while numeral_value > 0 {\n        numeral_length += 1;\n        numeral_value\
    \ %= 10;\n        numerals[numeral_index] += &numerals[numeral_index + numeral_length\
    \ - 1];\n    }\n    roman.push_str(&numerals[numeral_index]);\n    roman.push_str(&numerals[numeral_index\
    \ + numeral_length - 1]);\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpuq393vmz.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuq393vmz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuq393vmz.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuq393vmz.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuq393vmz.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuq393vmz.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuq393vmz.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuq393vmz.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuq393vmz.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuq393vmz.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuq393vmz.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"d\", \"x\", \"l\", \"m\", \"c\", \"x\", \"l\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_length = 0;\n    let mut numeral_string = \"\";\n\
    \    let mut numeral_string_index = 0;\n    let mut numeral_string_length = 0;\n\
    \    let mut numeral_string_length_index = 0;\n    let mut numeral_string_length_index2\
    \ = 0;\n    let mut numeral_string_length_index3 = 0;\n    let mut numeral_string_length_index4\
    \ = 0;\n    let mut numeral_string_length_index5 = 0;\n    let mut numeral_string_length_index6\
    \ = 0;\n    let mut numeral_string_length_index7 = 0;\n    let mut numeral_string_length_index8\
    \ = 0;\n    let mut numeral_string_length_index9 = 0;\n    let mut numeral_string_length_index10\
    \ = 0;\n    let mut numeral_string_length_index11 = 0;\n    let mut numeral_string_length_index12\
    \ = 0;\n    let mut numeral_string_length_index13 = 0;\n    let mut numeral_string_length_index14\
    \ = 0;\n    let mut numeral_string_length_index15 = 0;\n    let mut numeral_string_length_index16\
    \ = 0;\n    let mut numeral_string_length_index17 = 0;\n    let mut numeral_string_length_index18\
    \ = 0;\n    let mut numeral_string_length_index19 = 0;\n    let mut numeral_string_length_index20\
    \ = 0;\n    let mut numeral_string_length_index21 = 0;\n    let mut numeral_string_length_index22\
    \ = 0;\n    let mut numeral_string_length_index23 = 0;\n    let mut numeral_string_length_index24\
    \ = 0;\n    let mut numeral_string_length_index25 = 0;\n    let mut numeral_string_length_index26\
    \ = 0;\n    let mut numeral_string_length_index27 = 0;\n    let mut numeral_string_length_index28\
    \ = 0;\n    let mut numeral_string_length_index29 = 0;\n    let mut numeral_string_length_index30\
    \ = 0;\n    let mut numeral_string_length_index31 = 0;\n    let mut numeral_string_length_index32\
    \ = 0;\n    let mut numeral_string_length_index33 = 0;\n    let mut numeral_string_length_index34\
    \ = 0;\n    let mut numeral_string_length_index35 = 0;\n    let mut numeral_string_length_index36\
    \ = 0;\n    let mut numeral_string_length_index37 = 0;\n    let mut numeral_string_length_index38\
    \ = 0;\n    let mut numeral_string_length_index39 = 0;\n    let mut numeral_string_length_index40\
    \ = 0;\n    let mu\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmprj3fo_na.rs:59:11\n   |\n\
    59 |     let mu\n   |           ^ help: add `;` here\n60 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprj3fo_na.rs:64:17\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprj3fo_na.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprj3fo_na.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprj3fo_na.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprj3fo_na.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprj3fo_na.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprj3fo_na.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprj3fo_na.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprj3fo_na.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprj3fo_na.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"c\", \"l\", \"l\", \"x\", \"x\", \"x\", \"c\"];\n    let mut numeral_index\
    \ = 0;\n    let mut numeral_value = 0;\n    let mut numeral_value_index = 0;\n\
    \    let mut numeral_value_length = 0;\n    let mut numeral_value_length_index\
    \ = 0;\n    let mut numeral_value_length_value = 0;\n    let mut numeral_value_length_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value = 0;\n    let mut numeral_value_length_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mut numeral_value_length_value_value_value_value = 0;\n    let mut numeral_value_length_value_value_value_index\
    \ = 0;\n    let mut numeral_value_length_value_value_value_value = 0;\n    let\
    \ mut numeral_value_length_value_value_value_index = 0;\n    let mut numeral_value_length_value_value_value_value\
    \ = 0;\n    let mut numeral_value_length_value_value_value_index = 0;\n    let\
    \ mu\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpp0s47stp.rs:53:11\n   |\n\
    53 |     let mu\n   |           ^ help: add `;` here\n54 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpp0s47stp.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp0s47stp.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp0s47stp.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp0s47stp.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp0s47stp.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp0s47stp.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp0s47stp.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp0s47stp.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp0s47stp.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp0s47stp.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        7\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppb6j91m9.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmppb6j91m9.rs:83:1\n   |\n82 |         7\n  \
    \ |          - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n83 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppb6j91m9.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut prev_roman = String::new();\n\
    \    let mut prev_prev_roman = String::new();\n    let mut prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_roman = String::new();\n \
    \   let mut prev_prev_prev_prev_prev_roman = String::new();\n    let mut prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman = String::new();\n\
    \    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_roman\
    \ = String::new();\n    let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpiq54mydv.rs:36:58\n   |\n\
    36 |     let mut prev_prev_prev_prev_prev_prev_prev_prev_prev_\n   |         \
    \                                                 ^ help: add `;` here\n37 | }\n\
    \   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpiq54mydv.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpiq54mydv.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpiq54mydv.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpiq54mydv.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpiq54mydv.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiq54mydv.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpiq54mydv.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpiq54mydv.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpiq54mydv.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpiq54mydv.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                  "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 0;\n    let mut\
    \ nums: Vec<isize> = vec![number];\n    let mut nums_iter = nums.iter();\n   \
    \ while nums_iter.next() != Some(&0) {\n        roman += &int_to_roman(nums_iter.next());\n\
    \    }\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `int_to_roman` in this scope\n  -->\
    \ /tmp/tmpl2hjcdb8.rs:17:19\n   |\n17 |         roman += &int_to_roman(nums_iter.next());\n\
    \   |                   ^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl2hjcdb8.rs:24:17\n  \
    \ |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl2hjcdb8.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl2hjcdb8.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpl2hjcdb8.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpl2hjcdb8.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl2hjcdb8.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpl2hjcdb8.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpl2hjcdb8.rs:27:25\n   |\n27 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl2hjcdb8.rs:28:17\n  \
    \ |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl2hjcdb8.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in thi"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_iter = numerals.iter();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.clone();\n    let mut numerals_iter_mut = numerals_iter.clone();\n\
    \    let mut numerals_iter_mut = numerals_iter.clone();\n    let mut numerals_iter_mut\
    \ = numerals_iter.\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmp7sv6ufa5.rs:45:1\n   |\n45\
    \ | }\n   | ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmp7sv6ufa5.rs:44:47\n\
    \   |\n44 |     let mut numerals_iter_mut = numerals_iter.\n   |             \
    \                                  ^ help: add `;` here\n45 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7sv6ufa5.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7sv6ufa5.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7sv6ufa5.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7sv6ufa5.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7sv6ufa5.rs:53:25\n   |\n53"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"x\",\n        3 => \"\
    l\",\n        4 => \"l\",\n        5 => \"c\",\n        6 => \"c\",\n        7\
    \ => \"d\",\n        8 => \"d\",\n        9 => \"m\",\n        10 => \"m\",\n\
    \        11 => \"c\",\n        12 => \"c\",\n        13 => \"l\",\n        14\
    \ => \"l\",\n        15 => \"x\",\n        16 => \"x\",\n        17 => \"x\",\n\
    \        18 => \"x\",\n        19 => \"x\",\n        20 => \"x\",\n        21\
    \ => \"x\",\n        22 => \"x\",\n        23 => \"x\",\n        24 => \"x\",\n\
    \        25 => \"x\",\n        26 => \"x\",\n        27 => \"x\",\n        28\
    \ => \"x\",\n        29 => \"m\",\n        30 => \"m\",\n        31 => \"m\",\n\
    \        32 => \"m\",\n        33 => \"m\",\n        34 => \"m\",\n        35\
    \ => \"m\",\n        36 => \"m\",\n        37 => \"m\",\n        38 => \"m\",\n\
    \        39 => \"m\",\n        40 => \"m\",\n        41 => \"m\",\n        42\
    \ => \"m\",\n        43 => \"m\",\n        44 => \"m\",\n        45 => \"m\",\n\
    \        46 => \"m\",\n        47 => \"m\",\n        48 => \"m\",\n        49\
    \ => \"m\",\n        50 => \"m\",\n        51 => \"m\",\n        52 => \"m\",\n\
    \        53 => \"m\",\n        54 => \"m\",\n        55 => \"m\",\n        56\
    \ => \"m\",\n        57 => \"m\",\n        58 => \"m\",\n        59 => \"m\",\n\
    \        60 => \"m\",\n        61 => \"m\",\n        62 => \"m\",\n        63\
    \ => \"m\",\n        64 => \"m\",\n        65 => \"m\",\n        66 => \"m\",\n\
    \        67 => \"m\",\n        68 => \"m\",\n        69 => \"m\",\n        70\
    \ => \"m\",\n        71 => \"m\",\n        72 => \"m\",\n        73 => \"m\",\n\
    \        74 => \"m\",\n        75 => \"m\",\n        76 => \"m\",\n        77\
    \ => \"m\",\n        78 => \"m\",\n        79 => \"m\",\n        80 => \"m\",\n\
    \        81 => \"m\",\n        82 => \"m\",\n        83 => \"m\",\n        84\
    \ => \"m\",\n        85 => \"m\",\n        86 => \"m\",\n        87 => \"m\",\n\
    \        88 => \"m\",\n        89 => \"m\",\n\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpgh3pamtd.rs:121:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n103 | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n121 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \   --> /tmp/tmpgh3pamtd.rs:107:17\n    |\n107 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpgh3pamtd.rs:107:25\n    |\n107 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpgh3pamtd.rs:108:17\n    |\n108 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpgh3pamtd.rs:108:25\n    |\n108 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpgh3pamtd.rs:109:17\n    |\n109 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpgh3pamtd.rs:109:25\n    |\n109 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpgh3pamtd.rs:110:17\n    |\n110 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpgh3pamtd.rs:110:25\n    |\n110 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpgh3pamtd.rs:111:17\n    |\n111 |     assert_eq!({left}, {righ"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut remainder = number;\n    while remainder > 0 {\n        let mut numeral_digit\
    \ = remainder % 10;\n        remainder = remainder / 10;\n        numeral.push(numeral_digit.to_string());\n\
    \    }\n    while numeral.len() > 0 {\n        let mut roman_digit = numeral.chars().next().unwrap();\n\
    \        roman.push(roman_digit.to_ascii_lowercase());\n    }\n    roman\n}\n\n\
    fn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmr5i9ilv.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmr5i9ilv.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmr5i9ilv.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmr5i9ilv.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmr5i9ilv.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n\n\
    \    for _ in 0..number {\n        roman.push((number % 10).to_string());\n  \
    \      numeral.push((number % 100).to_string());\n        number /= 10;\n    }\n\
    \n    roman.push((number % 10).to_string());\n    numeral.push((number % 100).to_string());\n\
    \n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptm37nz0_.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptm37nz0_.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptm37nz0_.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptm37nz0_.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptm37nz0_.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptm37nz0_.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptm37nz0_.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptm37nz0_.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptm37nz0_.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptm37nz0_.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptm37nz0_.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num: isize = 1;\n    let mut\
    \ remainder: isize = 1;\n    let mut digits: Vec<isize> = vec![number];\n    while\
    \ remainder > 0 {\n        if remainder >= 10 {\n            roman.push(format!(\"\
    {}\", digits[remainder % 10]));\n            remainder /= 10;\n        } else\
    \ {\n            roman.push(format!(\"{}\", digits[remainder]));\n           \
    \ remainder = 0;\n        }\n    }\n    roman.push(\"M\");\n    roman\n}\n\nfn\
    \ main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9cxekq8a.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9cxekq8a.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9cxekq8a.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9cxekq8a.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9cxekq8a.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9cxekq8a.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9cxekq8a.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9cxekq8a.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9cxekq8a.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9cxekq8a.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9cxekq8a.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![\"\", \"c\", \"dc\", \"ic\", \"ix\", \"x\", \"l\",\
    \ \"xl\", \"l\",\n                            \"x\", \"c\", \"dc\", \"ic\", \"\
    ix\", \"x\", \"l\", \"xl\", \"l\"];\n    let mut numeral_strings = vec![\"\",\
    \ \"c\", \"d\", \"i\", \"x\", \"l\", \"x\", \"x\", \"l\",\n                  \
    \                \"x\", \"c\", \"d\", \"i\", \"x\", \"l\", \"x\", \"x\", \"l\"\
    ];\n    let mut numeral_strings_reversed = vec![\"\", \"c\", \"d\", \"i\", \"\
    x\", \"l\", \"x\", \"x\", \"l\",\n                                         \"\
    x\", \"c\", \"d\", \"i\", \"x\", \"l\", \"x\", \"x\", \"l\"];\n    let mut numeral_strings_reversed_index\
    \ = vec![0, 0, 1, 1, 2, 2, 3, 3, 4, 4];\n    let mut numeral_strings_reversed_index2\
    \ = vec![0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3];\n    let mut numeral_strings_reversed_index3\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index4\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index5\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index6\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index7\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index8\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index9\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index10\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index11\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index12\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index13\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index14\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index15\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index16\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index17\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index18\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mut numeral_strings_reversed_index19\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2];\n    let mu\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnxx0l6pl.rs:39:11\n   |\n\
    39 |     let mu\n   |           ^ help: add `;` here\n40 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnxx0l6pl.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnxx0l6pl.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnxx0l6pl.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnxx0l6pl.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnxx0l6pl.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnxx0l6pl.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnxx0l6pl.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnxx0l6pl.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnxx0l6pl.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnxx0l6pl.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xx\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        7\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmppb6j91m9.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`,\
    \ or `|`, found `}`\n  --> /tmp/tmppb6j91m9.rs:83:1\n   |\n82 |         7\n  \
    \ |          - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n83 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppb6j91m9.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppb6j91m9.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppb6j91m9.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"x\",\n        3 => \"\
    l\",\n        4 => \"l\",\n        5 => \"c\",\n        6 => \"c\",\n        7\
    \ => \"d\",\n        8 => \"d\",\n        9 => \"m\",\n        10 => \"m\",\n\
    \        11 => \"l\",\n        12 => \"l\",\n        13 => \"x\",\n        14\
    \ => \"x\",\n        15 => \"x\",\n        16 => \"x\",\n        17 => \"x\",\n\
    \        18 => \"x\",\n        19 => \"x\",\n        20 => \"x\",\n        21\
    \ => \"x\",\n        22 => \"x\",\n        23 => \"x\",\n        24 => \"x\",\n\
    \        25 => \"x\",\n        26 => \"x\",\n        27 => \"x\",\n        28\
    \ => \"x\",\n        29 => \"m\",\n        30 => \"m\",\n        31 => \"m\",\n\
    \        32 => \"m\",\n        33 => \"m\",\n        34 => \"m\",\n        35\
    \ => \"m\",\n        36 => \"m\",\n        37 => \"m\",\n        38 => \"m\",\n\
    \        39 => \"m\",\n        40 => \"m\",\n        41 => \"m\",\n        42\
    \ => \"m\",\n        43 => \"m\",\n        44 => \"m\",\n        45 => \"m\",\n\
    \        46 => \"m\",\n        47 => \"m\",\n        48 => \"m\",\n        49\
    \ => \"m\",\n        50 => \"m\",\n        51 => \"m\",\n        52 => \"m\",\n\
    \        53 => \"m\",\n        54 => \"m\",\n        55 => \"m\",\n        56\
    \ => \"m\",\n        57 => \"m\",\n        58 => \"m\",\n        59 => \"m\",\n\
    \        60 => \"m\",\n        61 => \"m\",\n        62 => \"m\",\n        63\
    \ => \"m\",\n        64 => \"m\",\n        65 => \"m\",\n        66 => \"m\",\n\
    \        67 => \"m\",\n        68 => \"m\",\n        69 => \"m\",\n        70\
    \ => \"m\",\n        71 => \"m\",\n        72 => \"m\",\n        73 => \"m\",\n\
    \        74 => \"m\",\n        75 => \"m\",\n        76 => \"m\",\n        77\
    \ => \"m\",\n        78 => \"m\",\n        79 => \"m\",\n        80 => \"m\",\n\
    \        81 => \"m\",\n        82 => \"m\",\n        83 => \"m\",\n        84\
    \ => \"m\",\n        85 => \"m\",\n        86 => \"m\",\n        87 => \"m\",\n\
    \        88 => \"m\",\n        89 => \"\n}\n\nfn main() {\n    let candidate =\
    \ int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n   --> /tmp/tmpg7251l1e.rs:101:15\n\
    \    |\n101 |           89 => \"\n    |  _______________^\n102 | | }\n103 | |\n\
    104 | | fn main() {\n...   |\n119 | |     assert_eq!({left}, {right});\n120 |\
    \ | }\n    | |__^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0765`.\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"c\", \"l\", \"l\", \"x\", \"x\"];\n    let mut numeral_to_roman = vec![\n\
    \        \"\",\n        \"c\",\n        \"d\",\n        \"d\",\n        \"l\"\
    ,\n        \"l\",\n        \"x\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n       \
    \ \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n   \
    \     \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n\
    \        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\"\
    ,\n        \"c\",\n        \"c\",\n        \"c\",\n        \"c\",\n        \"\
    c\",\n        \"c\",\n        \"\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n   --> /tmp/tmp9yco18yy.rs:170:9\n\
    \    |\n170 | /         \"\n171 | | }\n172 | |\n173 | | fn main() {\n...   |\n\
    188 | |     assert_eq!({left}, {right});\n189 | | }\n    | |__^\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0765`.\n"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut denominator = 1;\n    let mut numeral_index = 0;\n    let mut denominator_index\
    \ = 0;\n    let mut numeral_chars = String::new();\n    let mut numeral_char_index\
    \ = 0;\n    let mut numeral_char_length = 0;\n    let mut numeral_char_length_index\
    \ = 0;\n    let mut numeral_char_length_value = 0;\n    let mut numeral_char_length_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value = 0;\n    let mut numeral_char_length_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value_index = 0;\n    let\
    \ mut numeral_char_length_value_value_value_value = 0;\n    let mut numeral_char_length_value_value_value_index\
    \ = 0;\n    let mut numeral_char_length_value_value_value_value = 0;\n    let\
    \ mut numeral_char_length_value_value_value_index = 0;\n    let mut numeral_char_length_value_value_value_value\
    \ = 0;\n    let mut numeral_char_length_value_value_value\n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4w9r726b.rs:54:50\n   |\n\
    54 |     let mut numeral_char_length_value_value_value\n   |                 \
    \                                 ^ help: add `;` here\n55 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4w9r726b.rs:59:17\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4w9r726b.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4w9r726b.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4w9r726b.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4w9r726b.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4w9r726b.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4w9r726b.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4w9r726b.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4w9r726b.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4w9r726b.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![];\n    let mut numerals_map = HashMap::new();\n  \
    \  let mut numerals_maps = vec![];\n    let mut numerals_maps_map = HashMap::new();\n\
    \    let mut numerals_maps_maps = vec![];\n    let mut numerals_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps = vec![];\n    let mut\
    \ numerals_maps_maps_maps_map = HashMap::new();\n    let mut numerals_maps_maps_maps_maps\
    \ = vec![];\n    let mut numerals_maps_maps_maps_maps_map = HashMap::new();\n\
    \    let mut numerals_maps_maps_maps_maps_maps = vec![];\n    let mut numerals_maps_maps_maps_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps = vec![];\n\
    \    let mut numerals_maps_maps_maps_maps_maps_maps_map = HashMap::new();\n  \
    \  let mut numerals_maps_maps_maps_maps_maps_maps_maps = vec![];\n    let mut\
    \ numerals_maps_maps_maps_maps_maps_maps_maps_map = HashMap::new();\n    let mut\
    \ numerals_maps_maps_maps_maps_maps_maps_maps_maps = vec![];\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_map\
    \ = HashMap::new();\n    let mut numerals_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_maps_map\
    \ = \n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmprcui1zr0.rs:36:1\n\
    \   |\n36 | }\n   | ^ expected expression\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmprcui1zr0.rs:15:28\n   |\n15\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmprcui1zr0.rs:17:33\n   |\n17\
    \ |     let mut numerals_maps_map = HashMap::new();\n   |                    \
    \             ^^^^^^^ not found in this scope\n   |\nhelp: consider importing\
    \ this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmprcui1zr0.rs:19:38\n\
    \   |\n19 |     let mut numerals_maps_maps_map = HashMap::new();\n   |       \
    \                               ^^^^^^^ not found in this scope\n   |\nhelp: consider\
    \ importing this struct\n   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]:\
    \ failed to resolve: use of undeclared type `HashMap`\n  --> /tmp/tmprcui1zr0.rs:21:43\n\
    \   |\n21 |     let mut numerals_maps_maps_maps_map = HashMap::new();\n   |  \
    \                                         ^^^^^^^ not found in this scope\n  \
    \ |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmprcui1zr0.rs:23:48\n   |\n23 |     let mut numerals_maps_maps_maps_maps_map\
    \ = HashMap::new();\n   |                                                ^^^^^^^\
    \ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n\
    1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmprcui1zr0.rs:25:53\n   |\n25\
    \ |     let mut numerals_maps_maps_maps_maps_maps_map = HashMap::new();\n   |\
    \                                                     ^^^^^^^ not found in this\
    \ scope\n   |\nhelp: consider importing this struct\n   |\n1  | us"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        0 => String::from(\"0\"),\n        1 => String::from(\"\
    i\"),\n        2 => String::from(\"ii\"),\n        3 => String::from(\"iii\"),\n\
    \        4 => String::from(\"iv\"),\n        5 => String::from(\"v\"),\n     \
    \   6 => String::from(\"vi\"),\n        7 => String::from(\"vii\"),\n        8\
    \ => String::from(\"viii\"),\n        9 => String::from(\"ix\"),\n        10 =>\
    \ String::from(\"x\"),\n        11 => String::from(\"xi\"),\n        12 => String::from(\"\
    xii\"),\n        13 => String::from(\"xiii\"),\n        14 => String::from(\"\
    xiv\"),\n        15 => String::from(\"xv\"),\n        16 => String::from(\"xvi\"\
    ),\n        17 => String::from(\"xvii\"),\n        18 => String::from(\"xviii\"\
    ),\n        19 => String::from(\"xix\"),\n        20 => String::from(\"xx\"),\n\
    \        21 => String::from(\"xxi\"),\n        22 => String::from(\"xxii\"),\n\
    \        23 => String::from(\"xxiii\"),\n        24 => String::from(\"xxiv\"),\n\
    \        25 => String::from(\"xxv\"),\n        26 => String::from(\"xxvi\"),\n\
    \        27 => String::from(\"xxvii\"),\n        28 => String::from(\"xxviii\"\
    ),\n        29 => String::from(\"xxix\"),\n        30 => String::from(\"xxx\"\
    ),\n        31 => String::from(\"xxxi\"),\n        32 => String::from(\"xxxii\"\
    ),\n        33 => String::from(\"xxxiii\"),\n        34 => String::from(\"xxxiv\"\
    ),\n        35 => String::from(\"xxxv\"),\n        36 => String::from(\"xxxvi\"\
    ),\n        37 => String::from(\"xxxvii\"),\n        38 => String::from(\"xxxviii\"\
    ),\n        39 => String::from(\"xxxix\"),\n        40 => String::from(\"xxxx\"\
    ),\n        41 => String::from(\"xxxxi\"),\n        42 => String::from(\"xxxii\"\
    ),\n        43 => String::from(\"xxxiii\"),\n        44 => String::from(\"xxxiv\"\
    ),\n        45 => String::from(\"xxxv\"),\n        46\n}\n\nfn main() {\n    let\
    \ candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpkn_5jstj.rs:78:3\n\
    \   |\n11 | fn int_to_mini_roman(number: isize) -> String {\n   |            \
    \                                   - unclosed delimiter\n12 |     match number\
    \ {\n   |                  - this delimiter might not be properly closed...\n\
    ...\n60 | }\n   | - ...as it matches this but it has different indentation\n...\n\
    78 | }\n   |   ^\n\nerror: expected one of `...`, `..=`, `..`, `=>`, `if`, or\
    \ `|`, found `}`\n  --> /tmp/tmpkn_5jstj.rs:60:1\n   |\n59 |         46\n   |\
    \           - expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`\n60 | }\n\
    \   | ^ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkn_5jstj.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkn_5jstj.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkn_5jstj.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkn_5jstj.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkn_5jstj.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkn_5jstj.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkn_5jstj.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkn_5jstj.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |     "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n\n    let mut roman = String::new();\n    let mut\
    \ numerals = vec![\"\", \"c\", \"cc\", \"d\", \"dc\", \"cm\", \"x\", \"xl\", \"\
    l\", \"ll\"];\n\n    if number < 0 {\n        roman.push_str(\"\u2212\");\n  \
    \      number = -number;\n    }\n\n    let mut numeral = number as usize;\n  \
    \  let mut numeral_index = 0;\n\n    while numeral_index < numerals.len() {\n\
    \        if numeral_index == numerals.len() - 1 {\n            roman.push_str(numerals[numeral_index]);\n\
    \            break;\n        }\n\n        let numeral_value = numerals[numeral_index];\n\
    \        let numeral_value_length = numerals[numeral_index + 1].len();\n\n   \
    \     if numeral_value == \"c\" {\n            numeral_index += 1;\n         \
    \   continue;\n        }\n\n        if numeral_value == \"x\" {\n            numeral_index\
    \ += 1;\n            continue;\n        }\n\n        if numeral_value == \"m\"\
    \ {\n            numeral_index += 1;\n            continue;\n        }\n\n   \
    \     if numeral_value == \"d\" {\n            numeral_index += 1;\n         \
    \   continue;\n        }\n\n        if numeral_value == \"i\" {\n            numeral_index\
    \ += 1;\n            continue;\n        }\n\n        if numeral_value == \"v\"\
    \ {\n            numeral_index += 1;\n            continue;\n        }\n\n   \
    \     if numeral_value == \"l\" {\n            numeral_index += 1;\n         \
    \   continue;\n        }\n\n        if numeral_value == \"c\" {\n            numeral_index\
    \ += 1;\n            continue;\n        }\n\n        if numeral_value == \"x\"\
    \ {\n            numeral_index += 1;\n            continue;\n        }\n\n   \
    \     if numeral_value == \"m\" {\n            numeral_index += 1;\n         \
    \   continue;\n        }\n\n        if numeral_value == \"d\" {\n            numeral_index\
    \ += 1;\n            continue;\n        }\n\n        if numeral_value == \"i\"\
    \ {\n            numeral_index += 1;\n            continue;\n        }\n\n   \
    \     if numeral_value == \"v\" {\n            numeral_index += 1;\n         \
    \   continue;\n        }\n\n        if numeral_value == \"l\" {\n            numeral_index\
    \ += 1;\n            continue;\n        }\n\n        if numeral_value == \"c\"\
    \ {\n            numeral_index += 1;\n            continue;\n        }\n\n   \
    \     if numeral_value == \"x\" {\n            numeral_index += 1;\n         \
    \   continue;\n        }\n\n        if numeral_value == \"m\" {\n            numeral_index\
    \ += 1;\n            continue;\n        }\n\n\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpqc9vafki.rs:138:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n...\n25  |     while\
    \ numeral_index < numerals.len() {\n    |                                    \
    \      - this delimiter might not be properly closed...\n...\n120 | }\n    | -\
    \ ...as it matches this but it has different indentation\n...\n138 | }\n    |\
    \   ^\n\nerror[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmpqc9vafki.rs:124:17\n\
    \    |\n124 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpqc9vafki.rs:124:25\n    |\n124 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpqc9vafki.rs:125:17\n\
    \    |\n125 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpqc9vafki.rs:125:25\n    |\n125 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpqc9vafki.rs:126:17\n\
    \    |\n126 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpqc9vafki.rs:126:25\n    |\n126 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpqc9vafki.rs:127:17\n\
    \    |\n127 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpqc9vafki.rs:127:25\n    |\n127 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpqc9vafk"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numeral_digits = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new();\n    let mut numeral_digits_len\
    \ = String::new();\n    let mut numeral_digits_len = String::new();\n    let mut\
    \ numeral_digits_len = String::new();\n    let mut numeral_digits_len = String::new();\n\
    \    let mut numeral_digits_len = String::new\n}\n\nfn main() {\n    let candidate\
    \ = int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp2xnr_ud4.rs:51:45\n   |\n\
    51 |     let mut numeral_digits_len = String::new\n   |                      \
    \                       ^ help: add `;` here\n52 | }\n   | - unexpected token\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2xnr_ud4.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2xnr_ud4.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2xnr_ud4.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral_index = 0;\n    let mut numeral_digits = vec![];\n    let mut numeral_digits_index\
    \ = 0;\n    let mut numeral_digits_index2 = 0;\n    let mut numeral_digits_index3\
    \ = 0;\n    let mut numeral_digits_index4 = 0;\n    let mut numeral_digits_index5\
    \ = 0;\n    let mut numeral_digits_index6 = 0;\n    let mut numeral_digits_index7\
    \ = 0;\n    let mut numeral_digits_index8 = 0;\n    let mut numeral_digits_index9\
    \ = 0;\n    let mut numeral_digits_index10 = 0;\n    let mut numeral_digits_index11\
    \ = 0;\n    let mut numeral_digits_index12 = 0;\n    let mut numeral_digits_index13\
    \ = 0;\n    let mut numeral_digits_index14 = 0;\n    let mut numeral_digits_index15\
    \ = 0;\n    let mut numeral_digits_index16 = 0;\n    let mut numeral_digits_index17\
    \ = 0;\n    let mut numeral_digits_index18 = 0;\n    let mut numeral_digits_index19\
    \ = 0;\n    let mut numeral_digits_index20 = 0;\n    let mut numeral_digits_index21\
    \ = 0;\n    let mut numeral_digits_index22 = 0;\n    let mut numeral_digits_index23\
    \ = 0;\n    let mut numeral_digits_index24 = 0;\n    let mut numeral_digits_index25\
    \ = 0;\n    let mut numeral_digits_index26 = 0;\n    let mut numeral_digits_index27\
    \ = 0;\n    let mut numeral_digits_index28 = 0;\n    let mut numeral_digits_index29\
    \ = 0;\n    let mut numeral_digits_index30 = 0;\n    let mut numeral_digits_index31\
    \ = 0;\n    let mut numeral_digits_index32 = 0;\n    let mut numeral_digits_index33\
    \ = 0;\n    let mut numeral_digits_index34 = 0;\n    let mut numeral_digits_index35\
    \ = 0;\n    let mut numeral_digits_index36 = 0;\n    let mut numeral_digits_index37\
    \ = 0;\n    let mut numeral_digits_index38 = 0;\n    let mut numeral_digits_index39\
    \ = 0;\n    let mut numeral_digits_index40 = 0;\n    let mut numeral_digits_index41\
    \ = 0;\n    let mut numeral_digits_index42 = 0;\n    let mut numeral_digits_index43\
    \ = 0;\n    let mut numer\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp014p2wqz.rs:59:18\n   |\n\
    59 |     let mut numer\n   |                  ^ help: add `;` here\n60 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp014p2wqz.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp014p2wqz.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp014p2wqz.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp014p2wqz.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp014p2wqz.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp014p2wqz.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp014p2wqz.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp014p2wqz.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp014p2wqz.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp014p2wqz.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n  \
    \  let mut numerals = vec![String::from(\"M\"), String::from(\"CM\"), String::from(\"\
    D\"),\n                           String::from(\"CD\"), String::from(\"C\"), String::from(\"\
    XC\"),\n                           String::from(\"L\"), String::from(\"XL\"),\
    \ String::from(\"X\"),\n                           String::from(\"IX\"), String::from(\"\
    V\"), String::from(\"IV\"),\n                           String::from(\"I\")];\n\
    \    let mut numeral_index = 0;\n    let mut numeral_length = numerals.len();\n\
    \    let mut numeral_value = number;\n    while numeral_value >= 1000 {\n    \
    \    numeral_value -= 1000;\n        numeral_index += 1;\n    }\n    while numeral_value\
    \ >= 100 {\n        numeral_value -= 100;\n        numeral_index += 1;\n    }\n\
    \    while numeral_value >= 10 {\n        numeral_value -= 10;\n        numeral_index\
    \ += 1;\n    }\n    while numeral_value >= 1 {\n        numeral_value -= 1;\n\
    \        numeral_index += 1;\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    numeral_value = number;\n    while numeral_value >= 1000 {\n        numeral_value\
    \ -= 1000;\n        numeral_index += 1;\n    }\n    while numeral_value >= 100\
    \ {\n        numeral_value -= 100;\n        numeral_index += 1;\n    }\n    while\
    \ numeral_value >= 10 {\n        numeral_value -= 10;\n        numeral_index +=\
    \ 1;\n    }\n    while numeral_value >= 1 {\n        numeral_value -= 1;\n   \
    \     numeral_index += 1;\n    }\n    roman.push_str(numerals[numeral_index]);\n\
    \    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpc42da8_d.rs:62:17\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc42da8_d.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc42da8_d.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpc42da8_d.rs:63:25\n\
    \   |\n63 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpc42da8_d.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpc42da8_d.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpc42da8_d.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpc42da8_d.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpc42da8_d.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc42da8_d.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc42da8_d.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::new();\n\
    \    let mut numerals_map = HashMap::new();\n    let mut numerals_map = HashMap::\n\
    }\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpoedh_qtr.rs:52:1\n\
    \   |\n52 | }\n   | ^ expected identifier\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:14:28\n   |\n14\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:15:28\n   |\n15\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:16:28\n   |\n16\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:17:28\n   |\n17\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:18:28\n   |\n18\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:19:28\n   |\n19\
    \ |     let mut numerals_map = HashMap::new();\n   |                         \
    \   ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct\n\
    \   |\n1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpoedh_qtr.rs:20:28\n   |\n20\
    \ |     let"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut num = 0;\n    let mut prev_num\
    \ = 0;\n    let mut prev_roman = String::new();\n    let mut prev_roman_num =\
    \ 0;\n    let mut prev_roman_num_str = \"\";\n    let mut prev_roman_num_str_len\
    \ = 0;\n    let mut prev_roman_num_str_len2 = 0;\n    let mut roman_num_str =\
    \ \"\";\n    let mut roman_num_str_len = 0;\n    let mut roman_num_str_len2 =\
    \ 0;\n    let mut roman_num_str_len3 = 0;\n    let mut roman_num_str_len4 = 0;\n\
    \    let mut roman_num_str_len5 = 0;\n    let mut roman_num_str_len6 = 0;\n  \
    \  let mut roman_num_str_len7 = 0;\n    let mut roman_num_str_len8 = 0;\n    let\
    \ mut roman_num_str_len9 = 0;\n    let mut roman_num_str_len10 = 0;\n    let mut\
    \ roman_num_str_len11 = 0;\n    let mut roman_num_str_len12 = 0;\n    let mut\
    \ roman_num_str_len13 = 0;\n    let mut roman_num_str_len14 = 0;\n    let mut\
    \ roman_num_str_len15 = 0;\n    let mut roman_num_str_len16 = 0;\n    let mut\
    \ roman_num_str_len17 = 0;\n    let mut roman_num_str_len18 = 0;\n    let mut\
    \ roman_num_str_len19 = 0;\n    let mut roman_num_str_len20 = 0;\n    let mut\
    \ roman_num_str_len21 = 0;\n    let mut roman_num_str_len22 = 0;\n    let mut\
    \ roman_num_str_len23 = 0;\n    let mut roman_num_str_len24 = 0;\n    let mut\
    \ roman_num_str_len25 = 0;\n    let mut roman_num_str_len26 = 0;\n    let mut\
    \ roman_num_str_len27 = 0;\n    let mut roman_num_str_len28 = 0;\n    let mut\
    \ roman_num_str_len29 = 0;\n    let mut roman_num_str_len30 = 0;\n    let mut\
    \ roman_num_str_len31 = 0;\n    let mut roman_num_str_len32 = 0;\n    let mut\
    \ roman_num_str_len33 = 0;\n    let mut roman_num_str_len34 = 0;\n    let mut\
    \ roman_num_str_len35 = 0;\n    let mut roman_num_str_len36 = 0;\n    let mut\
    \ roman_num_str_len37 = 0;\n    let mut roman_num_str_len38 = 0;\n    let mut\
    \ roman_num_str_len39 = 0;\n    let mu\n}\n\nfn main() {\n    let candidate =\
    \ int_to_mini_roman;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp5hw5fb4p.rs:60:11\n   |\n\
    60 |     let mu\n   |           ^ help: add `;` here\n61 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5hw5fb4p.rs:65:17\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5hw5fb4p.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5hw5fb4p.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5hw5fb4p.rs:66:25\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5hw5fb4p.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5hw5fb4p.rs:67:25\n   |\n67 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5hw5fb4p.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5hw5fb4p.rs:68:25\n   |\n68 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5hw5fb4p.rs:69:17\n  \
    \ |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5hw5fb4p.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numeral = String::new();\n\n\
    \    if number < 1 {\n        roman.push('-');\n        numeral.push('-');\n \
    \   }\n\n    let mut nums = vec![1i32, 2, 3, 4, 7, 9, 10, 13, 14, 17, 19, 23,\
    \ 27, 31, 35, 43, 51, 59, 67, 71, 73, 79, 83, 89, 97];\n\n    if number < 1000\
    \ {\n        nums.insert(0, 0);\n    }\n\n    while number >= nums.len() {\n \
    \       roman.push((nums.len() - 1).to_string());\n        numeral.push((nums.len()\
    \ - 1).to_string());\n        nums.insert(0, 0);\n    }\n\n    let mut i = 1;\n\
    \    while i <= number {\n        roman.push((nums[i] - 1).to_string());\n   \
    \     numeral.push((nums[i] - 1).to_string());\n        i += 1;\n    }\n\n   \
    \ roman.push((nums[number] - 1).to_string());\n    numeral.push((nums[number]\
    \ - 1).to_string());\n\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp12h2z2tf.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp12h2z2tf.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp12h2z2tf.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp12h2z2tf.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp12h2z2tf.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp12h2z2tf.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp12h2z2tf.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp12h2z2tf.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp12h2z2tf.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp12h2z2tf.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp12h2z2tf.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659805974
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    match number {\n        1 => \"x\",\n        2 => \"xix\",\n        3 =>\
    \ \"xix\",\n        4 => \"xix\",\n        5 => \"xix\",\n        6 => \"xix\"\
    ,\n        7 => \"xix\",\n        8 => \"xix\",\n        9 => \"xix\",\n     \
    \   10 => \"xix\",\n        11 => \"xix\",\n        12 => \"xix\",\n        13\
    \ => \"xix\",\n        14 => \"xix\",\n        15 => \"xix\",\n        16 => \"\
    xix\",\n        17 => \"xix\",\n        18 => \"xix\",\n        19 => \"xix\"\
    ,\n        20 => \"xix\",\n        21 => \"xix\",\n        22 => \"xix\",\n  \
    \      23 => \"xix\",\n        24 => \"xix\",\n        25 => \"xix\",\n      \
    \  26 => \"xix\",\n        27 => \"xix\",\n        28 => \"xix\",\n        29\
    \ => \"xix\",\n        30 => \"xix\",\n        31 => \"xix\",\n        32 => \"\
    xix\",\n        33 => \"xix\",\n        34 => \"xix\",\n        35 => \"xix\"\
    ,\n        36 => \"xix\",\n        37 => \"xix\",\n        38 => \"xix\",\n  \
    \      39 => \"xix\",\n        40 => \"xix\",\n        41 => \"xix\",\n      \
    \  42 => \"xix\",\n        43 => \"xix\",\n        44 => \"xix\",\n        45\
    \ => \"xix\",\n        46 => \"xix\",\n        47 => \"xix\",\n        48 => \"\
    xix\",\n        49 => \"xix\",\n        50 => \"xix\",\n        51 => \"xix\"\
    ,\n        52 => \"xix\",\n        53 => \"xix\",\n        54 => \"xix\",\n  \
    \      55 => \"xix\",\n        56 => \"xix\",\n        57 => \"xix\",\n      \
    \  58 => \"xix\",\n        59 => \"xix\",\n        60 => \"xix\",\n        61\
    \ => \"xix\",\n        62 => \"xix\",\n        63 => \"xix\",\n        64 => \"\
    xix\",\n        65 => \"xix\",\n        66 => \"xix\",\n        67 => \"xix\"\
    ,\n        68 => \"xix\",\n        69 => \"xix\",\n        \n}\n\nfn main() {\n\
    \    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpsqoxckx3.rs:101:3\n\
    \    |\n11  | fn int_to_mini_roman(number: isize) -> String {\n    |         \
    \                                      - unclosed delimiter\n12  |     match number\
    \ {\n    |                  - this delimiter might not be properly closed...\n\
    ...\n83  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n101 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:87:17\n   |\n87 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:87:25\n   |\n87 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:88:25\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:89:17\n  \
    \ |\n89 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsqoxckx3.rs:89:25\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:17\n   |\n90 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsqoxckx3.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsqoxckx3.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    use std::cmp::Ordering;\n    use std::fmt::{self, Display};\n\n    let mut\
    \ roman = String::new();\n    let mut nums = vec![\"\", \"c\", \"d\", \"x\", \"\
    l\", \"m\", \"c\", \"x\", \"l\"];\n\n    for &n in &nums[0..number.min(4)] {\n\
    \        if number >= 1000 {\n            roman.push_str(&n);\n            number\
    \ -= 1000;\n        } else {\n            roman.push_str(&ns[number % 1000]);\n\
    \            number /= 1000;\n        }\n    }\n\n    roman.push_str(&nums[number\
    \ % 1000]);\n    roman\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `ns` in this scope\n  --> /tmp/tmp1x_em1h5.rs:23:29\n\
    \   |\n23 |             roman.push_str(&ns[number % 1000]);\n   |            \
    \                 ^^ help: a local variable with a similar name exists: `n`\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1x_em1h5.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1x_em1h5.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1x_em1h5.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1x_em1h5.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1x_em1h5.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1x_em1h5.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1x_em1h5.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1x_em1h5.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1x_em1h5.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1x_em1h5.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ "
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![];\n    let mut\
    \ numeral_map: HashMap<isize, isize> = HashMap::new();\n    let mut numeral_map_inv\
    \ = HashMap::new();\n    let mut numeral_map_inv2 = HashMap::new();\n    let mut\
    \ numeral_map_inv3 = HashMap::new();\n    let mut numeral_map_inv4 = HashMap::new();\n\
    \    let mut numeral_map_inv5 = HashMap::new();\n    let mut numeral_map_inv6\
    \ = HashMap::new();\n    let mut numeral_map_inv7 = HashMap::new();\n    let mut\
    \ numeral_map_inv8 = HashMap::new();\n    let mut numeral_map_inv9 = HashMap::new();\n\
    \    let mut numeral_map_inv10 = HashMap::new();\n    let mut numeral_map_inv11\
    \ = HashMap::new();\n    let mut numeral_map_inv12 = HashMap::new();\n    let\
    \ mut numeral_map_inv13 = HashMap::new();\n    let mut numeral_map_inv14 = HashMap::new();\n\
    \    let mut numeral_map_inv15 = HashMap::new();\n    let mut numeral_map_inv16\
    \ = HashMap::new();\n    let mut numeral_map_inv17 = HashMap::new();\n    let\
    \ mut numeral_map_inv18 = HashMap::new();\n    let mut numeral_map_inv19 = HashMap::new();\n\
    \    let mut numeral_map_inv20 = HashMap::new();\n    let mut numeral_map_inv21\
    \ = HashMap::new();\n    let mut numeral_map_inv22 = HashMap::new();\n    let\
    \ mut numeral_map_inv23 = HashMap::new();\n    let mut numeral_map_inv24 = HashMap::new();\n\
    \    let mut numeral_map_inv25 = HashMap::new();\n    let mut numeral_map_inv26\
    \ = HashMap::new();\n    let mut numeral_map_inv27 = HashMap::new();\n    let\
    \ mut numeral_map_inv28 = HashMap::new();\n    let mut numeral_map_inv29 = HashMap::new();\n\
    \    let mut numeral_map_inv30 = HashMap::new();\n    let mut numeral_map_inv31\
    \ = HashMap::new();\n    let mut numeral_map_inv32 = HashMap::new();\n    let\
    \ \n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpm6j6njkc.rs:48:1\n  \
    \ |\n48 | }\n   | ^ expected pattern\n\nerror[E0412]: cannot find type `HashMap`\
    \ in this scope\n  --> /tmp/tmpm6j6njkc.rs:14:26\n   |\n14 |     let mut numeral_map:\
    \ HashMap<isize, isize> = HashMap::new();\n   |                          ^^^^^^^\
    \ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n\
    1  | use std::collections::HashMap;\n   |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashMap`\n  --> /tmp/tmpm6j6njkc.rs:14:50\n   |\n14\
    \ |     let mut numeral_map: HashMap<isize, isize> = HashMap::new();\n   |   \
    \                                               ^^^^^^^ not found in this scope\n\
    \   |\nhelp: consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpm6j6njkc.rs:15:31\n   |\n15 |     let mut numeral_map_inv = HashMap::new();\n\
    \   |                               ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpm6j6njkc.rs:16:32\n   |\n16 |     let mut numeral_map_inv2 = HashMap::new();\n\
    \   |                                ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpm6j6njkc.rs:17:32\n   |\n17 |     let mut numeral_map_inv3 = HashMap::new();\n\
    \   |                                ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n \
    \ --> /tmp/tmpm6j6njkc.rs:18:32\n   |\n18 |     let mut numeral_map_inv4 = HashMap::new();\n\
    \   |                                ^^^^^^^ not found in this scope\n   |\nhelp:\
    \ consider importing this struct\n   |\n1  | use std::collections::HashMap;\n\
    \   |\n\nerror[E0433]: failed to resolve: use o"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"e\", \"f\", \"\
    ff\", \"fff\", \"g\", \"h\", \"hh\", \"hhi\", \"i\", \"ii\", \"iii\", \"j\", \"\
    jj\", \"jjj\", \"k\", \"l\", \"ll\", \"lll\", \"m\", \"n\", \"nn\", \"nnn\", \"\
    o\", \"p\", \"pp\", \"ppp\", \"q\", \"r\", \"rr\", \"rr\"\n    ];\n    let mut\
    \ numerals_count = vec![0, 0, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, \n}\n\n\
    fn main() {\n    let candidate = int_to_mini_roman;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `}`\n\
    \  --> /tmp/tmpw35yfel0.rs:16:1\n   |\n16 | }\n   | ^ expected one of `.`, `;`,\
    \ `?`, `else`, or an operator\n\nerror: mismatched closing delimiter: `}`\n  -->\
    \ /tmp/tmpw35yfel0.rs:15:34\n   |\n11 | fn int_to_mini_roman(number: isize) ->\
    \ String {\n   |                                               - closing delimiter\
    \ possibly meant for this\n...\n15 |     let mut numerals_count = vec![0, 0, 1,\
    \ 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5...\n   |                                  ^ unclosed delimiter\n\
    16 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpw35yfel0.rs:20:17\n   |\n20 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpw35yfel0.rs:20:25\n \
    \  |\n20 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw35yfel0.rs:21:17\n   |\n21 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw35yfel0.rs:21:25\n   |\n21 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw35yfel0.rs:22:17\n   |\n22 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw35yfel0.rs:22:25\n   |\n22 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw35yfel0.rs:23:17\n  \
    \ |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw35yfel0.rs:23:25\n   |\n23 |     assert_eq"
  stdout: ''
  timestamp: 1659805973
- exit_code: 1
  program: "/// Given a positive integer, obtain its roman numeral equivalent as a\
    \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
    /// Examples:\n/// >>> int_to_mini_roman(19)\n/// String::from(\"xix\")\n/// >>>\
    \ int_to_mini_roman(152)\n/// String::from(\"clii\")\n/// >>> int_to_mini_roman(426)\n\
    /// String::from(\"cdxxvi\")\nfn int_to_mini_roman(number: isize) -> String {\n\
    \    let mut roman = String::new();\n    let mut numerals = vec![\"\", \"c\",\
    \ \"l\", \"x\", \"i\"];\n    let mut numeral_index = 0;\n    let mut numeral_length\
    \ = 0;\n    let mut numeral_value = 0;\n    let mut numeral_string = \"\";\n \
    \   let mut numeral_string_index = 0;\n    let mut numeral_string_length = 0;\n\
    \    let mut numeral_string_length_index = 0;\n    let mut numeral_string_length_value\
    \ = 0;\n    let mut numeral_string_length_value_index = 0;\n    let mut numeral_string_length_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_index = 0;\n    let mut\
    \ numeral_string_length_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_value_index = 0;\n    let\
    \ mut numeral_string_length_value_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_value_index = 0;\n    let\
    \ mut numeral_string_length_value_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_value_index = 0;\n    let\
    \ mut numeral_string_length_value_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numeral_string_length_value_value_value_index = 0;\n    let\
    \ mut numeral_string_length_value_value_value_value = 0;\n    let mut numeral_string_length_value_value_value_index\
    \ = 0;\n    let mut numeral_string_length_value_value_value_value = 0;\n    let\
    \ mut numeral_string_length_value_value_value_index = 0;\n    let mut numeral_string_length_value_value_value_value\
    \ = 0;\n    let mut numer\n}\n\nfn main() {\n    let candidate = int_to_mini_roman;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpf6be47gr.rs:54:18\n   |\n\
    54 |     let mut numer\n   |                  ^ help: add `;` here\n55 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf6be47gr.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf6be47gr.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpf6be47gr.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpf6be47gr.rs:60:25\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpf6be47gr.rs:61:17\n  \
    \ |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf6be47gr.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf6be47gr.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpf6be47gr.rs:62:25\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf6be47gr.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf6be47gr.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659805973

language: rs
name: HumanEval_29_filter_by_prefix
results:
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    let mut prefix = prefix.to_string();\n    let\
    \ mut strings = strings.into_iter();\n    loop {\n        if strings.next().unwrap().starts_with(prefix)\
    \ {\n            strings.next();\n        } else {\n            break;\n     \
    \   }\n    }\n    strings.collect()\n}\n\nfn main() {\n    let candidate = filter_by_prefix;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpveyz9ci3.rs:21:17\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpveyz9ci3.rs:21:25\n   |\n21 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpveyz9ci3.rs:22:17\n   |\n22 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpveyz9ci3.rs:22:25\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n  --> /tmp/tmpveyz9ci3.rs:10:48\n   |\n10 |         if strings.next().unwrap().starts_with(prefix)\
    \ {\n   |                                                ^^^^^^\n   |        \
    \                                        |\n   |                             \
    \                   expected an implementor of trait `Pattern<'_>`\n   |     \
    \                                           help: consider borrowing here: `&prefix`\n\
    \   |\n   = note: the trait bound `String: Pattern<'_>` is not satisfied\n   =\
    \ note: required because of the requirements on the impl of `Pattern<'_>` for\
    \ `String`\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0425.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    let mut prefix = prefix.to_string();\n    prefix.push_str(\"\
    *\");\n    strings.iter().filter(|s| s.starts_with(prefix)).collect()\n}\n\nfn\
    \ main() {\n    let candidate = filter_by_prefix;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdz5ff384.rs:14:17\n\
    \   |\n14 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdz5ff384.rs:14:25\n   |\n14 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdz5ff384.rs:15:17\n   |\n15 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdz5ff384.rs:15:25\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpdz5ff384.rs:9:45\n  |\n9 |     strings.iter().filter(|s|\
    \ s.starts_with(prefix)).collect()\n  |                                      \
    \       ^^^^^^\n  |                                             |\n  |       \
    \                                      expected an implementor of trait `Pattern<'_>`\n\
    \  |                                             help: consider borrowing here:\
    \ `&prefix`\n  |\n  = note: the trait bound `String: Pattern<'_>` is not satisfied\n\
    \  = note: required because of the requirements on the impl of `Pattern<'_>` for\
    \ `String`\n\nerror[E0277]: a value of type `Vec<String>` cannot be built from\
    \ an iterator over elements of type `&String`\n --> /tmp/tmpdz5ff384.rs:9:54\n\
    \  |\n9 |     strings.iter().filter(|s| s.starts_with(prefix)).collect()\n  |\
    \                                                      ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n  |\n  = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ {\n            if s.starts_with(prefix) {\n                Some(s)\n       \
    \     } else {\n                None\n            }\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = filter_by_prefix;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpe1j2p98w.rs:21:17\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe1j2p98w.rs:21:25\n   |\n21 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe1j2p98w.rs:22:17\n   |\n22 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpe1j2p98w.rs:22:25\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n  --> /tmp/tmpe1j2p98w.rs:10:30\n   |\n10 |             if s.starts_with(prefix)\
    \ {\n   |                              ^^^^^^\n   |                          \
    \    |\n   |                              expected an implementor of trait `Pattern<'_>`\n\
    \   |                              help: consider borrowing here: `&prefix`\n\
    \   |\n   = note: the trait bound `String: Pattern<'_>` is not satisfied\n   =\
    \ note: required because of the requirements on the impl of `Pattern<'_>` for\
    \ `String`\n\nerror[E0277]: a value of type `Vec<String>` cannot be built from\
    \ an iterator over elements of type `&String`\n  --> /tmp/tmpe1j2p98w.rs:16:10\n\
    \   |\n16 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    let mut iter = strings.iter();\n    let mut prefix\
    \ = prefix.to_string();\n    loop {\n        let next = iter.next();\n       \
    \ if next.is_none() {\n            break;\n        }\n        if next.unwrap().starts_with(prefix)\
    \ {\n            iter.push(*next);\n        }\n    }\n    iter\n}\n\nfn main()\
    \ {\n    let candidate = filter_by_prefix;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1uvtmec9.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1uvtmec9.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1uvtmec9.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1uvtmec9.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n  --> /tmp/tmp1uvtmec9.rs:14:38\n   |\n14 |         if next.unwrap().starts_with(prefix)\
    \ {\n   |                                      ^^^^^^\n   |                  \
    \                    |\n   |                                      expected an\
    \ implementor of trait `Pattern<'_>`\n   |                                   \
    \   help: consider borrowing here: `&prefix`\n   |\n   = note: the trait bound\
    \ `String: Pattern<'_>` is not satisfied\n   = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0599]: no method named `push`\
    \ found for struct `std::slice::Iter` in the current scope\n  --> /tmp/tmp1uvtmec9.rs:15:18\n\
    \   |\n15 |             iter.push(*next);\n   |                  ^^^^ method not\
    \ found in `std::slice::Iter<'_, String>`\n\nerror[E0614]: type `Option<&String>`\
    \ cannot be dereferenced\n  --> /tmp/tmp1uvtmec9.rs:15:23\n   |\n15 |        \
    \     iter.push(*next);\n   |                       ^^^^^\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp1uvtmec9.rs:18:5\n   |\n6  | fn filter_by_prefix(strings:\
    \ Vec<String>, prefix: String) -> Vec<String> {\n   |                        \
    \                                      ----------- expected `Vec<String>` because\
    \ of return type\n...\n18 |     iter\n   |     ^^^^ expected struct "
  stdout: ''
  timestamp: 1659793723
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ {\n            if s.starts_with(prefix) {\n                Some(s)\n       \
    \     } else {\n                None\n            }\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = filter_by_prefix;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpe1j2p98w.rs:21:17\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe1j2p98w.rs:21:25\n   |\n21 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe1j2p98w.rs:22:17\n   |\n22 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpe1j2p98w.rs:22:25\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n  --> /tmp/tmpe1j2p98w.rs:10:30\n   |\n10 |             if s.starts_with(prefix)\
    \ {\n   |                              ^^^^^^\n   |                          \
    \    |\n   |                              expected an implementor of trait `Pattern<'_>`\n\
    \   |                              help: consider borrowing here: `&prefix`\n\
    \   |\n   = note: the trait bound `String: Pattern<'_>` is not satisfied\n   =\
    \ note: required because of the requirements on the impl of `Pattern<'_>` for\
    \ `String`\n\nerror[E0277]: a value of type `Vec<String>` cannot be built from\
    \ an iterator over elements of type `&String`\n  --> /tmp/tmpe1j2p98w.rs:16:10\n\
    \   |\n16 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    let mut result = Vec::new();\n    for s in strings\
    \ {\n        if s.starts_with(prefix) {\n            result.push(s);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = filter_by_prefix;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp04pfdf3a.rs:18:17\n\
    \   |\n18 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp04pfdf3a.rs:18:25\n   |\n18 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp04pfdf3a.rs:19:17\n   |\n19 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp04pfdf3a.rs:19:25\n\
    \   |\n19 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmp04pfdf3a.rs:9:26\n  |\n9 |         if s.starts_with(prefix)\
    \ {\n  |                          ^^^^^^\n  |                          |\n  |\
    \                          expected an implementor of trait `Pattern<'_>`\n  |\
    \                          help: consider borrowing here: `&prefix`\n  |\n  =\
    \ note: the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required\
    \ because of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror:\
    \ aborting due to 5 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659793723
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    let mut result = Vec::new();\n    for s in strings\
    \ {\n        if s.starts_with(prefix) {\n            result.push(s);\n       \
    \ }\n    }\n    result\n}\n\nfn main() {\n    let candidate = filter_by_prefix;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp04pfdf3a.rs:18:17\n\
    \   |\n18 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp04pfdf3a.rs:18:25\n   |\n18 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp04pfdf3a.rs:19:17\n   |\n19 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp04pfdf3a.rs:19:25\n\
    \   |\n19 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmp04pfdf3a.rs:9:26\n  |\n9 |         if s.starts_with(prefix)\
    \ {\n  |                          ^^^^^^\n  |                          |\n  |\
    \                          expected an implementor of trait `Pattern<'_>`\n  |\
    \                          help: consider borrowing here: `&prefix`\n  |\n  =\
    \ note: the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required\
    \ because of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror:\
    \ aborting due to 5 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659793723
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    let mut iter = strings.iter();\n    iter.for_each(|s|\
    \ {\n        if s.starts_with(prefix) {\n            iter.next();\n        }\n\
    \    });\n    iter\n}\n\nfn main() {\n    let candidate = filter_by_prefix;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4s02l8_a.rs:18:17\n\
    \   |\n18 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4s02l8_a.rs:18:25\n   |\n18 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4s02l8_a.rs:19:17\n   |\n19 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4s02l8_a.rs:19:25\n\
    \   |\n19 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmp4s02l8_a.rs:9:26\n  |\n9 |         if s.starts_with(prefix)\
    \ {\n  |                          ^^^^^^\n  |                          |\n  |\
    \                          expected an implementor of trait `Pattern<'_>`\n  |\
    \                          help: consider borrowing here: `&prefix`\n  |\n  =\
    \ note: the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required\
    \ because of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp4s02l8_a.rs:13:5\n   |\n6  | fn filter_by_prefix(strings:\
    \ Vec<String>, prefix: String) -> Vec<String> {\n   |                        \
    \                                      ----------- expected `Vec<String>` because\
    \ of return type\n...\n13 |     iter\n   |     ^^^^ expected struct `Vec`, found\
    \ struct `std::slice::Iter`\n   |\n   = note: expected struct `Vec<String>`\n\
    \              found struct `std::slice::Iter<'_, String>`\n\nerror: aborting\
    \ due to 6 previous errors\n\nSome errors have detailed explanations: E0277, E0308,\
    \ E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659793723
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter_map(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvggcpixq.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvggcpixq.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpvggcpixq.rs:9:39\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                                       ^^^^^^\n \
    \ |                                       |\n  |                             \
    \          expected an implementor of trait `Pattern<'_>`\n  |               \
    \                        help: consider borrowing here: `&prefix`\n  |\n  = note:\
    \ the trait bound `String: Pattern<'_>` is not satisfied\n  = note: required because\
    \ of the requirements on the impl of `Pattern<'_>` for `String`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpvggcpixq.rs:9:25\n  |\n9 |         .filter_map(|s|\
    \ s.starts_with(prefix))\n  |                         ^^^^^^^^^^^^^^^^^^^^^\n\
    \  |                         |\n  |                         expected enum `Option`,\
    \ found `bool`\n  |                         help: try using a variant of the expected\
    \ enum: `Some(s.starts_with(prefix))`\n  |\n  = note: expected enum `Option<_>`\n\
    \             found type `bool`\n\nerror: aborting due to 6 previous errors\n\n\
    Some errors have detailed explanations: E0277, E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372
- exit_code: 1
  program: "/// Filter an input list of strings only for ones that start with a given\
    \ prefix.\n/// >>> filter_by_prefix(vec![], String::from(\"a\"))\n/// Vec::<String>::new()\n\
    /// >>> filter_by_prefix(vec![String::from(\"abc\"), String::from(\"bcd\"), String::from(\"\
    cde\"), String::from(\"array\")], String::from(\"a\"))\n/// vec![String::from(\"\
    abc\"), String::from(\"array\")]\nfn filter_by_prefix(strings: Vec<String>, prefix:\
    \ String) -> Vec<String> {\n    strings\n        .iter()\n        .filter(|s|\
    \ s.starts_with(prefix))\n        .collect()\n}\n\nfn main() {\n    let candidate\
    \ = filter_by_prefix;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:15:17\n\
    \   |\n15 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzhji5c8q.rs:15:25\n   |\n15 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:17\n   |\n16 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzhji5c8q.rs:16:25\n\
    \   |\n16 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0277]: expected a `FnMut<(char,)>` closure,\
    \ found `String`\n --> /tmp/tmpzhji5c8q.rs:9:35\n  |\n9 |         .filter(|s|\
    \ s.starts_with(prefix))\n  |                                   ^^^^^^\n  |  \
    \                                 |\n  |                                   expected\
    \ an implementor of trait `Pattern<'_>`\n  |                                 \
    \  help: consider borrowing here: `&prefix`\n  |\n  = note: the trait bound `String:\
    \ Pattern<'_>` is not satisfied\n  = note: required because of the requirements\
    \ on the impl of `Pattern<'_>` for `String`\n\nerror[E0277]: a value of type `Vec<String>`\
    \ cannot be built from an iterator over elements of type `&String`\n  --> /tmp/tmpzhji5c8q.rs:10:10\n\
    \   |\n10 |         .collect()\n   |          ^^^^^^^ value of type `Vec<String>`\
    \ cannot be built from `std::iter::Iterator<Item=&String>`\n   |\n   = help: the\
    \ trait `FromIterator<&String>` is not implemented for `Vec<String>`\n\nerror:\
    \ aborting due to 6 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659747372

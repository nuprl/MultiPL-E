language: rs
name: HumanEval_124_valid_date
results:
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n\
    \        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpguum83h4.rs:46:1\n\
    \   |\n46 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpguum83h4.rs:50:17\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:50:25\n \
    \  |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpguum83h4.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:55:17\n   |\n55 |     "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    (date.len() >= 2 && date.len() <= 31) &&\n    (date.len() >= 1 && date.len()\
    \ <= 30) &&\n    (date.len() >= 1 && date.len() <= 29) &&\n    (date.len() >=\
    \ 1 && date.len() <= 12) &&\n    (date.len() == date.rfind(\"-\") + 1) &&\n  \
    \  (date.len() == date.rfind(\"/\") + 2)\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvmzmj5yy.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvmzmj5yy.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvmzmj5yy.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvmzmj5yy.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut years: u32 = 0;\n    let\
    \ mut date_parts_len = date_parts.len();\n    if date_parts_len > 3 {\n      \
    \  date_parts_len -= 3;\n    }\n    for part in date_parts {\n        let mut\
    \ part_str = part.to_string();\n        part_str.trim_left_matches(\"-\");\n \
    \       part_str.trim_right_matches(\"-\");\n        let mut part_parts = part_str.split_whitespace();\n\
    \        days += part_parts[0]\n            .parse::<u32>()\n            .unwrap_or(0);\n\
    \        months += part_parts[1]\n            .parse::<u32>()\n            .unwrap_or(0);\n\
    \        years += part_parts[2]\n            .parse::<u32>()\n            .unwrap_or(0);\n\
    \    }\n    days > 0 && days < 32 && months > 0 && months < 12 && years > 0 &&\
    \ years < 100\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpncyt9ogn.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpncyt9ogn.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpncyt9ogn.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpncyt9ogn.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpncyt9ogn.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpncyt9ogn.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpncyt9ogn.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpncyt9ogn.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpncyt9ogn.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpncyt9ogn.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpncyt9ogn.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 &&\n        date.chars().all(|c| c.is_digit()) &&\n    \
    \    date.chars().all(|c| c != '-') &&\n        date.chars().all(|c| c != '/')\
    \ &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '/') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '\n}\n\nfn main() {\n    let\
    \ candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0762]: unterminated character literal\n  --> /tmp/tmp7n8y23yb.rs:55:35\n\
    \   |\n55 |         date.chars().all(|c| c != '\n   |                        \
    \           ^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0762`.\n"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    date.len() == 10 &&\n    (date.chars().take(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmptf92oaup.rs:69:5\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n69 |     (date.chars().skip(2).collect::<Vec<_>>()\n\
    \   |     ^ unclosed delimiter\n70 |         .iter\n71 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptf92oaup.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptf92oaup.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptf92oaup.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptf92oaup.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptf92oaup.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptf92oaup.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptf92oaup.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptf92oaup.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptf92oaup.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in t"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_\n}\n\nfn main() {\n    let candidate =\
    \ valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp38pi0lkk.rs:65:38\n   |\n\
    65 |     let mut date_str = date_str.trim_\n   |                             \
    \         ^ help: add `;` here\n66 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp38pi0lkk.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp38pi0lkk.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp38pi0lkk.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp38pi0lkk.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp38pi0lkk.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp38pi0lkk.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp38pi0lkk.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp38pi0lkk.rs:73:25\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp38pi0lkk.rs:74:17\n  \
    \ |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp38pi0lkk.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\ner"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0762]: unterminated character literal\n  --> /tmp/tmp__ugf6g3.rs:19:1325\n\
    \   |\n19 | ...c| c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c\
    \ <= '\n   |                                                                 \
    \     ^\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0762`.\n"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmplqp0zvzk.rs:19:45\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                  ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmplqp0zvzk.rs:19:73\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                                              ^^^^^^^^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find function `valid_year` in this\
    \ scope\n  --> /tmp/tmplqp0zvzk.rs:19:103\n   |\n19 |     !date.is_empty() &&\
    \ date.len() == 10 && valid_day(date.as_str()) && valid_month(date.as_str()) &&\
    \ valid_year(date.as_str())\n   |                                            \
    \                                                           ^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplqp0zvzk.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplqp0zvzk.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplqp0zvzk.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplqp0zvzk.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplqp0zvzk.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplqp0zvzk.rs:26:25\n\
    \   |\n26 |"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_str =\
    \ date_str.chars().filter(|c| c.is_ascii_digit()).collect::<String>();\n     \
    \   let mut date_str = date_str.to_lowercase();\n        let mut date_str = date_str.chars().filter(|c|\
    \ c.is_ascii_letter()).collect::<String>();\n        let mut date_str = date_str.to_lowercase();\n\
    \        let mut date_str = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n\
    \        let mut date_str = date_str.to_lowercase();\n        let mut date_str\
    \ = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n  \
    \      let mut date_str = date_str.to_lowercase();\n        let mut date_str =\
    \ date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n    \
    \    let mut date_str = date_str.to_lowercase();\n        let mut date_str = date_str.chars().filter(|c|\
    \ c.is_ascii_letter()).collect::<String>();\n        let mut date_str = date_str.to_lowercase();\n\
    \        let mut date_str = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n\
    \        let mut date_str = date_str.to_lowercase();\n        let mut date_str\
    \ = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n  \
    \      let mut date_str = date_str.to_lowercase();\n        let mut date_str =\
    \ date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n    \
    \    let mut date_str = date_str.to_lowercase();\n        let mut date_str = date_str.chars().filter(|c|\
    \ c.is_ascii_letter()).collect::<String>();\n        let mut date_str = date_str.to_lowercase();\n\
    \        let mut date_str = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n\
    \        let mut date_str = date_str.to_lowercase();\n        let mut date_str\
    \ = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n  \
    \      let mut date_str = date_str.to_lowercase();\n        let mut date_str =\
    \ date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n    \
    \    let mut date_str = date_str.to_lowercase();\n        let mut date_str = date_str.chars().filter(|c|\
    \ c.is_ascii_letter()).collect::<String>();\n        let mut date_str = date_str.to_lowercase();\n\
    \        let mut date_str = date_\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpitkzhlec.rs:70:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    50 | }\n   | - ...as it matches this but it has different indentation\n...\n70\
    \ | }\n   |   ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmpitkzhlec.rs:49:33\n\
    \   |\n49 |         let mut date_str = date_\n   |                           \
    \      ^ help: add `;` here\n50 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `date_` in this scope\n  --> /tmp/tmpitkzhlec.rs:49:28\n \
    \  |\n49 |         let mut date_str = date_\n   |                            ^^^^^\
    \ help: a local variable with a similar name exists: `date`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpitkzhlec.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpitkzhlec.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpitkzhlec.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpitkzhlec.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpitkzhlec.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpitkzhlec.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpitkzhlec.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n  "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\"/\");\n    let mut date_str = date_str.trim_right_matches(\"\
    /\");\n    let mut date_str = date_str.trim_left_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\".\");\n    let mut date_str = date_str.trim_right_matches(\"\
    .\");\n    let mut date_str = date_str.trim_left_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.trim_left_matches(\"\
    .\");\n    let mut date_str = date_str.trim_right_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\"-\");\n    let mut date_str = date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.trim_left_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\".\");\n    let mut date_str = date_str.trim_right_matches(\"\
    .\");\n    let mut date_str = date_str.trim_left_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.trim_left_matches(\"\
    .\");\n    let mut date_str = date_str.trim_right_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\"-\");\n    let mut date_str = date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.trim_left_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\".\");\n    let mut date_str = date_str.trim_right_matches(\"\
    .\");\n    let mut date_str = date_str.trim_left_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\"-\");\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpatujga81.rs:60:17\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpatujga81.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpatujga81.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpatujga81.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpatujga81.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpatujga81.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpatujga81.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpatujga81.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpatujga81.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpatujga81.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpatujga81.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    !date.len() < 1 &&\n    !date.len() > 31 &&\n    !date.len() < 30 &&\n\
    \    !date.len() > 29 &&\n    !date.len() < 12 &&\n    !date.len() > 12 &&\n \
    \   !date.len() < 10 &&\n    !date.len() > 10 &&\n    !date.len() < 7 &&\n   \
    \ !date.len() > 7 &&\n    !date.len() < 4 &&\n    !date.len() > 4 &&\n    !date.len()\
    \ < 2 &&\n    !date.len() > 2\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4rwl_nj9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4rwl_nj9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4rwl_nj9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4rwl_nj9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    if date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mu\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n   --> /tmp/tmpk4z5xz_7.rs:112:11\n   \
    \ |\n112 |     let mu\n    |           ^ help: add `;` here\n113 | }\n    | -\
    \ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n \
    \  --> /tmp/tmpk4z5xz_7.rs:117:17\n    |\n117 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpk4z5xz_7.rs:117:25\n    |\n117 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpk4z5xz_7.rs:118:17\n    |\n118 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpk4z5xz_7.rs:118:25\n    |\n118 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpk4z5xz_7.rs:119:17\n    |\n119 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpk4z5xz_7.rs:119:25\n    |\n119 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpk4z5xz_7.rs:120:17\n    |\n120 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpk4z5xz_7.rs:120:25\n    |\n120 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpk4z5xz_7.rs:121:17\n    |\n121 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpk4z5xz_7.rs:121:25\n    |\n121 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut days_parts: Vec<String> = date_parts.split_whitespace();\n    let\
    \ mut months_parts: Vec<String> = date_parts.split_whitespace();\n    let mut\
    \ years_parts: Vec<String> = date_parts.split_whitespace();\n    days_parts.sort();\n\
    \    months_parts.sort();\n    years_parts.sort();\n    let mut days: usize =\
    \ 0;\n    let mut months: usize = 0;\n    let mut years: usize = 0;\n    for part\
    \ in days_parts {\n        days += part.parse::<usize>().unwrap();\n    }\n  \
    \  for part in months_parts {\n        months += part.parse::<usize>().unwrap();\n\
    \    }\n    for part in years_parts {\n        years += part.parse::<usize>().unwrap();\n\
    \    }\n    if days > 31 || months > 12 || years > 30 {\n        return false;\n\
    \    }\n    if months == 1 || months == 3 || months == 5 || months == 7 || months\
    \ == 8 || months == 10 || months == 12 {\n        if days == 31 || days == 30\
    \ {\n            return true;\n        }\n    }\n    if months == 4 || months\
    \ == 6 || months == 9 || months == 11 {\n        if days == 29 {\n           \
    \ return true;\n        }\n    }\n    if months == 2 {\n        if days == 29\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjznw7tlv.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjznw7tlv.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjznw7tlv.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjznw7tlv.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjznw7tlv.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjznw7tlv.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjznw7tlv.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjznw7tlv.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjznw7tlv.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjznw7tlv.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjznw7tlv.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days_str\
    \ = date_parts[0];\n    let mut months_str = date_parts[1];\n    let mut years_str\
    \ = date_parts[2];\n    days_str.trim_left_matches(\"-\");\n    months_str.trim_left_matches(\"\
    -\");\n    years_str.trim_left_matches(\"-\");\n    let mut days: u32;\n    let\
    \ mut months: u32;\n    let mut years: u32;\n    let mut days_parts: Vec<&str>\
    \ = days_str.split_whitespace();\n    let mut months_parts: Vec<&str> = months_str.split_whitespace();\n\
    \    let mut years_parts: Vec<&str> = years_str.split_whitespace();\n    if days_parts.len()\
    \ != 3 || months_parts.len() != 3 || years_parts.len() != 3 {\n        return\
    \ false;\n    }\n    days_parts[0] = days_parts[0].to_owned();\n    months_parts[0]\
    \ = months_parts[0].to_owned();\n    years_parts[0] = years_parts[0].to_owned();\n\
    \    days_parts[1] = days_parts[1].to_owned();\n    months_parts[1] = months_parts[1].to_owned();\n\
    \    years_parts[1] = years_parts[1].to_owned();\n    days_parts[2] = days_parts[2].to_owned();\n\
    \    months_parts[2] = months_parts[2].to_owned();\n    years_parts[2] = years_parts[2].to_owned();\n\
    \    days = days_parts[0].parse().unwrap();\n    months = months_parts[0].parse().unwrap();\n\
    \    years = years_parts[0].parse().unwrap();\n    if days_parts[1].len() != 1\
    \ || months_parts[1].len() != 1 || years_parts[1].len() != 1 {\n        return\
    \ false;\n    }\n    if days_parts[1].parse().unwrap() > 31 || months_parts[1].parse().unwrap()\
    \ > 12 || years_parts[1].parse().unwrap() > 31 {\n        return false;\n    }\n\
    \    if days_parts[2].len() != 2 || months_parts[2].len() != 2 || years_parts[2].len()\
    \ != 2 {\n        return false;\n    }\n    if days_parts[2].parse().unwrap()\
    \ > 31 || months_parts[2].parse().unwrap() > 12 || years_parts[2].parse().unwrap()\
    \ > 30 {\n        return false;\n    }\n}\n\nfn main() {\n    let candidate =\
    \ valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjntgwtts.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjntgwtts.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjntgwtts.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjntgwtts.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjntgwtts.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjntgwtts.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjntgwtts.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjntgwtts.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjntgwtts.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjntgwtts.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjntgwtts.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap()\
    \ > 0 &&\n    date_str.parse::<usize>().unwrap() <= 31 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 30 &&\n    date_str.parse::<usize>().unwrap() <= 29 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 12 &&\n    date_str.parse::<usize>().unwrap() >= 1 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 31\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvwvjjf24.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && date.chars().all(|c| c.is_digit(10)) && date.chars().all(|c|\
    \ c != '-') && date.chars().all(|c| c != '/') && date.chars().all(|c| c != '-')\
    \ && date.chars().all(|c| c != '/')\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsrh0jp4m.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsrh0jp4m.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsrh0jp4m.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:27:25\n   |\n27 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:28:17\n  \
    \ |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsrh0jp4m.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpthejb1fm.rs:70:17\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpthejb1fm.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpthejb1fm.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpthejb1fm.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpthejb1fm.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpthejb1fm.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpthejb1fm.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpthejb1fm.rs:73:25\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpthejb1fm.rs:74:17\n  \
    \ |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpthejb1fm.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpthejb1fm.rs:75:17\n   |\n75 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n\
    \        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpguum83h4.rs:46:1\n\
    \   |\n46 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpguum83h4.rs:50:17\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:50:25\n \
    \  |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpguum83h4.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:55:17\n   |\n55 |     "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp_r67k_7q.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                       ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmp_r67k_7q.rs:19:51\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                                                   ^^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_r67k_7q.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_r67k_7q.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_r67k_7q.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_r67k_7q.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_r67k_7q.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmplgv_1zqb.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                       ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmplgv_1zqb.rs:19:51\n   |\n19 |     date.len() > 0 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                        ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmplgv_1zqb.rs:19:81\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                        ^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplgv_1zqb.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplgv_1zqb.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplgv_1zqb.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplgv_1zqb.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplgv_1zqb.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplgv_1zqb.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut years: u32 = 0;\n    for\
    \ part in date_parts {\n        let mut part_str = part.to_string();\n       \
    \ part_str.trim_left_matches(\"-\");\n        part_str.trim_right_matches(\"-\"\
    );\n        let mut part_parts = part_str.split_whitespace();\n        let mut\
    \ part_days: u32 = 0;\n        let mut part_months: u32 = 0;\n        let mut\
    \ part_years: u32 = 0;\n        for part in part_parts {\n            if part.len()\
    \ > 0 {\n                match part.chars().next() {\n                    '0'\
    \ => part_months += 1,\n                    '1' => part_days += 1,\n         \
    \           '2' => part_years += 1,\n                    '3' => part_months +=\
    \ 1,\n                    '4' => part_days += 1,\n                    '5' => part_years\
    \ += 1,\n                    '6' => part_months += 1,\n                    '7'\
    \ => part_days += 1,\n                    '8' => part_years += 1,\n          \
    \          '9' => part_months += 1,\n                    '10' => part_days +=\
    \ 1,\n                    '11' => part_years += 1,\n                    '12' =>\
    \ part_months += 1,\n                    '13' => part_days += 1,\n           \
    \         '14' => part_years += 1,\n                    '15' => part_months +=\
    \ 1,\n                    '16' => part_days += 1,\n                    '17' =>\
    \ part_years += 1,\n                    '18' => part_months += 1,\n          \
    \          '19' => part_days += 1,\n                    '20' => part_years +=\
    \ 1,\n                    '21' => part_months += 1,\n                    '22'\
    \ => part_days += 1,\n                    '23' => part_years += 1,\n         \
    \           '24' => part_months += 1,\n                    '25' => part_days +=\
    \ 1,\n                    '26' => part_years += 1,\n                    '27' =>\
    \ part_months += 1,\n                    '28' => part_days += 1,\n           \
    \         '29' => part_years += 1,\n                    '30' => part_months +=\
    \ 1,\n                    '31' => part_days += 1,\n                    _ => (),\n\
    \                }\n            }\n        }\n        days += part_days;\n   \
    \     months += part_months;\n        years += part_years;\n    }\n    days >\
    \ 0 && months > 0 && years > 0 && days > 31 && months > 12 && years > 0 && days\
    \ > 29 && months > 12\n}\n\nfn main() {\n    let candidate = valid_date;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: character literal may only contain one codepoint\n  --> /tmp/tmpyfx5owdu.rs:47:21\n\
    \   |\n47 |                     '10' => part_days += 1,\n   |                \
    \     ^^^^\n   |\nhelp: if you meant to write a `str` literal, use double quotes\n\
    \   |\n47 |                     \"10\" => part_days += 1,\n   |              \
    \       ~~~~\n\nerror: character literal may only contain one codepoint\n  -->\
    \ /tmp/tmpyfx5owdu.rs:48:21\n   |\n48 |                     '11' => part_years\
    \ += 1,\n   |                     ^^^^\n   |\nhelp: if you meant to write a `str`\
    \ literal, use double quotes\n   |\n48 |                     \"11\" => part_years\
    \ += 1,\n   |                     ~~~~\n\nerror: character literal may only contain\
    \ one codepoint\n  --> /tmp/tmpyfx5owdu.rs:49:21\n   |\n49 |                 \
    \    '12' => part_months += 1,\n   |                     ^^^^\n   |\nhelp: if\
    \ you meant to write a `str` literal, use double quotes\n   |\n49 |          \
    \           \"12\" => part_months += 1,\n   |                     ~~~~\n\nerror:\
    \ character literal may only contain one codepoint\n  --> /tmp/tmpyfx5owdu.rs:50:21\n\
    \   |\n50 |                     '13' => part_days += 1,\n   |                \
    \     ^^^^\n   |\nhelp: if you meant to write a `str` literal, use double quotes\n\
    \   |\n50 |                     \"13\" => part_days += 1,\n   |              \
    \       ~~~~\n\nerror: character literal may only contain one codepoint\n  -->\
    \ /tmp/tmpyfx5owdu.rs:51:21\n   |\n51 |                     '14' => part_years\
    \ += 1,\n   |                     ^^^^\n   |\nhelp: if you meant to write a `str`\
    \ literal, use double quotes\n   |\n51 |                     \"14\" => part_years\
    \ += 1,\n   |                     ~~~~\n\nerror: character literal may only contain\
    \ one codepoint\n  --> /tmp/tmpyfx5owdu.rs:52:21\n   |\n52 |                 \
    \    '15' => part_months += 1,\n   |                     ^^^^\n   |\nhelp: if\
    \ you meant to write a `str` literal, use double quotes\n   |\n52 |          \
    \           \"15\" => part_months += 1,\n   |                     ~~~~\n\nerror:\
    \ character literal may only contain one codepoint\n  --> /tmp/tmpyfx5owdu.rs:53:2"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n\
    \        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpguum83h4.rs:46:1\n\
    \   |\n46 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpguum83h4.rs:50:17\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:50:25\n \
    \  |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpguum83h4.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:55:17\n   |\n55 |     "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.split_whitespace();\n    date_str.sort();\n\
    \    let mut days: u32 = 0;\n    let mut months: u32 = 0;\n    let mut years:\
    \ u32 = 0;\n    let mut date_str: Vec<String> = date_str.to_vec();\n    date_str.iter().for_each(|&x|\
    \ {\n        if x.parse::<u32>().is_err() {\n            return false;\n     \
    \   }\n        days += x;\n    });\n    date_str.iter().for_each(|&x| {\n    \
    \    if x.parse::<u32>().is_err() {\n            return false;\n        }\n  \
    \      months += x;\n    });\n    date_str.iter().for_each(|&x| {\n        if\
    \ x.parse::<u32>().is_err() {\n            return false;\n        }\n        years\
    \ += x;\n    });\n    if days > 31 || months > 12 || years > 30 {\n        return\
    \ false;\n    }\n    if months == 1 || months == 3 || months == 5 || months ==\
    \ 7 || months == 8 || months == 10 || months == 12 {\n        if days == 31 ||\
    \ days == 30 {\n            return true;\n        }\n    }\n    if months == 4\
    \ || months == 6 || months == 9 || months == 11 {\n        if days == 29 {\n \
    \           return true;\n        }\n    }\n    if months == 2 {\n        if days\
    \ == 29 {\n            return true;\n        }\n    }\n    return false;\n}\n\n\
    fn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:69:17\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdqxsgd_x.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdqxsgd_x.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdqxsgd_x.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdqxsgd_x.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<Date>().is_ok()\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `Date` in this scope\n  --> /tmp/tmp68zjkgcz.rs:21:22\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |              - help: you\
    \ might be missing a type parameter: `<Date>`\n...\n21 |     date_str.parse::<Date>().is_ok()\n\
    \   |                      ^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68zjkgcz.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:25\n\
    \   "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && valid_month(date.as_str()) && valid_day(date.as_str())\
    \ && valid_year(date.as_str())\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_month` in this scope\n  --> /tmp/tmpvltk2zlp.rs:19:45\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_month(date.as_str())\
    \ && valid_day(date.as_str()) && valid_year(date.as_str())\n   |             \
    \                                ^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_day` in this scope\n  --> /tmp/tmpvltk2zlp.rs:19:75\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_month(date.as_str())\
    \ && valid_day(date.as_str()) && valid_year(date.as_str())\n   |             \
    \                                                              ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_year` in this scope\n\
    \  --> /tmp/tmpvltk2zlp.rs:19:103\n   |\n19 |     !date.is_empty() && date.len()\
    \ == 10 && valid_month(date.as_str()) && valid_day(date.as_str()) && valid_year(date.as_str())\n\
    \   |                                                                        \
    \                               ^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvltk2zlp.rs:24:17\n  \
    \ |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvltk2zlp.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvltk2zlp.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvltk2zlp.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvltk2zlp.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvltk2zlp.rs:26:25\n   |\n26"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_parts\
    \ = date_str.split_whitespace();\n        let mut days_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut months_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut years_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut days: u32 = 0;\n        let mut months: u32 = 0;\n        let\
    \ mut years: u32 = 0;\n        let mut days_part: &str = days_parts[0];\n    \
    \    let mut months_part: &str = months_parts[0];\n        let mut years_part:\
    \ &str = years_parts[0];\n        let mut days_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut months_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut years_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut days_part: &str = days_parts[0];\n        let mut months_part:\
    \ &str = months_parts[0];\n        let mut years_part: &str = years_parts[0];\n\
    \        let mut days_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut months_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut years_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut days_part: &str = days_parts[0];\n        let mut months_part:\
    \ &str = months_parts[0];\n        let mut years_part: &str = years_parts[0];\n\
    \        let mut days_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut months_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut years_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut days_part: &str = days_parts[0];\n        let mut months_part:\
    \ &str = months_parts[0];\n        let mut years_part: &str = years_parts[0];\n\
    \        let mut days_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut months_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpwasr60xf.rs:71:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    51 | }\n   | - ...as it matches this but it has different indentation\n...\n71\
    \ | }\n   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwasr60xf.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwasr60xf.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwasr60xf.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwasr60xf.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwasr60xf.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwasr60xf.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwasr60xf.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwasr60xf.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwasr60xf.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                         ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:19:53\n   |\n19 |     !date.is_empty() && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                          ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:83\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                          ^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7szrmq88.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find v"
  stdout: ''
  timestamp: 1659800297
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut month\
    \ = date_parts[0].parse().unwrap();\n    let mut day = date_parts[1].parse().unwrap();\n\
    \    let mut year = date_parts[2].parse().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if day < 1 || day > 31 {\n       \
    \ return false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n\
    \    }\n    if month == 4 && day > 30 {\n        return false;\n    }\n    if\
    \ month == 6 && day > 31 {\n        return false;\n    }\n    if month == 9 &&\
    \ day > 31 {\n        return false;\n    }\n    if month == 11 && day > 30 {\n\
    \        return false;\n    }\n    if month == 1 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 3 && day > 31 {\n        return false;\n    }\n\
    \    if month == 5 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 7 && day > 31 {\n        return false;\n    }\n    if month == 8 && day > 31\
    \ {\n        return false;\n    }\n    if month == 10 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 12 && day > 31 {\n        return false;\n   \
    \ }\n    if month == 1 && day > 30 {\n        return false;\n    }\n    if month\
    \ == 3 && day > 30 {\n        return false;\n    }\n    if month == 5 && day >\
    \ 30 {\n        return false;\n    }\n    if month == 7 && day > 30 {\n      \
    \  return false;\n    }\n    if month == 8 && day > 30 {\n        return false;\n\
    \    }\n    if month == 10 && day > 30 {\n        return false;\n    }\n    if\
    \ month == 12 && day > 30 {\n        return false;\n    }\n    if month == 1 &&\
    \ day > 29 {\n        return false;\n    }\n    if month == 3 && day > 29 {\n\
    \        return false;\n    }\n    if month == 5 && day > 29 {\n        return\
    \ false;\n    }\n    if month == 7 && day > 29 {\n        return false;\n    }\n\
    \    if month == 8 && day > 29 {\n        return false;\n    }\n    if month ==\
    \ 10 && day > 29 {\n        return false;\n    }\n    if month == 12 && day >\
    \ 29 {\n        return false;\n    }\n    if month == 1 && day > 28 {\n      \
    \  return false;\n    }\n    if month == 3 && day > 28 {\n        return false;\n\
    \    }\n    if month == 5 && day > 28 {\n        return false;\n    }\n    if\
    \ month == 7 && day > 28 {\n        return false;\n    }\n    if month == 8 &&\
    \ day > 28 {\n        return false;\n    }\n    if month == 10 && day > 28\n}\n\
    \nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n   --> /tmp/tmpckoitfo4.rs:126:1\n    |\n\
    125 |     if month == 10 && day > 28\n    |     -- this `if` expression has a\
    \ condition, but no block\n126 | }\n    | ^ expected `{`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n   --> /tmp/tmpckoitfo4.rs:130:17\n    |\n\
    130 |     assert_eq!({left}, {right});\n    |                 ^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find value `right` in this scope\n   -->\
    \ /tmp/tmpckoitfo4.rs:130:25\n    |\n130 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpckoitfo4.rs:131:17\n\
    \    |\n131 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpckoitfo4.rs:131:25\n    |\n131 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpckoitfo4.rs:132:17\n\
    \    |\n132 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpckoitfo4.rs:132:25\n    |\n132 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpckoitfo4.rs:133:17\n\
    \    |\n133 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpckoitfo4.rs:133:25\n    |\n133 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpckoitfo4.rs:134:17\n\
    \    |\n134 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpckoitfo4.rs:134:25\n    |\n134 |     assert_eq!({left}, {right});\n\
    \    |             "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_split\
    \ = date_str.split_at(3);\n        let mut date_split_2 = date_split.split_at(2);\n\
    \        let mut date_split_3 = date_split_2.split_at(2);\n        let mut date_split_4\
    \ = date_split_3.split_at(2);\n        let mut date_split_5 = date_split_4.split_at(2);\n\
    \        let mut date_split_6 = date_split_5.split_at(2);\n        let mut date_split_7\
    \ = date_split_6.split_at(2);\n        let mut date_split_8 = date_split_7.split_at(2);\n\
    \        let mut date_split_9 = date_split_8.split_at(2);\n        let mut date_split_10\
    \ = date_split_9.split_at(2);\n        let mut date_split_11 = date_split_10.split_at(2);\n\
    \        let mut date_split_12 = date_split_11.split_at(2);\n        let mut date_split_13\
    \ = date_split_12.split_at(2);\n        let mut date_split_14 = date_split_13.split_at(2);\n\
    \        let mut date_split_15 = date_split_14.split_at(2);\n        let mut date_split_16\
    \ = date_split_15.split_at(2);\n        let mut date_split_17 = date_split_16.split_at(2);\n\
    \        let mut date_split_18 = date_split_17.split_at(2);\n        let mut date_split_19\
    \ = date_split_18.split_at(2);\n        let mut date_split_20 = date_split_19.split_at(2);\n\
    \        let mut date_split_21 = date_split_20.split_at(2);\n        let mut date_split_22\
    \ = date_split_21.split_at(2);\n        let mut date_split_23 = date_split_22.split_at(2);\n\
    \        let mut date_split_24 = date_split_23.split_at(2);\n        let mut date_split_25\
    \ = date_split_24.split_at(2);\n        let mut date_split_26 = date_split_25.split_at(2);\n\
    \        let mut date_split_27 = date_split_26.split_at(2);\n        let mut date_split_28\
    \ = date_split_27.split_at(2);\n        let mut date_split_29 = date_split_28.split_at(2);\n\
    \        let mut date_split_30 = date_split_29.split_at(2);\n        let mut date_split_31\
    \ = date_split_30.split_at(2);\n        let mut date_split_32 = date_split_31.split_at(2);\n\
    \        let mut date_split_33 = date_split_32.split_at(2);\n        let mut date_split_34\
    \ = date_split_33.split_at(2);\n        let mut date_split_35 = date_split_34.split_at(2);\n\
    \        let mut date_split_36 = date_split_35.split_at(2);\n        let mut date_split_37\
    \ = \n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpncj2j8ug.rs:78:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    58 | }\n   | - ...as it matches this but it has different indentation\n...\n78\
    \ | }\n   |   ^\n\nerror: expected expression, found `}`\n  --> /tmp/tmpncj2j8ug.rs:58:1\n\
    \   |\n58 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpncj2j8ug.rs:62:17\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpncj2j8ug.rs:62:25\n \
    \  |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpncj2j8ug.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpncj2j8ug.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpncj2j8ug.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpncj2j8ug.rs:64:25\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpncj2j8ug.rs:65:17\n  \
    \ |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpncj2j8ug.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpncj2j8ug"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    let mut date_components = date.split_whitespace();\n\
    \    let mut year = date_components[0];\n    let mut month = date_components[1];\n\
    \    let mut day = date_components[2];\n    let mut date_components_len = date_components.len();\n\
    \    let mut days_in_month = [31,28,31,30,31,30,31,30,31,30,31,30];\n    let mut\
    \ days_in_month_leap = [31,29,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap2\
    \ = [29,30,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap3 =\
    \ [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap4 = [31,30,31,30,31,30,31,30,31,30,31,30];\n\
    \    let mut days_in_month_leap5 = [31,30,31,30,31,30,31,30,31,30,31,30];\n  \
    \  let mut days_in_month_leap6 = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let\
    \ mut days_in_month_leap7 = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut\
    \ days_in_month_leap8 = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap9\
    \ = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap10 =\
    \ [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap11 = [31,30,31,30,31,30,31,30,31,30,31,30];\n\
    \    let mut days_in_month_leap12 = [31,30,31,30,31,30,31,30,31,30,31,30];\n \
    \   let mut days_in_month_leap13 = [31,30,31,30,31,30,31,30,31,30,31,30];\n  \
    \  let mut days_in_month_leap14 = [31,30,31,30,31,30,31,30,31,30,31,30];\n   \
    \ let mut days_in_month_leap15 = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let\
    \ mut days_in_month_leap16 = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut\
    \ days_in_month_leap17 = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap18\
    \ = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut \n}\n\nfn main() {\n \
    \   let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpwszeqcvx.rs:45:1\n\
    \   |\n45 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpwszeqcvx.rs:49:17\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpwszeqcvx.rs:49:25\n \
    \  |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwszeqcvx.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwszeqcvx.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwszeqcvx.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwszeqcvx.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwszeqcvx.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwszeqcvx.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwszeqcvx.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwszeqcvx.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwszeqcvx.rs:54:17\n   |\n54 |     "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    date.len() == 10 &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !\n}\n\
    \nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpcxq5g4ga.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpcxq5g4ga.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpcxq5g4ga.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcxq5g4ga.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcxq5g4ga.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcxq5g4ga.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcxq5g4ga.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcxq5g4ga.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcxq5g4ga.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcxq5g4ga.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcxq5g4ga.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcxq5g4ga.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut months_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut years_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    days_parts[0] =\
    \ days_parts[0].to_owned();\n    months_parts[0] = months_parts[0].to_owned();\n\
    \    years_parts[0] = years_parts[0].to_owned();\n    if days_parts[0].is_empty()\
    \ {\n        return false;\n    }\n    if months_parts[0].is_empty() {\n     \
    \   return false;\n    }\n    if years_parts[0].is_empty() {\n        return false;\n\
    \    }\n    if days_parts[0] == \"31\" {\n        return false;\n    }\n    if\
    \ days_parts[0] == \"30\" {\n        return false;\n    }\n    if days_parts[0]\
    \ == \"29\" {\n        return false;\n    }\n    if months_parts[0] == \"12\"\
    \ {\n        return false;\n    }\n    if months_parts[0] == \"11\" {\n      \
    \  return false;\n    }\n    if months_parts[0] == \"10\" {\n        return false;\n\
    \    }\n    if months_parts[0] == \"9\" {\n        return false;\n    }\n    if\
    \ months_parts[0] == \"8\" {\n        return false;\n    }\n    if months_parts[0]\
    \ == \"7\" {\n        return false;\n    }\n    if months_parts[0] == \"6\" {\n\
    \        return false;\n    }\n    if months_parts[0] == \"5\" {\n        return\
    \ false;\n    }\n    if months_parts[0] == \"4\" {\n        return false;\n  \
    \  }\n    if months_parts[0] == \"3\" {\n        return false;\n    }\n    if\
    \ months_parts[0] == \"2\" {\n        return false;\n    }\n    if months_parts[0]\
    \ == \"1\" {\n        return false;\n    }\n    if months_parts[0] == \"0\" {\n\
    \        return false;\n    }\n    if days_parts[0] == \"31\" {\n        return\
    \ false;\n    }\n    if days_parts[0] == \"30\" {\n        return false;\n   \
    \ }\n    if days_parts[0] == \"29\" {\n        return false;\n    }\n    if days_parts[0]\
    \ == \"28\" {\n        return false;\n    }\n    if days_parts[0] == \"27\" {\n\
    \        return false;\n    }\n    if days_parts[0] == \"26\" {\n        return\
    \ false;\n    }\n    if days_parts[0] == \"25\" {\n        return false;\n   \
    \ }\n    if days_parts[0] == \"24\" {\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpfbv98jst.rs:128:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n...\n107 |     if days_parts[0] == \"\
    24\" {\n    |                              - this delimiter might not be properly\
    \ closed...\n108 | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n128 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \   --> /tmp/tmpfbv98jst.rs:112:17\n    |\n112 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpfbv98jst.rs:112:25\n    |\n112 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpfbv98jst.rs:113:17\n    |\n113 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpfbv98jst.rs:113:25\n    |\n113 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpfbv98jst.rs:114:17\n    |\n114 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpfbv98jst.rs:114:25\n    |\n114 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpfbv98jst.rs:115:17\n    |\n115 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpfbv98jst.rs:115:25\n    |\n115 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpfbv98jst.rs:116:17\n    |\n116 |     assert_eq!({left}, {"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    let mut date_parts =\
    \ date_str.split_whitespace();\n    let mut days: u32 = 0;\n    let mut months:\
    \ u32 = 0;\n    let mut years: u32 = 0;\n    let mut days_in_month: u32 = 0;\n\
    \    let mut days_in_year: u32 = 0;\n    let mut days_in_month_in_year: u32 =\
    \ 0;\n    let mut days_in_year_in_year: u32 = 0;\n    let mut days_in_month_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year: u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year: u32 = 0;\n    let\
    \ mut days_in_month_in_year_in_year_in_year_in_year: u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa3aq8x5j.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa3aq8x5j.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa3aq8x5j.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa3aq8x5j.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && date.chars().all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmp8wvgcaj4.rs:35:33\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n35 |       \
    \  date.chars().take(2).all(\n   |                                 ^ unclosed\
    \ delimiter\n36 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8wvgcaj4.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8wvgcaj4.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8wvgcaj4.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8wvgcaj4.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8wvgcaj4.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8wvgcaj4.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8wvgcaj4.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8wvgcaj4.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8wvgcaj4.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in thi"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        date_str.trim_left_matches(\"\
    -\");\n        date_str.trim_right_matches(\"-\");\n        let mut date_parts\
    \ = date_str.split_whitespace();\n        let months = date_parts[0].parse::<usize>().unwrap();\n\
    \        let days = date_parts[1].parse::<usize>().unwrap();\n        let year\
    \ = date_parts[2].parse::<usize>().unwrap();\n        let mut valid_date = false;\n\
    \        if months == 1 && days == 1 && year == 2000 {\n            valid_date\
    \ = true;\n        }\n        if months == 4 && days == 1 && year == 2040 {\n\
    \            valid_date = true;\n        }\n        if months == 6 && days ==\
    \ 1 && year == 2020 {\n            valid_date = true;\n        }\n        if months\
    \ == 6 && days == 1 && year == 2020 {\n            valid_date = true;\n      \
    \  }\n        if months == 6 && days == 1 && year == 2020 {\n            valid_date\
    \ = true;\n        }\n        if months == 6 && days == 1 && year == 2020 {\n\
    \            valid_date = true;\n        }\n        if months == 6 && days ==\
    \ 1 && year == 2020 {\n            valid_date = true;\n        }\n        if months\
    \ == 6 && days == 1 && year == 2020 {\n            valid_date = true;\n      \
    \  }\n        if months == 6 && days == 1 && year == 2020 {\n            valid_date\
    \ = true;\n        }\n        if months == 6 && days == 1 && year == 2020 {\n\
    \            valid_date = true;\n        }\n        if months == 6 && days ==\
    \ 1 && year == 2020 {\n            valid_date = true;\n        }\n        if months\
    \ == 6 && days == 1 && year == 2020 {\n            valid_date = true;\n      \
    \  }\n        if months == 6 && days == 1 && year == 2020 {\n            valid_date\
    \ = true;\n        }\n        if months == 6 && days == 1 && year == 2020 {\n\
    \            valid_date = true;\n        }\n        if months == 6 && days ==\
    \ 1 && year == 2020 {\n            valid_date = true;\n        }\n        if months\
    \ == 6 && days == 1 && year == 2020 {\n            valid_date = true;\n      \
    \  }\n        if months == 6 && days == 1 && year == 2020 {\n            valid_date\
    \ = true;\n        }\n        if months == 6 && days == 1 && year == 2020 {\n\
    \            valid_date = true;\n        }\n        if months == 6 && days ==\
    \ 1 && year == 2020 {\n            valid_date = true;\n        }\n        if months\
    \ == 6 && days == 1 && year == 2020 {\n            valid_date = true;\n      \
    \  }\n        if months == 6 && days == 1 && year == 2020 {\n\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpk1vn6tdh.rs:110:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n19  |     if !date.is_empty() {\n   \
    \ |                         - unclosed delimiter\n...\n88  |         if months\
    \ == 6 && days == 1 && year == 2020 {\n    |                                 \
    \                    - this delimiter might not be properly closed...\n89  | \n\
    90  | }\n    | - ...as it matches this but it has different indentation\n...\n\
    110 | }\n    |   ^\n\nerror[E0434]: can't capture dynamic environment in a fn\
    \ item\n  --> /tmp/tmpk1vn6tdh.rs:93:21\n   |\n93 |     let candidate = valid_date;\n\
    \   |                     ^^^^^^^^^^\n   |\n   = help: use the `|| { ... }` closure\
    \ form instead\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpk1vn6tdh.rs:94:17\n   |\n94 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpk1vn6tdh.rs:94:25\n   |\n94 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpk1vn6tdh.rs:95:17\n  \
    \ |\n95 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpk1vn6tdh.rs:95:25\n   |\n95 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpk1vn6tdh.rs:96:17\n   |\n96 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpk1vn6tdh.rs:96:25\n\
    \   |\n96 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpk1vn6tdh.rs:97:17\n   |\n97 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found i"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut year: u32 = 0;\n    let\
    \ mut day: u32 = 0;\n    let mut month: u32 = 0;\n    let mut years: u32 = 0;\n\
    \    let mut days_in_month: u32 = 0;\n    let mut days_in_year: u32 = 0;\n   \
    \ let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let\
    \ mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut\
    \ days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years:\
    \ u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32\
    \ = 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 =\
    \ 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n\
    \    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n \
    \   let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n  \
    \  let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n   \
    \ let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let\
    \ mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut\
    \ days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months:\
    \ u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32\
    \ = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 =\
    \ 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n\
    \    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n \
    \   let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n  \
    \  let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n   \
    \ let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let\
    \ mut days_in_years: \n}\n\nfn main() {\n    let candidate = valid_date;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected type, found `}`\n  --> /tmp/tmpqa7uau_n.rs:72:1\n   |\n\
    71 |     let mut days_in_years: \n   |         ----------------- while parsing\
    \ the type for `mut days_in_years`\n72 | }\n   | ^ expected type\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqa7uau_n.rs:76:17\n  \
    \ |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqa7uau_n.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqa7uau_n.rs:77:17\n   |\n77 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqa7uau_n.rs:77:25\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqa7uau_n.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqa7uau_n.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqa7uau_n.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqa7uau_n.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqa7uau_n.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqa7uau_n.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\n"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                         ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:19:53\n   |\n19 |     !date.is_empty() && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                          ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:83\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                          ^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7szrmq88.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find v"
  stdout: ''
  timestamp: 1659800297
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\n\
    \        && date.len() == 10\n        && date.chars().all(|c| c.is_digit(10))\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmprajd0bvf.rs:47:1\n   |\n47\
    \ | }\n   | ^\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprajd0bvf.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprajd0bvf.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprajd0bvf.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprajd0bvf.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprajd0bvf.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprajd0bvf.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprajd0bvf.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprajd0bvf.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprajd0bvf.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprajd0bvf.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprajd0bvf.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    date.trim_left_matches('-');\n    date.trim_right_matches('-');\n\
    \    let mut year = date.trim_left_matches('-').to_owned();\n    let mut month\
    \ = date.trim_right_matches('-').to_owned();\n    let mut day = date.trim_left_matches('-').to_owned();\n\
    \    let mut days: u32;\n    let mut months: u32;\n    let mut years: u32;\n \
    \   let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv8ubi_ni.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv8ubi_ni.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv8ubi_ni.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv8ubi_ni.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    date.len() == 10 &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !\n}\n\
    \nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmp5zon9xv0.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp5zon9xv0.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp5zon9xv0.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5zon9xv0.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5zon9xv0.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5zon9xv0.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5zon9xv0.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5zon9xv0.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5zon9xv0.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5zon9xv0.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5zon9xv0.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5zon9xv0.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() > 1 && date.len() <= 31 &&\n        date.len() > 1 && date.len()\
    \ <= 30 &&\n        date.len() > 1 && date.len() <= 29 &&\n        date.len()\
    \ > 1 && date.len() <= 12 && date.len() <= 12 && date.len() <= 12 && date.len()\
    \ <= 12\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:27:17\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn9mmp5_7.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn9mmp5_7.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn9mmp5_7.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn9mmp5_7.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.\n}\n\nfn main() {\n \
    \   let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `)`\n  --> /tmp/tmpdoo1lep6.rs:50:1\n   |\n50\
    \ | }\n   | ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpdoo1lep6.rs:49:22\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n49 |     !date.chars().any(|c|\
    \ !c.\n   |                      ^ unclosed delimiter\n50 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdoo1lep6.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdoo1lep6.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdoo1lep6.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdoo1lep6.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdoo1lep6.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdoo1lep6.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdoo1lep6.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdoo1lep6.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdoo1lep6.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not fo"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    let mut date_str_split = date_str.split_at(3);\n\
    \    let mut date_str_split_2 = date_str_split.split_at(2);\n    let mut date_str_split_3\
    \ = date_str_split_2.split_at(2);\n    let mut date_str_split_4 = date_str_split_3.split_at(2);\n\
    \    let mut date_str_split_5 = date_str_split_4.split_at(2);\n    let mut date_str_split_6\
    \ = date_str_split_5.split_at(2);\n    let mut date_str_split_7 = date_str_split_6.split_at(2);\n\
    \    let mut date_str_split_8 = date_str_split_7.split_at(2);\n    let mut date_str_split_9\
    \ = date_str_split_8.split_at(2);\n    let mut date_str_split_10 = date_str_split_9.split_at(2);\n\
    \    let mut date_str_split_11 = date_str_split_10.split_at(2);\n    let mut date_str_split_12\
    \ = date_str_split_11.split_at(2);\n    let mut date_str_split_13 = date_str_split_12.split_at(2);\n\
    \    let mut date_str_split_14 = date_str_split_13.split_at(2);\n    let mut date_str_split_15\
    \ = date_str_split_14.split_at(2);\n    let mut date_str_split_16 = date_str_split_15.split_at(2);\n\
    \    let mut date_str_split_17 = date_str_split_16.split_at(2);\n    let mut date_str_split_18\
    \ = date_str_split_17.split_at(2);\n    let mut date_str_split_19 = date_str_split_18.split_at(2);\n\
    \    let mut date_str_split_20 = date_str_split_19.split_at(2);\n    let mut date_str_split_21\
    \ = date_str_split_20.split_at(2);\n    let mut date_str_split_22 = date_str_split_21.split_at(2);\n\
    \    let mut date_str_split_23 = date_str_split_22.split_at(2);\n    let mut date_str_split_24\
    \ = date_str_split_23.split_at(2);\n    let mut date_str_split_25 = date_str_split_24.split_at(2);\n\
    \    let mut date_str_split_26 = date_str_split_25.split_at(2);\n    let mut date_str_split_27\
    \ = date_str_split_26.split_at(2);\n    let mut date_str_split_28 = date_str_split_27.split_at(2);\n\
    \    let mut date_str_split_29 = date_str_split_28.split_at(2);\n    let mut date_str_split_30\
    \ = date_str_split_29.split_at(2);\n    let mut date_str_split_31 = date_str_split_30.split_at(2);\n\
    \    let mut date_str_split_32 = date_str_split_31.split_at(2);\n    let mut date_str_split_33\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpgwxbxpay.rs:52:30\n   |\n\
    52 |     let mut date_str_split_33\n   |                              ^ help:\
    \ add `;` here\n53 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpgwxbxpay.rs:57:17\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpgwxbxpay.rs:57:25\n \
    \  |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgwxbxpay.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgwxbxpay.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgwxbxpay.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgwxbxpay.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgwxbxpay.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgwxbxpay.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgwxbxpay.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgwxbxpay.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cann"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_date_range(date) && valid_month(date) && valid_day(date)\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_date_range` in this scope\n \
    \ --> /tmp/tmpgyuokuad.rs:19:25\n   |\n19 |     !date.is_empty() && valid_date_range(date)\
    \ && valid_month(date) && valid_day(date)\n   |                         ^^^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `valid_month`\
    \ in this scope\n  --> /tmp/tmpgyuokuad.rs:19:51\n   |\n19 |     !date.is_empty()\
    \ && valid_date_range(date) && valid_month(date) && valid_day(date)\n   |    \
    \                                               ^^^^^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `valid_day` in this scope\n  -->\
    \ /tmp/tmpgyuokuad.rs:19:72\n   |\n19 |     !date.is_empty() && valid_date_range(date)\
    \ && valid_month(date) && valid_day(date)\n   |                              \
    \                                          ^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgyuokuad.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgyuokuad.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgyuokuad.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgyuokuad.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgyuokuad.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgyuokuad.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgyuokuad.rs:27:17\n   |\n2"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    if date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mu\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpjaaxlmox.rs:70:11\n   |\n\
    70 |     let mu\n   |           ^ help: add `;` here\n71 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjaaxlmox.rs:75:17\n\
    \   |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjaaxlmox.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjaaxlmox.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjaaxlmox.rs:76:25\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjaaxlmox.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjaaxlmox.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjaaxlmox.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjaaxlmox.rs:78:25\n   |\n78 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjaaxlmox.rs:79:17\n  \
    \ |\n79 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjaaxlmox.rs:79:25\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_str = date_str.split_whitespace();\n\
    \    if date_str.len() != 3 {\n        return false;\n    }\n    let mut date_str\
    \ = date_str.to_owned();\n    let mut year = date_str[0];\n    let mut month =\
    \ date_str[1];\n    let mut day = date_str[2];\n    let mut days: u32;\n    let\
    \ mut months: u32;\n    let mut years: u32;\n    let mut days_months: u32;\n \
    \   let mut days_years: u32;\n    let mut days_months_years: u32;\n    let mut\
    \ days_months_years_days: u32;\n    let mut days_months_years_days_months: u32;\n\
    \    let mut days_months_years_days_months_years: u32;\n    let mut days_months_years_days_months_years_days:\
    \ u32;\n    let mut days_months_years_days_months_years_days_months: u32;\n  \
    \  let mut days_months_years_days_months_years_days_months_years: u32;\n    let\
    \ mut days_months_years_days_months_years_days_months_years_days: u32;\n    let\
    \ mut days_months_years_days_months_years_days_months_years_days_months: u32;\n\
    \    let mut days_months_years_days_months_years_days_months_years_days_months_years:\
    \ u32;\n    let mut days_months_years_days_months_years_days_months_years_days_months_years_days:\
    \ u32;\n    let mut days_months_years_days_months_years_days_months_years_days_months_years_days_months:\
    \ u32;\n    let mut days_months_years_days_months_years_days_months_years_days_months_years_days_months_years:\
    \ u32;\n    let mut days_months_years_days_months_years_days_months_years_days_months_years_days_months_years_days:\
    \ u32;\n    let mut days_months_years_days_months_years_days_months_years_days_months_years_days_months_years_day\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpeh9iv9cn.rs:51:106\n   |\n\
    51 |     let mut days_months_years_days_months_years_days_months_years_days_months_years_days_months_years_day\n\
    \   |                                                                        \
    \                                  ^ help: add `;` here\n52 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpeh9iv9cn.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeh9iv9cn.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpeh9iv9cn.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpeh9iv9cn.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpeh9iv9cn.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpeh9iv9cn.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpeh9iv9cn.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpeh9iv9cn.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpeh9iv9cn.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() > 1 && date.len() <= 31 &&\n        date.len() <= 29 && date.len()\
    \ > 0 && date.len() <= 12 &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpvs84ab1t.rs:46:1\n\
    \   |\n46 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpvs84ab1t.rs:50:17\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpvs84ab1t.rs:50:25\n \
    \  |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvs84ab1t.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvs84ab1t.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvs84ab1t.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvs84ab1t.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvs84ab1t.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvs84ab1t.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvs84ab1t.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvs84ab1t.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvs84ab1t.rs:55:17\n   |\n55 |     "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmplqp0zvzk.rs:19:45\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                  ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmplqp0zvzk.rs:19:73\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                                              ^^^^^^^^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find function `valid_year` in this\
    \ scope\n  --> /tmp/tmplqp0zvzk.rs:19:103\n   |\n19 |     !date.is_empty() &&\
    \ date.len() == 10 && valid_day(date.as_str()) && valid_month(date.as_str()) &&\
    \ valid_year(date.as_str())\n   |                                            \
    \                                                           ^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplqp0zvzk.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplqp0zvzk.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplqp0zvzk.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplqp0zvzk.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplqp0zvzk.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplqp0zvzk.rs:26:25\n\
    \   |\n26 |"
  stdout: ''
  timestamp: 1659749442

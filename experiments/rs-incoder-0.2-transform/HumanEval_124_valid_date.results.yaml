language: rs
name: HumanEval_124_valid_date
results:
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n\
    \        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpguum83h4.rs:46:1\n\
    \   |\n46 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpguum83h4.rs:50:17\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:50:25\n \
    \  |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpguum83h4.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:55:17\n   |\n55 |     "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    (date.len() >= 2 && date.len() <= 31) &&\n    (date.len() >= 1 && date.len()\
    \ <= 30) &&\n    (date.len() >= 1 && date.len() <= 29) &&\n    (date.len() >=\
    \ 1 && date.len() <= 12) &&\n    (date.len() == date.rfind(\"-\") + 1) &&\n  \
    \  (date.len() == date.rfind(\"/\") + 2)\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvmzmj5yy.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvmzmj5yy.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvmzmj5yy.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvmzmj5yy.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvmzmj5yy.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut years: u32 = 0;\n    let\
    \ mut date_parts_len = date_parts.len();\n    if date_parts_len > 3 {\n      \
    \  date_parts_len -= 3;\n    }\n    for part in date_parts {\n        let mut\
    \ part_str = part.to_string();\n        part_str.trim_left_matches(\"-\");\n \
    \       part_str.trim_right_matches(\"-\");\n        let mut part_parts = part_str.split_whitespace();\n\
    \        days += part_parts[0]\n            .parse::<u32>()\n            .unwrap_or(0);\n\
    \        months += part_parts[1]\n            .parse::<u32>()\n            .unwrap_or(0);\n\
    \        years += part_parts[2]\n            .parse::<u32>()\n            .unwrap_or(0);\n\
    \    }\n    days > 0 && days < 32 && months > 0 && months < 12 && years > 0 &&\
    \ years < 100\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpncyt9ogn.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpncyt9ogn.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpncyt9ogn.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpncyt9ogn.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpncyt9ogn.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpncyt9ogn.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpncyt9ogn.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpncyt9ogn.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpncyt9ogn.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpncyt9ogn.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpncyt9ogn.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 &&\n        date.chars().all(|c| c.is_digit()) &&\n    \
    \    date.chars().all(|c| c != '-') &&\n        date.chars().all(|c| c != '/')\
    \ &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '/') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '-') &&\n        date.chars().all(|c|\
    \ c != '-') &&\n        date.chars().all(|c| c != '\n}\n\nfn main() {\n    let\
    \ candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0762]: unterminated character literal\n  --> /tmp/tmp7n8y23yb.rs:55:35\n\
    \   |\n55 |         date.chars().all(|c| c != '\n   |                        \
    \           ^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0762`.\n"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    date.len() == 10 &&\n    (date.chars().take(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter()\n        .all(|c| c.is_digit()) &&\n    (date.chars().skip(2).collect::<Vec<_>>()\n\
    \        .iter\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmptf92oaup.rs:69:5\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n69 |     (date.chars().skip(2).collect::<Vec<_>>()\n\
    \   |     ^ unclosed delimiter\n70 |         .iter\n71 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptf92oaup.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptf92oaup.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptf92oaup.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptf92oaup.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptf92oaup.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptf92oaup.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptf92oaup.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptf92oaup.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptf92oaup.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in t"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_left();\n    let mut date_str = date_str.trim_right();\n\
    \    let mut date_str = date_str.trim_\n}\n\nfn main() {\n    let candidate =\
    \ valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp38pi0lkk.rs:65:38\n   |\n\
    65 |     let mut date_str = date_str.trim_\n   |                             \
    \         ^ help: add `;` here\n66 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp38pi0lkk.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp38pi0lkk.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp38pi0lkk.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp38pi0lkk.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp38pi0lkk.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp38pi0lkk.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp38pi0lkk.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp38pi0lkk.rs:73:25\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp38pi0lkk.rs:74:17\n  \
    \ |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp38pi0lkk.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\ner"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0762]: unterminated character literal\n  --> /tmp/tmp__ugf6g3.rs:19:1325\n\
    \   |\n19 | ...c| c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c\
    \ <= '\n   |                                                                 \
    \     ^\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0762`.\n"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmplqp0zvzk.rs:19:45\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                  ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmplqp0zvzk.rs:19:73\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                                              ^^^^^^^^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find function `valid_year` in this\
    \ scope\n  --> /tmp/tmplqp0zvzk.rs:19:103\n   |\n19 |     !date.is_empty() &&\
    \ date.len() == 10 && valid_day(date.as_str()) && valid_month(date.as_str()) &&\
    \ valid_year(date.as_str())\n   |                                            \
    \                                                           ^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplqp0zvzk.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplqp0zvzk.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplqp0zvzk.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplqp0zvzk.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplqp0zvzk.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplqp0zvzk.rs:26:25\n\
    \   |\n26 |"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_str =\
    \ date_str.chars().filter(|c| c.is_ascii_digit()).collect::<String>();\n     \
    \   let mut date_str = date_str.to_lowercase();\n        let mut date_str = date_str.chars().filter(|c|\
    \ c.is_ascii_letter()).collect::<String>();\n        let mut date_str = date_str.to_lowercase();\n\
    \        let mut date_str = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n\
    \        let mut date_str = date_str.to_lowercase();\n        let mut date_str\
    \ = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n  \
    \      let mut date_str = date_str.to_lowercase();\n        let mut date_str =\
    \ date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n    \
    \    let mut date_str = date_str.to_lowercase();\n        let mut date_str = date_str.chars().filter(|c|\
    \ c.is_ascii_letter()).collect::<String>();\n        let mut date_str = date_str.to_lowercase();\n\
    \        let mut date_str = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n\
    \        let mut date_str = date_str.to_lowercase();\n        let mut date_str\
    \ = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n  \
    \      let mut date_str = date_str.to_lowercase();\n        let mut date_str =\
    \ date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n    \
    \    let mut date_str = date_str.to_lowercase();\n        let mut date_str = date_str.chars().filter(|c|\
    \ c.is_ascii_letter()).collect::<String>();\n        let mut date_str = date_str.to_lowercase();\n\
    \        let mut date_str = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n\
    \        let mut date_str = date_str.to_lowercase();\n        let mut date_str\
    \ = date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n  \
    \      let mut date_str = date_str.to_lowercase();\n        let mut date_str =\
    \ date_str.chars().filter(|c| c.is_ascii_letter()).collect::<String>();\n    \
    \    let mut date_str = date_str.to_lowercase();\n        let mut date_str = date_str.chars().filter(|c|\
    \ c.is_ascii_letter()).collect::<String>();\n        let mut date_str = date_str.to_lowercase();\n\
    \        let mut date_str = date_\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpitkzhlec.rs:70:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    50 | }\n   | - ...as it matches this but it has different indentation\n...\n70\
    \ | }\n   |   ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmpitkzhlec.rs:49:33\n\
    \   |\n49 |         let mut date_str = date_\n   |                           \
    \      ^ help: add `;` here\n50 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `date_` in this scope\n  --> /tmp/tmpitkzhlec.rs:49:28\n \
    \  |\n49 |         let mut date_str = date_\n   |                            ^^^^^\
    \ help: a local variable with a similar name exists: `date`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpitkzhlec.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpitkzhlec.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpitkzhlec.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpitkzhlec.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpitkzhlec.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpitkzhlec.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpitkzhlec.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n  "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\"/\");\n    let mut date_str = date_str.trim_right_matches(\"\
    /\");\n    let mut date_str = date_str.trim_left_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\".\");\n    let mut date_str = date_str.trim_right_matches(\"\
    .\");\n    let mut date_str = date_str.trim_left_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.trim_left_matches(\"\
    .\");\n    let mut date_str = date_str.trim_right_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\"-\");\n    let mut date_str = date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.trim_left_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\".\");\n    let mut date_str = date_str.trim_right_matches(\"\
    .\");\n    let mut date_str = date_str.trim_left_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.trim_left_matches(\"\
    .\");\n    let mut date_str = date_str.trim_right_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\"-\");\n    let mut date_str = date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.trim_left_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\".\");\n    let mut date_str = date_str.trim_right_matches(\"\
    .\");\n    let mut date_str = date_str.trim_left_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\"-\");\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpatujga81.rs:60:17\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpatujga81.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpatujga81.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpatujga81.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpatujga81.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpatujga81.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpatujga81.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpatujga81.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpatujga81.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpatujga81.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpatujga81.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    !date.len() < 1 &&\n    !date.len() > 31 &&\n    !date.len() < 30 &&\n\
    \    !date.len() > 29 &&\n    !date.len() < 12 &&\n    !date.len() > 12 &&\n \
    \   !date.len() < 10 &&\n    !date.len() > 10 &&\n    !date.len() < 7 &&\n   \
    \ !date.len() > 7 &&\n    !date.len() < 4 &&\n    !date.len() > 4 &&\n    !date.len()\
    \ < 2 &&\n    !date.len() > 2\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4rwl_nj9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4rwl_nj9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4rwl_nj9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4rwl_nj9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    if date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n    if\
    \ date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    if date_parts.len() != 3 {\n        return\
    \ false;\n    }\n    let mu\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n   --> /tmp/tmpk4z5xz_7.rs:112:11\n   \
    \ |\n112 |     let mu\n    |           ^ help: add `;` here\n113 | }\n    | -\
    \ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n \
    \  --> /tmp/tmpk4z5xz_7.rs:117:17\n    |\n117 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpk4z5xz_7.rs:117:25\n    |\n117 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpk4z5xz_7.rs:118:17\n    |\n118 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpk4z5xz_7.rs:118:25\n    |\n118 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpk4z5xz_7.rs:119:17\n    |\n119 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpk4z5xz_7.rs:119:25\n    |\n119 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpk4z5xz_7.rs:120:17\n    |\n120 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpk4z5xz_7.rs:120:25\n    |\n120 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpk4z5xz_7.rs:121:17\n    |\n121 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpk4z5xz_7.rs:121:25\n    |\n121 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut days_parts: Vec<String> = date_parts.split_whitespace();\n    let\
    \ mut months_parts: Vec<String> = date_parts.split_whitespace();\n    let mut\
    \ years_parts: Vec<String> = date_parts.split_whitespace();\n    days_parts.sort();\n\
    \    months_parts.sort();\n    years_parts.sort();\n    let mut days: usize =\
    \ 0;\n    let mut months: usize = 0;\n    let mut years: usize = 0;\n    for part\
    \ in days_parts {\n        days += part.parse::<usize>().unwrap();\n    }\n  \
    \  for part in months_parts {\n        months += part.parse::<usize>().unwrap();\n\
    \    }\n    for part in years_parts {\n        years += part.parse::<usize>().unwrap();\n\
    \    }\n    if days > 31 || months > 12 || years > 30 {\n        return false;\n\
    \    }\n    if months == 1 || months == 3 || months == 5 || months == 7 || months\
    \ == 8 || months == 10 || months == 12 {\n        if days == 31 || days == 30\
    \ {\n            return true;\n        }\n    }\n    if months == 4 || months\
    \ == 6 || months == 9 || months == 11 {\n        if days == 29 {\n           \
    \ return true;\n        }\n    }\n    if months == 2 {\n        if days == 29\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjznw7tlv.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjznw7tlv.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjznw7tlv.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjznw7tlv.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjznw7tlv.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjznw7tlv.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjznw7tlv.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjznw7tlv.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjznw7tlv.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjznw7tlv.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjznw7tlv.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days_str\
    \ = date_parts[0];\n    let mut months_str = date_parts[1];\n    let mut years_str\
    \ = date_parts[2];\n    days_str.trim_left_matches(\"-\");\n    months_str.trim_left_matches(\"\
    -\");\n    years_str.trim_left_matches(\"-\");\n    let mut days: u32;\n    let\
    \ mut months: u32;\n    let mut years: u32;\n    let mut days_parts: Vec<&str>\
    \ = days_str.split_whitespace();\n    let mut months_parts: Vec<&str> = months_str.split_whitespace();\n\
    \    let mut years_parts: Vec<&str> = years_str.split_whitespace();\n    if days_parts.len()\
    \ != 3 || months_parts.len() != 3 || years_parts.len() != 3 {\n        return\
    \ false;\n    }\n    days_parts[0] = days_parts[0].to_owned();\n    months_parts[0]\
    \ = months_parts[0].to_owned();\n    years_parts[0] = years_parts[0].to_owned();\n\
    \    days_parts[1] = days_parts[1].to_owned();\n    months_parts[1] = months_parts[1].to_owned();\n\
    \    years_parts[1] = years_parts[1].to_owned();\n    days_parts[2] = days_parts[2].to_owned();\n\
    \    months_parts[2] = months_parts[2].to_owned();\n    years_parts[2] = years_parts[2].to_owned();\n\
    \    days = days_parts[0].parse().unwrap();\n    months = months_parts[0].parse().unwrap();\n\
    \    years = years_parts[0].parse().unwrap();\n    if days_parts[1].len() != 1\
    \ || months_parts[1].len() != 1 || years_parts[1].len() != 1 {\n        return\
    \ false;\n    }\n    if days_parts[1].parse().unwrap() > 31 || months_parts[1].parse().unwrap()\
    \ > 12 || years_parts[1].parse().unwrap() > 31 {\n        return false;\n    }\n\
    \    if days_parts[2].len() != 2 || months_parts[2].len() != 2 || years_parts[2].len()\
    \ != 2 {\n        return false;\n    }\n    if days_parts[2].parse().unwrap()\
    \ > 31 || months_parts[2].parse().unwrap() > 12 || years_parts[2].parse().unwrap()\
    \ > 30 {\n        return false;\n    }\n}\n\nfn main() {\n    let candidate =\
    \ valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjntgwtts.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjntgwtts.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjntgwtts.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjntgwtts.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjntgwtts.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjntgwtts.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjntgwtts.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjntgwtts.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjntgwtts.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjntgwtts.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjntgwtts.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap()\
    \ > 0 &&\n    date_str.parse::<usize>().unwrap() <= 31 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 30 &&\n    date_str.parse::<usize>().unwrap() <= 29 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 12 &&\n    date_str.parse::<usize>().unwrap() >= 1 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 31\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvwvjjf24.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && date.chars().all(|c| c.is_digit(10)) && date.chars().all(|c|\
    \ c != '-') && date.chars().all(|c| c != '/') && date.chars().all(|c| c != '-')\
    \ && date.chars().all(|c| c != '/')\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsrh0jp4m.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsrh0jp4m.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsrh0jp4m.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:27:25\n   |\n27 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:28:17\n  \
    \ |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsrh0jp4m.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsrh0jp4m.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n    let mut date_parts = date_parts.split_whitespace();\n\
    \    let mut date_parts = date_parts.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_whitespace();\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpthejb1fm.rs:70:17\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpthejb1fm.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpthejb1fm.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpthejb1fm.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpthejb1fm.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpthejb1fm.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpthejb1fm.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpthejb1fm.rs:73:25\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpthejb1fm.rs:74:17\n  \
    \ |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpthejb1fm.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpthejb1fm.rs:75:17\n   |\n75 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n\
    \        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpguum83h4.rs:46:1\n\
    \   |\n46 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpguum83h4.rs:50:17\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:50:25\n \
    \  |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpguum83h4.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:55:17\n   |\n55 |     "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp_r67k_7q.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                       ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmp_r67k_7q.rs:19:51\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                                                   ^^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_r67k_7q.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_r67k_7q.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_r67k_7q.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_r67k_7q.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_r67k_7q.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmplgv_1zqb.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                       ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmplgv_1zqb.rs:19:51\n   |\n19 |     date.len() > 0 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                        ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmplgv_1zqb.rs:19:81\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                        ^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplgv_1zqb.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplgv_1zqb.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplgv_1zqb.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplgv_1zqb.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplgv_1zqb.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplgv_1zqb.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut years: u32 = 0;\n    for\
    \ part in date_parts {\n        let mut part_str = part.to_string();\n       \
    \ part_str.trim_left_matches(\"-\");\n        part_str.trim_right_matches(\"-\"\
    );\n        let mut part_parts = part_str.split_whitespace();\n        let mut\
    \ part_days: u32 = 0;\n        let mut part_months: u32 = 0;\n        let mut\
    \ part_years: u32 = 0;\n        for part in part_parts {\n            if part.len()\
    \ > 0 {\n                match part.chars().next() {\n                    '0'\
    \ => part_months += 1,\n                    '1' => part_days += 1,\n         \
    \           '2' => part_years += 1,\n                    '3' => part_months +=\
    \ 1,\n                    '4' => part_days += 1,\n                    '5' => part_years\
    \ += 1,\n                    '6' => part_months += 1,\n                    '7'\
    \ => part_days += 1,\n                    '8' => part_years += 1,\n          \
    \          '9' => part_months += 1,\n                    '10' => part_days +=\
    \ 1,\n                    '11' => part_years += 1,\n                    '12' =>\
    \ part_months += 1,\n                    '13' => part_days += 1,\n           \
    \         '14' => part_years += 1,\n                    '15' => part_months +=\
    \ 1,\n                    '16' => part_days += 1,\n                    '17' =>\
    \ part_years += 1,\n                    '18' => part_months += 1,\n          \
    \          '19' => part_days += 1,\n                    '20' => part_years +=\
    \ 1,\n                    '21' => part_months += 1,\n                    '22'\
    \ => part_days += 1,\n                    '23' => part_years += 1,\n         \
    \           '24' => part_months += 1,\n                    '25' => part_days +=\
    \ 1,\n                    '26' => part_years += 1,\n                    '27' =>\
    \ part_months += 1,\n                    '28' => part_days += 1,\n           \
    \         '29' => part_years += 1,\n                    '30' => part_months +=\
    \ 1,\n                    '31' => part_days += 1,\n                    _ => (),\n\
    \                }\n            }\n        }\n        days += part_days;\n   \
    \     months += part_months;\n        years += part_years;\n    }\n    days >\
    \ 0 && months > 0 && years > 0 && days > 31 && months > 12 && years > 0 && days\
    \ > 29 && months > 12\n}\n\nfn main() {\n    let candidate = valid_date;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: character literal may only contain one codepoint\n  --> /tmp/tmpyfx5owdu.rs:47:21\n\
    \   |\n47 |                     '10' => part_days += 1,\n   |                \
    \     ^^^^\n   |\nhelp: if you meant to write a `str` literal, use double quotes\n\
    \   |\n47 |                     \"10\" => part_days += 1,\n   |              \
    \       ~~~~\n\nerror: character literal may only contain one codepoint\n  -->\
    \ /tmp/tmpyfx5owdu.rs:48:21\n   |\n48 |                     '11' => part_years\
    \ += 1,\n   |                     ^^^^\n   |\nhelp: if you meant to write a `str`\
    \ literal, use double quotes\n   |\n48 |                     \"11\" => part_years\
    \ += 1,\n   |                     ~~~~\n\nerror: character literal may only contain\
    \ one codepoint\n  --> /tmp/tmpyfx5owdu.rs:49:21\n   |\n49 |                 \
    \    '12' => part_months += 1,\n   |                     ^^^^\n   |\nhelp: if\
    \ you meant to write a `str` literal, use double quotes\n   |\n49 |          \
    \           \"12\" => part_months += 1,\n   |                     ~~~~\n\nerror:\
    \ character literal may only contain one codepoint\n  --> /tmp/tmpyfx5owdu.rs:50:21\n\
    \   |\n50 |                     '13' => part_days += 1,\n   |                \
    \     ^^^^\n   |\nhelp: if you meant to write a `str` literal, use double quotes\n\
    \   |\n50 |                     \"13\" => part_days += 1,\n   |              \
    \       ~~~~\n\nerror: character literal may only contain one codepoint\n  -->\
    \ /tmp/tmpyfx5owdu.rs:51:21\n   |\n51 |                     '14' => part_years\
    \ += 1,\n   |                     ^^^^\n   |\nhelp: if you meant to write a `str`\
    \ literal, use double quotes\n   |\n51 |                     \"14\" => part_years\
    \ += 1,\n   |                     ~~~~\n\nerror: character literal may only contain\
    \ one codepoint\n  --> /tmp/tmpyfx5owdu.rs:52:21\n   |\n52 |                 \
    \    '15' => part_months += 1,\n   |                     ^^^^\n   |\nhelp: if\
    \ you meant to write a `str` literal, use double quotes\n   |\n52 |          \
    \           \"15\" => part_months += 1,\n   |                     ~~~~\n\nerror:\
    \ character literal may only contain one codepoint\n  --> /tmp/tmpyfx5owdu.rs:53:2"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n\
    \        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpguum83h4.rs:46:1\n\
    \   |\n46 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpguum83h4.rs:50:17\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:50:25\n \
    \  |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpguum83h4.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:55:17\n   |\n55 |     "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.split_whitespace();\n    date_str.sort();\n\
    \    let mut days: u32 = 0;\n    let mut months: u32 = 0;\n    let mut years:\
    \ u32 = 0;\n    let mut date_str: Vec<String> = date_str.to_vec();\n    date_str.iter().for_each(|&x|\
    \ {\n        if x.parse::<u32>().is_err() {\n            return false;\n     \
    \   }\n        days += x;\n    });\n    date_str.iter().for_each(|&x| {\n    \
    \    if x.parse::<u32>().is_err() {\n            return false;\n        }\n  \
    \      months += x;\n    });\n    date_str.iter().for_each(|&x| {\n        if\
    \ x.parse::<u32>().is_err() {\n            return false;\n        }\n        years\
    \ += x;\n    });\n    if days > 31 || months > 12 || years > 30 {\n        return\
    \ false;\n    }\n    if months == 1 || months == 3 || months == 5 || months ==\
    \ 7 || months == 8 || months == 10 || months == 12 {\n        if days == 31 ||\
    \ days == 30 {\n            return true;\n        }\n    }\n    if months == 4\
    \ || months == 6 || months == 9 || months == 11 {\n        if days == 29 {\n \
    \           return true;\n        }\n    }\n    if months == 2 {\n        if days\
    \ == 29 {\n            return true;\n        }\n    }\n    return false;\n}\n\n\
    fn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:69:17\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdqxsgd_x.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdqxsgd_x.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdqxsgd_x.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdqxsgd_x.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdqxsgd_x.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<Date>().is_ok()\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `Date` in this scope\n  --> /tmp/tmp68zjkgcz.rs:21:22\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |              - help: you\
    \ might be missing a type parameter: `<Date>`\n...\n21 |     date_str.parse::<Date>().is_ok()\n\
    \   |                      ^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68zjkgcz.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:25\n\
    \   "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && valid_month(date.as_str()) && valid_day(date.as_str())\
    \ && valid_year(date.as_str())\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_month` in this scope\n  --> /tmp/tmpvltk2zlp.rs:19:45\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_month(date.as_str())\
    \ && valid_day(date.as_str()) && valid_year(date.as_str())\n   |             \
    \                                ^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_day` in this scope\n  --> /tmp/tmpvltk2zlp.rs:19:75\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_month(date.as_str())\
    \ && valid_day(date.as_str()) && valid_year(date.as_str())\n   |             \
    \                                                              ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_year` in this scope\n\
    \  --> /tmp/tmpvltk2zlp.rs:19:103\n   |\n19 |     !date.is_empty() && date.len()\
    \ == 10 && valid_month(date.as_str()) && valid_day(date.as_str()) && valid_year(date.as_str())\n\
    \   |                                                                        \
    \                               ^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvltk2zlp.rs:24:17\n  \
    \ |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvltk2zlp.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvltk2zlp.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvltk2zlp.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvltk2zlp.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvltk2zlp.rs:26:25\n   |\n26"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_parts\
    \ = date_str.split_whitespace();\n        let mut days_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut months_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut years_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut days: u32 = 0;\n        let mut months: u32 = 0;\n        let\
    \ mut years: u32 = 0;\n        let mut days_part: &str = days_parts[0];\n    \
    \    let mut months_part: &str = months_parts[0];\n        let mut years_part:\
    \ &str = years_parts[0];\n        let mut days_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut months_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut years_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut days_part: &str = days_parts[0];\n        let mut months_part:\
    \ &str = months_parts[0];\n        let mut years_part: &str = years_parts[0];\n\
    \        let mut days_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut months_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut years_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut days_part: &str = days_parts[0];\n        let mut months_part:\
    \ &str = months_parts[0];\n        let mut years_part: &str = years_parts[0];\n\
    \        let mut days_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut months_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut years_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut days_part: &str = days_parts[0];\n        let mut months_part:\
    \ &str = months_parts[0];\n        let mut years_part: &str = years_parts[0];\n\
    \        let mut days_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \        let mut months_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpwasr60xf.rs:71:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    51 | }\n   | - ...as it matches this but it has different indentation\n...\n71\
    \ | }\n   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwasr60xf.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwasr60xf.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwasr60xf.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwasr60xf.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwasr60xf.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwasr60xf.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwasr60xf.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwasr60xf.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwasr60xf.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                         ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:19:53\n   |\n19 |     !date.is_empty() && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                          ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:83\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                          ^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7szrmq88.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find v"
  stdout: ''
  timestamp: 1659800297
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut month\
    \ = date_parts[0].parse().unwrap();\n    let mut day = date_parts[1].parse().unwrap();\n\
    \    let mut year = date_parts[2].parse().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if day < 1 || day > 31 {\n       \
    \ return false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n\
    \    }\n    if month == 4 && day > 30 {\n        return false;\n    }\n    if\
    \ month == 6 && day > 31 {\n        return false;\n    }\n    if month == 9 &&\
    \ day > 31 {\n        return false;\n    }\n    if month == 11 && day > 30 {\n\
    \        return false;\n    }\n    if month == 1 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 3 && day > 31 {\n        return false;\n    }\n\
    \    if month == 5 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 7 && day > 31 {\n        return false;\n    }\n    if month == 8 && day > 31\
    \ {\n        return false;\n    }\n    if month == 10 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 12 && day > 31 {\n        return false;\n   \
    \ }\n    if month == 1 && day > 30 {\n        return false;\n    }\n    if month\
    \ == 3 && day > 30 {\n        return false;\n    }\n    if month == 5 && day >\
    \ 30 {\n        return false;\n    }\n    if month == 7 && day > 30 {\n      \
    \  return false;\n    }\n    if month == 8 && day > 30 {\n        return false;\n\
    \    }\n    if month == 10 && day > 30 {\n        return false;\n    }\n    if\
    \ month == 12 && day > 30 {\n        return false;\n    }\n    if month == 1 &&\
    \ day > 29 {\n        return false;\n    }\n    if month == 3 && day > 29 {\n\
    \        return false;\n    }\n    if month == 5 && day > 29 {\n        return\
    \ false;\n    }\n    if month == 7 && day > 29 {\n        return false;\n    }\n\
    \    if month == 8 && day > 29 {\n        return false;\n    }\n    if month ==\
    \ 10 && day > 29 {\n        return false;\n    }\n    if month == 12 && day >\
    \ 29 {\n        return false;\n    }\n    if month == 1 && day > 28 {\n      \
    \  return false;\n    }\n    if month == 3 && day > 28 {\n        return false;\n\
    \    }\n    if month == 5 && day > 28 {\n        return false;\n    }\n    if\
    \ month == 7 && day > 28 {\n        return false;\n    }\n    if month == 8 &&\
    \ day > 28 {\n        return false;\n    }\n    if month == 10 && day > 28\n}\n\
    \nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n   --> /tmp/tmpckoitfo4.rs:126:1\n    |\n\
    125 |     if month == 10 && day > 28\n    |     -- this `if` expression has a\
    \ condition, but no block\n126 | }\n    | ^ expected `{`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n   --> /tmp/tmpckoitfo4.rs:130:17\n    |\n\
    130 |     assert_eq!({left}, {right});\n    |                 ^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find value `right` in this scope\n   -->\
    \ /tmp/tmpckoitfo4.rs:130:25\n    |\n130 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpckoitfo4.rs:131:17\n\
    \    |\n131 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpckoitfo4.rs:131:25\n    |\n131 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpckoitfo4.rs:132:17\n\
    \    |\n132 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpckoitfo4.rs:132:25\n    |\n132 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpckoitfo4.rs:133:17\n\
    \    |\n133 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpckoitfo4.rs:133:25\n    |\n133 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpckoitfo4.rs:134:17\n\
    \    |\n134 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpckoitfo4.rs:134:25\n    |\n134 |     assert_eq!({left}, {right});\n\
    \    |             "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_split\
    \ = date_str.split_at(3);\n        let mut date_split_2 = date_split.split_at(2);\n\
    \        let mut date_split_3 = date_split_2.split_at(2);\n        let mut date_split_4\
    \ = date_split_3.split_at(2);\n        let mut date_split_5 = date_split_4.split_at(2);\n\
    \        let mut date_split_6 = date_split_5.split_at(2);\n        let mut date_split_7\
    \ = date_split_6.split_at(2);\n        let mut date_split_8 = date_split_7.split_at(2);\n\
    \        let mut date_split_9 = date_split_8.split_at(2);\n        let mut date_split_10\
    \ = date_split_9.split_at(2);\n        let mut date_split_11 = date_split_10.split_at(2);\n\
    \        let mut date_split_12 = date_split_11.split_at(2);\n        let mut date_split_13\
    \ = date_split_12.split_at(2);\n        let mut date_split_14 = date_split_13.split_at(2);\n\
    \        let mut date_split_15 = date_split_14.split_at(2);\n        let mut date_split_16\
    \ = date_split_15.split_at(2);\n        let mut date_split_17 = date_split_16.split_at(2);\n\
    \        let mut date_split_18 = date_split_17.split_at(2);\n        let mut date_split_19\
    \ = date_split_18.split_at(2);\n        let mut date_split_20 = date_split_19.split_at(2);\n\
    \        let mut date_split_21 = date_split_20.split_at(2);\n        let mut date_split_22\
    \ = date_split_21.split_at(2);\n        let mut date_split_23 = date_split_22.split_at(2);\n\
    \        let mut date_split_24 = date_split_23.split_at(2);\n        let mut date_split_25\
    \ = date_split_24.split_at(2);\n        let mut date_split_26 = date_split_25.split_at(2);\n\
    \        let mut date_split_27 = date_split_26.split_at(2);\n        let mut date_split_28\
    \ = date_split_27.split_at(2);\n        let mut date_split_29 = date_split_28.split_at(2);\n\
    \        let mut date_split_30 = date_split_29.split_at(2);\n        let mut date_split_31\
    \ = date_split_30.split_at(2);\n        let mut date_split_32 = date_split_31.split_at(2);\n\
    \        let mut date_split_33 = date_split_32.split_at(2);\n        let mut date_split_34\
    \ = date_split_33.split_at(2);\n        let mut date_split_35 = date_split_34.split_at(2);\n\
    \        let mut date_split_36 = date_split_35.split_at(2);\n        let mut date_split_37\
    \ = \n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpncj2j8ug.rs:78:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    58 | }\n   | - ...as it matches this but it has different indentation\n...\n78\
    \ | }\n   |   ^\n\nerror: expected expression, found `}`\n  --> /tmp/tmpncj2j8ug.rs:58:1\n\
    \   |\n58 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpncj2j8ug.rs:62:17\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpncj2j8ug.rs:62:25\n \
    \  |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpncj2j8ug.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpncj2j8ug.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpncj2j8ug.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpncj2j8ug.rs:64:25\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpncj2j8ug.rs:65:17\n  \
    \ |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpncj2j8ug.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpncj2j8ug"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    let mut date_components = date.split_whitespace();\n\
    \    let mut year = date_components[0];\n    let mut month = date_components[1];\n\
    \    let mut day = date_components[2];\n    let mut date_components_len = date_components.len();\n\
    \    let mut days_in_month = [31,28,31,30,31,30,31,30,31,30,31,30];\n    let mut\
    \ days_in_month_leap = [31,29,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap2\
    \ = [29,30,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap3 =\
    \ [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap4 = [31,30,31,30,31,30,31,30,31,30,31,30];\n\
    \    let mut days_in_month_leap5 = [31,30,31,30,31,30,31,30,31,30,31,30];\n  \
    \  let mut days_in_month_leap6 = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let\
    \ mut days_in_month_leap7 = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut\
    \ days_in_month_leap8 = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap9\
    \ = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap10 =\
    \ [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap11 = [31,30,31,30,31,30,31,30,31,30,31,30];\n\
    \    let mut days_in_month_leap12 = [31,30,31,30,31,30,31,30,31,30,31,30];\n \
    \   let mut days_in_month_leap13 = [31,30,31,30,31,30,31,30,31,30,31,30];\n  \
    \  let mut days_in_month_leap14 = [31,30,31,30,31,30,31,30,31,30,31,30];\n   \
    \ let mut days_in_month_leap15 = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let\
    \ mut days_in_month_leap16 = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut\
    \ days_in_month_leap17 = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut days_in_month_leap18\
    \ = [31,30,31,30,31,30,31,30,31,30,31,30];\n    let mut \n}\n\nfn main() {\n \
    \   let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpwszeqcvx.rs:45:1\n\
    \   |\n45 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpwszeqcvx.rs:49:17\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpwszeqcvx.rs:49:25\n \
    \  |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwszeqcvx.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwszeqcvx.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwszeqcvx.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwszeqcvx.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwszeqcvx.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwszeqcvx.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwszeqcvx.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwszeqcvx.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwszeqcvx.rs:54:17\n   |\n54 |     "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    date.len() == 10 &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"-\") &&\n    !\n}\n\
    \nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpcxq5g4ga.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpcxq5g4ga.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpcxq5g4ga.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcxq5g4ga.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcxq5g4ga.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcxq5g4ga.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcxq5g4ga.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcxq5g4ga.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcxq5g4ga.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcxq5g4ga.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcxq5g4ga.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcxq5g4ga.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut months_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut years_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    days_parts[0] =\
    \ days_parts[0].to_owned();\n    months_parts[0] = months_parts[0].to_owned();\n\
    \    years_parts[0] = years_parts[0].to_owned();\n    if days_parts[0].is_empty()\
    \ {\n        return false;\n    }\n    if months_parts[0].is_empty() {\n     \
    \   return false;\n    }\n    if years_parts[0].is_empty() {\n        return false;\n\
    \    }\n    if days_parts[0] == \"31\" {\n        return false;\n    }\n    if\
    \ days_parts[0] == \"30\" {\n        return false;\n    }\n    if days_parts[0]\
    \ == \"29\" {\n        return false;\n    }\n    if months_parts[0] == \"12\"\
    \ {\n        return false;\n    }\n    if months_parts[0] == \"11\" {\n      \
    \  return false;\n    }\n    if months_parts[0] == \"10\" {\n        return false;\n\
    \    }\n    if months_parts[0] == \"9\" {\n        return false;\n    }\n    if\
    \ months_parts[0] == \"8\" {\n        return false;\n    }\n    if months_parts[0]\
    \ == \"7\" {\n        return false;\n    }\n    if months_parts[0] == \"6\" {\n\
    \        return false;\n    }\n    if months_parts[0] == \"5\" {\n        return\
    \ false;\n    }\n    if months_parts[0] == \"4\" {\n        return false;\n  \
    \  }\n    if months_parts[0] == \"3\" {\n        return false;\n    }\n    if\
    \ months_parts[0] == \"2\" {\n        return false;\n    }\n    if months_parts[0]\
    \ == \"1\" {\n        return false;\n    }\n    if months_parts[0] == \"0\" {\n\
    \        return false;\n    }\n    if days_parts[0] == \"31\" {\n        return\
    \ false;\n    }\n    if days_parts[0] == \"30\" {\n        return false;\n   \
    \ }\n    if days_parts[0] == \"29\" {\n        return false;\n    }\n    if days_parts[0]\
    \ == \"28\" {\n        return false;\n    }\n    if days_parts[0] == \"27\" {\n\
    \        return false;\n    }\n    if days_parts[0] == \"26\" {\n        return\
    \ false;\n    }\n    if days_parts[0] == \"25\" {\n        return false;\n   \
    \ }\n    if days_parts[0] == \"24\" {\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpfbv98jst.rs:128:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n...\n107 |     if days_parts[0] == \"\
    24\" {\n    |                              - this delimiter might not be properly\
    \ closed...\n108 | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n128 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \   --> /tmp/tmpfbv98jst.rs:112:17\n    |\n112 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpfbv98jst.rs:112:25\n    |\n112 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpfbv98jst.rs:113:17\n    |\n113 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpfbv98jst.rs:113:25\n    |\n113 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpfbv98jst.rs:114:17\n    |\n114 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpfbv98jst.rs:114:25\n    |\n114 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpfbv98jst.rs:115:17\n    |\n115 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpfbv98jst.rs:115:25\n    |\n115 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpfbv98jst.rs:116:17\n    |\n116 |     assert_eq!({left}, {"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    let mut date_parts =\
    \ date_str.split_whitespace();\n    let mut days: u32 = 0;\n    let mut months:\
    \ u32 = 0;\n    let mut years: u32 = 0;\n    let mut days_in_month: u32 = 0;\n\
    \    let mut days_in_year: u32 = 0;\n    let mut days_in_month_in_year: u32 =\
    \ 0;\n    let mut days_in_year_in_year: u32 = 0;\n    let mut days_in_month_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year: u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year: u32 = 0;\n    let\
    \ mut days_in_month_in_year_in_year_in_year_in_year: u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa3aq8x5j.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa3aq8x5j.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa3aq8x5j.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa3aq8x5j.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa3aq8x5j.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && date.chars().all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) && date.chars().take(2).all(|c| c.is_digit()) &&\n        date.chars().take(2).all(\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmp8wvgcaj4.rs:35:33\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n35 |       \
    \  date.chars().take(2).all(\n   |                                 ^ unclosed\
    \ delimiter\n36 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8wvgcaj4.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8wvgcaj4.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8wvgcaj4.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8wvgcaj4.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8wvgcaj4.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8wvgcaj4.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8wvgcaj4.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8wvgcaj4.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8wvgcaj4.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in thi"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        date_str.trim_left_matches(\"\
    -\");\n        date_str.trim_right_matches(\"-\");\n        let mut date_parts\
    \ = date_str.split_whitespace();\n        let months = date_parts[0].parse::<usize>().unwrap();\n\
    \        let days = date_parts[1].parse::<usize>().unwrap();\n        let year\
    \ = date_parts[2].parse::<usize>().unwrap();\n        let mut valid_date = false;\n\
    \        if months == 1 && days == 1 && year == 2000 {\n            valid_date\
    \ = true;\n        }\n        if months == 4 && days == 1 && year == 2040 {\n\
    \            valid_date = true;\n        }\n        if months == 6 && days ==\
    \ 1 && year == 2020 {\n            valid_date = true;\n        }\n        if months\
    \ == 6 && days == 1 && year == 2020 {\n            valid_date = true;\n      \
    \  }\n        if months == 6 && days == 1 && year == 2020 {\n            valid_date\
    \ = true;\n        }\n        if months == 6 && days == 1 && year == 2020 {\n\
    \            valid_date = true;\n        }\n        if months == 6 && days ==\
    \ 1 && year == 2020 {\n            valid_date = true;\n        }\n        if months\
    \ == 6 && days == 1 && year == 2020 {\n            valid_date = true;\n      \
    \  }\n        if months == 6 && days == 1 && year == 2020 {\n            valid_date\
    \ = true;\n        }\n        if months == 6 && days == 1 && year == 2020 {\n\
    \            valid_date = true;\n        }\n        if months == 6 && days ==\
    \ 1 && year == 2020 {\n            valid_date = true;\n        }\n        if months\
    \ == 6 && days == 1 && year == 2020 {\n            valid_date = true;\n      \
    \  }\n        if months == 6 && days == 1 && year == 2020 {\n            valid_date\
    \ = true;\n        }\n        if months == 6 && days == 1 && year == 2020 {\n\
    \            valid_date = true;\n        }\n        if months == 6 && days ==\
    \ 1 && year == 2020 {\n            valid_date = true;\n        }\n        if months\
    \ == 6 && days == 1 && year == 2020 {\n            valid_date = true;\n      \
    \  }\n        if months == 6 && days == 1 && year == 2020 {\n            valid_date\
    \ = true;\n        }\n        if months == 6 && days == 1 && year == 2020 {\n\
    \            valid_date = true;\n        }\n        if months == 6 && days ==\
    \ 1 && year == 2020 {\n            valid_date = true;\n        }\n        if months\
    \ == 6 && days == 1 && year == 2020 {\n            valid_date = true;\n      \
    \  }\n        if months == 6 && days == 1 && year == 2020 {\n\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpk1vn6tdh.rs:110:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n19  |     if !date.is_empty() {\n   \
    \ |                         - unclosed delimiter\n...\n88  |         if months\
    \ == 6 && days == 1 && year == 2020 {\n    |                                 \
    \                    - this delimiter might not be properly closed...\n89  | \n\
    90  | }\n    | - ...as it matches this but it has different indentation\n...\n\
    110 | }\n    |   ^\n\nerror[E0434]: can't capture dynamic environment in a fn\
    \ item\n  --> /tmp/tmpk1vn6tdh.rs:93:21\n   |\n93 |     let candidate = valid_date;\n\
    \   |                     ^^^^^^^^^^\n   |\n   = help: use the `|| { ... }` closure\
    \ form instead\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpk1vn6tdh.rs:94:17\n   |\n94 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpk1vn6tdh.rs:94:25\n   |\n94 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpk1vn6tdh.rs:95:17\n  \
    \ |\n95 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpk1vn6tdh.rs:95:25\n   |\n95 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpk1vn6tdh.rs:96:17\n   |\n96 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpk1vn6tdh.rs:96:25\n\
    \   |\n96 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpk1vn6tdh.rs:97:17\n   |\n97 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found i"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut year: u32 = 0;\n    let\
    \ mut day: u32 = 0;\n    let mut month: u32 = 0;\n    let mut years: u32 = 0;\n\
    \    let mut days_in_month: u32 = 0;\n    let mut days_in_year: u32 = 0;\n   \
    \ let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let\
    \ mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut\
    \ days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years:\
    \ u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32\
    \ = 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 =\
    \ 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n\
    \    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n \
    \   let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n  \
    \  let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n   \
    \ let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let\
    \ mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut\
    \ days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months:\
    \ u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32\
    \ = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 =\
    \ 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n\
    \    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n \
    \   let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n  \
    \  let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n   \
    \ let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let\
    \ mut days_in_years: \n}\n\nfn main() {\n    let candidate = valid_date;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected type, found `}`\n  --> /tmp/tmpqa7uau_n.rs:72:1\n   |\n\
    71 |     let mut days_in_years: \n   |         ----------------- while parsing\
    \ the type for `mut days_in_years`\n72 | }\n   | ^ expected type\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqa7uau_n.rs:76:17\n  \
    \ |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqa7uau_n.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqa7uau_n.rs:77:17\n   |\n77 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqa7uau_n.rs:77:25\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqa7uau_n.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqa7uau_n.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqa7uau_n.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqa7uau_n.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqa7uau_n.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqa7uau_n.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\n"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                         ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:19:53\n   |\n19 |     !date.is_empty() && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                          ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:83\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                          ^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7szrmq88.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find v"
  stdout: ''
  timestamp: 1659800297
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\n\
    \        && date.len() == 10\n        && date.chars().all(|c| c.is_digit(10))\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmprajd0bvf.rs:47:1\n   |\n47\
    \ | }\n   | ^\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprajd0bvf.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprajd0bvf.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprajd0bvf.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprajd0bvf.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprajd0bvf.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprajd0bvf.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprajd0bvf.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprajd0bvf.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprajd0bvf.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprajd0bvf.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprajd0bvf.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    date.trim_left_matches('-');\n    date.trim_right_matches('-');\n\
    \    let mut year = date.trim_left_matches('-').to_owned();\n    let mut month\
    \ = date.trim_right_matches('-').to_owned();\n    let mut day = date.trim_left_matches('-').to_owned();\n\
    \    let mut days: u32;\n    let mut months: u32;\n    let mut years: u32;\n \
    \   let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv8ubi_ni.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv8ubi_ni.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv8ubi_ni.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv8ubi_ni.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv8ubi_ni.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    date.len() == 10 &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !\n}\n\
    \nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmp5zon9xv0.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp5zon9xv0.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp5zon9xv0.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5zon9xv0.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5zon9xv0.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5zon9xv0.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5zon9xv0.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5zon9xv0.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5zon9xv0.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5zon9xv0.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5zon9xv0.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5zon9xv0.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() > 1 && date.len() <= 31 &&\n        date.len() > 1 && date.len()\
    \ <= 30 &&\n        date.len() > 1 && date.len() <= 29 &&\n        date.len()\
    \ > 1 && date.len() <= 12 && date.len() <= 12 && date.len() <= 12 && date.len()\
    \ <= 12\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:27:17\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn9mmp5_7.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn9mmp5_7.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn9mmp5_7.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn9mmp5_7.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn9mmp5_7.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_ascii_digit()) &&\n\
    \    !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.\n}\n\nfn main() {\n \
    \   let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `)`\n  --> /tmp/tmpdoo1lep6.rs:50:1\n   |\n50\
    \ | }\n   | ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpdoo1lep6.rs:49:22\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n49 |     !date.chars().any(|c|\
    \ !c.\n   |                      ^ unclosed delimiter\n50 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdoo1lep6.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdoo1lep6.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdoo1lep6.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdoo1lep6.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdoo1lep6.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdoo1lep6.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdoo1lep6.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdoo1lep6.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdoo1lep6.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not fo"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    let mut date_str_split = date_str.split_at(3);\n\
    \    let mut date_str_split_2 = date_str_split.split_at(2);\n    let mut date_str_split_3\
    \ = date_str_split_2.split_at(2);\n    let mut date_str_split_4 = date_str_split_3.split_at(2);\n\
    \    let mut date_str_split_5 = date_str_split_4.split_at(2);\n    let mut date_str_split_6\
    \ = date_str_split_5.split_at(2);\n    let mut date_str_split_7 = date_str_split_6.split_at(2);\n\
    \    let mut date_str_split_8 = date_str_split_7.split_at(2);\n    let mut date_str_split_9\
    \ = date_str_split_8.split_at(2);\n    let mut date_str_split_10 = date_str_split_9.split_at(2);\n\
    \    let mut date_str_split_11 = date_str_split_10.split_at(2);\n    let mut date_str_split_12\
    \ = date_str_split_11.split_at(2);\n    let mut date_str_split_13 = date_str_split_12.split_at(2);\n\
    \    let mut date_str_split_14 = date_str_split_13.split_at(2);\n    let mut date_str_split_15\
    \ = date_str_split_14.split_at(2);\n    let mut date_str_split_16 = date_str_split_15.split_at(2);\n\
    \    let mut date_str_split_17 = date_str_split_16.split_at(2);\n    let mut date_str_split_18\
    \ = date_str_split_17.split_at(2);\n    let mut date_str_split_19 = date_str_split_18.split_at(2);\n\
    \    let mut date_str_split_20 = date_str_split_19.split_at(2);\n    let mut date_str_split_21\
    \ = date_str_split_20.split_at(2);\n    let mut date_str_split_22 = date_str_split_21.split_at(2);\n\
    \    let mut date_str_split_23 = date_str_split_22.split_at(2);\n    let mut date_str_split_24\
    \ = date_str_split_23.split_at(2);\n    let mut date_str_split_25 = date_str_split_24.split_at(2);\n\
    \    let mut date_str_split_26 = date_str_split_25.split_at(2);\n    let mut date_str_split_27\
    \ = date_str_split_26.split_at(2);\n    let mut date_str_split_28 = date_str_split_27.split_at(2);\n\
    \    let mut date_str_split_29 = date_str_split_28.split_at(2);\n    let mut date_str_split_30\
    \ = date_str_split_29.split_at(2);\n    let mut date_str_split_31 = date_str_split_30.split_at(2);\n\
    \    let mut date_str_split_32 = date_str_split_31.split_at(2);\n    let mut date_str_split_33\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpgwxbxpay.rs:52:30\n   |\n\
    52 |     let mut date_str_split_33\n   |                              ^ help:\
    \ add `;` here\n53 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpgwxbxpay.rs:57:17\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpgwxbxpay.rs:57:25\n \
    \  |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgwxbxpay.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgwxbxpay.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgwxbxpay.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgwxbxpay.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgwxbxpay.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgwxbxpay.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgwxbxpay.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgwxbxpay.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cann"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_date_range(date) && valid_month(date) && valid_day(date)\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_date_range` in this scope\n \
    \ --> /tmp/tmpgyuokuad.rs:19:25\n   |\n19 |     !date.is_empty() && valid_date_range(date)\
    \ && valid_month(date) && valid_day(date)\n   |                         ^^^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `valid_month`\
    \ in this scope\n  --> /tmp/tmpgyuokuad.rs:19:51\n   |\n19 |     !date.is_empty()\
    \ && valid_date_range(date) && valid_month(date) && valid_day(date)\n   |    \
    \                                               ^^^^^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `valid_day` in this scope\n  -->\
    \ /tmp/tmpgyuokuad.rs:19:72\n   |\n19 |     !date.is_empty() && valid_date_range(date)\
    \ && valid_month(date) && valid_day(date)\n   |                              \
    \                                          ^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgyuokuad.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgyuokuad.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgyuokuad.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgyuokuad.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgyuokuad.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgyuokuad.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgyuokuad.rs:27:17\n   |\n2"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    if date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mu\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpjaaxlmox.rs:70:11\n   |\n\
    70 |     let mu\n   |           ^ help: add `;` here\n71 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjaaxlmox.rs:75:17\n\
    \   |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjaaxlmox.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjaaxlmox.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjaaxlmox.rs:76:25\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjaaxlmox.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjaaxlmox.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjaaxlmox.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjaaxlmox.rs:78:25\n   |\n78 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjaaxlmox.rs:79:17\n  \
    \ |\n79 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjaaxlmox.rs:79:25\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_str = date_str.split_whitespace();\n\
    \    if date_str.len() != 3 {\n        return false;\n    }\n    let mut date_str\
    \ = date_str.to_owned();\n    let mut year = date_str[0];\n    let mut month =\
    \ date_str[1];\n    let mut day = date_str[2];\n    let mut days: u32;\n    let\
    \ mut months: u32;\n    let mut years: u32;\n    let mut days_months: u32;\n \
    \   let mut days_years: u32;\n    let mut days_months_years: u32;\n    let mut\
    \ days_months_years_days: u32;\n    let mut days_months_years_days_months: u32;\n\
    \    let mut days_months_years_days_months_years: u32;\n    let mut days_months_years_days_months_years_days:\
    \ u32;\n    let mut days_months_years_days_months_years_days_months: u32;\n  \
    \  let mut days_months_years_days_months_years_days_months_years: u32;\n    let\
    \ mut days_months_years_days_months_years_days_months_years_days: u32;\n    let\
    \ mut days_months_years_days_months_years_days_months_years_days_months: u32;\n\
    \    let mut days_months_years_days_months_years_days_months_years_days_months_years:\
    \ u32;\n    let mut days_months_years_days_months_years_days_months_years_days_months_years_days:\
    \ u32;\n    let mut days_months_years_days_months_years_days_months_years_days_months_years_days_months:\
    \ u32;\n    let mut days_months_years_days_months_years_days_months_years_days_months_years_days_months_years:\
    \ u32;\n    let mut days_months_years_days_months_years_days_months_years_days_months_years_days_months_years_days:\
    \ u32;\n    let mut days_months_years_days_months_years_days_months_years_days_months_years_days_months_years_day\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpeh9iv9cn.rs:51:106\n   |\n\
    51 |     let mut days_months_years_days_months_years_days_months_years_days_months_years_days_months_years_day\n\
    \   |                                                                        \
    \                                  ^ help: add `;` here\n52 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpeh9iv9cn.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeh9iv9cn.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpeh9iv9cn.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpeh9iv9cn.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpeh9iv9cn.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpeh9iv9cn.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpeh9iv9cn.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpeh9iv9cn.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpeh9iv9cn.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() > 1 && date.len() <= 31 &&\n        date.len() <= 29 && date.len()\
    \ > 0 && date.len() <= 12 &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpvs84ab1t.rs:46:1\n\
    \   |\n46 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpvs84ab1t.rs:50:17\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpvs84ab1t.rs:50:25\n \
    \  |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvs84ab1t.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvs84ab1t.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvs84ab1t.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvs84ab1t.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvs84ab1t.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvs84ab1t.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvs84ab1t.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvs84ab1t.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvs84ab1t.rs:55:17\n   |\n55 |     "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmplqp0zvzk.rs:19:45\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                  ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmplqp0zvzk.rs:19:73\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                                              ^^^^^^^^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find function `valid_year` in this\
    \ scope\n  --> /tmp/tmplqp0zvzk.rs:19:103\n   |\n19 |     !date.is_empty() &&\
    \ date.len() == 10 && valid_day(date.as_str()) && valid_month(date.as_str()) &&\
    \ valid_year(date.as_str())\n   |                                            \
    \                                                           ^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplqp0zvzk.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplqp0zvzk.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplqp0zvzk.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplqp0zvzk.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplqp0zvzk.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplqp0zvzk.rs:26:25\n\
    \   |\n26 |"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmplgv_1zqb.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                       ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmplgv_1zqb.rs:19:51\n   |\n19 |     date.len() > 0 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                        ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmplgv_1zqb.rs:19:81\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                        ^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplgv_1zqb.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplgv_1zqb.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplgv_1zqb.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplgv_1zqb.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplgv_1zqb.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplgv_1zqb.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap()\
    \ > 0 && date_str.parse::<usize>().unwrap() <= 31\n        && date_str.parse::<usize>().unwrap()\
    \ <= 30\n        && date_str.parse::<usize>().unwrap() <= 29\n        && date_str.parse::<usize>().unwrap()\
    \ <= 12\n        && date_str.parse::<usize>().unwrap() >= 1\n        && date_str.parse::<usize>().unwrap()\
    \ <= 31\n        && date_str.parse::<usize>().unwrap() <= 30\n        && date_str.parse::<usize>().unwrap()\
    \ <= 29\n        && date_str.parse::<usize>().unwrap() <= 12\n        && date_str.parse::<usize>().unwrap()\
    \ >= 1\n        && date_str.parse::<usize>().unwrap() <= 31\n        && date_str.parse::<usize>().unwrap()\
    \ <= 30\n        && date_str.parse::<usize>().unwrap() <= 29\n        && date_str.parse::<usize>().unwrap()\
    \ <= 12\n        && date_str.parse::<usize>().unwrap() >= 1\n        && date_str.parse::<usize>().unwrap()\
    \ <= 31\n        && date_str.parse::<usize>().unwrap() <= 30\n        && date_str.parse::<usize>().unwrap()\
    \ <= 29\n        && date_str.parse::<usize>().unwrap() <= 12\n        && date_str.parse::<usize>().unwrap()\
    \ >= 1\n        && date_str.parse::<usize>().unwrap() <= 31\n        && date_str.parse::<usize>().unwrap()\
    \ <= 30\n        && date_str.parse::<usize>().unwrap() <= 29\n        && date_str.parse::<usize>().unwrap()\
    \ <= 12\n        && date_str.parse::<usize>().unwrap() >= 1\n        && date_str.parse::<usize>().unwrap()\
    \ <= 31\n        && date_str.parse::<usize>().unwrap() <= 30\n        && date_str.parse::<usize>().unwrap()\
    \ <= 29\n        && date_str.parse::<usize>().unwrap() <= 12\n        && date_str.parse::<usize>().unwrap()\
    \ >= 1\n        && date_str.parse::\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `(`, `.`, `;`, `?`, `}`, or an operator, found `::`\n\
    \  --> /tmp/tmpnog3gv0_.rs:51:26\n   |\n51 |         && date_str.parse::\n   |\
    \                          ^^ expected one of `(`, `.`, `;`, `?`, `}`, or an operator\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnog3gv0_.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnog3gv0_.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnog3gv0_.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnog3gv0_.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnog3gv0_.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnog3gv0_.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnog3gv0_.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnog3gv0_.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnog3gv0_.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnog3gv0_.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    date.len() == 10 &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !\n}\n\
    \nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpy9ayrrf2.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpy9ayrrf2.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpy9ayrrf2.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpy9ayrrf2.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpy9ayrrf2.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpy9ayrrf2.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpy9ayrrf2.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpy9ayrrf2.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpy9ayrrf2.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpy9ayrrf2.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpy9ayrrf2.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpy9ayrrf2.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && valid_day(date.chars().nth(2).unwrap()) && valid_month(date.chars().nth(4).unwrap())\
    \ && valid_year(date.chars().nth(6).unwrap())\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp9xycglez.rs:19:45\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date.chars().nth(2).unwrap())\
    \ && valid_month(date.chars().nth(4).unwrap()) && valid...\n   |             \
    \                                ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmp9xycglez.rs:19:88\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date.chars().nth(2).unwrap())\
    \ && valid_month(date.chars().nth(4).unwrap()) && valid...\n   |             \
    \                                                                           ^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `valid_year` in\
    \ this scope\n  --> /tmp/tmp9xycglez.rs:19:133\n   |\n19 | ...) && valid_month(date.chars().nth(4).unwrap())\
    \ && valid_year(date.chars().nth(6).unwrap())\n   |                          \
    \                            ^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9xycglez.rs:24:17\n  \
    \ |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9xycglez.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9xycglez.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9xycglez.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9xycglez.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9xycglez.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |    "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut day\
    \ = date_parts[0];\n    let mut month = date_parts[1];\n    let mut year = date_parts[2];\n\
    \    let mut days_in_month = match month.as_str() {\n        \"01\" | \"03\" |\
    \ \"05\" | \"07\" | \"08\" | \"10\" | \"12\" => 31,\n        \"04\" | \"06\" |\
    \ \"09\" | \"11\" => 30,\n        \"02\" => 29,\n        _ => panic!(\"Invalid\
    \ month: {}\", month),\n    };\n    let mut days_in_year = match year.as_str()\
    \ {\n        \"2000\" => 31,\n        \"2004\" => 30,\n        \"2008\" => 31,\n\
    \        \"2012\" => 30,\n        _ => panic!(\"Invalid year: {}\", year),\n \
    \   };\n    if !day.is_empty() && !month.is_empty() && !year.is_empty() {\n  \
    \      days_in_month = match month.as_str() {\n            \"01\" | \"03\" | \"\
    05\" | \"07\" | \"08\" | \"10\" | \"12\" => 31,\n            \"04\" | \"06\" |\
    \ \"09\" | \"11\" => 30,\n            \"02\" => 29,\n            _ => panic!(\"\
    Invalid month: {}\", month),\n        };\n        days_in_year = match year.as_str()\
    \ {\n            \"2000\" => 31,\n            \"2004\" => 30,\n            \"\
    2008\" => 31,\n            \"2012\" => 30,\n            _ => panic!(\"Invalid\
    \ year: {}\", year),\n        };\n    }\n    day == date_parts[0] && month ==\
    \ date_parts[1] && year == date_parts[2]\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpj0qo59wr.rs:59:17\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj0qo59wr.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpj0qo59wr.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpj0qo59wr.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpj0qo59wr.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpj0qo59wr.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpj0qo59wr.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpj0qo59wr.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpj0qo59wr.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj0qo59wr.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpj0qo59wr.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<Date>().is_ok()\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `Date` in this scope\n  --> /tmp/tmp68zjkgcz.rs:21:22\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |              - help: you\
    \ might be missing a type parameter: `<Date>`\n...\n21 |     date_str.parse::<Date>().is_ok()\n\
    \   |                      ^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68zjkgcz.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:25\n\
    \   "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    let mut date_str = date_str.trim_right().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left().to_string();\n    let mut date_str = date_str.trim_left().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left().to_string();\n    let mut date_str = date_str.trim_left().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left().to_string();\n    let mut date_str = date_str.trim_left().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left().to_string();\n    let mut date_str = date_str.trim_left().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left().to_string();\n    let mut date_str = date_str.trim_left().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left().to_string();\n    let mut date_str = date_str.trim_left().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left().to_string();\n    let mut date_str = date_str.trim_left().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left().to_string();\n    let mut date_str = date_str.trim_left().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left().to_string();\n    let mut date_str = date_str.trim_left().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left().to_string();\n    let mut date_str = date_str.trim_left().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left().to_string();\n    let mut date_str = date_str.trim_left().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left().to_string();\n    let mut date_str = date_str.trim_left().to_string();\n\
    \    let mut date_str = date_str.trim_left().to_string();\n    let mut date_str\
    \ = date_str.trim_left\n}\n\nfn main() {\n    let candidate = valid_date;\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpdhdlmnv5.rs:58:42\n   |\n\
    58 |     let mut date_str = date_str.trim_left\n   |                         \
    \                 ^ help: add `;` here\n59 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdhdlmnv5.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdhdlmnv5.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdhdlmnv5.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdhdlmnv5.rs:64:25\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdhdlmnv5.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdhdlmnv5.rs:65:25\n   |\n65 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdhdlmnv5.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdhdlmnv5.rs:66:25\n   |\n66 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdhdlmnv5.rs:67:17\n  \
    \ |\n67 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdhdlmnv5.rs:67:25\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this s"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date) && valid_month(date) && valid_year(date)\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date) && valid_month(date) && valid_year(date)\n\
    \   |                         ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:19:44\n\
    \   |\n19 |     !date.is_empty() && valid_day(date) && valid_month(date) && valid_year(date)\n\
    \   |                                            ^^^^^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `valid_year` in this scope\n  -->\
    \ /tmp/tmpsyuq9yvq.rs:19:65\n   |\n19 |     !date.is_empty() && valid_day(date)\
    \ && valid_month(date) && valid_year(date)\n   |                             \
    \                                    ^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:24:17\n  \
    \ |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsyuq9yvq.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsyuq9yvq.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsyuq9yvq.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \   "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp_r67k_7q.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                       ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmp_r67k_7q.rs:19:51\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                                                   ^^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_r67k_7q.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_r67k_7q.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_r67k_7q.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_r67k_7q.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_r67k_7q.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 &&\n        date.chars().all(|c| c.is_digit()) &&\n    \
    \    date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c| c\
    \ == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|c| c == '-') < 2 &&\n        date.chars().count(|c|\
    \ c == '/') < 2 &&\n        date.chars().count(|\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `|`, found `)`\n  --> /tmp/tmp7n2pppgy.rs:52:1\n   |\n\
    51 |         date.chars().count(|\n   |                             - expected\
    \ `|`\n52 | }\n   | ^ unexpected token\n\nerror: mismatched closing delimiter:\
    \ `}`\n  --> /tmp/tmp7n2pppgy.rs:51:27\n   |\n18 | fn valid_date(date: String)\
    \ -> bool {\n   |                                     - closing delimiter possibly\
    \ meant for this\n...\n51 |         date.chars().count(|\n   |               \
    \            ^ unclosed delimiter\n52 | }\n   | ^ mismatched closing delimiter\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7n2pppgy.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7n2pppgy.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7n2pppgy.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7n2pppgy.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7n2pppgy.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7n2pppgy.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7n2pppgy.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7n2pppgy.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    date.len() == 10 &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !\n}\n\
    \nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmp5zon9xv0.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp5zon9xv0.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp5zon9xv0.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5zon9xv0.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5zon9xv0.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5zon9xv0.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5zon9xv0.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5zon9xv0.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5zon9xv0.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5zon9xv0.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5zon9xv0.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5zon9xv0.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.split_whitespace();\n    date_str.sort_unstable();\n\
    \    let mut days: u32 = 0;\n    let mut months: u32 = 0;\n    let mut year: u32\
    \ = 0;\n    let mut days_in_month: u32 = 0;\n    let mut days_in_year: u32 = 0;\n\
    \    let mut days_in_year_in_months: u32 = 0;\n    let mut days_in_month_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_months: u32 = 0;\n    let mut\
    \ days_in_year_in_months_in_year: u32 = 0;\n    let mut days_in_month_in_year_in_months_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_months_in_year_in_months: u32 = 0;\n \
    \   let mut days_in_month_in_year_in_months_in_year_in_months: u32 = 0;\n    let\
    \ mut days_in_year_in_months_in_year_in_months_in_year: u32 = 0;\n    let mut\
    \ days_in_month_in_year_in_months_in_year_in_months_in_year: u32 = 0;\n    let\
    \ mut days_in_year_in_months_in_year_in_months_in_year_in_months: u32 = 0;\n \
    \   let mut days_in_month_in_year_in_months_in_year_in_months_in_year_in_months:\
    \ u32 = 0;\n    let mut days_in_year_in_months_in_year_in_months_in_year_in_months_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_months_in_year_in_months_in_year_in_months:\
    \ u32 = 0;\n    let mut days_in_year_in_months_in_year_in_months_in_year_in_months_in_year_in_months:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_months_in_year_in_months_in_year_in_months_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_months_in_year_in_months_in_year_in_months_in_year_in_months:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_months_in_year_in_months_in_year_in_months_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_months_in_year_in_months_in_year_in_months_in_year_in_months_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_months_in_year_in_months_in_year_in_months_in_year_in_months:\
    \ u32 = 0;\n    let mut days_in_year_in_months_in_year_in_months_in_year_in_months_in_year_in_months_in_year_in_months:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_months_in_year_in_months_in_year_in_months_in_\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpzfic642f.rs:49:84\n   |\n\
    49 |     let mut days_in_month_in_year_in_months_in_year_in_months_in_year_in_months_in_\n\
    \   |                                                                        \
    \            ^ help: add `;` here\n50 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzfic642f.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzfic642f.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzfic642f.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzfic642f.rs:55:25\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzfic642f.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzfic642f.rs:56:25\n   |\n56 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzfic642f.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzfic642f.rs:57:25\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzfic642f.rs:58:17\n  \
    \ |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzfic642f.rs:58:25\n   |\n58 |    "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp_r67k_7q.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                       ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmp_r67k_7q.rs:19:51\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                                                   ^^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_r67k_7q.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_r67k_7q.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_r67k_7q.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_r67k_7q.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_r67k_7q.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches('-');\n    date_str.trim_right_matches('-');\n\
    \    date_str.trim_left_matches('/');\n    date_str.trim_right_matches('/');\n\
    \    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches('-');\n\
    \    date_str.trim_right_matches('-');\n    date_str.trim_left_matches(' ');\n\
    \    date_str.trim_right_matches(' ');\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches('-');\n    date_str.trim_right_matches('-');\n\
    \    date_str.trim_left_matches(' ');\n    date_str.trim_right_matches(' ');\n\
    \    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches('-');\n\
    \    date_str.trim_right_matches('-');\n    date_str.trim_left_matches(' ');\n\
    \    date_str.trim_right_matches(' ');\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches('-');\n    date_str.trim_right_matches('-');\n\
    \    date_str.trim_left_matches(' ');\n    date_str.trim_right_matches(' ');\n\
    \    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches('-');\n\
    \    date_str.trim_right_matches('-');\n    date_str.trim_left_matches(' ');\n\
    \    date_str.trim_right_matches(' ');\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches('-');\n    date_str.trim_right_matches('-');\n\
    \    date_str.trim_left_matches(' ');\n    date_str.trim_right_matches(' ');\n\
    \    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches('-');\n\
    \    date_str.trim_right_matches('-');\n    date_str.trim_left_matches(' ');\n\
    \    date_str.trim_right_matches(' ');\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches('-');\n    date_str.trim_right_matches('-');\n\
    \    date_str.trim_left_matches(' ');\n    date_str.trim_right_matches(' ');\n\
    \    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches('-');\n\
    \    date_str.trim_right_matches('-');\n    date_str.trim_left_matches(' ');\n\
    \    date_str.trim_right_matches(' ');\n    let mut date_str = date_str.to_string();\n\
    \    date_str.\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmpczikzd_7.rs:71:1\n   |\n71\
    \ | }\n   | ^\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpczikzd_7.rs:75:17\n\
    \   |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpczikzd_7.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpczikzd_7.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpczikzd_7.rs:76:25\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpczikzd_7.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpczikzd_7.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpczikzd_7.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpczikzd_7.rs:78:25\n   |\n78 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpczikzd_7.rs:79:17\n  \
    \ |\n79 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpczikzd_7.rs:79:25\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpczikzd_7.rs:80:17\n   |\n80 |\
    \     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_str =\
    \ date_str.trim_right_matches('-');\n        let mut date_str = date_str.trim_left_matches('-');\n\
    \        let mut date_str = date_str.trim_left_matches(' ');\n        let mut\
    \ date_str = date_str.trim_right_matches(' ');\n        let mut date_str = date_str.trim_left_matches('-');\n\
    \        let mut date_str = date_str.trim_left_matches('-');\n        let mut\
    \ date_str = date_str.trim_left_matches(' ');\n        let mut date_str = date_str.trim_right_matches('\
    \ ');\n        let mut date_str = date_str.trim_left_matches('-');\n        let\
    \ mut date_str = date_str.trim_left_matches('-');\n        let mut date_str =\
    \ date_str.trim_left_matches(' ');\n        let mut date_str = date_str.trim_right_matches('\
    \ ');\n        let mut date_str = date_str.trim_left_matches('-');\n        let\
    \ mut date_str = date_str.trim_left_matches('-');\n        let mut date_str =\
    \ date_str.trim_left_matches(' ');\n        let mut date_str = date_str.trim_right_matches('\
    \ ');\n        let mut date_str = date_str.trim_left_matches('-');\n        let\
    \ mut date_str = date_str.trim_left_matches('-');\n        let mut date_str =\
    \ date_str.trim_left_matches(' ');\n        let mut date_str = date_str.trim_right_matches('\
    \ ');\n        let mut date_str = date_str.trim_left_matches('-');\n        let\
    \ mut date_str = date_str.trim_left_matches('-');\n        let mut date_str =\
    \ date_str.trim_left_matches(' ');\n        let mut date_str = date_str.trim_right_matches('\
    \ ');\n        let mut date_str = date_str.trim_left_matches('-');\n        let\
    \ mut date_str = date_str.trim_left_matches('-');\n        let mut date_str =\
    \ date_str.trim_left_matches(' ');\n        let mut date_str = date_str.trim_right_matches('\
    \ ');\n        let mut date_str = date_str.trim_left_matches('-');\n        let\
    \ mut date_str = date_str.trim_left_matches('-');\n        let mut date_str =\
    \ date_str.trim_left_matches(' ');\n        let mut date_str = date_str.trim_right_matches('\
    \ ');\n        let mut date_str = date_str.trim_left_matches('-');\n        let\
    \ mut date_str = date_str.trim_left_matches('-');\n        let mut date_str =\
    \ date_str.trim_left_matches(' ');\n        let mut date_str = date_\n}\n\nfn\
    \ main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpdxbfdsx1.rs:77:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    57 | }\n   | - ...as it matches this but it has different indentation\n...\n77\
    \ | }\n   |   ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmpdxbfdsx1.rs:56:33\n\
    \   |\n56 |         let mut date_str = date_\n   |                           \
    \      ^ help: add `;` here\n57 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `date_` in this scope\n  --> /tmp/tmpdxbfdsx1.rs:56:28\n \
    \  |\n56 |         let mut date_str = date_\n   |                            ^^^^^\
    \ help: a local variable with a similar name exists: `date`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdxbfdsx1.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdxbfdsx1.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdxbfdsx1.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdxbfdsx1.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdxbfdsx1.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdxbfdsx1.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdxbfdsx1.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n  "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_date_length(date) && valid_date_format(date)\n}\n\nfn main() {\n\
    \    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_date_length` in this scope\n\
    \  --> /tmp/tmptte1xq59.rs:19:23\n   |\n19 |     date.len() > 0 && valid_date_length(date)\
    \ && valid_date_format(date)\n   |                       ^^^^^^^^^^^^^^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find function `valid_date_format`\
    \ in this scope\n  --> /tmp/tmptte1xq59.rs:19:50\n   |\n19 |     date.len() >\
    \ 0 && valid_date_length(date) && valid_date_format(date)\n   |              \
    \                                    ^^^^^^^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptte1xq59.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptte1xq59.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptte1xq59.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptte1xq59.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptte1xq59.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptte1xq59.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptte1xq59.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptte1xq59.rs:27:25\n   |\n27 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date) && valid_month(date) && valid_year(date)\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date) && valid_month(date) && valid_year(date)\n\
    \   |                         ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:19:44\n\
    \   |\n19 |     !date.is_empty() && valid_day(date) && valid_month(date) && valid_year(date)\n\
    \   |                                            ^^^^^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `valid_year` in this scope\n  -->\
    \ /tmp/tmpsyuq9yvq.rs:19:65\n   |\n19 |     !date.is_empty() && valid_day(date)\
    \ && valid_month(date) && valid_year(date)\n   |                             \
    \                                    ^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:24:17\n  \
    \ |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsyuq9yvq.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsyuq9yvq.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsyuq9yvq.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \   "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut days: u32 =\
    \ 0;\n        let mut months: u32 = 0;\n        let mut year: u32 = 0;\n     \
    \   let mut date_components = date_str.split_whitespace();\n        if date_components.len()\
    \ != 3 {\n            return false;\n        }\n        let mut date_components_str\
    \ = date_components[0].to_string();\n        let mut date_components_str_components\
    \ = date_components_str.split_whitespace();\n        if date_components_str_components.len()\
    \ != 2 {\n            return false;\n        }\n        let mut date_components_str_components_str\
    \ = date_components_str_components[0].to_string();\n        let mut date_components_str_components_str_components\
    \ = date_components_str_components_str.split_whitespace();\n        if date_components_str_components_str_components.len()\
    \ != 3 {\n            return false;\n        }\n        days = date_components_str_components_str_components[1].parse().unwrap();\n\
    \        months = date_components_str_components_str_components[2].parse().unwrap();\n\
    \        year = date_components_str_components_str_components_str_components[1].parse().unwrap();\n\
    \        if months < 1 || months > 12 {\n            return false;\n        }\n\
    \        if days < 1 || days > 31 {\n            return false;\n        }\n  \
    \      if months == 2 && days == 29 {\n            return false;\n        }\n\
    \        if months == 4 || months == 6 || months == 9 || months == 11 {\n    \
    \        return false;\n        }\n        if months == 1 && days == 30 {\n  \
    \          return false;\n        }\n    }\n    true\n}\n\nfn main() {\n    let\
    \ candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `date_components_str_components_str_components_str_components`\
    \ in this scope\n  --> /tmp/tmp9bc0uuqq.rs:40:16\n   |\n40 |         year = date_components_str_components_str_components_str_components[1].parse().unwrap();\n\
    \   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `date_components_str_components_str_components`\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9bc0uuqq.rs:62:17\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9bc0uuqq.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9bc0uuqq.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9bc0uuqq.rs:63:25\n\
    \   |\n63 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9bc0uuqq.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9bc0uuqq.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9bc0uuqq.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9bc0uuqq.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9bc0uuqq.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |               "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmplgv_1zqb.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                       ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmplgv_1zqb.rs:19:51\n   |\n19 |     date.len() > 0 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                        ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmplgv_1zqb.rs:19:81\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                        ^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplgv_1zqb.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplgv_1zqb.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplgv_1zqb.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplgv_1zqb.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplgv_1zqb.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplgv_1zqb.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    /\");\n    date_str.trim_right_matches(\"/\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\".\");\n    date_str.trim_right_matches(\".\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    -\");\n    date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\"/\");\n    date_str.trim_right_matches(\"/\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    .\");\n    date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"-\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    /\");\n    date_str.trim_right_matches(\"/\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\".\");\n    date_str.trim_right_matches(\".\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    -\");\n    date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\"/\");\n    date_str.trim_right_matches(\"/\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    .\");\n    date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"-\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    /\");\n    date_str.trim_right_matches(\"/\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\".\");\n    date_str.trim_right_matches(\".\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    -\");\n    date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\"/\");\n    date_str.trim_right_matches(\"/\"\
    );\n    let mut \n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpc2htk7j1.rs:71:1\n\
    \   |\n71 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpc2htk7j1.rs:75:17\n   |\n75 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpc2htk7j1.rs:75:25\n \
    \  |\n75 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpc2htk7j1.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpc2htk7j1.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpc2htk7j1.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpc2htk7j1.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpc2htk7j1.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc2htk7j1.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc2htk7j1.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpc2htk7j1.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpc2htk7j1.rs:80:17\n   |\n80 |     "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap()\
    \ > 0 &&\n    date_str.parse::<usize>().unwrap() <= 31 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 30 &&\n    date_str.parse::<usize>().unwrap() <= 29 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 12 &&\n    date_str.parse::<usize>().unwrap() >= 1 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 31\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvwvjjf24.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_end().to_string();\n    let\
    \ mut date_str = date_str.split_whitespace();\n    date_str.sort();\n    let mut\
    \ days: u32 = 0;\n    let mut months: u32 = 0;\n    let mut years: u32 = 0;\n\
    \    for date_str in date_str {\n        let date_str = date_str.to_lowercase();\n\
    \        if date_str == \"jan\" || date_str == \"feb\" || date_str == \"mar\"\
    \ || date_str == \"apr\" || date_str == \"may\" || date_str == \"jun\" || date_str\
    \ == \"jul\" || date_str == \"aug\" || date_str == \"sep\" || date_str == \"oct\"\
    \ || date_str == \"nov\" || date_str == \"dec\" {\n            months += 1;\n\
    \        } else if date_str == \"apr\" || date_str == \"jun\" || date_str == \"\
    sep\" || date_str == \"nov\" || date_str == \"dec\" {\n            months += 4;\n\
    \        } else if date_str == \"jan\" || date_str == \"feb\" || date_str == \"\
    mar\" || date_str == \"apr\" || date_str == \"may\" || date_str == \"jun\" ||\
    \ date_str == \"jul\" || date_str == \"aug\" || date_str == \"sep\" || date_str\
    \ == \"oct\" || date_str == \"nov\" || date_str == \"dec\" {\n            years\
    \ += 1;\n        } else if date_str == \"apr\" || date_str == \"jun\" || date_str\
    \ == \"sep\" || date_str == \"nov\" || date_str == \"dec\" {\n            years\
    \ += 4;\n        } else {\n            days += 1;\n        }\n    }\n    if days\
    \ > 31 || months > 12 || years > 30 {\n        return false;\n    }\n    if months\
    \ == 2 && days > 29 {\n        return false;\n    }\n    if months == 1 && days\
    \ > 31 {\n        return false;\n    }\n    if months == 12 && days > 31 {\n \
    \       return false;\n    }\n    if months == 4 && days > 30 {\n        return\
    \ false;\n    }\n    if months == 6 && days > 30 {\n        return false;\n  \
    \  }\n    if months == 9 && days > 30 {\n        return false;\n    }\n    if\
    \ months == 11 && days > 30 {\n        return false;\n    }\n    if months ==\
    \ 1 && days > 29 {\n        return false;\n    }\n    if months == 3 && days >\
    \ 31 {\n        return false;\n    }\n    if months == 5 && days > 31 {\n    \
    \    return false;\n    }\n    if months == 7 && days > 31 {\n        return false;\n\
    \    }\n    if months == 8 && days > 31 {\n        return false;\n    }\n    if\
    \ months == 10 && days > 31 {\n        return false;\n    }\n    if months ==\
    \ 12 && days > 31 {\n        return false;\n    }\n    if month\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n  --> /tmp/tmpl6j7p9i4.rs:86:1\n   |\n\
    85 |     if month\n   |     -- this `if` expression has a condition, but no block\n\
    86 | }\n   | ^ expected `{`\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpl6j7p9i4.rs:90:17\n   |\n90 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl6j7p9i4.rs:90:25\n   |\n90 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpl6j7p9i4.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpl6j7p9i4.rs:91:25\n   |\n91 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl6j7p9i4.rs:92:17\n  \
    \ |\n92 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl6j7p9i4.rs:92:25\n   |\n92 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl6j7p9i4.rs:93:17\n   |\n93 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpl6j7p9i4.rs:93:25\n\
    \   |\n93 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpl6j7p9i4.rs:94:17\n   |\n94 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl6j7p9i4.rs:94:25\n   |\n94 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp_r67k_7q.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                       ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmp_r67k_7q.rs:19:51\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                                                   ^^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_r67k_7q.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_r67k_7q.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_r67k_7q.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_r67k_7q.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_r67k_7q.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_r67k_7q.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    !date.len() < 1 &&\n    !date.len() > 31 &&\n    !date.len() < 30 &&\n\
    \    !date.len() > 29 &&\n    !date.len() < 12 &&\n    !date.len() > 12 &&\n \
    \   !date.len() < 10 &&\n    !date.len() > 10 &&\n    !date.len() < 7 &&\n   \
    \ !date.len() > 7 &&\n    !date.len() < 4 &&\n    !date.len() > 4 &&\n    !date.len()\
    \ < 2 &&\n    !date.len() > 2\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4rwl_nj9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4rwl_nj9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4rwl_nj9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4rwl_nj9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4rwl_nj9.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n\
    \        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n        date.chars().all(|c| c >= '0' && c <= '9') &&\n        date.chars().all(|c|\
    \ c >= '0' && c <= '9') &&\n        date.chars().all(|c| c >= '0' && c <= '9')\
    \ &&\n\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpguum83h4.rs:46:1\n\
    \   |\n46 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpguum83h4.rs:50:17\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:50:25\n \
    \  |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpguum83h4.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpguum83h4.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpguum83h4.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpguum83h4.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpguum83h4.rs:55:17\n   |\n55 |     "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    (date.len() == 10 || date.len() == 9 || date.len() == 8 || date.len()\
    \ == 7 || date.len() == 6 || date.len() == 5 || date.len() == 4 || date.len()\
    \ == 3 || date.len() == 2 || date.len() == 1) &&\n    (date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == 12 || date.chars().filter(|c| c >= '0' && c\
    \ <= '9').count() == 31 || date.chars().filter(|c| c >= '0' && c <= '9').count()\
    \ == 30 || date.chars().filter(|c| c >= '0' && c <= '9').count() == 29) &&\n \
    \   (date.chars().filter(|c| c >= '0' && c <= '9').count() == 1 || date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == 3 || date.chars().filter(|c| c >= '0' && c\
    \ <= '9').count() == 5 || date.chars().filter(|c| c >= '0' && c <= '9').count()\
    \ == 7 || date.chars().filter(|c| c >= '0' && c <= '9').count() == 8 || date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == 10 || date.chars().filter(|c| c >= '0' && c\
    \ <= '9').count() == 12) &&\n    (date.chars().filter(|c| c >= '0' && c <= '9').count()\
    \ == 1 || date.chars().filter(|c| c >= '0' && c <= '9').count() == 4 || date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == 6 || date.chars().filter(|c| c >= '0' && c\
    \ <= '9').count() == 9 || date.chars().filter(|c| c >= '0' && c <= '9').count()\
    \ == 11) &&\n    (date.chars().filter(|c| c >= '0' && c <= '9').count() == 1 ||\
    \ date.chars().filter(|c| c >= '0' && c <= '9').count() == 2 || date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == 4)\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptkakc688.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptkakc688.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptkakc688.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptkakc688.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptkakc688.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptkakc688.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptkakc688.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptkakc688.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptkakc688.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptkakc688.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptkakc688.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmph_pfh7hw.rs:70:17\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph_pfh7hw.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph_pfh7hw.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmph_pfh7hw.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph_pfh7hw.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph_pfh7hw.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmph_pfh7hw.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmph_pfh7hw.rs:73:25\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph_pfh7hw.rs:74:17\n  \
    \ |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph_pfh7hw.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph_pfh7hw.rs:75:17\n   |\n75 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_end().to_string();\n    let\
    \ mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end().to_string();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_lowercase();\n    date_str.trim_end().to_string();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end().to_string();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_lowercase();\n    date_str.trim_end().to_string();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end().to_string();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_lowercase();\n    date_str.trim_end().to_string();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end().to_string();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_lowercase();\n    date_str.trim_end().to_string();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end().to_string();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_lowercase();\n    date_str.trim_end().to_string();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end().to_string();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_lowercase();\n    date_str.trim_end().to_string();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end().to_string();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_lowercase();\n    date_str.trim_end().to_string();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end().to_string();\n    let mut date_str = date_str.to_owned();\n\
    \    let mu\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp5aatj1bu.rs:67:11\n   |\n\
    67 |     let mu\n   |           ^ help: add `;` here\n68 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5aatj1bu.rs:72:17\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5aatj1bu.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5aatj1bu.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5aatj1bu.rs:73:25\n\
    \   |\n73 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5aatj1bu.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5aatj1bu.rs:74:25\n   |\n74 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5aatj1bu.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5aatj1bu.rs:75:25\n   |\n75 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5aatj1bu.rs:76:17\n  \
    \ |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5aatj1bu.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut year: u32 = 0;\n    let\
    \ mut day: u32 = 0;\n    let mut month: u32 = 0;\n    let mut years: u32 = 0;\n\
    \    let mut days_in_month: u32 = 0;\n    let mut days_in_year: u32 = 0;\n   \
    \ let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let\
    \ mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut\
    \ days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years:\
    \ u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32\
    \ = 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 =\
    \ 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n\
    \    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n \
    \   let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n  \
    \  let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n   \
    \ let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let\
    \ mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut\
    \ days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months:\
    \ u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32\
    \ = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 =\
    \ 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n\
    \    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n \
    \   let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n  \
    \  let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n   \
    \ let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let\
    \ mut days_in_years: \n}\n\nfn main() {\n    let candidate = valid_date;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected type, found `}`\n  --> /tmp/tmpqa7uau_n.rs:72:1\n   |\n\
    71 |     let mut days_in_years: \n   |         ----------------- while parsing\
    \ the type for `mut days_in_years`\n72 | }\n   | ^ expected type\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqa7uau_n.rs:76:17\n  \
    \ |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqa7uau_n.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqa7uau_n.rs:77:17\n   |\n77 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqa7uau_n.rs:77:25\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqa7uau_n.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqa7uau_n.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqa7uau_n.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqa7uau_n.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqa7uau_n.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqa7uau_n.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\n"
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    let mut date_parts =\
    \ date_str.split_whitespace();\n    let mut month = date_parts[0];\n    let mut\
    \ day = date_parts[1];\n    let mut year = date_parts[2];\n    let mut month_str\
    \ = month.to_string();\n    month_str.trim();\n    let mut month_parts = month_str.split_whitespace();\n\
    \    let mut month_num = month_parts[0];\n    let mut day_str = day.to_string();\n\
    \    day_str.trim();\n    let mut day_parts = day_str.split_whitespace();\n  \
    \  let mut day_num = day_parts[0];\n    let mut year_str = year.to_string();\n\
    \    year_str.trim();\n    let mut year_parts = year_str.split_whitespace();\n\
    \    let mut year_num = year_parts[0];\n    if !date_str.len() {\n        return\
    \ false;\n    }\n    if !month_str.len() {\n        return false;\n    }\n   \
    \ if !day_str.len() {\n        return false;\n    }\n    if !year_str.len() {\n\
    \        return false;\n    }\n    if !month_num.len() {\n        return false;\n\
    \    }\n    if !day_num.len() {\n        return false;\n    }\n    if !year_num.len()\
    \ {\n        return false;\n    }\n    if month_num.len() != 3 {\n        return\
    \ false;\n    }\n    if month_num.parse::<usize>().unwrap() > 12 {\n        return\
    \ false;\n    }\n    if day_num.len() != 2 {\n        return false;\n    }\n \
    \   if day_num.parse::<usize>().unwrap() > 31 {\n        return false;\n    }\n\
    \    if day_num.parse::<usize>().unwrap() > 30 {\n        return false;\n    }\n\
    \    if day_num.parse::<usize>().unwrap() > 29 {\n        return false;\n    }\n\
    \    if month_num.parse::<usize>().unwrap() < 1 {\n        return false;\n   \
    \ }\n    if month_num.parse::<usize>().unwrap() > 12 {\n        return false;\n\
    \    }\n    if month_num.parse::<usize>().unwrap() < 1 {\n        return false;\n\
    \    }\n    if month_num.parse::<usize>().unwrap() > 12 {\n        return false;\n\
    \    }\n    if month_num.parse::<usize>().unwrap() < 1 {\n        return false;\n\
    \    }\n    if month_num.parse::<usize>().unwrap() < 1 {\n        return false;\n\
    \    }\n    if month_num.parse::<usize>().unwrap() < 1 {\n        return false;\n\
    \    }\n    if month_num.parse::<usize>().unwrap() < 1 {\n        return false;\n\
    \    }\n    if month_num.parse::<usize>().unwrap() < 1 {\n        return false;\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpk4hyzcle.rs:122:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n...\n100 |     if month_num.parse::<usize>().unwrap()\
    \ < 1 {\n    |                                                - this delimiter\
    \ might not be properly closed...\n101 |         return false;\n102 | }\n    |\
    \ - ...as it matches this but it has different indentation\n...\n122 | }\n   \
    \ |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmpk4hyzcle.rs:106:17\n\
    \    |\n106 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpk4hyzcle.rs:106:25\n    |\n106 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpk4hyzcle.rs:107:17\n\
    \    |\n107 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpk4hyzcle.rs:107:25\n    |\n107 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpk4hyzcle.rs:108:17\n\
    \    |\n108 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpk4hyzcle.rs:108:25\n    |\n108 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpk4hyzcle.rs:109:17\n\
    \    |\n109 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpk4hyzcle.rs:109:25\n    |\n109 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   -->"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    let mut date_str = date_str.chars().filter(|c|\
    \ !c.is_whitespace()).collect::<String>();\n    let mut date_str = date_str.split_whitespace().collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect::<Vec<String>>();\n\
    \    let mut date_str = date_str.iter().map(|&x| x.to_string()).collect\n}\n\n\
    fn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpgr5eo01z.rs:39:71\n   |\n\
    39 |     let mut date_str = date_str.iter().map(|&x| x.to_string()).collect\n\
    \   |                                                                       ^\
    \ help: add `;` here\n40 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgr5eo01z.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgr5eo01z.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgr5eo01z.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgr5eo01z.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgr5eo01z.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgr5eo01z.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgr5eo01z.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgr5eo01z.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgr5eo01z.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgr5eo01z.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_end().to_string();\n    let\
    \ mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_str =\
    \ date_str.to_ascii_uppercase();\n    let mut date_str = date_str.to_lowercase();\n\
    \    let mut date_str = date_str.to_ascii_lowercase();\n    let mut date_\n}\n\
    \nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpwas43pqw.rs:63:18\n   |\n\
    63 |     let mut date_\n   |                  ^ help: add `;` here\n64 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwas43pqw.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwas43pqw.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwas43pqw.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwas43pqw.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwas43pqw.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwas43pqw.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwas43pqw.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwas43pqw.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwas43pqw.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwas43pqw.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_split = date_str.split_whitespace();\n    let month =\
    \ date_split[0].parse().unwrap();\n    let day = date_split[1].parse().unwrap();\n\
    \    let year = date_split[2].parse().unwrap();\n    if month < 1 || month > 12\
    \ {\n        return false;\n    }\n    if day < 1 || day > 31 {\n        return\
    \ false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n    }\n\
    \    if month == 4 && day > 30 {\n        return false;\n    }\n    if month ==\
    \ 6 && day > 31 {\n        return false;\n    }\n    if month == 9 && day > 31\
    \ {\n        return false;\n    }\n    if month == 11 && day > 30 {\n        return\
    \ false;\n    }\n    if month == 1 && day > 31 {\n        return false;\n    }\n\
    \    if month == 3 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 5 && day > 31 {\n        return false;\n    }\n    if month == 7 && day > 31\
    \ {\n        return false;\n    }\n    if month == 8 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 10 && day > 31 {\n        return false;\n   \
    \ }\n    if month == 12 && day > 31 {\n        return false;\n    }\n    if month\
    \ == 1 && day > 30 {\n        return false;\n    }\n    if month == 3 && day >\
    \ 30 {\n        return false;\n    }\n    if month == 5 && day > 30 {\n      \
    \  return false;\n    }\n    if month == 7 && day > 30 {\n        return false;\n\
    \    }\n    if month == 8 && day > 30 {\n        return false;\n    }\n    if\
    \ month == 10 && day > 30 {\n        return false;\n    }\n    if month == 12\
    \ && day > 30 {\n        return false;\n    }\n    if month == 1 && day > 29 {\n\
    \        return false;\n    }\n    if month == 3 && day > 29 {\n        return\
    \ false;\n    }\n    if month == 5 && day > 29 {\n        return false;\n    }\n\
    \    if month == 7 && day > 29 {\n        return false;\n    }\n    if month ==\
    \ 8 && day > 29 {\n        return false;\n    }\n    if month == 10 && day > 29\
    \ {\n        return false;\n    }\n    if month == 12 && day > 29 {\n        return\
    \ false;\n    }\n    if month == 1 && day > 28 {\n        return false;\n    }\n\
    \    if month == 3 && day > 28 {\n        return false;\n    }\n    if month ==\
    \ 5 && day > 28 {\n        return false;\n    }\n    if month == 7 && day > 28\
    \ {\n        return false;\n    }\n    if month == 8 && day > 28 {\n        return\
    \ false;\n    }\n    if month == 10 && day > 28 {\n        return false;\n   \
    \ }\n\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmp0ti502ly.rs:133:17\n\
    \    |\n133 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp0ti502ly.rs:133:25\n    |\n133 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp0ti502ly.rs:134:17\n\
    \    |\n134 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp0ti502ly.rs:134:25\n    |\n134 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp0ti502ly.rs:135:17\n\
    \    |\n135 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp0ti502ly.rs:135:25\n    |\n135 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp0ti502ly.rs:136:17\n\
    \    |\n136 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp0ti502ly.rs:136:25\n    |\n136 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp0ti502ly.rs:137:17\n\
    \    |\n137 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp0ti502ly.rs:137:25\n    |\n137 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp0ti502ly.rs:138:17\n\
    \    |\n138 |     assert_eq!({left}, {right});\n    |                 ^^^^"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    if date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let month = date_parts[0].parse().unwrap();\n\
    \    let day = date_parts[1].parse().unwrap();\n    let year = date_parts[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 && day > 30 {\n        return\
    \ false;\n    }\n    if month == 6 && day > 31 {\n        return false;\n    }\n\
    \    if month == 9 && day > 30 {\n        return false;\n    }\n    if month ==\
    \ 11 && day > 31 {\n        return false;\n    }\n    if month == 1 && day > 30\
    \ {\n        return false;\n    }\n    if month == 3 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 5 && day > 31 {\n        return false;\n    }\n\
    \    if month == 7 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 8 && day > 31 {\n        return false;\n    }\n    if month == 10 && day > 31\
    \ {\n        return false;\n    }\n    if month == 12 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 1 && day > 30 {\n        return false;\n    }\n\
    \    if month == 3 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 5 && day > 31 {\n        return false;\n    }\n    if month == 7 && day > 31\
    \ {\n        return false;\n    }\n    if month == 8 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 10 && day > 31 {\n        return false;\n   \
    \ }\n    if month == 12 && day > 31 {\n        return false;\n    }\n    if month\
    \ == 1 && day > 30 {\n        return false;\n    }\n    if month == 3 && day >\
    \ 31 {\n        return false;\n    }\n    if month == 5 && day > 31 {\n      \
    \  return false;\n    }\n    if month == 7 && day > 31 {\n        return false;\n\
    \    }\n    if month == 8 && day > 31 {\n        return false;\n    }\n    if\
    \ month == 10 && day > 31 {\n        return false;\n    }\n    if month == 12\
    \ && day > 31 {\n        return false;\n    }\n    if month == 1 && day > 30 {\n\
    \        return false;\n    }\n    if month == 3 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 5 && day > 31 {\n        return false;\n    }\n\
    \    if month == 7 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 8 && day > 31 \n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n   --> /tmp/tmpaphz66k3.rs:129:1\n    |\n\
    128 |     if month == 8 && day > 31 \n    |     -- this `if` expression has a\
    \ condition, but no block\n129 | }\n    | ^ expected `{`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n   --> /tmp/tmpaphz66k3.rs:133:17\n    |\n\
    133 |     assert_eq!({left}, {right});\n    |                 ^^^^ not found in\
    \ this scope\n\nerror[E0425]: cannot find value `right` in this scope\n   -->\
    \ /tmp/tmpaphz66k3.rs:133:25\n    |\n133 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpaphz66k3.rs:134:17\n\
    \    |\n134 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpaphz66k3.rs:134:25\n    |\n134 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpaphz66k3.rs:135:17\n\
    \    |\n135 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpaphz66k3.rs:135:25\n    |\n135 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpaphz66k3.rs:136:17\n\
    \    |\n136 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpaphz66k3.rs:136:25\n    |\n136 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpaphz66k3.rs:137:17\n\
    \    |\n137 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpaphz66k3.rs:137:25\n    |\n137 |     assert_eq!({left}, {right});\n\
    \    |             "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    let mut date_str_split = date_str.split_whitespace();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n    let mut date_str_split_next = date_str_split.next();\n\
    \    let mut date_str_split_next = date_str_split.next();\n    let mut date_str_split_next\
    \ = date_str_split.next();\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfpb8i67g.rs:66:17\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfpb8i67g.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfpb8i67g.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfpb8i67g.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfpb8i67g.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfpb8i67g.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfpb8i67g.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfpb8i67g.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfpb8i67g.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfpb8i67g.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfpb8i67g.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() >= 1 && date.len() <= 31 &&\n        date.chars().take(2).all(|c|\
    \ c.is_digit()) &&\n        date.chars().skip(2).all(|c| c.is_digit()) &&\n  \
    \      date.chars().skip(2).all(|c| c.is_digit()) &&\n        date.chars().skip(2).all(|c|\
    \ c.is_digit()) &&\n        date.chars().skip(2).all(|c| c.is_digit()) &&\n  \
    \      date.chars().skip(2).all(|c| c.is_digit()) &&\n        date.chars().skip(2).all(|c|\
    \ c.is_digit()) &&\n        date.chars().skip(2).all(|c| c.is_digit()) &&\n  \
    \      date.chars().skip(2).all(|c| c.is_digit()) &&\n        date.chars().skip(2).all(|c|\
    \ c.is_digit()) &&\n        date.chars().skip(2).all(|c| c.is_digit()) &&\n  \
    \      date.chars().skip(2).all(|c| c.is_digit()) &&\n        date.chars().skip(2).all(|c|\
    \ c.is_digit()) &&\n        date.chars().skip(2).all(|c| c.is_digit()) &&\n  \
    \      date.chars().skip(2).all(|c| c.is_digit()) &&\n        date.chars().skip(2).all(|c|\
    \ c.is_digit()) &&\n        date.chars().skip(2).all(|c| c.is_digit()) &&\n  \
    \      date.chars().skip(2).all(|c| c.is_digit()) &&\n        date.chars().skip(2).all(|c|\
    \ c.is_digit()) &&\n        date.chars().skip(2).all(|c| c.is_digit()) &&\n  \
    \      date.chars().skip(2).all(|c| c.is_digit()) &&\n        date.chars().skip(2).all(|c|\
    \ c.is_digit()) &&\n        date.chars().skip(2).all(|c| c.is_digit()) &&\n  \
    \      date.chars().skip(2).all(|c| c.is_digit()) &&\n        date.chars().skip(2).all(|c|\
    \ c.is_digit()) &&\n        date.chars().skip(2).all(|c| c.is_digit()) &&\n  \
    \      date.chars().skip(2).all(|c| c.is_digit()) &&\n        date.chars().skip(2).all(|c|\
    \ c.is_digit()) &&\n        date.chars().skip(2).all(|c| c.is_digit()) &&\n  \
    \      date.char\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgo9lesok.rs:54:17\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgo9lesok.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgo9lesok.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgo9lesok.rs:55:25\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgo9lesok.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgo9lesok.rs:56:25\n   |\n56 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgo9lesok.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgo9lesok.rs:57:25\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgo9lesok.rs:58:17\n  \
    \ |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgo9lesok.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgo9lesok.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut months_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut years_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    days_parts.sort_unstable();\n\
    \    months_parts.sort_unstable();\n    years_parts.sort_unstable();\n    let\
    \ days_count = days_parts.len();\n    let months_count = months_parts.len();\n\
    \    let years_count = years_parts.len();\n    if days_count < 1 || days_count\
    \ > 31 || months_count < 1 || months_count > 12 || years_count < 1 || years_count\
    \ > 31 {\n        return false;\n    }\n    let mut days_parts_vec: Vec<i32> =\
    \ days_parts.into_iter().map(|x| x.parse().unwrap()).collect();\n    let mut months_parts_vec:\
    \ Vec<i32> = months_parts.into_iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut years_parts_vec: Vec<i32> = years_parts.into_iter().map(|x| x.parse().unwrap()).collect();\n\
    \    days_parts_vec.sort_unstable();\n    months_parts_vec.sort_unstable();\n\
    \    years_parts_vec.sort_unstable();\n    if days_parts_vec[0] != 1 || days_parts_vec[1]\
    \ != 3 || days_parts_vec[2] != 2000 || days_parts_vec[3] != days_parts_vec[0]\
    \ {\n        return false;\n    }\n    if months_parts_vec[0] != 1 || months_parts_vec[1]\
    \ != 4 || months_parts_vec[2] != 6 || months_parts_vec[3] != months_parts_vec[0]\
    \ {\n        return false;\n    }\n    if years_parts_vec[0] != 1 || years_parts_vec[1]\
    \ != 6 || years_parts_vec[2] != 4 || years_parts_vec[3] != years_parts_vec[0]\
    \ {\n        return false;\n    }\n    if days_parts_vec[4] != days_parts_vec[0]\
    \ || days_parts_vec[5] != days_parts_vec[1] || days_parts_vec[6] != days_parts_vec[2]\
    \ || days_parts_vec[7\n}\n\nfn main() {\n    let candidate = valid_date;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmpwkqmct4u.rs:50:148\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n50 |     if\
    \ days_parts_vec[4] != days_parts_vec[0] || days_parts_vec[5] != days_parts_vec[1]\
    \ || days_parts_vec[6] != days_parts_vec[2] || days_parts_ve...\n   |        \
    \                                                                            \
    \                                                                ^ unclosed delimiter\n\
    51 | }\n   | ^ mismatched closing delimiter\n\nerror: expected `{`, found `}`\n\
    \  --> /tmp/tmpwkqmct4u.rs:51:1\n   |\n50 |     if days_parts_vec[4] != days_parts_vec[0]\
    \ || days_parts_vec[5] != days_parts_vec[1] || days_parts_vec[6] != days_parts_vec[2]\
    \ || days...\n   |     -- this `if` expression has a condition, but no block\n\
    51 | }\n   | ^ expected `{`\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpwkqmct4u.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwkqmct4u.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwkqmct4u.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwkqmct4u.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwkqmct4u.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwkqmct4u.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.chars().nth(1).unwrap()) && valid_month(date.chars().nth(2).unwrap())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmpvreo_7so.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.chars().nth(1).unwrap()) && valid_month(date.chars().nth(2).unwrap())\n\
    \   |                       ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmpvreo_7so.rs:19:66\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.chars().nth(1).unwrap()) && valid_month(date.chars().nth(2).unwrap())\n\
    \   |                                                                  ^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvreo_7so.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvreo_7so.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvreo_7so.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvreo_7so.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvreo_7so.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvreo_7so.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvreo_7so.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvreo_7so.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    date.len() == 10 &&\n    !date.chars().any(|c| !c.is_digit()) &&\n \
    \   !date.chars().any(|c| !c.is_ascii_digit()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n    !date.chars().any(|c| !c.is_slash()) &&\n    !date.chars().any(|c| !c.is_hyphen())\
    \ &&\n\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmp03g5rlg7.rs:53:1\n\
    \   |\n53 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp03g5rlg7.rs:57:17\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp03g5rlg7.rs:57:25\n \
    \  |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp03g5rlg7.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp03g5rlg7.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp03g5rlg7.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp03g5rlg7.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp03g5rlg7.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp03g5rlg7.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp03g5rlg7.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp03g5rlg7.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp03g5rlg7.rs:62:17\n   |\n62 |     "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<Date>().is_ok()\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `Date` in this scope\n  --> /tmp/tmp68zjkgcz.rs:21:22\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |              - help: you\
    \ might be missing a type parameter: `<Date>`\n...\n21 |     date_str.parse::<Date>().is_ok()\n\
    \   |                      ^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68zjkgcz.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:25\n\
    \   "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && valid_day(date) && valid_month(date) && valid_year(date)\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp0_jizsi5.rs:19:45\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date) && valid_month(date)\
    \ && valid_year(date)\n   |                                             ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `valid_month`\
    \ in this scope\n  --> /tmp/tmp0_jizsi5.rs:19:64\n   |\n19 |     !date.is_empty()\
    \ && date.len() == 10 && valid_day(date) && valid_month(date) && valid_year(date)\n\
    \   |                                                                ^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `valid_year` in\
    \ this scope\n  --> /tmp/tmp0_jizsi5.rs:19:85\n   |\n19 |     !date.is_empty()\
    \ && date.len() == 10 && valid_day(date) && valid_month(date) && valid_year(date)\n\
    \   |                                                                        \
    \             ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmp0_jizsi5.rs:24:17\n   |\n24 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0_jizsi5.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0_jizsi5.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0_jizsi5.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0_jizsi5.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0_jizsi5.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ c"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    date.trim_end();\n    date.trim_start();\n   \
    \ date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n    date.trim_start();\n\
    \    date.trim_start();\n    date.trim_start();\n\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmpx848gtod.rs:109:17\n\
    \    |\n109 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpx848gtod.rs:109:25\n    |\n109 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpx848gtod.rs:110:17\n\
    \    |\n110 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpx848gtod.rs:110:25\n    |\n110 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpx848gtod.rs:111:17\n\
    \    |\n111 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpx848gtod.rs:111:25\n    |\n111 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpx848gtod.rs:112:17\n\
    \    |\n112 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpx848gtod.rs:112:25\n    |\n112 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpx848gtod.rs:113:17\n\
    \    |\n113 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpx848gtod.rs:113:25\n    |\n113 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpx848gtod.rs:114:17\n\
    \    |\n114 |     assert_eq!({left}, {right});\n    |                 ^^^^"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<Date>().is_ok()\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `Date` in this scope\n  --> /tmp/tmp68zjkgcz.rs:21:22\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |              - help: you\
    \ might be missing a type parameter: `<Date>`\n...\n21 |     date_str.parse::<Date>().is_ok()\n\
    \   |                      ^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68zjkgcz.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:25\n\
    \   "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_components = date_str.split_whitespace();\n\
    \    let mut days: u32 = 0;\n    let mut months: u32 = 0;\n    let mut year: u32\
    \ = 0;\n    let mut day: u32 = 0;\n    let mut month: u32 = 0;\n    let mut years:\
    \ u32 = 0;\n    let mut days_in_month: u32 = 0;\n    let mut days_in_year: u32\
    \ = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 =\
    \ 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n\
    \    let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n \
    \   let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n  \
    \  let mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n   \
    \ let mut days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let\
    \ mut days_in_years: u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let mut\
    \ days_in_months: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_years:\
    \ u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_months:\
    \ u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_years: u32\
    \ = 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_months: u32\
    \ = 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_years: u32 =\
    \ 0;\n    let mut days_in_months: u32 = 0;\n    let mut days_in_months: u32 =\
    \ 0;\n    let mut days_in_years: u32 = 0;\n    let mut days_in_years: u32 = 0;\n\
    \    let mut days_in_months: u32 = 0;\n    let mut days_in_months: u32 = 0;\n\
    \    let mut days_in_years: u32 = 0;\n    let mut days_in_years: u32 = 0;\n  \
    \  let mut days_in_months: u32 = 0;\n    let mut days_in_months: u32 = 0;\n  \
    \  let mut days_in_years: u32 = 0;\n    let mut days_in_years: u32 = 0;\n    let\
    \ mut days_in_months: u32 = 0;\n    let mut days_in_months: u32 = 0;\n    let\
    \ mut days_in_years: u32 = 0;\n    let mut days_in_years: u32 = 0;\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_278zrjy.rs:78:17\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_278zrjy.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_278zrjy.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_278zrjy.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_278zrjy.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_278zrjy.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_278zrjy.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_278zrjy.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_278zrjy.rs:82:17\n  \
    \ |\n82 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_278zrjy.rs:82:25\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_278zrjy.rs:83:17\n   |\n83 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.split_whitespace();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_str.next();\n    date_str.next();\n    date_str.next();\n\
    \    date_str.next();\n    date_\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `date_` in this scope\n   --> /tmp/tmps9waijz0.rs:117:5\n\
    \    |\n117 |     date_\n    |     ^^^^^ help: a local variable with a similar\
    \ name exists: `date`\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \   --> /tmp/tmps9waijz0.rs:122:17\n    |\n122 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmps9waijz0.rs:122:25\n    |\n122 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmps9waijz0.rs:123:17\n    |\n123 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmps9waijz0.rs:123:25\n    |\n123 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmps9waijz0.rs:124:17\n    |\n124 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmps9waijz0.rs:124:25\n    |\n124 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmps9waijz0.rs:125:17\n    |\n125 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmps9waijz0.rs:125:25\n    |\n125 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmps9waijz0.rs:126:17\n    |\n126 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmps9waijz0.rs:126:25\n    |\n126 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_lowercase();\n    let mut date_str = date_str.to_uppercase();\n\
    \    let mut date_str = date_str.trim_left_matches(\"-\");\n    let mut date_str\
    \ = date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.trim_left_matches(\"\
    /\");\n    let mut date_str = date_str.trim_right_matches(\"/\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\".\");\n    let mut date_str = date_str.trim_right_matches(\"\
    .\");\n    let mut date_str = date_str.trim_left_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.trim_left_matches(\"\
    .\");\n    let mut date_str = date_str.trim_right_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\"-\");\n    let mut date_str = date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.trim_left_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\".\");\n    let mut date_str = date_str.trim_right_matches(\"\
    .\");\n    let mut date_str = date_str.trim_left_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.trim_left_matches(\"\
    .\");\n    let mut date_str = date_str.trim_right_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\"-\");\n    let mut date_str = date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.trim_left_matches(\".\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\".\");\n    let mut date_str = date_str.trim_left_matches(\"\
    -\");\n    let mut date_str = date_str.trim_right_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_left_matches(\".\");\n    let mut date_str = date_str.trim_right_matches(\"\
    .\");\n    let mut date_str = date_str.trim_left_matches(\"-\");\n    let mut\
    \ date_str = date_str.trim_right_matches(\"-\");\n    let mut date_\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpjxc6gnkv.rs:59:18\n   |\n\
    59 |     let mut date_\n   |                  ^ help: add `;` here\n60 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjxc6gnkv.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjxc6gnkv.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjxc6gnkv.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjxc6gnkv.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjxc6gnkv.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjxc6gnkv.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjxc6gnkv.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjxc6gnkv.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjxc6gnkv.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjxc6gnkv.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        date_str.trim_left_matches(\"\
    -\");\n        date_str.trim_right_matches(\"-\");\n        let mut date_parts\
    \ = date_str.split_whitespace();\n        let mut days: u32 = 0;\n        let\
    \ mut months: u32 = 0;\n        let mut year: u32 = 0;\n        for part in date_parts\
    \ {\n            match part.as_str() {\n                \"01\" => months += 1,\n\
    \                \"03\" => months += 1,\n                \"05\" => months += 1,\n\
    \                \"07\" => months += 1,\n                \"08\" => months += 1,\n\
    \                \"10\" => months += 1,\n                \"12\" => months += 1,\n\
    \                \"04\" => months += 1,\n                \"06\" => months += 1,\n\
    \                \"09\" => months += 1,\n                \"11\" => months += 1,\n\
    \                \"02\" => months += 1,\n                _ => {\n            \
    \        let mut months_str = part.to_string();\n                    months_str.trim_left_matches(\"\
    -\");\n                    months_str.trim_right_matches(\"-\");\n           \
    \         let mut months_parts = months_str.split_whitespace();\n            \
    \        let mut days_str: &str;\n                    let mut days_parts: Vec<&str>;\n\
    \                    let mut days_parts_len: u32 = 0;\n                    let\
    \ mut days_parts_len2: u32 = 0;\n                    let mut days_parts_len3:\
    \ u32 = 0;\n                    let mut days_parts_len4: u32 = 0;\n          \
    \          for part in months_parts {\n                        match part.as_str()\
    \ {\n                            \"01\" => days_parts_len += 1,\n            \
    \                \"03\" => days_parts_len += 1,\n                            \"\
    05\" => days_parts_len += 1,\n                            \"07\" => days_parts_len\
    \ += 1,\n                            \"08\" => days_parts_len += 1,\n        \
    \                    \"10\" => days_parts_len += 1,\n                        \
    \    \"12\" => days_parts_len += 1,\n                            \"04\" => days_parts_len\
    \ += 1,\n                            \"06\" => days_parts_len += 1,\n        \
    \                    \"09\" => days_parts_len += 1,\n                        \
    \    \"11\" => days_parts_len += 1,\n                            \"02\" => days_parts_len\
    \ += 1,\n                            _ => {\n                                let\
    \ mut days_str = part.to_string();\n                                days_str.trim_left_matches(\"\
    -\");\n                                days_str.trim_right_matches(\"-\");\n \
    \                               days_parts.push(&days_str\n}\n\nfn main() {\n\
    \    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpm305pwf7.rs:91:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - unclosed delimiter\n...\n27 |         for part in date_parts\
    \ {\n   |                                - unclosed delimiter\n28 |          \
    \   match part.as_str() {\n   |                                 - unclosed delimiter\n\
    ...\n41 |                 _ => {\n   |                      - unclosed delimiter\n\
    ...\n52 |                     for part in months_parts {\n   |               \
    \                               - unclosed delimiter\n53 |                   \
    \      match part.as_str() {\n   |                                           \
    \  - unclosed delimiter\n...\n66 |                             _ => {\n   |  \
    \                                - this delimiter might not be properly closed...\n\
    ...\n71 | }\n   | - ...as it matches this but it has different indentation\n...\n\
    91 | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpm305pwf7.rs:70:48\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n70 |       \
    \                          days_parts.push(&days_str\n   |                   \
    \                             ^ unclosed delimiter\n71 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror: expected identifier, found keyword `fn`\n  --> /tmp/tmpm305pwf7.rs:73:1\n\
    \   |\n73 | fn main() {\n   | ^^ expected identifier, found keyword\n\nerror:\
    \ expected one of `=>`, `@`, `if`, or `|`, found `main`\n  --> /tmp/tmpm305pwf7.rs:73:4\n\
    \   |\n73 | fn main() {\n   |    ^^^^ expected one of `=>`, `@`, `if`, or `|`\n\
    \nwarning: use of deprecated associated function `core::str::<impl str>::trim_left_matches`:\
    \ superseded by `trim_start_matches`\n  --> /tmp/tmpm305pwf7.rs:21:18\n   |\n\
    21 |         date_str.trim_left_matches(\"-\");\n   |                  ^^^^^^^^^^^^^^^^^\
    \ help: replace the use of the deprecated associated function: `trim_start_matche"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_end().to_string();\n    let\
    \ mut date_parts = date_str.split_whitespace();\n    let mut days: u32 = 0;\n\
    \    let mut months: u32 = 0;\n    let mut years: u32 = 0;\n    let mut day: u32\
    \ = 0;\n    let mut month: u32 = 0;\n    let mut year: u32 = 0;\n    let mut date_part:\
    \ Vec<&str> = date_parts.iter().map(|x| x.to_string()).collect();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n\
    \    date_part.pop();\n    date_part.pop();\n    date_part.pop();\n    date_part.\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmpabihb4c_.rs:98:1\n   |\n98\
    \ | }\n   | ^\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpabihb4c_.rs:102:17\n    |\n102 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpabihb4c_.rs:102:25\n    |\n102 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpabihb4c_.rs:103:17\n    |\n103 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpabihb4c_.rs:103:25\n    |\n103 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpabihb4c_.rs:104:17\n    |\n104 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpabihb4c_.rs:104:25\n    |\n104 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpabihb4c_.rs:105:17\n    |\n105 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpabihb4c_.rs:105:25\n    |\n105 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpabihb4c_.rs:106:17\n    |\n106 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpabihb4c_.rs:106:25\n    |\n106 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpabihb4c_.r"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_components\
    \ = date_str.split_whitespace();\n        let mut month = 0;\n        let mut\
    \ day = 0;\n        let mut year = 0;\n        let mut days_in_month = [31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_year = [365,\
    \ 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        let mut days_in_month_index\
    \ = 0;\n        let mut days_in_year_index = 0;\n        let mut days_in_month_index2\
    \ = 0;\n        let mut days_in_year_index2 = 0;\n        let mut days_in_month_index3\
    \ = 0;\n        let mut days_in_year_index3 = 0;\n        let mut days_in_month_index4\
    \ = 0;\n        let mut days_in_year_index4 = 0;\n        let mut days_in_month_index5\
    \ = 0;\n        let mut days_in_year_index5 = 0;\n        let mut days_in_month_index6\
    \ = 0;\n        let mut days_in_year_index6 = 0;\n        let mut days_in_month_index7\
    \ = 0;\n        let mut days_in_year_index7 = 0;\n        let mut days_in_month_index8\
    \ = 0;\n        let mut days_in_year_index8 = 0;\n        let mut days_in_month_index9\
    \ = 0;\n        let mut days_in_year_index9 = 0;\n        let mut days_in_month_index10\
    \ = 0;\n        let mut days_in_year_index10 = 0;\n        let mut days_in_month_index11\
    \ = 0;\n        let mut days_in_year_index11 = 0;\n        let mut days_in_month_index12\
    \ = 0;\n        let mut days_in_year_index12 = 0;\n        let mut days_in_month_index13\
    \ = 0;\n        let mut days_in_year_index13 = 0;\n        let mut days_in_month_index14\
    \ = 0;\n        let mut days_in_year_index14 = 0;\n        let mut days_in_month_index15\
    \ = 0;\n        let mut days_in_year_index15 = 0;\n        let mut days_in_month_index16\
    \ = 0;\n        let mut days_in_year_index16 = 0;\n        let mut days_in_month_index17\
    \ = 0;\n        let mut days_in_year_index17 = 0;\n        let mut days_in_month_index18\
    \ = 0;\n        let mut days_in_year_index18 = 0;\n        let mut days_in_month_index19\
    \ = 0;\n        let mut days_in_year_index19 = 0;\n        let mut days_in_month_index20\
    \ = 0;\n        let mut days_in_year_index20 = 0;\n        let mut days_in_month_index21\
    \ = 0;\n        let mut days_in_year_index21 = 0;\n        let mut days_in_month_index22\
    \ = 0;\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmprwoz27ue.rs:90:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    70 | }\n   | - ...as it matches this but it has different indentation\n...\n90\
    \ | }\n   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprwoz27ue.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprwoz27ue.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprwoz27ue.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprwoz27ue.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprwoz27ue.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprwoz27ue.rs:76:25\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprwoz27ue.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprwoz27ue.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprwoz27ue.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n        date.len() == 10 &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    /\") &&\n        !date.contains(\".\") &&\n        !date.contains(\":\") &&\n\
    \        !date.contains(\"/\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"\
    :\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"/\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"\
    .\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"/\") &&\n\
    \        !date.contains(\":\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\"/\") &&\n        !date.contains(\":\") &&\n\
    \        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    /\") &&\n        !date.contains(\":\") &&\n        !date.contains(\".\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\"/\") &&\n        !date.contains(\"\
    :\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"/\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"\
    .\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"/\") &&\n\
    \        !date.contains(\":\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\"/\") &&\n        !date.contains(\":\") &&\n\
    \        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    /\") &&\n        !date.contains(\":\") &&\n        !date.contains(\".\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\"/\") &&\n        !date.contains(\"\
    :\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"/\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"\
    .\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"/\") &&\n\
    \        !date.contains(\":\") &&\n        !\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpd6781y33.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpd6781y33.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpd6781y33.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd6781y33.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd6781y33.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd6781y33.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd6781y33.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd6781y33.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd6781y33.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd6781y33.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpd6781y33.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd6781y33.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_str_split\
    \ = date_str.split_at(3);\n        let mut date_str_split_2 = date_str_split.split_at(2);\n\
    \        let mut date_str_split_3 = date_str_split_2.split_at(2);\n        let\
    \ mut date_str_split_4 = date_str_split_3.split_at(2);\n        let mut date_str_split_5\
    \ = date_str_split_4.split_at(2);\n        let mut date_str_split_6 = date_str_split_5.split_at(2);\n\
    \        let mut date_str_split_7 = date_str_split_6.split_at(2);\n        let\
    \ mut date_str_split_8 = date_str_split_7.split_at(2);\n        let mut date_str_split_9\
    \ = date_str_split_8.split_at(2);\n        let mut date_str_split_10 = date_str_split_9.split_at(2);\n\
    \        let mut date_str_split_11 = date_str_split_10.split_at(2);\n        let\
    \ mut date_str_split_12 = date_str_split_11.split_at(2);\n        let mut date_str_split_13\
    \ = date_str_split_12.split_at(2);\n        let mut date_str_split_14 = date_str_split_13.split_at(2);\n\
    \        let mut date_str_split_15 = date_str_split_14.split_at(2);\n        let\
    \ mut date_str_split_16 = date_str_split_15.split_at(2);\n        let mut date_str_split_17\
    \ = date_str_split_16.split_at(2);\n        let mut date_str_split_18 = date_str_split_17.split_at(2);\n\
    \        let mut date_str_split_19 = date_str_split_18.split_at(2);\n        let\
    \ mut date_str_split_20 = date_str_split_19.split_at(2);\n        let mut date_str_split_21\
    \ = date_str_split_20.split_at(2);\n        let mut date_str_split_22 = date_str_split_21.split_at(2);\n\
    \        let mut date_str_split_23 = date_str_split_22.split_at(2);\n        let\
    \ mut date_str_split_24 = date_str_split_23.split_at(2);\n        let mut date_str_split_25\
    \ = date_str_split_24.split_at(2);\n        let mut date_str_split_26 = date_str_split_25.split_at(2);\n\
    \        let mut date_str_split_27 = date_str_split_26.split_at(2);\n        let\
    \ mut date_str_split_28 = date_str_split_27.split_at(2);\n        let mut date_str_split_29\
    \ = date_str_split_28.split_at(2);\n        let mut date_str_split_30 = date_str_split_29.split_at(2);\n\
    \        let mut date_str_split_31 = date_str_split_30.split_at(2);\n        let\
    \ mut date_str_split_32 = date_str_split_31.split_at(2);\n\n}\n\nfn main() {\n\
    \    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmps_420767.rs:74:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    54 | }\n   | - ...as it matches this but it has different indentation\n...\n74\
    \ | }\n   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmps_420767.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmps_420767.rs:58:25\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmps_420767.rs:59:17\n  \
    \ |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps_420767.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps_420767.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmps_420767.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmps_420767.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmps_420767.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmps_420767.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut years: u32 = 0;\n    for\
    \ part in date_parts {\n        let mut part = part.to_owned();\n        if part.len()\
    \ == 0 {\n            return false;\n        }\n        let mut part_parts = part.split_whitespace();\n\
    \        if part_parts.len() != 3 {\n            return false;\n        }\n  \
    \      let mut month = part_parts[0].to_owned();\n        let mut day = part_parts[1].to_owned();\n\
    \        let mut year = part_parts[2].to_owned();\n        if month.len() == 0\
    \ {\n            return false;\n        }\n        if day.len() == 0 {\n     \
    \       return false;\n        }\n        if month.len() > 12 {\n            return\
    \ false;\n        }\n        if month.len() < 1 || month.len() > 12 {\n      \
    \      return false;\n        }\n        if day.len() > 31 {\n            return\
    \ false;\n        }\n        if day.len() < 1 || day.len() > 30 {\n          \
    \  return false;\n        }\n        if month.len() == 1 {\n            months\
    \ += 1;\n        }\n        if month.len() == 3 {\n            months += 1;\n\
    \        }\n        if month.len() == 5 {\n            months += 1;\n        }\n\
    \        if month.len() == 7 {\n            months += 1;\n        }\n        if\
    \ month.len() == 8 {\n            months += 1;\n        }\n        if month.len()\
    \ == 10 {\n            months += 1;\n        }\n        if month.len() == 12 {\n\
    \            months += 1;\n        }\n        if month.len() == 2 {\n        \
    \    months += 1;\n        }\n        if month.len() == 4 {\n            months\
    \ += 1;\n        }\n        if month.len() == 6 {\n            months += 1;\n\
    \        }\n        if month.len() == 9 {\n            months += 1;\n        }\n\
    \        if month.len() == 11 {\n            months += 1;\n        }\n       \
    \ if month.len() == 0 {\n            return false;\n        }\n        if months.is_multiple_of(3)\
    \ && day.len() == 1 {\n            days += 1;\n        }\n        if months.is_multiple_of(3)\
    \ && day.len() == 2 {\n            days += 1;\n        }\n        if months.is_multiple_of(3)\
    \ && day.len() == 3 {\n            days += 1;\n        }\n        if months.is_multiple_of(3)\
    \ && day.len() == 4 {\n            days += 1;\n        }\n        if months.is_multiple_of(3)\
    \ && day.len() == 5 {\n}\n\nfn main() {\n    let candidate = valid_date;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp9nidza2a.rs:128:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n...\n26  |     for part in date_parts\
    \ {\n    |                            - unclosed delimiter\n...\n107 |       \
    \  if months.is_multiple_of(3) && day.len() == 5 {\n    |                    \
    \                                   - this delimiter might not be properly closed...\n\
    108 | }\n    | - ...as it matches this but it has different indentation\n...\n\
    128 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n \
    \  --> /tmp/tmp9nidza2a.rs:112:17\n    |\n112 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmp9nidza2a.rs:112:25\n    |\n112 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmp9nidza2a.rs:113:17\n    |\n113 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmp9nidza2a.rs:113:25\n    |\n113 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmp9nidza2a.rs:114:17\n    |\n114 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmp9nidza2a.rs:114:25\n    |\n114 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmp9nidza2a.rs:115:17\n    |\n115 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmp9nidza2a.rs:115:25\n    |\n115 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not f"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n\n}\n\nfn\
    \ main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmp0e9tqmc9.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp0e9tqmc9.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp0e9tqmc9.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0e9tqmc9.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0e9tqmc9.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0e9tqmc9.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0e9tqmc9.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0e9tqmc9.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0e9tqmc9.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0e9tqmc9.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0e9tqmc9.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0e9tqmc9.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    let mut date_str_len = date_str.len();\n \
    \   let mut days_remaining: u32 = 0;\n    let mut months_remaining: u32 = 0;\n\
    \    let mut years_remaining: u32 = 0;\n    let mut days_remaining = date_str.chars().filter(|c|\
    \ c.is_digit()).count();\n    let mut months_remaining = date_str.chars().filter(|c|\
    \ c.is_ascii_digit()).count();\n    let mut years_remaining = date_str.chars().filter(|c|\
    \ c.is_ascii_digit()).count();\n    let mut months_remaining = date_str.chars().filter(|c|\
    \ c.is_ascii_digit()).count();\n    let mut years_remaining = date_str.chars().filter(|c|\
    \ c.is_ascii_digit()).count();\n    if date_str.is_empty() {\n        return false;\n\
    \    }\n    if days_remaining < 1 || days_remaining > 31 || months_remaining <\
    \ 1 || months_remaining > 12 || years_remaining < 1 || years_remaining > 30 ||\
    \ months_remaining < 1 || months_remaining > 12 || years_remaining < 1 || years_remaining\
    \ > 29 {\n        return false;\n    }\n    let mut date_str_split = date_str.split_whitespace();\n\
    \    let mut date_str_split_len = date_str_split.len();\n    let mut date_str_split_split_len\
    \ = date_str_split_len / 3;\n    let mut date_str_split_split_split_len = date_str_split_split_len\
    \ / 3;\n    let mut date_str_split_split_split_split_len = date_str_split_split_split_len\
    \ / 3;\n    let mut date_str_split_split_split_split_split_len = date_str_split_split_split_split_len\
    \ / 3;\n    let mut date_str_split_split_split_split_split_split_len = date_str_split_split_split_split_split_len\
    \ / 3;\n    let mut date_str_split_split_split_split_split_split_split_len = date_str_split_split_split_split_split_split_len\
    \ / 3;\n    let mut date_str_split_split_split_split_split_split_split_split_len\
    \ = date_str_split_split_split_split_split_split_split_len / 3;\n    let mut date_str_split_split_split_split_split_split_split_split_split_len\
    \ = date_str_split_split_split_split_split_split_split_split_len / 3;\n    let\
    \ mut date_str_split_split_split_split_split_split_split_split_split_len = date_str_split_split_split_split_split_split_split_split_len\
    \ / 3;\n    let mut date_str_split_split_split_split_split_split_split_split_split_split_len\
    \ = date_str_split_split_split_split_split_split_split_split_split_len / 3;\n\
    \    let mut date_str_split_split_split_split_split_split_split_split_split_split_\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpap3eq041.rs:47:82\n   |\n\
    47 |     let mut date_str_split_split_split_split_split_split_split_split_split_split_\n\
    \   |                                                                        \
    \          ^ help: add `;` here\n48 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpap3eq041.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpap3eq041.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpap3eq041.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpap3eq041.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpap3eq041.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpap3eq041.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpap3eq041.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpap3eq041.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpap3eq041.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpap3eq041.rs:56:25\n   |\n56 |     ass"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 &&\n        date.chars().all(|c| c.is_digit()) &&\n    \
    \    date.chars().all(|c| c != '-' && c != '/') &&\n        date.chars().all(|c|\
    \ c != '-' && c != '/') &&\n        date.chars().all(|c| c != '-' && c != '/')\
    \ &&\n        date.chars().all(|c| c != '-' && c != '/') &&\n        date.chars().all(|c|\
    \ c != '-' && c != '/') &&\n        date.chars().all(|c| c != '-' && c != '/')\
    \ &&\n        date.chars().all(|c| c != '-' && c != '/') &&\n        date.chars().all(|c|\
    \ c != '-' && c != '/') &&\n        date.chars().all(|c| c != '-' && c != '/')\
    \ &&\n        date.chars().all(|c| c != '-' && c != '/') &&\n        date.chars().all(|c|\
    \ c != '-' && c != '/') &&\n        date.chars().all(|c| c != '-' && c != '/')\
    \ &&\n        date.chars().all(|c| c != '-' && c != '/') &&\n        date.chars().all(|c|\
    \ c != '-' && c != '/') &&\n        date.chars().all(|c| c != '-' && c != '/')\
    \ &&\n        date.chars().all(|c| c != '-' && c != '/') &&\n        date.chars().all(|c|\
    \ c != '-' && c != '/') &&\n        date.chars().all(|c| c != '-' && c != '/')\
    \ &&\n        date.chars().all(|c| c != '-' && c != '/') &&\n        date.chars().all(|c|\
    \ c != '-' && c != '/') &&\n        date.chars().all(|c| c != '-' && c != '/')\
    \ &&\n        date.chars().all(|c| c != '-' && c != '/') &&\n        date.chars().all(|c|\
    \ c != '-' && c != '/') &&\n        date.chars().all(|c| c != '-' && c != '/')\
    \ &&\n        date.chars().all(|c| c != '-' && c != '/') &&\n        date.chars().all(|c|\
    \ c != '-' && c != '/') &&\n        date.chars().all(|c| c != '-' && c != '/')\
    \ &&\n\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmp_v1cod_b.rs:49:1\n\
    \   |\n49 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_v1cod_b.rs:53:17\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_v1cod_b.rs:53:25\n \
    \  |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_v1cod_b.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_v1cod_b.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_v1cod_b.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_v1cod_b.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_v1cod_b.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_v1cod_b.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_v1cod_b.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_v1cod_b.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_v1cod_b.rs:58:17\n   |\n58 |     "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.split_whitespace();\n    date_str.sort();\n\
    \    let mut days: u32 = 0;\n    let mut months: u32 = 0;\n    let mut year: u32\
    \ = 0;\n    for date_str in date_str {\n        let mut date_str = date_str.to_lowercase();\n\
    \        date_str.trim_left_matches(\"-\");\n        date_str.trim_right_matches(\"\
    -\");\n        let mut date_str = date_str.split_whitespace();\n        date_str.sort();\n\
    \        let mut date_str = date_str[0];\n        let mut date_str = date_str.to_lowercase();\n\
    \        date_str.trim_left_matches(\"-\");\n        date_str.trim_right_matches(\"\
    -\");\n        let mut date_str = date_str.split_whitespace();\n        date_str.sort();\n\
    \        let mut date_str = date_str[0];\n        let mut date_str = date_str.to_lowercase();\n\
    \        date_str.trim_left_matches(\"-\");\n        date_str.trim_right_matches(\"\
    -\");\n        let mut date_str = date_str.split_whitespace();\n        date_str.sort();\n\
    \        let mut date_str = date_str[0];\n        let mut date_str = date_str.to_lowercase();\n\
    \        date_str.trim_left_matches(\"-\");\n        date_str.trim_right_matches(\"\
    -\");\n        let mut date_str = date_str.split_whitespace();\n        date_str.sort();\n\
    \        let mut date_str = date_str[0];\n        let mut date_str = date_str.to_lowercase();\n\
    \        date_str.trim_left_matches(\"-\");\n        date_str.trim_right_matches(\"\
    -\");\n        let mut date_str = date_str.split_whitespace();\n        date_str.sort();\n\
    \        let mut date_str = date_str[0];\n        let mut date_str = date_str.to_lowercase();\n\
    \        date_str.trim_left_matches(\"-\");\n        date_str.trim_right_matches(\"\
    -\");\n        let mut date_str = date_str.split_whitespace();\n        date_str.sort();\n\
    \        let mut date_str = date_str[0];\n        let mut date_str = date_str.to_lowercase();\n\
    \        date_str.trim_left_matches(\"-\");\n        date_str.trim_right_matches(\"\
    -\");\n        let mut date_str = date_str.split_whitespace();\n        date_str.sort();\n\
    \        let mut date_str = date_str[0];\n        let mut date_str = date_str.to_lowercase();\n\
    \        date_str.trim_left_matches(\"-\");\n        date_str.trim_right_matches(\"\
    -\");\n        let mut date_\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpwzm4rq5j.rs:94:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n...\n27 |     for date_str in date_str {\n\
    \   |                              - this delimiter might not be properly closed...\n\
    ...\n74 | }\n   | - ...as it matches this but it has different indentation\n...\n\
    94 | }\n   |   ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmpwzm4rq5j.rs:73:22\n\
    \   |\n73 |         let mut date_\n   |                      ^ help: add `;` here\n\
    74 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpwzm4rq5j.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwzm4rq5j.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwzm4rq5j.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwzm4rq5j.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwzm4rq5j.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwzm4rq5j.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwzm4rq5j.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwzm4rq5j.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this sco"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut months_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut years_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    days_parts[0] =\
    \ days_parts[0].to_owned();\n    months_parts[0] = months_parts[0].to_owned();\n\
    \    years_parts[0] = years_parts[0].to_owned();\n    days_parts[1] = days_parts[1].to_owned();\n\
    \    months_parts[1] = months_parts[1].to_owned();\n    years_parts[1] = years_parts[1].to_owned();\n\
    \    let mut days: u32 = days_parts[0].parse().unwrap();\n    let mut months:\
    \ u32 = months_parts[0].parse().unwrap();\n    let mut years: u32 = years_parts[0].parse().unwrap();\n\
    \    if days_parts[1].len() == 2 {\n        days += days_parts[1].parse().unwrap();\n\
    \    }\n    if months_parts[1].len() == 2 {\n        months += months_parts[1].parse().unwrap();\n\
    \    }\n    if years_parts[1].len() == 2 {\n        years += years_parts[1].parse().unwrap();\n\
    \    }\n    if days_parts[2].len() == 2 {\n        days += days_parts[2].parse().unwrap();\n\
    \    }\n    if months_parts[2].len() == 2 {\n        months += months_parts[2].parse().unwrap();\n\
    \    }\n    if years_parts[2].len() == 2 {\n        years += years_parts[2].parse().unwrap();\n\
    \    }\n    if days > 31 && months > 12 && years > 30 {\n        return false;\n\
    \    }\n    if days > 30 && months > 12 && years > 29 {\n        return false;\n\
    \    }\n    if days > 29 && months > 12 {\n        return false;\n    }\n    if\
    \ days > 0 && months > 12 {\n        return false;\n    }\n    if days > 0 &&\
    \ months > 0 {\n        return false;\n    }\n    if days > 0 {\n        return\
    \ false;\n    }\n    if months > 12 {\n        return false;\n    }\n    if months\
    \ > 0 {\n        return false;\n    }\n    if years > 30 {\n        return false;\n\
    \    }\n    if years > 29 {\n        return false;\n    }\n    if years > 0 {\n\
    \        return false;\n    }\n    if years > 0 {\n        return false;\n}\n\n\
    fn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp3d8k38py.rs:108:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n...\n86  |     if years > 0 {\n    |\
    \                  - this delimiter might not be properly closed...\n87  |   \
    \      return false;\n88  | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n108 | }\n    |   ^\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp3d8k38py.rs:92:17\n   |\n92 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp3d8k38py.rs:92:25\n \
    \  |\n92 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3d8k38py.rs:93:17\n   |\n93 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3d8k38py.rs:93:25\n   |\n93 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3d8k38py.rs:94:17\n   |\n94 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3d8k38py.rs:94:25\n   |\n94 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3d8k38py.rs:95:17\n  \
    \ |\n95 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3d8k38py.rs:95:25\n   |\n95 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3d8k38py.rs:96:17\n   |\n96 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not f"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    if date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let month = date_parts[0].parse::<i32>().unwrap();\n\
    \    let day = date_parts[1].parse::<i32>().unwrap();\n    let year = date_parts[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 && day > 30 {\n        return\
    \ false;\n    }\n    if month == 6 && day > 31 {\n        return false;\n    }\n\
    \    if month == 9 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 11 && day > 30 {\n        return false;\n    }\n    if month == 1 && day > 31\
    \ {\n        return false;\n    }\n    if month == 3 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 5 && day > 31 {\n        return false;\n    }\n\
    \    if month == 7 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 8 && day > 31 {\n        return false;\n    }\n    if month == 10 && day > 31\
    \ {\n        return false;\n    }\n    if month == 12 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 1 && day > 30 {\n        return false;\n    }\n\
    \    if month == 3 && day > 30 {\n        return false;\n    }\n    if month ==\
    \ 5 && day > 30 {\n        return false;\n    }\n    if month == 7 && day > 30\
    \ {\n        return false;\n    }\n    if month == 8 && day > 30 {\n        return\
    \ false;\n    }\n    if month == 10 && day > 30 {\n        return false;\n   \
    \ }\n    if month == 12 && day > 30 {\n        return false;\n    }\n    if month\
    \ == 1 && day > 29 {\n        return false;\n    }\n    if month == 3 && day >\
    \ 29 {\n        return false;\n    }\n    if month == 5 && day > 29 {\n      \
    \  return false;\n    }\n    if month == 7 && day > 29 {\n        return false;\n\
    \    }\n    if month == 8 && day > 29 {\n        return false;\n    }\n    if\
    \ month == 10 && day > 29 {\n        return false;\n    }\n    if month == 12\
    \ && day > 29 {\n        return false;\n    }\n    if month == 1 && day > 28 {\n\
    \        return false;\n    }\n    if month == 3 && day > 28 {\n        return\
    \ false;\n    }\n    if month == 5 && day > 28 {\n        return false;\n    }\n\
    \    if month == 7 && day > 28 {\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpzbrpxhnc.rs:146:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n...\n125 |     if month == 7 && day >\
    \ 28 {\n    |                               - this delimiter might not be properly\
    \ closed...\n126 | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n146 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \   --> /tmp/tmpzbrpxhnc.rs:130:17\n    |\n130 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpzbrpxhnc.rs:130:25\n    |\n130 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpzbrpxhnc.rs:131:17\n    |\n131 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpzbrpxhnc.rs:131:25\n    |\n131 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpzbrpxhnc.rs:132:17\n    |\n132 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpzbrpxhnc.rs:132:25\n    |\n132 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpzbrpxhnc.rs:133:17\n    |\n133 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpzbrpxhnc.rs:133:25\n    |\n133 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpzbrpxhnc.rs:134:17\n    |\n134 |     assert_eq!({left},"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    date_str.trim_left_matches(\"/\");\n    date_str.trim_right_matches(\"\
    /\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts_len\
    \ = date_parts.len();\n    if date_parts_len < 3 || date_parts_len > 4 {\n   \
    \     return false;\n    }\n    let mut days_part = 0;\n    let mut months_part\
    \ = 0;\n    let mut years_part = 0;\n    for part in date_parts {\n        match\
    \ part {\n            \"01\" => days_part += 1,\n            \"03\" => days_part\
    \ += 3,\n            \"05\" => days_part += 5,\n            \"07\" => days_part\
    \ += 7,\n            \"08\" => days_part += 8,\n            \"10\" => days_part\
    \ += 10,\n            \"12\" => days_part += 12,\n            \"04\" => months_part\
    \ += 4,\n            \"06\" => months_part += 6,\n            \"09\" => months_part\
    \ += 9,\n            \"11\" => months_part += 11,\n            \"02\" => months_part\
    \ += 2,\n            _ => (),\n        }\n    }\n    if days_part < 1 || days_part\
    \ > 31 || months_part < 1 || months_part > 12 || years_part < 1 || years_part\
    \ > 20 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts_len = date_parts.len();\n    if date_parts_len != 3 {\n\
    \        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts_len = date_parts.len();\n    if date_parts_len != 2 {\n\
    \        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts_len = date_parts.len();\n    if date_parts_len != 4 {\n\
    \        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts_len = date_parts.len();\n    if date_parts_len != 6 {\n\
    \        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts_len = date_parts.len();\n    if date_parts_len != 8 {\n\
    \        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts_len = date_parts.len();\n    if date_parts_len != 10 {\n\
    \        return false;\n    }\n    let mut date_parts = \n}\n\nfn main() {\n \
    \   let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpp8qg_gcm.rs:83:1\n\
    \   |\n83 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpp8qg_gcm.rs:87:17\n   |\n87 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpp8qg_gcm.rs:87:25\n \
    \  |\n87 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp8qg_gcm.rs:88:17\n   |\n88 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp8qg_gcm.rs:88:25\n   |\n88 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp8qg_gcm.rs:89:17\n   |\n89 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp8qg_gcm.rs:89:25\n   |\n89 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp8qg_gcm.rs:90:17\n  \
    \ |\n90 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp8qg_gcm.rs:90:25\n   |\n90 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp8qg_gcm.rs:91:17\n   |\n91 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp8qg_gcm.rs:91:25\n\
    \   |\n91 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp8qg_gcm.rs:92:17\n   |\n92 |     "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    date_str.trim_left_matches(\"/\");\n    date_str.trim_right_matches(\"\
    /\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut months_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut years_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    days_parts[0] =\
    \ days_parts[0].to_owned();\n    months_parts[0] = months_parts[0].to_owned();\n\
    \    years_parts[0] = years_parts[0].to_owned();\n    days_parts[2] = days_parts[2].to_owned();\n\
    \    months_parts[2] = months_parts[2].to_owned();\n    years_parts[2] = years_parts[2].to_owned();\n\
    \    days_parts[3] = days_parts[3].to_owned();\n    months_parts[3] = months_parts[3].to_owned();\n\
    \    years_parts[3] = years_parts[3].to_owned();\n    days_parts[4] = days_parts[4].to_owned();\n\
    \    months_parts[4] = months_parts[4].to_owned();\n    years_parts[4] = years_parts[4].to_owned();\n\
    \    days_parts[5] = days_parts[5].to_owned();\n    months_parts[5] = months_parts[5].to_owned();\n\
    \    years_parts[5] = years_parts[5].to_owned();\n    days_parts[6] = days_parts[6].to_owned();\n\
    \    months_parts[6] = months_parts[6].to_owned();\n    years_parts[6] = years_parts[6].to_owned();\n\
    \    days_parts[7] = days_parts[7].to_owned();\n    months_parts[7] = months_parts[7].to_owned();\n\
    \    years_parts[7] = years_parts[7].to_owned();\n    days_parts[8] = days_parts[8].to_owned();\n\
    \    months_parts[8] = months_parts[8].to_owned();\n    year\n}\n\nfn main() {\n\
    \    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `year` in this scope\n  --> /tmp/tmp9u950i9z.rs:51:5\n\
    \   |\n51 |     year\n   |     ^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9u950i9z.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9u950i9z.rs:56:25\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9u950i9z.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9u950i9z.rs:57:25\n   |\n57 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9u950i9z.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9u950i9z.rs:58:25\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9u950i9z.rs:59:17\n  \
    \ |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9u950i9z.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9u950i9z.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9u950i9z.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tm"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmplqp0zvzk.rs:19:45\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                  ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmplqp0zvzk.rs:19:73\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                                              ^^^^^^^^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find function `valid_year` in this\
    \ scope\n  --> /tmp/tmplqp0zvzk.rs:19:103\n   |\n19 |     !date.is_empty() &&\
    \ date.len() == 10 && valid_day(date.as_str()) && valid_month(date.as_str()) &&\
    \ valid_year(date.as_str())\n   |                                            \
    \                                                           ^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplqp0zvzk.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplqp0zvzk.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplqp0zvzk.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplqp0zvzk.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplqp0zvzk.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplqp0zvzk.rs:26:25\n\
    \   |\n26 |"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    date.len() == 10 &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\":\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\":\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\":\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"-\") &&\n    !\n}\n\
    \nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmp27tr4nsz.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp27tr4nsz.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp27tr4nsz.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp27tr4nsz.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp27tr4nsz.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp27tr4nsz.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp27tr4nsz.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp27tr4nsz.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp27tr4nsz.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp27tr4nsz.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp27tr4nsz.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp27tr4nsz.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_str.split_whitespace();\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmph_pfh7hw.rs:70:17\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph_pfh7hw.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph_pfh7hw.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmph_pfh7hw.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph_pfh7hw.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph_pfh7hw.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmph_pfh7hw.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmph_pfh7hw.rs:73:25\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph_pfh7hw.rs:74:17\n  \
    \ |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph_pfh7hw.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph_pfh7hw.rs:75:17\n   |\n75 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    date.trim_left_matches(\"-\");\n    date.trim_right_matches(\"\
    -\");\n    date.trim_left_matches(\"/\");\n    date.trim_right_matches(\"/\");\n\
    \    let mut date_split = date.split('-');\n    let year = date_split[0];\n  \
    \  let month = date_split[1];\n    let day = date_split[2];\n    let mut date_split2\
    \ = month.split('-');\n    let month2 = date_split2[0];\n    let day2 = date_split2[1];\n\
    \    let mut date_split3 = day.split('-');\n    let day3 = date_split3[0];\n \
    \   let year2 = date_split3[1];\n    if month2.len() > 12 {\n        return false;\n\
    \    }\n    if day2.len() > 31 {\n        return false;\n    }\n    if month2.len()\
    \ > 12 {\n        return false;\n    }\n    if day3.len() > 30 {\n        return\
    \ false;\n    }\n    if month2.len() > 12 {\n        return false;\n    }\n  \
    \  if day3.len() > 29 {\n        return false;\n    }\n    if month2.len() < 1\
    \ || month2.len() > 12 {\n        return false;\n    }\n    if day3.len() < 1\
    \ || day3.len() > 31 {\n        return false;\n    }\n    if month2.len() < 1\
    \ || month2.len() > 12 {\n        return false;\n    }\n    if day3.len() < 1\
    \ || day3.len() > 30 {\n        return false;\n    }\n    if month2.len() < 1\
    \ || month2.len() > 12 {\n        return false;\n    }\n    if day3.len() < 1\
    \ || day3.len() > 29 {\n        return false;\n    }\n    if month2.len() < 1\
    \ || month2.len() > 12 {\n        return false;\n    }\n    if day3.len() < 1\
    \ || day3.len() > 29 {\n        return false;\n    }\n    if month2.len() < 1\
    \ || month2.len() > 12 {\n        return false;\n    }\n    if day3.len() < 1\
    \ || day3.len() > 29 {\n        return false;\n    }\n    if month2.len() < 1\
    \ || month2.len() > 12 {\n        return false;\n    }\n    if day3.len() < 1\
    \ || day3.len() > 29 {\n        return false;\n    }\n    if month2.len() < 1\
    \ || month2.len() > 12 {\n        return false;\n    }\n    if day3.len() < 1\
    \ || day3.len() > 29 {\n        return false;\n    }\n    if month2.len() < 1\
    \ || month2.len() > 12 {\n        return false;\n    }\n    if day3.len() < 1\
    \ || day3.len() > 29 {\n        return false;\n    }\n    if month2.len() < 1\
    \ || month2.len() > 12 {\n        return false;\n    }\n    if day3.len() < 1\
    \ || day3.len() > 29 {\n        return false;\n    }\n    if month2.len() < 1\
    \ || month2.\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n   --> /tmp/tmpgw4ifrkb.rs:107:1\n    |\n\
    107 | }\n    | ^\n\nerror: expected `{`, found `}`\n   --> /tmp/tmpgw4ifrkb.rs:107:1\n\
    \    |\n106 |     if month2.len() < 1 || month2.\n    |     -- this `if` expression\
    \ has a condition, but no block\n107 | }\n    | ^ expected `{`\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpgw4ifrkb.rs:111:17\n\
    \    |\n111 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpgw4ifrkb.rs:111:25\n    |\n111 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpgw4ifrkb.rs:112:17\n\
    \    |\n112 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpgw4ifrkb.rs:112:25\n    |\n112 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpgw4ifrkb.rs:113:17\n\
    \    |\n113 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpgw4ifrkb.rs:113:25\n    |\n113 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpgw4ifrkb.rs:114:17\n\
    \    |\n114 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpgw4ifrkb.rs:114:25\n    |\n114 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpgw4ifrkb.rs:115:17\n\
    \    |\n115 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        date_str.trim_end();\n\
    \        let mut date_parts = date_str.split_whitespace();\n        let mut days:\
    \ u32 = 0;\n        let mut months: u32 = 0;\n        let mut years: u32 = 0;\n\
    \        let mut days_in_month: u32 = 0;\n        let mut days_in_year: u32 =\
    \ 0;\n        let mut days_in_months: u32 = 0;\n        let mut days_in_years:\
    \ u32 = 0;\n        let mut days_in_months_2: u32 = 0;\n        let mut days_in_years_2:\
    \ u32 = 0;\n        let mut days_in_months_3: u32 = 0;\n        let mut days_in_years_3:\
    \ u32 = 0;\n        let mut days_in_months_4: u32 = 0;\n        let mut days_in_years_4:\
    \ u32 = 0;\n        let mut days_in_months_5: u32 = 0;\n        let mut days_in_years_5:\
    \ u32 = 0;\n        let mut days_in_months_6: u32 = 0;\n        let mut days_in_years_6:\
    \ u32 = 0;\n        let mut days_in_months_7: u32 = 0;\n        let mut days_in_years_7:\
    \ u32 = 0;\n        let mut days_in_months_8: u32 = 0;\n        let mut days_in_years_8:\
    \ u32 = 0;\n        let mut days_in_months_9: u32 = 0;\n        let mut days_in_years_9:\
    \ u32 = 0;\n        let mut days_in_months_10: u32 = 0;\n        let mut days_in_years_10:\
    \ u32 = 0;\n        let mut days_in_months_11: u32 = 0;\n        let mut days_in_years_11:\
    \ u32 = 0;\n        let mut days_in_months_12: u32 = 0;\n        let mut days_in_years_12:\
    \ u32 = 0;\n        let mut days_in_months_13: u32 = 0;\n        let mut days_in_years_13:\
    \ u32 = 0;\n        let mut days_in_months_14: u32 = 0;\n        let mut days_in_years_14:\
    \ u32 = 0;\n        let mut days_in_months_15: u32 = 0;\n        let mut days_in_years_15:\
    \ u32 = 0;\n        let mut days_in_months_16: u32 = 0;\n        let mut days_in_years_16:\
    \ u32 = 0;\n        let mut days_in_months_17: u32 = 0;\n        let mut days_in_years_17:\
    \ u32 = 0;\n        let mut days_in_months_18: u32 = 0;\n        let mut days_in_years_18:\
    \ u32 = 0;\n        let mut days_in_months_19: u32 = 0;\n        let mut \n}\n\
    \nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpuqfro6f8.rs:86:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    66 | }\n   | - ...as it matches this but it has different indentation\n...\n86\
    \ | }\n   |   ^\n\nerror: expected identifier, found `}`\n  --> /tmp/tmpuqfro6f8.rs:66:1\n\
    \   |\n66 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpuqfro6f8.rs:70:17\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpuqfro6f8.rs:70:25\n \
    \  |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqfro6f8.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuqfro6f8.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuqfro6f8.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuqfro6f8.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuqfro6f8.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuqfro6f8.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuqfro6f8"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut \n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpu51njy5i.rs:63:1\n\
    \   |\n63 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpu51njy5i.rs:67:17\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpu51njy5i.rs:67:25\n \
    \  |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu51njy5i.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu51njy5i.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu51njy5i.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu51njy5i.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpu51njy5i.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu51njy5i.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu51njy5i.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu51njy5i.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu51njy5i.rs:72:17\n   |\n72 |     "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap()\
    \ > 0 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyf2vfglx.rs:26:17\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyf2vfglx.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyf2vfglx.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyf2vfglx.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyf2vfglx.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyf2vfglx.rs:28:25\n   |\n28 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyf2vfglx.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyf2vfglx.rs:29:25\n   |\n29 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyf2vfglx.rs:30:17\n  \
    \ |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyf2vfglx.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyf2vfglx.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap()\
    \ > 0 &&\n    date_str.parse::<usize>().unwrap() <= 31 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 30 &&\n    date_str.parse::<usize>().unwrap() <= 29 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 12 &&\n    date_str.parse::<usize>().unwrap() >= 1 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 31\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvwvjjf24.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut year = date_parts[0];\n    let mut month = date_parts[1];\n    let\
    \ mut day = date_parts[2];\n    let mut days_in_month = match month {\n      \
    \  \"01\" => 31,\n        \"03\" => 31,\n        \"05\" => 30,\n        \"07\"\
    \ => 31,\n        \"08\" => 31,\n        \"10\" => 30,\n        \"12\" => 31,\n\
    \        _ => return false,\n    };\n    let mut days_in_year = match year {\n\
    \        \"2000\" => 365,\n        \"2001\" => 366,\n        \"2002\" => 365,\n\
    \        \"2003\" => 366,\n        \"2004\" => 365,\n        \"2005\" => 366,\n\
    \        \"2006\" => 365,\n        \"2007\" => 366,\n        \"2008\" => 365,\n\
    \        \"2009\" => 366,\n        \"2010\" => 365,\n        \"2011\" => 366,\n\
    \        \"2012\" => 365,\n        \"2013\" => 366,\n        \"2014\" => 365,\n\
    \        \"2015\" => 366,\n        \"2016\" => 365,\n        \"2017\" => 366,\n\
    \        \"2018\" => 365,\n        \"2019\" => 366,\n        \"2020\" => 365,\n\
    \        \"2021\" => 366,\n        \"2022\" => 365,\n        \"2023\" => 366,\n\
    \        \"2024\" => 365,\n        \"2025\" => 366,\n        \"2026\" => 365,\n\
    \        \"2027\" => 366,\n        \"2028\" => 365,\n        \"2029\" => 366,\n\
    \        \"2030\" => 365,\n        \"2031\" => 366,\n        \"2032\" => 365,\n\
    \        \"2033\" => 366,\n        \"2034\" => 365,\n        \"2035\" => 366,\n\
    \        \"2036\" => 365,\n        \"2037\" => 366,\n        \"2038\" => 365,\n\
    \        \"2039\" => 366,\n        \"2040\" => 365,\n        _ => return false,\n\
    \    };\n    let mut days_in_year_in_month = {\n        \"01\" => 31,\n      \
    \  \"03\" => 31,\n        \"05\" => 30,\n        \"07\" => 31,\n        \"08\"\
    \ => 31,\n        \"10\" => 30,\n        \"12\" => 31,\n        _ => return false,\n\
    \    };\n    if month == \"01\" {\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp0xugw4vp.rs:113:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n...\n92  |     if month == \"01\" {\n\
    \    |                      - this delimiter might not be properly closed...\n\
    93  | }\n    | - ...as it matches this but it has different indentation\n...\n\
    113 | }\n    |   ^\n\nerror: expected one of `.`, `;`, `?`, `}`, or an operator,\
    \ found `=>`\n  --> /tmp/tmp0xugw4vp.rs:18:37\n   |\n18 | fn valid_date(date:\
    \ String) -> bool {\n   |                                     ^ unclosed delimiter\n\
    ...\n83 |         \"01\" => 31,\n   |             -^^ expected one of `.`, `;`,\
    \ `?`, `}`, or an operator\n   |             |\n   |             help: `}` may\
    \ belong here\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0xugw4vp.rs:97:17\n\
    \   |\n97 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0xugw4vp.rs:97:25\n   |\n97 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0xugw4vp.rs:98:17\n   |\n98 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0xugw4vp.rs:98:25\n\
    \   |\n98 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0xugw4vp.rs:99:17\n   |\n99 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0xugw4vp.rs:99:25\n   |\n99 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmp0xugw4vp.rs:100:17\n    |\n100 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut days: u32 =\
    \ 0;\n        let mut months: u32 = 0;\n        let mut years: u32 = 0;\n    \
    \    let mut date_components = date_str.split_whitespace();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap();\n        date_components.next().unwrap();\n\
    \        date_components.next().unwrap\n}\n\nfn main() {\n    let candidate =\
    \ valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpzxyeiu9r.rs:111:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n19  |     if !date.is_empty() {\n   \
    \ |                         - this delimiter might not be properly closed...\n\
    ...\n91  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n111 | }\n    |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzxyeiu9r.rs:95:17\n   |\n95 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzxyeiu9r.rs:95:25\n   |\n95 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzxyeiu9r.rs:96:17\n   |\n96 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzxyeiu9r.rs:96:25\n   |\n96 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzxyeiu9r.rs:97:17\n  \
    \ |\n97 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzxyeiu9r.rs:97:25\n   |\n97 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzxyeiu9r.rs:98:17\n   |\n98 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzxyeiu9r.rs:98:25\n\
    \   |\n98 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzxyeiu9r.rs:99:17\n   |\n99 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this s"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    date.trim_left_matches(\"-\");\n    date.trim_right_matches(\"\
    -\");\n    date.trim_left_matches(\"/\");\n    date.trim_right_matches(\"/\");\n\
    \    let mut date_components = date.split('-');\n    let mut days: u32 = 0;\n\
    \    let mut months: u32 = 0;\n    let mut year: u32 = 0;\n    let mut days_in_month:\
    \ u32 = 0;\n    let mut days_in_year: u32 = 0;\n    let mut months_in_year: u32\
    \ = 0;\n    let mut years_in_year: u32 = 0;\n    let mut days_in_last_month: u32\
    \ = 0;\n    let mut days_in_last_year: u32 = 0;\n    let mut months_in_last_year:\
    \ u32 = 0;\n    let mut years_in_last_year: u32 = 0;\n    let mut days_in_next_month:\
    \ u32 = 0;\n    let mut days_in_next_year: u32 = 0;\n    let mut months_in_next_year:\
    \ u32 = 0;\n    let mut years_in_next_year: u32 = 0;\n    let mut days_in_next_month:\
    \ u32 = 0;\n    let mut days_in_next_year: u32 = 0;\n    let mut months_in_next_year:\
    \ u32 = 0;\n    let mut years_in_next_year: u32 = 0;\n    let mut days_in_next_month:\
    \ u32 = 0;\n    let mut days_in_next_year: u32 = 0;\n    let mut months_in_next_year:\
    \ u32 = 0;\n    let mut years_in_next_year: u32 = 0;\n    let mut days_in_next_month:\
    \ u32 = 0;\n    let mut days_in_next_year: u32 = 0;\n    let mut months_in_next_year:\
    \ u32 = 0;\n    let mut years_in_next_year: u32 = 0;\n    let mut days_in_next_month:\
    \ u32 = 0;\n    let mut days_in_next_year: u32 = 0;\n    let mut months_in_next_year:\
    \ u32 = 0;\n    let mut years_in_next_year: u32 = 0;\n    let mut days_in_next_month:\
    \ u32 = 0;\n    let mut days_in_next_year: u32 = 0;\n    let mut months_in_next_year:\
    \ u32 = 0;\n    let mut years_in_next_year: u32 = 0;\n    let mut days_in_next_month:\
    \ u32 = 0;\n    let mut days_in_next_year: u32 = 0;\n    let mut months_in_next_year:\
    \ u32 = 0;\n    let mut years_in_next_year: u32 = 0;\n    let mut days_in_next_month:\
    \ u32 = 0;\n    let mut days_in_next_year: u32 = 0;\n    let mut months_in_next_year:\
    \ u32 = 0;\n    let mut years_in_next_year: u32 = 0;\n    let mut days_in_next_month:\
    \ \n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected type, found `}`\n  --> /tmp/tmp04lix48i.rs:69:1\n   |\n\
    68 |     let mut days_in_next_month: \n   |         ---------------------- while\
    \ parsing the type for `mut days_in_next_month`\n69 | }\n   | ^ expected type\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp04lix48i.rs:73:17\n\
    \   |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp04lix48i.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp04lix48i.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp04lix48i.rs:74:25\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp04lix48i.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp04lix48i.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp04lix48i.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp04lix48i.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp04lix48i.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp04lix48i.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date.chars().nth(1).unwrap()) && valid_month(date.chars().nth(2).unwrap())\
    \ && valid_year(date.chars().nth(3).unwrap())\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmpoeuupa6d.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.chars().nth(1).unwrap()) &&\
    \ valid_month(date.chars().nth(2).unwrap()) && valid_year(date.chars().n...\n\
    \   |                         ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmpoeuupa6d.rs:19:68\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.chars().nth(1).unwrap()) &&\
    \ valid_month(date.chars().nth(2).unwrap()) && valid_year(date.chars().n...\n\
    \   |                                                                    ^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `valid_year` in\
    \ this scope\n  --> /tmp/tmpoeuupa6d.rs:19:113\n   |\n19 | ...) && valid_month(date.chars().nth(2).unwrap())\
    \ && valid_year(date.chars().nth(3).unwrap())\n   |                          \
    \                            ^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpoeuupa6d.rs:24:17\n  \
    \ |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpoeuupa6d.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpoeuupa6d.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpoeuupa6d.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpoeuupa6d.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpoeuupa6d.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    let mut date_components = date_str.split_whitespace();\n\
    \    let mut day = 0;\n    let mut month = 0;\n    let mut year = 0;\n    let\
    \ mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let\
    \ mut days_in_year = [365, 31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 29];\n\
    \    let mut days_in_month_in_year = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31,\
    \ 30, 31];\n    let mut days_in_year_in_year = [365, 31, 31, 31, 31, 31, 31, 30,\
    \ 30, 30, 30, 30, 30, 29];\n    let mut days_in_month_in_year_in_year = [31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let mut days_in_year_in_year_in_year\
    \ = [365, 31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 29];\n    let mut days_in_month_in_year_in_year_in_year\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let mut days_in_year_in_year_in_year_in_year\
    \ = [365, 31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 29];\n    let mut days_in_month_in_year_in_year_in_year_in_year\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let mut days_in_year_in_year_in_year_in_year_in_year\
    \ = [365, 31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 29];\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year\
    \ = [365, 31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 29];\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year\
    \ = [365, 31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 29];\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year\
    \ = [365, 31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 29];\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let mut days_in_year_in_year_in_year_in_year_in_year\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmph28bk5dk.rs:41:57\n   |\n\
    41 |     let mut days_in_year_in_year_in_year_in_year_in_year\n   |          \
    \                                               ^ help: add `;` here\n42 | }\n\
    \   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph28bk5dk.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph28bk5dk.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmph28bk5dk.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmph28bk5dk.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph28bk5dk.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph28bk5dk.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph28bk5dk.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmph28bk5dk.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph28bk5dk.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph28bk5dk.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                    "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut month\
    \ = date_parts[0].parse::<usize>().unwrap();\n    let mut day = date_parts[1].parse::<usize>().unwrap();\n\
    \    let mut year = date_parts[2].parse::<usize>().unwrap();\n    if month < 1\
    \ || month > 12 {\n        return false;\n    }\n    if day < 1 || day > 31 {\n\
    \        return false;\n    }\n    if month == 2 && day > 29 {\n        return\
    \ false;\n    }\n    if month == 4 && day > 30 {\n        return false;\n    }\n\
    \    if month == 6 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 9 && day > 30 {\n        return false;\n    }\n    if month == 11 && day > 31\
    \ {\n        return false;\n    }\n    if month == 1 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 3 && day > 31 {\n        return false;\n    }\n\
    \    if month == 5 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 7 && day > 31 {\n        return false;\n    }\n    if month == 8 && day > 31\
    \ {\n        return false;\n    }\n    if month == 10 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 12 && day > 31 {\n        return false;\n   \
    \ }\n    if month == 1 && day > 30 {\n        return false;\n    }\n    if month\
    \ == 3 && day > 30 {\n        return false;\n    }\n    if month == 5 && day >\
    \ 30 {\n        return false;\n    }\n    if month == 7 && day > 30 {\n      \
    \  return false;\n    }\n    if month == 8 && day > 30 {\n        return false;\n\
    \    }\n    if month == 10 && day > 30 {\n        return false;\n    }\n    if\
    \ month == 12 && day > 30 {\n        return false;\n    }\n    if month == 1 &&\
    \ day > 29 {\n        return false;\n    }\n    if month == 3 && day > 29 {\n\
    \        return false;\n    }\n    if month == 5 && day > 29 {\n        return\
    \ false;\n    }\n    if month == 7 && day > 29 {\n        return false;\n    }\n\
    \    if month == 8 && day > 29 {\n        return false;\n    }\n    if month ==\
    \ 10 && day > 29 {\n        return false;\n    }\n    if month == 12 && day >\
    \ 29 {\n        return false;\n    }\n    if month == 1 && day > 28 {\n      \
    \  return false;\n    }\n    if month == 3 && day > 28 {\n        return false;\n\
    \    }\n    if month == 5 && day > 28 {\n        return false;\n    }\n    if\
    \ month == 7 && day > 28 {\n        return false;\n    }\n    if month == 8 &&\
    \ day \n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n   --> /tmp/tmprwl363nm.rs:123:1\n    |\n\
    122 |     if month == 8 && day \n    |     -- this `if` expression has a condition,\
    \ but no block\n123 | }\n    | ^ expected `{`\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n   --> /tmp/tmprwl363nm.rs:127:17\n    |\n127 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmprwl363nm.rs:127:25\n\
    \    |\n127 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmprwl363nm.rs:128:17\n    |\n128 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmprwl363nm.rs:128:25\n\
    \    |\n128 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmprwl363nm.rs:129:17\n    |\n129 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmprwl363nm.rs:129:25\n\
    \    |\n129 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmprwl363nm.rs:130:17\n    |\n130 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmprwl363nm.rs:130:25\n\
    \    |\n130 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmprwl363nm.rs:131:17\n    |\n131 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmprwl363nm.rs:131:25\n\
    \    |\n131 |     assert_eq!({left}, {right});\n    |                  "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.chars().nth(1).unwrap()) && valid_month(date.chars().nth(2).unwrap())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmpvreo_7so.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.chars().nth(1).unwrap()) && valid_month(date.chars().nth(2).unwrap())\n\
    \   |                       ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmpvreo_7so.rs:19:66\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.chars().nth(1).unwrap()) && valid_month(date.chars().nth(2).unwrap())\n\
    \   |                                                                  ^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvreo_7so.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvreo_7so.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvreo_7so.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvreo_7so.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvreo_7so.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvreo_7so.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvreo_7so.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvreo_7so.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_lowercase();\n    date_str.trim_end();\n \
    \   let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end();\n    let mut date_str = date_str.to_owned();\n    let\
    \ mut date_str = date_str.to_lowercase();\n    date_str.trim_end();\n    let mut\
    \ date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end();\n    let mut date_str = date_str.to_owned();\n    let\
    \ mut date_str = date_str.to_lowercase();\n    date_str.trim_end();\n    let mut\
    \ date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end();\n    let mut date_str = date_str.to_owned();\n    let\
    \ mut date_str = date_str.to_lowercase();\n    date_str.trim_end();\n    let mut\
    \ date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end();\n    let mut date_str = date_str.to_owned();\n    let\
    \ mut date_str = date_str.to_lowercase();\n    date_str.trim_end();\n    let mut\
    \ date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end();\n    let mut date_str = date_str.to_owned();\n    let\
    \ mut date_str = date_str.to_lowercase();\n    date_str.trim_end();\n    let mut\
    \ date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end();\n    let mut date_str = date_str.to_owned();\n    let\
    \ mut date_str = date_str.to_lowercase();\n    date_str.trim_end();\n    let mut\
    \ date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end();\n    let mut date_str = date_str.to_owned();\n    let\
    \ mut date_str = date_str.to_lowercase();\n    date_str.trim_end();\n    let mut\
    \ date_str = date_str.to_owned();\n    let mut date_str = date_str.to_lowercase();\n\
    \    date_str.trim_end();\n    let mut date_str = date_str.to_owned();\n    let\
    \ mut date_str = date_str.to_lowercase();\n    date_str.trim_end();\n    let mut\
    \ date_\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp0ugmblhy.rs:72:18\n   |\n\
    72 |     let mut date_\n   |                  ^ help: add `;` here\n73 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0ugmblhy.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0ugmblhy.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0ugmblhy.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0ugmblhy.rs:78:25\n   |\n78 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0ugmblhy.rs:79:17\n  \
    \ |\n79 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0ugmblhy.rs:79:25\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0ugmblhy.rs:80:17\n   |\n80 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0ugmblhy.rs:80:25\n\
    \   |\n80 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0ugmblhy.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0ugmblhy.rs:81:25\n   |\n81 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap()\
    \ > 0 &&\n    date_str.parse::<usize>().unwrap() <= 31 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 30 &&\n    date_str.parse::<usize>().unwrap() <= 29 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 12 &&\n    date_str.parse::<usize>().unwrap() >= 1 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 31\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvwvjjf24.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvwvjjf24.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvwvjjf24.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvwvjjf24.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    !date.len() < 1 &&\n    !date.len() > 31 &&\n    !date.len() < 30 &&\n\
    \    !date.len() > 29 &&\n    !date.len() < 12 &&\n    !date.len() > 12 &&\n \
    \   !date.chars().any(|c| !c.is_digit() || c < '0' || c > '9') &&\n    !date.chars().any(|c|\
    \ !c.is_ascii_digit())\n}\n\nfn main() {\n    let candidate = valid_date;\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7oduxtuj.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7oduxtuj.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7oduxtuj.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7oduxtuj.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7oduxtuj.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7oduxtuj.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7oduxtuj.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7oduxtuj.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7oduxtuj.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7oduxtuj.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7oduxtuj.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut date_parts\
    \ = date_parts.split_at(3);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw4iywnb2.rs:70:17\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw4iywnb2.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw4iywnb2.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw4iywnb2.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw4iywnb2.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw4iywnb2.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw4iywnb2.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw4iywnb2.rs:73:25\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw4iywnb2.rs:74:17\n  \
    \ |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw4iywnb2.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw4iywnb2.rs:75:17\n   |\n75 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    date.trim_left_matches('-');\n    date.trim_right_matches('-');\n\
    \    let mut date_components = date.split_whitespace();\n    let mut days: u32\
    \ = 0;\n    let mut months: u32 = 0;\n    let mut years: u32 = 0;\n    for component\
    \ in date_components {\n        let component = component.to_lowercase();\n  \
    \      if component == \"jan\" || component == \"feb\" || component == \"mar\"\
    \ || component == \"apr\" || component == \"may\" || component == \"jun\" || component\
    \ == \"jul\" || component == \"aug\" || component == \"sep\" || component == \"\
    oct\" || component == \"nov\" || component == \"dec\" {\n            months +=\
    \ 1;\n        } else if component == \"january\" || component == \"february\"\
    \ || component == \"march\" || component == \"april\" || component == \"may\"\
    \ || component == \"june\" || component == \"july\" || component == \"august\"\
    \ || component == \"september\" || component == \"october\" || component == \"\
    november\" || component == \"december\" {\n            months += 1;\n        }\
    \ else if component == \"jan\" || component == \"feb\" || component == \"mar\"\
    \ || component == \"apr\" || component == \"may\" || component == \"jun\" || component\
    \ == \"jul\" || component == \"aug\" || component == \"sep\" || component == \"\
    oct\" || component == \"nov\" || component == \"dec\" {\n            months +=\
    \ 1;\n        } else if component == \"january\" || component == \"february\"\
    \ || component == \"march\" || component == \"april\" || component == \"may\"\
    \ || component == \"june\" || component == \"july\" || component == \"august\"\
    \ || component == \"september\" || component == \"october\" || component == \"\
    november\" || component == \"december\" {\n            months += 1;\n        }\
    \ else if component == \"jan\" || component == \"feb\" || component == \"mar\"\
    \ || component == \"apr\" || component == \"may\" || component == \"jun\" || component\
    \ == \"jul\" || component == \"aug\" || component == \"sep\" || component == \"\
    oct\" || component == \"nov\" || component == \"dec\" {\n            months +=\
    \ 1;\n        } else if component == \"january\" || component == \"february\"\
    \ || component == \"march\" || component == \"april\" || component == \"may\"\
    \ || component == \"june\" || component == \"july\" || component == \"august\"\
    \ || component == \"september\" || component == \"october\" || component == \"\
    november\" || component == \"december\" {\n            months += 1;\n        }\
    \ else if component == \"jan\" || component == \"feb\" || component == \"mar\"\
    \ || component == \"apr\" || component == \"may\" || component == \"jun\" || component\
    \ == \"jul\" || component == \"aug\" || component == \"sep\" || component == \"\
    oct\" || component == \"nov\" || \n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmptslrg5x7.rs:61:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n...\n26 |     for component in date_components\
    \ {\n   |                                      - this delimiter might not be properly\
    \ closed...\n...\n41 | }\n   | - ...as it matches this but it has different indentation\n\
    ...\n61 | }\n   |   ^\n\nerror: expected expression, found `}`\n  --> /tmp/tmptslrg5x7.rs:41:1\n\
    \   |\n41 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmptslrg5x7.rs:45:17\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmptslrg5x7.rs:45:25\n \
    \  |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptslrg5x7.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptslrg5x7.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptslrg5x7.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptslrg5x7.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptslrg5x7.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptslrg5x7.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in thi"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    date.trim_end().to_string().parse::<i32>().unwrap()\
    \ > 0 &&\n        date.trim_end().to_string().parse::<i32>().unwrap() <= 31 &&\n\
    \        date.trim_end().to_string().parse::<i32>().unwrap() <= 30 &&\n      \
    \  date.trim_end().to_string().parse::<i32>().unwrap() <= 29 &&\n        date.trim_end().to_string().parse::<i32>().unwrap()\
    \ <= 12 &&\n        date.trim_end().to_string().parse::<i32>().unwrap() >= 1 &&\n\
    \        date.trim_end().to_string().parse::<i32>().unwrap() <= 12\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6hrhcu83.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6hrhcu83.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6hrhcu83.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6hrhcu83.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6hrhcu83.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6hrhcu83.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6hrhcu83.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6hrhcu83.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6hrhcu83.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6hrhcu83.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6hrhcu83.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.chars().next().unwrap()) && valid_month(date.chars().next().unwrap())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp6mxtm05w.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.chars().next().unwrap()) && valid_month(date.chars().next().unwrap())\n\
    \   |                       ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmp6mxtm05w.rs:19:66\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.chars().next().unwrap()) && valid_month(date.chars().next().unwrap())\n\
    \   |                                                                  ^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6mxtm05w.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6mxtm05w.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6mxtm05w.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6mxtm05w.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6mxtm05w.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6mxtm05w.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6mxtm05w.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6mxtm05w.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut days: u32 =\
    \ 0;\n        let mut months: u32 = 0;\n        let mut year: u32 = 0;\n     \
    \   let mut date_parts: Vec<&str> = date_str.split_whitespace();\n        for\
    \ part in date_parts {\n            if part.len() < 2 {\n                return\
    \ false;\n            }\n            let mut date_part = part.to_owned();\n  \
    \          if date_part.len() < 2 {\n                return false;\n         \
    \   }\n            let mut date_part_str = date_part.to_string();\n          \
    \  if date_part_str.len() < 2 {\n                return false;\n            }\n\
    \            let date_part_str = date_part_str.to_owned();\n            if date_part_str.len()\
    \ < 2 {\n                return false;\n            }\n            let mut date_part_str\
    \ = date_part_str.to_owned();\n            if date_part_str.len() < 2 {\n    \
    \            return false;\n            }\n            let date_part_str = date_part_str.to_owned();\n\
    \            if date_part_str.len() < 2 {\n                return false;\n   \
    \         }\n            let date_part_str = date_part_str.to_owned();\n     \
    \       if date_part_str.len() < 2 {\n                return false;\n        \
    \    }\n            let date_part_str = date_part_str.to_owned();\n          \
    \  if date_part_str.len() < 2 {\n                return false;\n            }\n\
    \            let date_part_str = date_part_str.to_owned();\n            if date_part_str.len()\
    \ < 2 {\n                return false;\n            }\n            let date_part_str\
    \ = date_part_str.to_owned();\n            if date_part_str.len() < 2 {\n    \
    \            return false;\n            }\n            let date_part_str = date_part_str.to_owned();\n\
    \            if date_part_str.len() < 2 {\n                return false;\n   \
    \         }\n            let date_part_str = date_part_str.to_owned();\n     \
    \       if date_part_str.len() < 2 {\n                return false;\n        \
    \    }\n            let date_part_str = date_part_str.to_owned();\n          \
    \  if date_part_str.len() < 2 {\n                return false;\n            }\n\
    \            let date_part_str = date_part_str.to_owned();\n            if date_part_str.len()\
    \ < 2 {\n                return false;\n            }\n            let date_part_str\
    \ = date_part_str.to_owned();\n            if date_part_str.len() < 2 {\n    \
    \            return false;\n            }\n            let date_part_str = date_part_str.to_owned();\n\
    \            if date_part_str.len() < 2 {\n                return false;\n   \
    \         }\n            let date_part_str = date_part_str.to_owned();\n     \
    \       if date_part_str.len() < 2 {\n                return false;\n        \
    \    }\n            let date_part_str = date_part_str.to_owned();\n          \
    \  if date_part_str.len() < 2 {\n                return false;\n            }\n\
    \            let date_part_str = date_part_str.to_owned();\n            if \n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmplevnw89i.rs:119:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n19  |     if !date.is_empty() {\n   \
    \ |                         - unclosed delimiter\n...\n25  |         for part\
    \ in date_parts {\n    |                                - this delimiter might\
    \ not be properly closed...\n...\n99  | }\n    | - ...as it matches this but it\
    \ has different indentation\n...\n119 | }\n    |   ^\n\nerror: expected expression,\
    \ found `}`\n  --> /tmp/tmplevnw89i.rs:99:1\n   |\n99 | }\n   | ^ expected expression\n\
    \nerror[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmplevnw89i.rs:103:17\n\
    \    |\n103 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmplevnw89i.rs:103:25\n    |\n103 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmplevnw89i.rs:104:17\n\
    \    |\n104 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmplevnw89i.rs:104:25\n    |\n104 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmplevnw89i.rs:105:17\n\
    \    |\n105 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmplevnw89i.rs:105:25\n    |\n105 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmplevnw89i.rs:106:17\n\
    \    |\n106 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmplevnw89i.rs:106:25\n    |\n106 |     assert_eq!({l"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<Date>().is_ok()\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `Date` in this scope\n  --> /tmp/tmp68zjkgcz.rs:21:22\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |              - help: you\
    \ might be missing a type parameter: `<Date>`\n...\n21 |     date_str.parse::<Date>().is_ok()\n\
    \   |                      ^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68zjkgcz.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:25\n\
    \   "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date) && valid_month(date) && valid_year(date)\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date) && valid_month(date) && valid_year(date)\n\
    \   |                         ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:19:44\n\
    \   |\n19 |     !date.is_empty() && valid_day(date) && valid_month(date) && valid_year(date)\n\
    \   |                                            ^^^^^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `valid_year` in this scope\n  -->\
    \ /tmp/tmpsyuq9yvq.rs:19:65\n   |\n19 |     !date.is_empty() && valid_day(date)\
    \ && valid_month(date) && valid_year(date)\n   |                             \
    \                                    ^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:24:17\n  \
    \ |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsyuq9yvq.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsyuq9yvq.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsyuq9yvq.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsyuq9yvq.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \   "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                         ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:19:53\n   |\n19 |     !date.is_empty() && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                          ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:83\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                          ^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7szrmq88.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find v"
  stdout: ''
  timestamp: 1659800297
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n        date.len() == 10 &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    /\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"/\") &&\n\
    \        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    .\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\"-\") &&\n        !\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpdt5b75hj.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpdt5b75hj.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpdt5b75hj.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdt5b75hj.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdt5b75hj.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdt5b75hj.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdt5b75hj.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdt5b75hj.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdt5b75hj.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdt5b75hj.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdt5b75hj.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdt5b75hj.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date.as_str()) && valid_month(date.as_str())\n}\n\nfn main() {\n\
    \    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmpjn9csl6d.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                         ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmpjn9csl6d.rs:19:53\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                                                     ^^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjn9csl6d.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjn9csl6d.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjn9csl6d.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjn9csl6d.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjn9csl6d.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjn9csl6d.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjn9csl6d.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjn9csl6d.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    !date.len() < 1 &&\n    !date.len() > 31 &&\n    !date.len() < 30 &&\n\
    \    !date.len() > 29 &&\n    !date.len() < 12 &&\n    !date.len() > 12 &&\n \
    \   !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\")\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpt68q220y.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt68q220y.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt68q220y.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpt68q220y.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt68q220y.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpt68q220y.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpt68q220y.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpt68q220y.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpt68q220y.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt68q220y.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt68q220y.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap()\
    \ > 0 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ < 32 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyf2vfglx.rs:26:17\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyf2vfglx.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyf2vfglx.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyf2vfglx.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyf2vfglx.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyf2vfglx.rs:28:25\n   |\n28 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyf2vfglx.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyf2vfglx.rs:29:25\n   |\n29 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyf2vfglx.rs:30:17\n  \
    \ |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyf2vfglx.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyf2vfglx.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n        date.len() == 10 &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    /\") &&\n        !date.contains(\".\") &&\n        !date.contains(\":\") &&\n\
    \        !date.contains(\"/\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"\
    :\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\":\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\":\") &&\n        !date.contains(\".\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"\
    .\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\":\") &&\n\
    \        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    :\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\":\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\":\") &&\n        !date.contains(\".\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"\
    .\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\":\") &&\n\
    \        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    :\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\":\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\":\") &&\n        !date.contains(\".\") &&\n\
    \        !date.contains(\"-\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"\
    .\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\":\") &&\n\
    \        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n        !date.contains(\"\
    :\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"-\") &&\n\
    \        !date.contains(\":\") &&\n        !\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpg2ms8rew.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpg2ms8rew.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpg2ms8rew.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg2ms8rew.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg2ms8rew.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg2ms8rew.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg2ms8rew.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg2ms8rew.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg2ms8rew.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg2ms8rew.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg2ms8rew.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg2ms8rew.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.split_whitespace();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n    date_str.shift();\n\
    \    date_str.shift();\n    date_\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `date_` in this scope\n   --> /tmp/tmpv99gtyaq.rs:117:5\n\
    \    |\n117 |     date_\n    |     ^^^^^ help: a local variable with a similar\
    \ name exists: `date`\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \   --> /tmp/tmpv99gtyaq.rs:122:17\n    |\n122 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpv99gtyaq.rs:122:25\n    |\n122 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpv99gtyaq.rs:123:17\n    |\n123 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpv99gtyaq.rs:123:25\n    |\n123 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpv99gtyaq.rs:124:17\n    |\n124 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpv99gtyaq.rs:124:25\n    |\n124 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpv99gtyaq.rs:125:17\n    |\n125 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpv99gtyaq.rs:125:25\n    |\n125 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmpv99gtyaq.rs:126:17\n    |\n126 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmpv99gtyaq.rs:126:25\n    |\n126 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_str =\
    \ date_str.trim_right_matches('-');\n        let mut date_str = date_str.trim_left_matches('-');\n\
    \        let mut date_str = date_str.trim_right_matches(' ');\n        let mut\
    \ date_str = date_str.trim_left_matches(' ');\n        let mut date_str = date_str.trim_right_matches('\
    \ ');\n        let mut date_str = date_str.trim_left_matches('-');\n        let\
    \ mut date_str = date_str.trim_right_matches('-');\n        let mut date_str =\
    \ date_str.trim_left_matches('-');\n        let mut date_str = date_str.trim_right_matches('\
    \ ');\n        let mut date_str = date_str.trim_left_matches(' ');\n        let\
    \ mut date_str = date_str.trim_right_matches(' ');\n        let mut date_str =\
    \ date_str.trim_left_matches('-');\n        let mut date_str = date_str.trim_right_matches('-');\n\
    \        let mut date_str = date_str.trim_left_matches('-');\n        let mut\
    \ date_str = date_str.trim_right_matches(' ');\n        let mut date_str = date_str.trim_left_matches('\
    \ ');\n        let mut date_str = date_str.trim_right_matches(' ');\n        let\
    \ mut date_str = date_str.trim_left_matches('-');\n        let mut date_str =\
    \ date_str.trim_right_matches('-');\n        let mut date_str = date_str.trim_left_matches('-');\n\
    \        let mut date_str = date_str.trim_right_matches(' ');\n        let mut\
    \ date_str = date_str.trim_left_matches(' ');\n        let mut date_str = date_str.trim_right_matches('\
    \ ');\n        let mut date_str = date_str.trim_left_matches('-');\n        let\
    \ mut date_str = date_str.trim_right_matches('-');\n        let mut date_str =\
    \ date_str.trim_left_matches('-');\n        let mut date_str = date_str.trim_right_matches('\
    \ ');\n        let mut date_str = date_str.trim_left_matches(' ');\n        let\
    \ mut date_str = date_str.trim_right_matches(' ');\n        let mut date_str =\
    \ date_str.trim_left_matches('-');\n        let mut date_str = date_str.trim_right_matches('-');\n\
    \        let mut date_str = date_str.trim_left_matches('-');\n        let mut\
    \ date_str = date_str.trim_right_matches(' ');\n        let mut date_str = date_str.trim_left_matches('\
    \ ');\n        let mut date_str = date_str.trim_right_matches(' ');\n        let\
    \ mut date_str = date_\n}\n\nfn main() {\n    let candidate = valid_date;\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpwxhoftlo.rs:77:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    57 | }\n   | - ...as it matches this but it has different indentation\n...\n77\
    \ | }\n   |   ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmpwxhoftlo.rs:56:33\n\
    \   |\n56 |         let mut date_str = date_\n   |                           \
    \      ^ help: add `;` here\n57 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `date_` in this scope\n  --> /tmp/tmpwxhoftlo.rs:56:28\n \
    \  |\n56 |         let mut date_str = date_\n   |                            ^^^^^\
    \ help: a local variable with a similar name exists: `date`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwxhoftlo.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwxhoftlo.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwxhoftlo.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwxhoftlo.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwxhoftlo.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwxhoftlo.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwxhoftlo.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n  "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    if date_parts.len() != 3 {\n        return false;\n    }\n    let mut year\
    \ = date_parts[0];\n    let mut month = date_parts[1];\n    let mut day = date_parts[2];\n\
    \    if !year.is_digit() {\n        return false;\n    }\n    if !month.is_digit()\
    \ {\n        return false;\n    }\n    if !day.is_digit() {\n        return false;\n\
    \    }\n    let mut date_parts = date_str.split_whitespace();\n    if date_parts.len()\
    \ != 3 {\n        return false;\n    }\n    let mut year = date_parts[0];\n  \
    \  let mut month = date_parts[1];\n    let mut day = date_parts[2];\n    if !year.is_digit()\
    \ {\n        return false;\n    }\n    if !month.is_digit() {\n        return\
    \ false;\n    }\n    if !day.is_digit() {\n        return false;\n    }\n    if\
    \ month < 1 || month > 12 {\n        return false;\n    }\n    if day < 1 || day\
    \ > 31 {\n        return false;\n    }\n    if month == 2 && day > 29 {\n    \
    \    return false;\n    }\n    if month == 4 && day > 30 {\n        return false;\n\
    \    }\n    if month == 6 && day > 31 {\n        return false;\n    }\n    if\
    \ month == 9 && day > 31 {\n        return false;\n    }\n    if month == 11 &&\
    \ day > 30 {\n        return false;\n    }\n    if month == 1 && day > 31 {\n\
    \        return false;\n    }\n    if month == 3 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 5 && day > 31 {\n        return false;\n    }\n\
    \    if month == 7 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 8 && day > 31 {\n        return false;\n    }\n    if month == 10 && day > 31\
    \ {\n        return false;\n    }\n    if month == 12 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 1 && day > 31 {\n        return false;\n    }\n\
    \    if month == 3 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 5 && day > 31 {\n        return false;\n    }\n    if month == 7 && day > 31\
    \ {\n        return false;\n    }\n    if month == 8 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 10 && day > 31 {\n        return false;\n   \
    \ }\n    if month == 12 && day > 31 {\n        return false;\n    }\n    if month\
    \ == 1 && day > 31 {\n        return false;\n    }\n    if month == 3 && day >\
    \ 31 {\n        return false;\n    }\n    if month == 5 && day > 31 {\n      \
    \  return false;\n    }\n    if month == 7 && day > 31 {\n        return false;\n\
    \    }\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmpk7aia735.rs:135:17\n\
    \    |\n135 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpk7aia735.rs:135:25\n    |\n135 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpk7aia735.rs:136:17\n\
    \    |\n136 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpk7aia735.rs:136:25\n    |\n136 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpk7aia735.rs:137:17\n\
    \    |\n137 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpk7aia735.rs:137:25\n    |\n137 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpk7aia735.rs:138:17\n\
    \    |\n138 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpk7aia735.rs:138:25\n    |\n138 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpk7aia735.rs:139:17\n\
    \    |\n139 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpk7aia735.rs:139:25\n    |\n139 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpk7aia735.rs:140:17\n\
    \    |\n140 |     assert_eq!({left}, {right});\n    |                 ^^^^"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut year: u32 = 0;\n    let\
    \ mut days_in_month: u32 = 0;\n    let mut days_in_year: u32 = 0;\n    let mut\
    \ days_in_month_in_year: u32 = 0;\n    let mut days_in_year_in_year: u32 = 0;\n\
    \    let mut days_in_month_in_year_in_year: u32 = 0;\n    let mut days_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year: u32 = 0;\n    let\
    \ mut days_in_year_in_year_in_year_in_year: u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year: u32 = 0;\n\
    \    let mut days_in_month_in_year_in_year_in_year_in_year_in_year: u32 = 0;\n\
    \    let mut days_in_year_in_year_in_year_in_year_in_year_in_year: u32 = 0;\n\
    \    let mut days_in_month_in_year_in_year_in_year_in_year_in_year: u32 = 0;\n\
    \    let mut days_in_year_in_year_in_year_in_year_in_year_in_year: u32 = 0;\n\
    \    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year: u32\
    \ = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_\n}\n\n\
    fn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpzdrj2o4l.rs:49:61\n   |\n\
    49 |     let mut days_in_year_in_year_in_year_in_year_in_year_in_\n   |      \
    \                                                       ^ help: add `;` here\n\
    50 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpzdrj2o4l.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzdrj2o4l.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzdrj2o4l.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzdrj2o4l.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzdrj2o4l.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzdrj2o4l.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzdrj2o4l.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzdrj2o4l.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzdrj2o4l.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzdrj2o4l.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |            "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    let mut date_parts =\
    \ date_str.split_whitespace();\n    let mut date_parts = date_parts.split_at(3);\n\
    \    let mut year = date_parts[0];\n    let mut month = date_parts[1];\n    let\
    \ mut day = date_parts[2];\n    let mut date_str = String::from(\"\");\n    let\
    \ mut days_in_month = match month {\n        \"01\" => 31,\n        \"03\" =>\
    \ 31,\n        \"05\" => 30,\n        \"07\" => 31,\n        \"08\" => 31,\n \
    \       \"10\" => 30,\n        \"12\" => 31,\n        _ => return false,\n   \
    \ };\n    let mut days_in_year = match year {\n        \"2000\" => 365,\n    \
    \    \"2001\" => 366,\n        \"2002\" => 365,\n        \"2003\" => 366,\n  \
    \      \"2004\" => 365,\n        \"2005\" => 366,\n        \"2006\" => 365,\n\
    \        \"2007\" => 366,\n        \"2008\" => 365,\n        \"2009\" => 366,\n\
    \        \"2010\" => 365,\n        \"2011\" => 366,\n        \"2012\" => 365,\n\
    \        \"2013\" => 366,\n        \"2014\" => 365,\n        \"2015\" => 366,\n\
    \        \"2016\" => 365,\n        \"2017\" => 366,\n        \"2018\" => 365,\n\
    \        \"2019\" => 366,\n        \"2020\" => 365,\n        \"2021\" => 366,\n\
    \        \"2022\" => 365,\n        \"2023\" => 366,\n        \"2024\" => 365,\n\
    \        \"2025\" => 366,\n        \"2026\" => 365,\n        \"2027\" => 366,\n\
    \        \"2028\" => 365,\n        \"2029\" => 366,\n        \"2030\" => 365,\n\
    \        \"2031\" => 366,\n        \"2032\" => 365,\n        \"2033\" => 366,\n\
    \        \"2034\" => 365,\n        \"2035\" => 366,\n        \"2036\" => 365,\n\
    \        \"2037\" => 366,\n        \"2038\" => 365,\n        \"2039\" => 366,\n\
    \        \"2040\" => 365,\n        _ => return false,\n    };\n    let mut days_in_month\
    \ = match month {\n        \"04\" => 29,\n        \"06\" => 29,\n        \"09\"\
    \ => 29,\n        \"11\" => 29,\n        _ => return false,\n    };\n    let mut\
    \ days_in_year = match year {\n        \"2040\" \n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpxf9qfajc.rs:110:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n...\n88  |     let mut days_in_year =\
    \ match year {\n    |                                       - this delimiter might\
    \ not be properly closed...\n89  |         \"2040\" \n90  | }\n    | - ...as it\
    \ matches this but it has different indentation\n...\n110 | }\n    |   ^\n\nerror:\
    \ expected one of `...`, `..=`, `..`, `=>`, `if`, or `|`, found `}`\n  --> /tmp/tmpxf9qfajc.rs:90:1\n\
    \   |\n89 |         \"2040\" \n   |               - expected one of `...`, `..=`,\
    \ `..`, `=>`, `if`, or `|`\n90 | }\n   | ^ unexpected token\n\nerror: expected\
    \ one of `.`, `;`, `?`, `else`, or an operator, found keyword `fn`\n  --> /tmp/tmpxf9qfajc.rs:92:1\n\
    \   |\n90 | }\n   |  - expected one of `.`, `;`, `?`, `else`, or an operator\n\
    91 | \n92 | fn main() {\n   | ^^ unexpected token\n\nerror[E0599]: no method named\
    \ `split_at` found for struct `SplitWhitespace` in the current scope\n  --> /tmp/tmpxf9qfajc.rs:22:37\n\
    \   |\n22 |     let mut date_parts = date_parts.split_at(3);\n   |           \
    \                          ^^^^^^^^ method not found in `SplitWhitespace<'_>`\n\
    \nerror: aborting due to 4 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_components\
    \ = date_str.split_whitespace();\n        let mut days_components = date_components[1..].split_whitespace();\n\
    \        let mut months_components = date_components[0..2].split_whitespace();\n\
    \        let mut years_components = date_components[0..1].split_whitespace();\n\
    \        let mut days: u32 = days_components[0].parse().unwrap();\n        let\
    \ mut months: u32 = months_components[0].parse().unwrap();\n        let mut years:\
    \ u32 = years_components[0].parse().unwrap();\n        let mut days_in_month =\
    \ [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let mut days_in_month\
    \ = [\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmprsjd0lhw.rs:70:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    50 | }\n   | - ...as it matches this but it has different indentation\n...\n70\
    \ | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmprsjd0lhw.rs:49:33\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n49 |       \
    \  let mut days_in_month = [\n   |                                 ^ unclosed\
    \ delimiter\n50 | }\n   | ^ mismatched closing delimiter\n\nerror: expected one\
    \ of `.`, `;`, `?`, `else`, or an operator, found `}`\n  --> /tmp/tmprsjd0lhw.rs:50:1\n\
    \   |\n50 | }\n   | ^ expected one of `.`, `;`, `?`, `else`, or an operator\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprsjd0lhw.rs:54:17\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprsjd0lhw.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprsjd0lhw.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprsjd0lhw.rs:55:25\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprsjd0lhw.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprsjd0lhw.rs:56:25\n   |\n56 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot fin"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                         ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:19:53\n   |\n19 |     !date.is_empty() && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                          ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:83\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                          ^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7szrmq88.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find v"
  stdout: ''
  timestamp: 1659800297
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    date_str.trim_left_matches(\"/\");\n    date_str.trim_right_matches(\"\
    /\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut year: u32 = 0;\n    let\
    \ mut date_parts_len = date_parts.len();\n    let mut date_parts_i = 0;\n    let\
    \ mut date_parts_i_len = 0;\n    let mut date_parts_i_len2 = 0;\n    let mut date_parts_i_len3\
    \ = 0;\n    let mut date_parts_i_len4 = 0;\n    let mut date_parts_i_len5 = 0;\n\
    \    let mut date_parts_i_len6 = 0;\n    let mut date_parts_i_len7 = 0;\n    let\
    \ mut date_parts_i_len8 = 0;\n    let mut date_parts_i_len9 = 0;\n    let mut\
    \ date_parts_i_len10 = 0;\n    let mut date_parts_i_len11 = 0;\n    let mut date_parts_i_len12\
    \ = 0;\n    let mut date_parts_i_len13 = 0;\n    let mut date_parts_i_len14 =\
    \ 0;\n    let mut date_parts_i_len15 = 0;\n    let mut date_parts_i_len16 = 0;\n\
    \    let mut date_parts_i_len17 = 0;\n    let mut date_parts_i_len18 = 0;\n  \
    \  let mut date_parts_i_len19 = 0;\n    let mut date_parts_i_len20 = 0;\n    let\
    \ mut date_parts_i_len21 = 0;\n    let mut date_parts_i_len22 = 0;\n    let mut\
    \ date_parts_i_len23 = 0;\n    let mut date_parts_i_len24 = 0;\n    let mut date_parts_i_len25\
    \ = 0;\n    let mut date_parts_i_len26 = 0;\n    let mut date_parts_i_len27 =\
    \ 0;\n    let mut date_parts_i_len28 = 0;\n    let mut date_parts_i_len29 = 0;\n\
    \    let mut date_parts_i_len30 = 0;\n    let mut date_parts_i_len31 = 0;\n  \
    \  let mut date_parts_i_len32 = 0;\n    let mut date_parts_i_len33 = 0;\n    let\
    \ mut date_parts_i_len34 = 0;\n    let mut date_parts_i_len35 = 0;\n    let mut\
    \ date_parts_i_len36 = 0;\n    let mut date_parts_i_len37 = 0;\n    let mut date_parts_\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp6z0xv4y0.rs:67:24\n   |\n\
    67 |     let mut date_parts_\n   |                        ^ help: add `;` here\n\
    68 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp6z0xv4y0.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6z0xv4y0.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6z0xv4y0.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6z0xv4y0.rs:73:25\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6z0xv4y0.rs:74:17\n  \
    \ |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6z0xv4y0.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6z0xv4y0.rs:75:17\n   |\n75 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6z0xv4y0.rs:75:25\n\
    \   |\n75 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6z0xv4y0.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6z0xv4y0.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find valu"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut date_str = date_str.to_owned();\n    let mut date_str = date_str.to_owned();\n\
    \    let mut \n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpu51njy5i.rs:63:1\n\
    \   |\n63 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpu51njy5i.rs:67:17\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpu51njy5i.rs:67:25\n \
    \  |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu51njy5i.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu51njy5i.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu51njy5i.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu51njy5i.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpu51njy5i.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu51njy5i.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu51njy5i.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu51njy5i.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu51njy5i.rs:72:17\n   |\n72 |     "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut years: u32 = 0;\n    let\
    \ mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let\
    \ mut days_in_month_leap = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    let mut days_in_month_leap_2: [u32; 12] = [\n        31, 29, 31, 30, 31,\
    \ 30, 31, 31, 30, 31, 30, 31, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31\n\
    \    ];\n    let mut days_in_month_leap_3: [u32; 12] = [\n        31, 29, 31,\
    \ 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31,\
    \ 30, 31\n    ];\n    let mut days_in_month_leap_4: [u32; 12] = [\n        31,\
    \ 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29, 31, 30, 31, 30, 31, 31,\
    \ 30, 31, 30, 31\n    ];\n    let mut days_in_month_leap: [u32; 12] = [\n    \
    \    31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29, 31, 30, 31, 30, 31,\
    \ 31, 30, 31, 30, 31\n    ];\n    let mut days_in_month_leap_2: [u32; 12] = [\n\
    \        31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31\n    ];\n    let mut days_in_month_leap_3: [u32; 12]\
    \ = [\n        31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29, 31, 30,\
    \ 31, 30, 31, 31, 30, 31, 30, 31\n    ];\n    let mut days_in_month_leap_4: [u32;\
    \ 12] = [\n        31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29, 31,\
    \ 30, 31, 30, 31, 31, 30, 31, 30, 31\n    ];\n    let mut days_in_month_leap:\
    \ [u32; 12] = [\n        31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31\n    ];\n    let mut days_in_month_leap_2:\
    \ [u32; 12] = [\n        31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31\n    ];\n    let mut days_in_month_leap_3:\
    \ [u32; 12] = [\n        31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31\n    ];\n    let mut days_in_month_leap_4:\
    \ [u32; 12] = [\n        31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31\n    ];\n    let mut days_in_month_leap:\
    \ [u32; 12] = [\n        31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, \n}\n\nfn main() {\n    let candidate =\
    \ valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmpxsrjjvt7.rs:61:45\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n61 |     let\
    \ mut days_in_month_leap: [u32; 12] = [\n   |                                \
    \             ^ unclosed delimiter\n62 |         31, 29, 31, 30, 31, 30, 31, 31,\
    \ 30, 31, 30, 31, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, \n63 | }\n   | ^\
    \ mismatched closing delimiter\n\nerror: expected one of `.`, `;`, `?`, `else`,\
    \ or an operator, found `}`\n  --> /tmp/tmpxsrjjvt7.rs:63:1\n   |\n63 | }\n  \
    \ | ^ expected one of `.`, `;`, `?`, `else`, or an operator\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxsrjjvt7.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxsrjjvt7.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxsrjjvt7.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxsrjjvt7.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxsrjjvt7.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxsrjjvt7.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxsrjjvt7.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxsrjjvt7.rs:70:25\n   |\n70 |     assert_"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut months_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut years_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    days_parts[0] =\
    \ days_parts[0].to_owned();\n    months_parts[0] = months_parts[0].to_owned();\n\
    \    years_parts[0] = years_parts[0].to_owned();\n    days_parts[1] = days_parts[1].to_owned();\n\
    \    months_parts[1] = months_parts[1].to_owned();\n    years_parts[1] = years_parts[1].to_owned();\n\
    \    let mut days: u32 = days_parts[0].parse().unwrap();\n    let mut months:\
    \ u32 = months_parts[0].parse().unwrap();\n    let mut years: u32 = years_parts[0].parse().unwrap();\n\
    \    let mut days_parts_2: Vec<String> = days_parts.split_whitespace().collect();\n\
    \    let mut months_parts_2: Vec<String> = months_parts.split_whitespace().collect();\n\
    \    let mut years_parts_2: Vec<String> = years_parts.split_whitespace().collect();\n\
    \    days_parts_2[0] = days_parts_2[0].to_owned();\n    months_parts_2[0] = months_parts_2[0].to_owned();\n\
    \    years_parts_2[0] = years_parts_2[0].to_owned();\n    days_parts_2[1] = days_parts_2[1].to_owned();\n\
    \    months_parts_2[1] = months_parts_2[1].to_owned();\n    years_parts_2[1] =\
    \ years_parts_2[1].to_owned();\n    let mut days_2: u32 = days_parts_2[0].parse().unwrap();\n\
    \    let mut months_2: u32 = months_parts_2[0].parse().unwrap();\n    let mut\
    \ years_2: u32 = years_parts_2[0].parse().unwrap();\n    let mut days_parts_3:\
    \ Vec<String> = days_parts_2.split_whitespace().collect();\n    let mut months_parts_3:\
    \ Vec<String> = months_parts_2.split_\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmphzauv6im.rs:48:64\n   |\n\
    48 |     let mut months_parts_3: Vec<String> = months_parts_2.split_\n   |   \
    \                                                             ^ help: add `;`\
    \ here\n49 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmphzauv6im.rs:53:17\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmphzauv6im.rs:53:25\n \
    \  |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphzauv6im.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphzauv6im.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphzauv6im.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphzauv6im.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphzauv6im.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphzauv6im.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphzauv6im.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphzauv6im.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |      "
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap()\
    \ > 0 && date_str.parse::<usize>().unwrap() < 32 && date_str.parse::<usize>().unwrap()\
    \ % 2 == 0 && date_str.parse::<usize>().unwrap() % 2 == 1 && date_str.parse::<usize>().unwrap()\
    \ % 4 == 0 && date_str.parse::<usize>().unwrap() % 4 == 1 && date_str.parse::<usize>().unwrap()\
    \ % 100 == 0 && date_str.parse::<usize>().unwrap() % 100 == 1 && date_str.parse::<usize>().unwrap()\
    \ % 400 == 0\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqi811uj9.rs:26:17\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqi811uj9.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqi811uj9.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqi811uj9.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqi811uj9.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqi811uj9.rs:28:25\n   |\n28 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqi811uj9.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqi811uj9.rs:29:25\n   |\n29 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqi811uj9.rs:30:17\n  \
    \ |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqi811uj9.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqi811uj9.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_end().to_string();\n    let\
    \ mut date_parts = date_str.split_whitespace();\n    let mut date_parts = date_parts.split_at(3);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n    let mut date_parts = date_parts.split_at(2);\n\
    \    let mut date_parts = date_parts.split_at(2);\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbimndhyj.rs:70:17\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbimndhyj.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbimndhyj.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbimndhyj.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbimndhyj.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbimndhyj.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbimndhyj.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbimndhyj.rs:73:25\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbimndhyj.rs:74:17\n  \
    \ |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbimndhyj.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbimndhyj.rs:75:17\n   |\n75 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmplgv_1zqb.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                       ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmplgv_1zqb.rs:19:51\n   |\n19 |     date.len() > 0 && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                        ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmplgv_1zqb.rs:19:81\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                        ^^^^^^^^^^ not found in this scope\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplgv_1zqb.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplgv_1zqb.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplgv_1zqb.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplgv_1zqb.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplgv_1zqb.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplgv_1zqb.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` "
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut year: u32 = 0;\n    let\
    \ mut days_in_month: u32 = 0;\n    let mut days_in_year: u32 = 0;\n    let mut\
    \ days_in_month_in_year: u32 = 0;\n    let mut days_in_year_in_year: u32 = 0;\n\
    \    let mut days_in_month_in_year_in_year: u32 = 0;\n    let mut days_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year: u32 = 0;\n    let\
    \ mut days_in_year_in_year_in_year_in_year: u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year: u32 = 0;\n\
    \    let mut days_in_month_in_year_in_year_in_year_in_year_in_year: u32 = 0;\n\
    \    let mut days_in_year_in_year_in_year_in_year_in_year_in_year: u32 = 0;\n\
    \    let mut days_in_month_in_year_in_year_in_year_in_year_in_year: u32 = 0;\n\
    \    let mut days_in_year_in_year_in_year_in_year_in_year_in_year: u32 = 0;\n\
    \    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year: u32\
    \ = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_month_in_year_in_year_in_year_in_year_in_year_in_year_in_year_in_year:\
    \ u32 = 0;\n    let mut days_in_year_in_year_in_year_in_year_in_year_in_\n}\n\n\
    fn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpzdrj2o4l.rs:49:61\n   |\n\
    49 |     let mut days_in_year_in_year_in_year_in_year_in_year_in_\n   |      \
    \                                                       ^ help: add `;` here\n\
    50 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpzdrj2o4l.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzdrj2o4l.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzdrj2o4l.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzdrj2o4l.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzdrj2o4l.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzdrj2o4l.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzdrj2o4l.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzdrj2o4l.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzdrj2o4l.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzdrj2o4l.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |            "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let mut days_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \    let mut months_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \    let mut years_parts: Vec<&str> = date_parts.split_whitespace().collect();\n\
    \    let mut days: usize = 0;\n    let mut months: usize = 0;\n    let mut years:\
    \ usize = 0;\n    for part in days_parts {\n        if part == \"31\" {\n    \
    \        days = 31;\n        } else if part == \"30\" {\n            days = 30;\n\
    \        } else if part == \"29\" {\n            days = 29;\n        } else {\n\
    \            days = 1;\n        }\n    }\n    for part in months_parts {\n   \
    \     if part == \"12\" {\n            months = 12;\n        } else {\n      \
    \      months = 1;\n        }\n    }\n    for part in years_parts {\n        if\
    \ part == \"20\" {\n            years = 20;\n        } else if part == \"19\"\
    \ {\n            years = 19;\n        } else if part == \"18\" {\n           \
    \ years = 18;\n        } else if part == \"17\" {\n            years = 17;\n \
    \       } else if part == \"16\" {\n            years = 16;\n        } else if\
    \ part == \"15\" {\n            years = 15;\n        } else if part == \"14\"\
    \ {\n            years = 14;\n        } else if part == \"13\" {\n           \
    \ years = 13;\n        } else if part == \"12\" {\n            years = 12;\n \
    \       } else {\n            years = 1;\n        }\n    }\n    if days > 31 ||\
    \ months > 12 || years > 30 {\n        return false;\n    }\n    if days == 31\
    \ {\n        days_parts[0] = \"31\";\n    }\n    if days == 30 {\n        days_parts[0]\
    \ = \"30\";\n    }\n    if days == 29 {\n        days_parts[0] = \"29\";\n   \
    \ }\n    if months == 12 {\n        months_parts[0] = \"12\";\n    }\n    if months\
    \ == 1 {\n        months_parts[0] = \"1\";\n    }\n    if years == 20 {\n    \
    \    years_parts[0] = \"20\";\n    }\n    if years == 19 {\n        years_parts[0]\
    \ = \"19\";\n    }\n    if years == 18 {\n        years_parts[0] = \"18\";\n \
    \   }\n    if year\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n   --> /tmp/tmpihu1tstn.rs:100:1\n    |\n\
    99  |     if year\n    |     -- this `if` expression has a condition, but no block\n\
    100 | }\n    | ^ expected `{`\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpihu1tstn.rs:104:17\n    |\n104 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpihu1tstn.rs:104:25\n\
    \    |\n104 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpihu1tstn.rs:105:17\n    |\n105 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpihu1tstn.rs:105:25\n\
    \    |\n105 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpihu1tstn.rs:106:17\n    |\n106 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpihu1tstn.rs:106:25\n\
    \    |\n106 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpihu1tstn.rs:107:17\n    |\n107 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpihu1tstn.rs:107:25\n\
    \    |\n107 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpihu1tstn.rs:108:17\n    |\n108 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpihu1tstn.rs:108:25\n\
    \    |\n108 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ n"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && valid_month(date.chars().nth(2).unwrap()) && valid_day(date.chars().nth(3).unwrap())\
    \ && valid_year(date.chars().nth(4).unwrap())\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_month` in this scope\n  --> /tmp/tmpth6z2lah.rs:19:45\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_month(date.chars().nth(2).unwrap())\
    \ && valid_day(date.chars().nth(3).unwrap()) && valid...\n   |               \
    \                              ^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_day` in this scope\n  --> /tmp/tmpth6z2lah.rs:19:90\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_month(date.chars().nth(2).unwrap())\
    \ && valid_day(date.chars().nth(3).unwrap()) && valid...\n   |               \
    \                                                                           ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `valid_year` in\
    \ this scope\n  --> /tmp/tmpth6z2lah.rs:19:133\n   |\n19 | ...()) && valid_day(date.chars().nth(3).unwrap())\
    \ && valid_year(date.chars().nth(4).unwrap())\n   |                          \
    \                            ^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpth6z2lah.rs:24:17\n  \
    \ |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpth6z2lah.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpth6z2lah.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpth6z2lah.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpth6z2lah.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpth6z2lah.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |  "
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date.as_str()) && valid_month(date.as_str())\n}\n\nfn main() {\n\
    \    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmpjn9csl6d.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                         ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmpjn9csl6d.rs:19:53\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\n\
    \   |                                                     ^^^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjn9csl6d.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjn9csl6d.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjn9csl6d.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjn9csl6d.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjn9csl6d.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjn9csl6d.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjn9csl6d.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjn9csl6d.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    if date_parts.len()\
    \ != 3 {\n        return false;\n    }\n    let mut days_str = date_parts[0];\n\
    \    days_str.trim_left_matches(\"0\");\n    days_str.trim_right_matches(\"0\"\
    );\n    let mut days_int = days_str.parse::<i32>().unwrap();\n    if days_int\
    \ < 1 || days_int > 31 {\n        return false;\n    }\n    let mut months_str\
    \ = date_parts[1];\n    months_str.trim_left_matches(\"0\");\n    months_str.trim_right_matches(\"\
    0\");\n    let mut months_int = months_str.parse::<i32>().unwrap();\n    if months_int\
    \ < 1 || months_int > 12 {\n        return false;\n    }\n    let mut years_str\
    \ = date_parts[2];\n    years_str.trim_left_matches(\"0\");\n    years_str.trim_right_matches(\"\
    0\");\n    let mut years_int = years_str.parse::<i32>().unwrap();\n    if years_int\
    \ < 1 || years_int > 9999 {\n        return false;\n    }\n    true\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpne_g89k0.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpne_g89k0.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpne_g89k0.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpne_g89k0.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpne_g89k0.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpne_g89k0.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpne_g89k0.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpne_g89k0.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpne_g89k0.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpne_g89k0.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpne_g89k0.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    date.trim_left_matches(\"-\");\n    date.trim_right_matches(\"\
    -\");\n    let mut date_split = date.split_at(3);\n    let mut date_split_2 =\
    \ date.split_at(2);\n    let mut date_split_3 = date.split_at(2);\n    let mut\
    \ date_split_4 = date.split_at(2);\n    let mut date_split_5 = date.split_at(2);\n\
    \    let mut date_split_6 = date.split_at(2);\n    let mut date_split_7 = date.split_at(2);\n\
    \    let mut date_split_8 = date.split_at(2);\n    let mut date_split_9 = date.split_at(2);\n\
    \    let mut date_split_10 = date.split_at(2);\n    let mut date_split_11 = date.split_at(2);\n\
    \    let mut date_split_12 = date.split_at(2);\n    let mut date_split_13 = date.split_at(2);\n\
    \    let mut date_split_14 = date.split_at(2);\n    let mut date_split_15 = date.split_at(2);\n\
    \    let mut date_split_16 = date.split_at(2);\n    let mut date_split_17 = date.split_at(2);\n\
    \    let mut date_split_18 = date.split_at(2);\n    let mut date_split_19 = date.split_at(2);\n\
    \    let mut date_split_20 = date.split_at(2);\n    let mut date_split_21 = date.split_at(2);\n\
    \    let mut date_split_22 = date.split_at(2);\n    let mut date_split_23 = date.split_at(2);\n\
    \    let mut date_split_24 = date.split_at(2);\n    let mut date_split_25 = date.split_at(2);\n\
    \    let mut date_split_26 = date.split_at(2);\n    let mut date_split_27 = date.split_at(2);\n\
    \    let mut date_split_28 = date.split_at(2);\n    let mut date_split_29 = date.split_at(2);\n\
    \    let mut date_split_30 = date.split_at(2);\n    let mut date_split_31 = date.split_at(2);\n\
    \    let mut date_split_32 = date.split_at(2);\n    let mut date_split_33 = date.split_at(2);\n\
    \    let mut date_split_34 = date.split_at(2);\n    let mut date_split_35 = date.split_at(2);\n\
    \    let mut date_split_36 = date.split_at(2);\n    let mut date_split_37 = date.split_at(2);\n\
    \    let mut date_split_38 = date.split_at(2);\n    let mut date_split_39 = date.split_at(2);\n\
    \    let mut date_split_40 = date.split_at(2);\n    let mut date_split_41 = date.split_at(2);\n\
    \    let mut date_split_42 = \n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpfj1plf14.rs:64:1\n\
    \   |\n64 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpfj1plf14.rs:68:17\n   |\n68 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpfj1plf14.rs:68:25\n \
    \  |\n68 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfj1plf14.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfj1plf14.rs:69:25\n   |\n69 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfj1plf14.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfj1plf14.rs:70:25\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfj1plf14.rs:71:17\n  \
    \ |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfj1plf14.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfj1plf14.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfj1plf14.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfj1plf14.rs:73:17\n   |\n73 |     "
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    (date.len() == 10 || date.len() == 9 || date.len() == 8 || date.len()\
    \ == 7 || date.len() == 6 || date.len() == 5 || date.len() == 4 || date.len()\
    \ == 3 || date.len() == 2 || date.len() == 1) &&\n    (date.chars().nth(1).unwrap()\
    \ >= '0' && date.chars().nth(1).unwrap() <= '9') &&\n    (date.chars().nth(2).unwrap()\
    \ >= '0' && date.chars().nth(2).unwrap() <= '9') &&\n    (date.chars().nth(3).unwrap()\
    \ >= '0' && date.chars().nth(3).unwrap() <= '9') &&\n    (date.chars().nth(4).unwrap()\
    \ >= '0' && date.chars().nth(4).unwrap() <= '9') &&\n    (date.chars().nth(5).unwrap()\
    \ >= '0' && date.chars().nth(5).unwrap() <= '9') &&\n    (date.chars().nth(6).unwrap()\
    \ >= '0' && date.chars().nth(6).unwrap() <= '9') &&\n    (date.chars().nth(7).unwrap()\
    \ >= '0' && date.chars().nth(7).unwrap() <= '9') &&\n    (date.chars().nth(8).unwrap()\
    \ >= '0' && date.chars().nth(8).unwrap() <= '9') &&\n    (date.chars().nth(9).unwrap()\
    \ >= '0' && date.chars().nth(9).unwrap() <= '9') &&\n    (date.chars().nth(10).unwrap()\
    \ >= '0' && date.chars().nth(10).unwrap() <= '9') &&\n    (date.chars().nth(11).unwrap()\
    \ >= '0' && date.chars().nth(11).unwrap() <= '9') &&\n    (date.chars().nth(12).unwrap()\
    \ >= '0' && date.chars().nth(12).unwrap() <= '9') &&\n    (date.chars().nth(13).unwrap()\
    \ >= '0' && date.chars().nth(13).unwrap() <= '9') &&\n    (date.chars().nth(14).unwrap()\
    \ >= '0' && date.chars().nth(14).unwrap() <= '9') &&\n    (date.chars().nth(15).unwrap()\
    \ >= '0' && date.chars().nth(15).unwrap() <= '9') &&\n    (date.chars().nth(16).unwrap()\
    \ >= '0' && date.chars().nth(16).unwrap() <= '\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0762]: unterminated character literal\n  --> /tmp/tmp6lwycwt1.rs:36:79\n\
    \   |\n36 |     (date.chars().nth(16).unwrap() >= '0' && date.chars().nth(16).unwrap()\
    \ <= '\n   |                                                                 \
    \              ^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0762`.\n"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<Date>().is_ok()\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `Date` in this scope\n  --> /tmp/tmp68zjkgcz.rs:21:22\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |              - help: you\
    \ might be missing a type parameter: `<Date>`\n...\n21 |     date_str.parse::<Date>().is_ok()\n\
    \   |                      ^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68zjkgcz.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:25\n\
    \   "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\n\
    \        && date.len() == 10\n        && date.chars().all(|c| c >= '0' && c <=\
    \ '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: lifetimes cannot start with a number\n  --> /tmp/tmp3d2kabeo.rs:45:50\n\
    \   |\n45 |         && date.chars().all(|c| c >= '0' && c <= '9\n   |        \
    \                                          ^^\n\nerror: expected `while`, `for`,\
    \ `loop` or `{` after a label\n  --> /tmp/tmp3d2kabeo.rs:46:1\n   |\n46 | }\n\
    \   | ^ expected `while`, `for`, `loop` or `{` after a label\n\nerror: expected\
    \ expression, found `)`\n  --> /tmp/tmp3d2kabeo.rs:46:1\n   |\n46 | }\n   | ^\
    \ expected expression\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmp3d2kabeo.rs:45:28\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n45 |       \
    \  && date.chars().all(|c| c >= '0' && c <= '9\n   |                         \
    \   ^ unclosed delimiter\n46 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3d2kabeo.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3d2kabeo.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3d2kabeo.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3d2kabeo.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3d2kabeo.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3d2kabeo.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3d2kabeo.rs:53:17\n   |\n53 |     assert_eq!({"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    date.trim_end().to_string().parse::<usize>().unwrap()\
    \ > 0 &&\n        date.trim_end().to_string().parse::<usize>().unwrap() <= 31\
    \ &&\n        date.trim_end().to_string().parse::<usize>().unwrap() <= 30 &&\n\
    \        date.trim_end().to_string().parse::<usize>().unwrap() <= 29 &&\n    \
    \    date.trim_end().to_string().parse::<usize>().unwrap() <= 12 &&\n        date.trim_end().to_string().parse::<usize>().unwrap()\
    \ >= 1 &&\n        date.trim_end().to_string().parse::<usize>().unwrap() <= 12\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5l3pmyg9.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5l3pmyg9.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5l3pmyg9.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5l3pmyg9.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\n\
    \        && date.len() == 10\n        && date.chars().all(|c| c >= '0' && c <=\
    \ '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: lifetimes cannot start with a number\n  --> /tmp/tmp3d2kabeo.rs:45:50\n\
    \   |\n45 |         && date.chars().all(|c| c >= '0' && c <= '9\n   |        \
    \                                          ^^\n\nerror: expected `while`, `for`,\
    \ `loop` or `{` after a label\n  --> /tmp/tmp3d2kabeo.rs:46:1\n   |\n46 | }\n\
    \   | ^ expected `while`, `for`, `loop` or `{` after a label\n\nerror: expected\
    \ expression, found `)`\n  --> /tmp/tmp3d2kabeo.rs:46:1\n   |\n46 | }\n   | ^\
    \ expected expression\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmp3d2kabeo.rs:45:28\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n45 |       \
    \  && date.chars().all(|c| c >= '0' && c <= '9\n   |                         \
    \   ^ unclosed delimiter\n46 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3d2kabeo.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3d2kabeo.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3d2kabeo.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3d2kabeo.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3d2kabeo.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3d2kabeo.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3d2kabeo.rs:53:17\n   |\n53 |     assert_eq!({"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\n\
    \        && date.len() == 10\n        && date.chars().all(|c| c >= '0' && c <=\
    \ '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9')\n\
    \        && date.chars().all(|c| c >= '0' && c <= '9')\n        && date.chars().all(|c|\
    \ c >= '0' && c <= '9')\n        && date.chars().all(|c| c >= '0' && c <= '9\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: lifetimes cannot start with a number\n  --> /tmp/tmp3d2kabeo.rs:45:50\n\
    \   |\n45 |         && date.chars().all(|c| c >= '0' && c <= '9\n   |        \
    \                                          ^^\n\nerror: expected `while`, `for`,\
    \ `loop` or `{` after a label\n  --> /tmp/tmp3d2kabeo.rs:46:1\n   |\n46 | }\n\
    \   | ^ expected `while`, `for`, `loop` or `{` after a label\n\nerror: expected\
    \ expression, found `)`\n  --> /tmp/tmp3d2kabeo.rs:46:1\n   |\n46 | }\n   | ^\
    \ expected expression\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmp3d2kabeo.rs:45:28\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n45 |       \
    \  && date.chars().all(|c| c >= '0' && c <= '9\n   |                         \
    \   ^ unclosed delimiter\n46 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3d2kabeo.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3d2kabeo.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3d2kabeo.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3d2kabeo.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3d2kabeo.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3d2kabeo.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3d2kabeo.rs:53:17\n   |\n53 |     assert_eq!({"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut years: u32 = 0;\n    let\
    \ mut date_parts_len = date_parts.len();\n    let mut days_len = date_parts_len;\n\
    \    let mut months_len = date_parts_len;\n    let mut years_len = date_parts_len;\n\
    \    let mut days_index = 0;\n    let mut months_index = 0;\n    let mut years_index\
    \ = 0;\n    let mut days_index_next = 0;\n    let mut months_index_next = 0;\n\
    \    let mut years_index_next = 0;\n    let mut days_index_next2 = 0;\n    let\
    \ mut months_index_next2 = 0;\n    let mut years_index_next2 = 0;\n    let mut\
    \ days_index_next3 = 0;\n    let mut months_index_next3 = 0;\n    let mut years_index_next3\
    \ = 0;\n    let mut days_index_next4 = 0;\n    let mut months_index_next4 = 0;\n\
    \    let mut years_index_next4 = 0;\n    let mut days_index_next5 = 0;\n    let\
    \ mut months_index_next5 = 0;\n    let mut years_index_next5 = 0;\n    let mut\
    \ days_index_next6 = 0;\n    let mut months_index_next6 = 0;\n    let mut years_index_next6\
    \ = 0;\n    let mut days_index_next7 = 0;\n    let mut months_index_next7 = 0;\n\
    \    let mut years_index_next7 = 0;\n    let mut days_index_next8 = 0;\n    let\
    \ mut months_index_next8 = 0;\n    let mut years_index_next8 = 0;\n    let mut\
    \ days_index_next9 = 0;\n    let mut months_index_next9 = 0;\n    let mut years_index_next9\
    \ = 0;\n    let mut days_index_next10 = 0;\n    let mut months_index_next10 =\
    \ 0;\n    let mut years_index_next10 = 0;\n    let mut days_index_next11 = 0;\n\
    \    let mut months_index_next11 = 0;\n    let mut years_index_next11 = 0;\n \
    \   let mut days_index_next12 = 0;\n    let mut months_index_next12 = 0;\n   \
    \ let mut years_index_next12 = 0;\n    let mut days_index_next13 = 0;\n    let\
    \ mut months_index_next13 = 0;\n    let mut years_index_next13 = 0;\n    let mut\
    \ day\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpjz57gpg5.rs:72:16\n   |\n\
    72 |     let mut day\n   |                ^ help: add `;` here\n73 | }\n   | -\
    \ unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n \
    \ --> /tmp/tmpjz57gpg5.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjz57gpg5.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjz57gpg5.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjz57gpg5.rs:78:25\n   |\n78 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjz57gpg5.rs:79:17\n  \
    \ |\n79 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjz57gpg5.rs:79:25\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjz57gpg5.rs:80:17\n   |\n80 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjz57gpg5.rs:80:25\n\
    \   |\n80 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjz57gpg5.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjz57gpg5.rs:81:25\n   |\n81 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut year: u32 = 0;\n    let\
    \ mut days_in_month = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n \
    \   let mut days_in_month_leap = [0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30,\
    \ 31];\n    let mut days_in_month_leap_2: [u32; 12] = [0; 12];\n    let mut days_in_month_leap_2:\
    \ [u32; 13] = [0; 13];\n    let mut days_in_month_leap_2: [u32; 14] = [0; 14];\n\
    \    let mut days_in_month_leap_2: [u32; 15] = [0; 15];\n    let mut days_in_month_leap_2:\
    \ [u32; 16] = [0; 16];\n    let mut days_in_month_leap_2: [u32; 17] = [0; 17];\n\
    \    let mut days_in_month_leap_2: [u32; 18] = [0; 18];\n    let mut days_in_month_leap_2:\
    \ [u32; 19] = [0; 19];\n    let mut days_in_month_leap_2: [u32; 20] = [0; 20];\n\
    \    let mut days_in_month_leap_2: [u32; 21] = [0; 21];\n    let mut days_in_month_leap_2:\
    \ [u32; 22] = [0; 22];\n    let mut days_in_month_leap_2: [u32; 23] = [0; 23];\n\
    \    let mut days_in_month_leap_2: [u32; 24] = [0; 24];\n    let mut days_in_month_leap_2:\
    \ [u32; 25] = [0; 25];\n    let mut days_in_month_leap_2: [u32; 26] = [0; 26];\n\
    \    let mut days_in_month_leap_2: [u32; 27] = [0; 27];\n    let mut days_in_month_leap_2:\
    \ [u32; 28] = [0; 28];\n    let mut days_in_month_leap_2: [u32; 29] = [0; 29];\n\
    \    let mut days_in_month_leap_2: [u32; 30] = [0; 30];\n    let mut days_in_month_leap_2:\
    \ [u32; 31] = [0; 31];\n    let mut days_in_month_leap_2: [u32; 32] = [0; 32];\n\
    \    let mut days_in_month_leap_2: [u32; 33] = [0; 33];\n    let mut days_in_month_leap_2:\
    \ [u32; 34] = [0; 34];\n    let mut days_in_month_leap_2: [u32; 35] = [0; 35\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmpl8rtzxum.rs:51:47\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n51 |     let\
    \ mut days_in_month_leap_2: [u32; 35] = [0; 35\n   |                         \
    \                      ^ unclosed delimiter\n52 | }\n   | ^ mismatched closing\
    \ delimiter\n\nerror: expected one of `.`, `;`, `?`, `else`, or an operator, found\
    \ `}`\n  --> /tmp/tmpl8rtzxum.rs:52:1\n   |\n52 | }\n   | ^ expected one of `.`,\
    \ `;`, `?`, `else`, or an operator\n\nerror[E0425]: cannot find value `left` in\
    \ this scope\n  --> /tmp/tmpl8rtzxum.rs:56:17\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpl8rtzxum.rs:56:25\n \
    \  |\n56 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpl8rtzxum.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl8rtzxum.rs:57:25\n   |\n57 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpl8rtzxum.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpl8rtzxum.rs:58:25\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl8rtzxum.rs:59:17\n  \
    \ |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl8rtzxum.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: c"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_str_split\
    \ = date_str.split_at(3);\n        let mut date_str_split2 = date_str_split.split_at(2);\n\
    \        let mut date_str_split3 = date_str_split2.split_at(2);\n        let mut\
    \ date_str_split4 = date_str_split3.split_at(2);\n        let mut date_str_split5\
    \ = date_str_split4.split_at(2);\n        let mut date_str_split6 = date_str_split5.split_at(2);\n\
    \        let mut date_str_split7 = date_str_split6.split_at(2);\n        let mut\
    \ date_str_split8 = date_str_split7.split_at(2);\n        let mut date_str_split9\
    \ = date_str_split8.split_at(2);\n        let mut date_str_split10 = date_str_split9.split_at(2);\n\
    \        let mut date_str_split11 = date_str_split10.split_at(2);\n        let\
    \ mut date_str_split12 = date_str_split11.split_at(2);\n        let mut date_str_split13\
    \ = date_str_split12.split_at(2);\n        let mut date_str_split14 = date_str_split13.split_at(2);\n\
    \        let mut date_str_split15 = date_str_split14.split_at(2);\n        let\
    \ mut date_str_split16 = date_str_split15.split_at(2);\n        let mut date_str_split17\
    \ = date_str_split16.split_at(2);\n        let mut date_str_split18 = date_str_split17.split_at(2);\n\
    \        let mut date_str_split19 = date_str_split18.split_at(2);\n        let\
    \ mut date_str_split20 = date_str_split19.split_at(2);\n        let mut date_str_split21\
    \ = date_str_split20.split_at(2);\n        let mut date_str_split22 = date_str_split21.split_at(2);\n\
    \        let mut date_str_split23 = date_str_split22.split_at(2);\n        let\
    \ mut date_str_split24 = date_str_split23.split_at(2);\n        let mut date_str_split25\
    \ = date_str_split24.split_at(2);\n        let mut date_str_split26 = date_str_split25.split_at(2);\n\
    \        let mut date_str_split27 = date_str_split26.split_at(2);\n        let\
    \ mut date_str_split28 = date_str_split27.split_at(2);\n        let mut date_str_split29\
    \ = date_str_split28.split_at(2);\n        let mut date_str_split30 = date_str_split29.split_at(2);\n\
    \        let mut date_str_split31 = date_str_split30.split_at(2);\n        let\
    \ mut date_str_split32 = date_str_split31.split_at(2);\n\n}\n\nfn main() {\n \
    \   let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpqrdjx37i.rs:74:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    54 | }\n   | - ...as it matches this but it has different indentation\n...\n74\
    \ | }\n   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqrdjx37i.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqrdjx37i.rs:58:25\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqrdjx37i.rs:59:17\n  \
    \ |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqrdjx37i.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqrdjx37i.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqrdjx37i.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqrdjx37i.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqrdjx37i.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqrdjx37i.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_components = date.split_whitespace();\n        let mut\
    \ year = date_components[0];\n        let mut month = date_components[1];\n  \
    \      let mut day = date_components[2];\n        let mut year = year.parse().unwrap();\n\
    \        let mut month = month.parse().unwrap();\n        let mut day = day.parse().unwrap();\n\
    \        let mut year = year - 1900;\n        let mut month = month - 1;\n   \
    \     let mut day = day - 1;\n        let mut year = year + 2000;\n        let\
    \ mut month = month + 12;\n        let mut day = day + 1;\n        let mut year\
    \ = year + 2000;\n        let mut month = month + 12;\n        let mut day = day\
    \ + 1;\n        let mut year = year + 2000;\n        let mut month = month + 12;\n\
    \        let mut day = day + 1;\n        let mut year = year + 2000;\n       \
    \ let mut month = month + 12;\n        let mut day = day + 1;\n        let mut\
    \ year = year + 2000;\n        let mut month = month + 12;\n        let mut day\
    \ = day + 1;\n        let mut year = year + 2000;\n        let mut month = month\
    \ + 12;\n        let mut day = day + 1;\n        let mut year = year + 2000;\n\
    \        let mut month = month + 12;\n        let mut day = day + 1;\n       \
    \ let mut year = year + 2000;\n        let mut month = month + 12;\n        let\
    \ mut day = day + 1;\n        let mut year = year + 2000;\n        let mut month\
    \ = month + 12;\n        let mut day = day + 1;\n        let mut year = year +\
    \ 2000;\n        let mut month = month + 12;\n        let mut day = day + 1;\n\
    \        let mut year = year + 2000;\n        let mut month = month + 12;\n  \
    \      let mut day = day + 1;\n        let mut year = year + 2000;\n        let\
    \ mut month = month + 12;\n        let mut day = day + 1;\n        let mut year\
    \ = year + 2000;\n        let mut month = month + 12;\n        let mut day = day\
    \ + 1;\n        let mut year = year + 2000;\n        let mut month = month + 12;\n\
    \        let mut day = day + 1;\n        let mut year = year + 2000;\n       \
    \ let mut month = month + 12;\n        let mut day = day + 1;\n        let mut\
    \ year = year + 2000;\n        let mut month = month + 12;\n        let mut day\
    \ = day + 1;\n        let mut year = year + 2000;\n        let mut month = \n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpcn_2huc_.rs:100:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n19  |     if !date.is_empty() {\n   \
    \ |                         - this delimiter might not be properly closed...\n\
    ...\n80  | }\n    | - ...as it matches this but it has different indentation\n\
    ...\n100 | }\n    |   ^\n\nerror: expected expression, found `}`\n  --> /tmp/tmpcn_2huc_.rs:80:1\n\
    \   |\n80 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpcn_2huc_.rs:84:17\n   |\n84 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpcn_2huc_.rs:84:25\n \
    \  |\n84 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcn_2huc_.rs:85:17\n   |\n85 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcn_2huc_.rs:85:25\n   |\n85 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcn_2huc_.rs:86:17\n   |\n86 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcn_2huc_.rs:86:25\n   |\n86 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcn_2huc_.rs:87:17\n  \
    \ |\n87 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcn_2huc_.rs:87:25\n   |\n87 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                         ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:19:53\n   |\n19 |     !date.is_empty() && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                          ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:83\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                          ^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7szrmq88.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find v"
  stdout: ''
  timestamp: 1659800297
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    date.len() == 10 &&\n    !date[..2].is_empty() &&\n    !date[..2].chars().any(|c|\
    \ !c.is_digit()) &&\n    !date[..2].chars().any(|c| !c.is_ascii_alphanumeric())\
    \ &&\n    !date[..2].chars().any(|c| !c.is_ascii_lowercase()) &&\n    !date[..2].chars().any(|c|\
    \ !c.is_ascii_uppercase()) &&\n    !date[..2].chars().any(|c| !c.is_ascii_letter())\
    \ &&\n    !date[..2].chars().any(|c| !c.is_ascii_digit()) &&\n    !date[..2].chars().any(|c|\
    \ !c.is_ascii_symbol()) &&\n    !date[..2].chars().any(|c| !c.is_ascii_hexdigit())\
    \ &&\n    !date[..2].chars().any(|c| !c.is_ascii_hex_digit()) &&\n    !date[..2].chars().any(|c|\
    \ !c.is_ascii_hex_digit()) &&\n    !date[..2].chars().any(|c| !c.is_ascii_hex_digit())\
    \ &&\n    !date[..2].chars().any(|c| !c.is_ascii_hex_digit()) &&\n    !date[..2].chars().any(|c|\
    \ !c.is_ascii_hex_digit()) &&\n    !date[..2].chars().any(|c| !c.is_ascii_hex_digit())\
    \ &&\n    !date[..2].chars().any(|c| !c.is_ascii_hex_digit()) &&\n    !date[..2].chars().any(|c|\
    \ !c.is_ascii_hex_digit()) &&\n    !date[..2].chars().any(|c| !c.is_ascii_hex_digit())\
    \ &&\n    !date[..2].chars().any(|c| !c.is_ascii_hex_digit()) &&\n    !date[..2].chars().any(|c|\
    \ !c.is_ascii_hex_digit()) &&\n    !date[..2].chars().any(|c| !c.is_ascii_hex_digit())\
    \ &&\n    !date[..2].chars().any(|c| !c.is_ascii_hex_digit()) &&\n    !date[..2].chars().any(|c|\
    \ !c.is_ascii_hex_digit()) &&\n    !date[..2].chars().any(|c| !c.is_ascii_hex_digit())\
    \ &&\n    !date[..2].chars().any(\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmprp0k_bv0.rs:45:27\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n...\n45 |     !date[..2].chars().any(\n\
    \   |                           ^ unclosed delimiter\n46 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprp0k_bv0.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprp0k_bv0.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprp0k_bv0.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprp0k_bv0.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprp0k_bv0.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprp0k_bv0.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprp0k_bv0.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprp0k_bv0.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprp0k_bv0.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    date.trim_end();\n    date.trim_start();\n   \
    \ date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_start();\n    date.trim_end();\n    date.trim_start();\n\
    \    date.trim_end();\n    date.trim_\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmp6bv9n0ck.rs:116:17\n\
    \    |\n116 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp6bv9n0ck.rs:116:25\n    |\n116 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp6bv9n0ck.rs:117:17\n\
    \    |\n117 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp6bv9n0ck.rs:117:25\n    |\n117 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp6bv9n0ck.rs:118:17\n\
    \    |\n118 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp6bv9n0ck.rs:118:25\n    |\n118 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp6bv9n0ck.rs:119:17\n\
    \    |\n119 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp6bv9n0ck.rs:119:25\n    |\n119 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp6bv9n0ck.rs:120:17\n\
    \    |\n120 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmp6bv9n0ck.rs:120:25\n    |\n120 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmp6bv9n0ck.rs:121:17\n\
    \    |\n121 |     assert_eq!({left}, {right});\n    |                 ^^^^"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\":\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\":\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\":\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    :\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\"-\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\"\
    .\") &&\n    !date.contains(\":\") &&\n    !date.contains(\".\") &&\n    !date.contains(\"\
    -\") &&\n    !date.contains(\"/\") &&\n    !date.contains(\".\") &&\n\n}\n\nfn\
    \ main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmp8m4itagw.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp8m4itagw.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp8m4itagw.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8m4itagw.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8m4itagw.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8m4itagw.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8m4itagw.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8m4itagw.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8m4itagw.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8m4itagw.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8m4itagw.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8m4itagw.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        let mut date_str_split\
    \ = date_str.split('-');\n        let mut date_str_split_2 = date_str_split.split_at(3);\n\
    \        let mut date_str_split_3 = date_str_split_2.split_at(2);\n        let\
    \ mut date_str_split_4 = date_str_split_3.split_at(2);\n        let mut date_str_split_5\
    \ = date_str_split_4.split_at(2);\n        let mut date_str_split_6 = date_str_split_5.split_at(2);\n\
    \        let mut date_str_split_7 = date_str_split_6.split_at(2);\n        let\
    \ mut date_str_split_8 = date_str_split_7.split_at(2);\n        let mut date_str_split_9\
    \ = date_str_split_8.split_at(2);\n        let mut date_str_split_10 = date_str_split_9.split_at(2);\n\
    \        let mut date_str_split_11 = date_str_split_10.split_at(2);\n        let\
    \ mut date_str_split_12 = date_str_split_11.split_at(2);\n        let mut date_str_split_13\
    \ = date_str_split_12.split_at(2);\n        let mut date_str_split_14 = date_str_split_13.split_at(2);\n\
    \        let mut date_str_split_15 = date_str_split_14.split_at(2);\n        let\
    \ mut date_str_split_16 = date_str_split_15.split_at(2);\n        let mut date_str_split_17\
    \ = date_str_split_16.split_at(2);\n        let mut date_str_split_18 = date_str_split_17.split_at(2);\n\
    \        let mut date_str_split_19 = date_str_split_18.split_at(2);\n        let\
    \ mut date_str_split_20 = date_str_split_19.split_at(2);\n        let mut date_str_split_21\
    \ = date_str_split_20.split_at(2);\n        let mut date_str_split_22 = date_str_split_21.split_at(2);\n\
    \        let mut date_str_split_23 = date_str_split_22.split_at(2);\n        let\
    \ mut date_str_split_24 = date_str_split_23.split_at(2);\n        let mut date_str_split_25\
    \ = date_str_split_24.split_at(2);\n        let mut date_str_split_26 = date_str_split_25.split_at(2);\n\
    \        let mut date_str_split_27 = date_str_split_26.split_at(2);\n        let\
    \ mut date_str_split_28 = date_str_split_27.split_at(2);\n        let mut date_str_split_29\
    \ = date_str_split_28.split_at(2);\n        let mut date_str_split_30 = date_str_split_29.split_at(2);\n\
    \        let mut date_str_split_31 = date_str_split_30.split_at(2);\n        let\
    \ mut date_str_split_32 = date_str_split_31.split_at(2);\n\n}\n\nfn main() {\n\
    \    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpb_fu17t1.rs:74:3\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - unclosed delimiter\n19 |     if !date.is_empty() {\n   |   \
    \                      - this delimiter might not be properly closed...\n...\n\
    54 | }\n   | - ...as it matches this but it has different indentation\n...\n74\
    \ | }\n   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpb_fu17t1.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpb_fu17t1.rs:58:25\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpb_fu17t1.rs:59:17\n  \
    \ |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb_fu17t1.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb_fu17t1.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb_fu17t1.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb_fu17t1.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb_fu17t1.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpb_fu17t1.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches('-');\n    date_str.trim_right_matches('-');\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut days_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut months_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut years_parts:\
    \ Vec<String> = date_parts.split_whitespace().collect();\n    let mut days_parts_int:\
    \ Vec<usize> = days_parts.iter().map(|x| x.parse().unwrap()).collect();\n    let\
    \ mut months_parts_int: Vec<usize> = months_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut years_parts_int: Vec<usize> = years_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut days_parts_int: Vec<usize> = days_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut months_parts_int: Vec<usize> = months_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut years_parts_int: Vec<usize> = years_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    if days_parts_int.len() < 1 || days_parts_int.len() > 31 || months_parts_int.len()\
    \ < 1 || months_parts_int.len() > 12 || years_parts_int.len() < 1 || years_parts_int.len()\
    \ > 9999 {\n        return false;\n    }\n    if days_parts_int[0] < 1 || days_parts_int[0]\
    \ > 31 || months_parts_int[0] < 1 || months_parts_int[0] > 12 || years_parts_int[0]\
    \ < 1 || years_parts_int[0] > 9999 {\n        return false;\n    }\n    if days_parts_int[1]\
    \ < 1 || days_parts_int[1] > 31 || months_parts_int[1] < 1 || months_parts_int[1]\
    \ > 12 || years_parts_int[1] < 1 || years_parts_int[1] > 9999 {\n        return\
    \ false;\n    }\n    if days_parts_int[2] < 1 || days_parts_int[2] > 31 || months_parts_int[2]\
    \ < 1 || months_parts_int[2] > 12 || years_parts_int[2] < 1 || years_parts_int[2]\
    \ \n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n  --> /tmp/tmpt99p4nsc.rs:42:1\n   |\n\
    41 |     if days_parts_int[2] < 1 || days_parts_int[2] > 31 || months_parts_int[2]\
    \ < 1 || months_parts_int[2] > 12 || years_parts_int[2] < 1 |...\n   |     --\
    \ this `if` expression has a condition, but no block\n42 | }\n   | ^ expected\
    \ `{`\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpt99p4nsc.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt99p4nsc.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt99p4nsc.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpt99p4nsc.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt99p4nsc.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpt99p4nsc.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpt99p4nsc.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpt99p4nsc.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpt99p4nsc.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt99p4nsc.rs:50:25\n   |\n50"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && date.len() < 31 &&\n        date.len() < 30 && date.len() < 29 &&\n \
    \       date.len() < 12 && date.len() > 0 &&\n        date.chars().all(|c| c.is_digit(10))\
    \ &&\n        date.chars().all(|c| c.is_ascii_digit(10)) &&\n        date.chars().all(|c|\
    \ c != '-' && c != '/')\n}\n\nfn main() {\n    let candidate = valid_date;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7eaqfcnc.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7eaqfcnc.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7eaqfcnc.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7eaqfcnc.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7eaqfcnc.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7eaqfcnc.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7eaqfcnc.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7eaqfcnc.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7eaqfcnc.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7eaqfcnc.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7eaqfcnc.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap()\
    \ > 0 && date_str.parse::<usize>().unwrap() <= 31\n        && date_str.parse::<usize>().unwrap()\
    \ <= 30\n        && date_str.parse::<usize>().unwrap() <= 29\n        && date_str.parse::<usize>().unwrap()\
    \ <= 12\n        && date_str.parse::<usize>().unwrap() >= 1\n        && date_str.parse::<usize>().unwrap()\
    \ <= 31\n        && date_str.parse::<usize>().unwrap() <= 30\n        && date_str.parse::<usize>().unwrap()\
    \ <= 29\n        && date_str.parse::<usize>().unwrap() <= 12\n        && date_str.parse::<usize>().unwrap()\
    \ >= 1\n        && date_str.parse::<usize>().unwrap() <= 12\n        && date_str.parse::<usize>().unwrap()\
    \ >= 4;\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9omtpnde.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9omtpnde.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9omtpnde.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9omtpnde.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9omtpnde.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9omtpnde.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9omtpnde.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9omtpnde.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9omtpnde.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9omtpnde.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9omtpnde.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut days:\
    \ u32 = 0;\n    let mut months: u32 = 0;\n    let mut years: u32 = 0;\n    let\
    \ mut days_parts: Vec<&str> = date_parts.split_whitespace();\n    let mut months_parts:\
    \ Vec<&str> = date_parts.split_whitespace();\n    let mut years_parts: Vec<&str>\
    \ = date_parts.split_whitespace();\n    if days_parts.len() != 3 || months_parts.len()\
    \ != 3 || years_parts.len() != 3 {\n        return false;\n    }\n    for part\
    \ in &days_parts[..] {\n        match part.to_ascii_lowercase().as_str() {\n \
    \           \"january\" => months += 1,\n            \"february\" => months +=\
    \ 2,\n            \"march\" => months += 3,\n            \"april\" => months +=\
    \ 4,\n            \"may\" => months += 5,\n            \"june\" => months += 6,\n\
    \            \"july\" => months += 7,\n            \"august\" => months += 8,\n\
    \            \"september\" => months += 9,\n            \"october\" => months\
    \ += 10,\n            \"november\" => months += 11,\n            \"december\"\
    \ => months += 12,\n            _ => return false,\n        }\n    }\n    for\
    \ part in &months_parts[..] {\n        match part.to_ascii_lowercase().as_str()\
    \ {\n            \"january\" => months += 1,\n            \"february\" => months\
    \ += 2,\n            \"march\" => months += 3,\n            \"april\" => months\
    \ += 4,\n            \"may\" => months += 5,\n            \"june\" => months +=\
    \ 6,\n            \"july\" => months += 7,\n            \"august\" => months +=\
    \ 8,\n            \"september\" => months += 9,\n            \"october\" => months\
    \ += 10,\n            \"november\" => months += 11,\n            \"december\"\
    \ => months += 12,\n            _ => return false,\n        }\n    }\n    for\
    \ part in &years_parts[..] {\n        match part.to_ascii_lowercase().as_str()\
    \ {\n            \"january\" => years += 1,\n            \"february\" => years\
    \ += 2,\n            \"march\" => years += 3,\n            \"april\" => years\
    \ += 4,\n            \"may\" => years += 5,\n            \"june\" => years +=\
    \ 6,\n            \"july\" => years += 7,\n            \"au\n}\n\nfn main() {\n\
    \    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n  --> /tmp/tmp7isxd_g_.rs:75:13\n\
    \   |\n75 | /             \"au\n76 | | }\n77 | |\n78 | | fn main() {\n...  |\n\
    95 | |     assert_eq!({left}, {right});\n96 | | }\n   | |__^\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0765`.\n"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap()\
    \ > 0 && date_str.parse::<usize>().unwrap() <= 31\n        && date_str.parse::<usize>().unwrap()\
    \ <= 30\n        && date_str.parse::<usize>().unwrap() <= 29\n        && date_str.parse::<usize>().unwrap()\
    \ <= 12\n        && date_str.parse::<usize>().unwrap() >= 1\n        && date_str.parse::<usize>().unwrap()\
    \ <= 31\n        && date_str.parse::<usize>().unwrap() <= 30\n        && date_str.parse::<usize>().unwrap()\
    \ <= 29\n        && date_str.parse::<usize>().unwrap() <= 12\n        && date_str.parse::<usize>().unwrap()\
    \ >= 1\n        && date_str.parse::<usize>().unwrap() <= 12\n        && date_str.parse::<usize>().unwrap()\
    \ >= 4;\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9omtpnde.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9omtpnde.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9omtpnde.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9omtpnde.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9omtpnde.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9omtpnde.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9omtpnde.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9omtpnde.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9omtpnde.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9omtpnde.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9omtpnde.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    (date.len() >= 1 && date.len() <= 31) &&\n    (date.len() >= 1 && date.len()\
    \ <= 30) &&\n    (date.len() >= 1 && date.len() <= 29) &&\n    (date.len() >=\
    \ 1 && date.len() <= 12) &&\n    (date.len() == 3 && date.chars().nth(1).unwrap()\
    \ == '-' && date.chars().nth(2).unwrap() == '-' && date.chars().nth(3).unwrap()\
    \ == '-') &&\n    (date.len() == 4 && date.chars().nth(1).unwrap() == '/' && date.chars().nth(2).unwrap()\
    \ == '/' && date.chars().nth(3).unwrap() == '/' && date.chars().nth(4).unwrap()\
    \ == '/') &&\n    (date.len() == 6 && date.chars().nth(1).unwrap() == '/' && date.chars().nth(2).unwrap()\
    \ == '/' && date.chars().nth(3).unwrap() == '/' && date.chars().nth(4).unwrap()\
    \ == '/' && date.chars().nth(5).unwrap() == '/' && date.chars().nth(6).unwrap()\
    \ == '/')\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpprviurvz.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpprviurvz.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpprviurvz.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpprviurvz.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpprviurvz.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpprviurvz.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpprviurvz.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpprviurvz.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpprviurvz.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpprviurvz.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpprviurvz.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<Date>().is_ok()\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `Date` in this scope\n  --> /tmp/tmp68zjkgcz.rs:21:22\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |              - help: you\
    \ might be missing a type parameter: `<Date>`\n...\n21 |     date_str.parse::<Date>().is_ok()\n\
    \   |                      ^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68zjkgcz.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:25\n\
    \   "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n        date.len() >= 1 &&\n        date.len() <= 31 &&\n        !date.contains(\"\
    -\") &&\n        !date.contains(\"/\") &&\n        !date.contains(\".\") &&\n\
    \        !date.contains(\":\") &&\n        !date.contains(\"/\") &&\n        !date.contains(\"\
    .\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"/\") &&\n\
    \        !date.contains(\".\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"\
    /\") &&\n        !date.contains(\".\") &&\n        !date.contains(\":\") &&\n\
    \        !date.contains(\"/\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"\
    :\") &&\n        !date.contains(\"/\") &&\n        !date.contains(\".\") &&\n\
    \        !date.contains(\":\") &&\n        !date.contains(\"/\") &&\n        !date.contains(\"\
    .\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"/\") &&\n\
    \        !date.contains(\".\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"\
    /\") &&\n        !date.contains(\".\") &&\n        !date.contains(\":\") &&\n\
    \        !date.contains(\"/\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"\
    :\") &&\n        !date.contains(\"/\") &&\n        !date.contains(\".\") &&\n\
    \        !date.contains(\":\") &&\n        !date.contains(\"/\") &&\n        !date.contains(\"\
    .\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"/\") &&\n\
    \        !date.contains(\".\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"\
    /\") &&\n        !date.contains(\".\") &&\n        !date.contains(\":\") &&\n\
    \        !date.contains(\"/\") &&\n        !date.contains(\".\") &&\n        !date.contains(\"\
    :\") &&\n        !date.contains(\"/\") &&\n        !date.contains(\".\") &&\n\
    \        !date.contains(\":\") &&\n        !date.contains(\"/\") &&\n        !date.contains(\"\
    .\") &&\n        !date.contains(\":\") &&\n        !date.contains(\"/\") &&\n\
    \        !date.contains(\".\") &&\n        !date.contain\n}\n\nfn main() {\n \
    \   let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp32qgasxf.rs:81:17\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp32qgasxf.rs:81:25\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp32qgasxf.rs:82:17\n   |\n82 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp32qgasxf.rs:82:25\n\
    \   |\n82 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp32qgasxf.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp32qgasxf.rs:83:25\n   |\n83 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp32qgasxf.rs:84:17\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp32qgasxf.rs:84:25\n   |\n84 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp32qgasxf.rs:85:17\n  \
    \ |\n85 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp32qgasxf.rs:85:25\n   |\n85 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp32qgasxf.rs:86:17\n   |\n86 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_parts = date_str.split_whitespace();\n    let mut month\
    \ = date_parts[0];\n    let mut day = date_parts[1];\n    let mut year = date_parts[2];\n\
    \    let mut days_in_month = match month {\n        \"01\" => 31,\n        \"\
    03\" => 31,\n        \"05\" => 30,\n        \"07\" => 31,\n        \"08\" => 31,\n\
    \        \"10\" => 30,\n        \"12\" => 31,\n        _ => panic!(\"Invalid month:\
    \ {}\", month),\n    };\n    let mut days_in_year = match year {\n        \"2000\"\
    \ => 365,\n        \"2001\" => 366,\n        \"2002\" => 365,\n        \"2003\"\
    \ => 366,\n        \"2004\" => 365,\n        \"2005\" => 366,\n        \"2006\"\
    \ => 365,\n        \"2007\" => 366,\n        \"2008\" => 365,\n        \"2009\"\
    \ => 366,\n        \"2010\" => 365,\n        \"2011\" => 366,\n        \"2012\"\
    \ => 365,\n        \"2013\" => 366,\n        \"2014\" => 365,\n        \"2015\"\
    \ => 366,\n        \"2016\" => 365,\n        \"2017\" => 366,\n        \"2018\"\
    \ => 365,\n        \"2019\" => 366,\n        \"2020\" => 365,\n        \"2021\"\
    \ => 366,\n        \"2022\" => 365,\n        \"2023\" => 366,\n        \"2024\"\
    \ => 365,\n        \"2025\" => 366,\n        \"2026\" => 365,\n        \"2027\"\
    \ => 366,\n        \"2028\" => 365,\n        \"2029\" => 366,\n        \"2030\"\
    \ => 365,\n        \"2031\" => 366,\n        \"2032\" => 365,\n        \"2033\"\
    \ => 366,\n        \"2034\" => 365,\n        \"2035\" => 366,\n        \"2036\"\
    \ => 365,\n        \"2037\" => 366,\n        \"2038\" => 365,\n        \"2039\"\
    \ => 366,\n        \"2040\" => 365,\n        _ => panic!(\"Invalid year: {}\"\
    , year),\n    };\n    let mut days_in_valid_year = match year {\n        \"2000\"\
    \ => 365,\n        \"2001\" => 366,\n        \"2002\" => 365,\n        \"2003\"\
    \ => 366,\n        \"2004\" => 365,\n\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpmw5x8m9t.rs:107:3\n\
    \    |\n18  | fn valid_date(date: String) -> bool {\n    |                   \
    \                  - unclosed delimiter\n...\n80  |     let mut days_in_valid_year\
    \ = match year {\n    |                                             - this delimiter\
    \ might not be properly closed...\n...\n87  | }\n    | - ...as it matches this\
    \ but it has different indentation\n...\n107 | }\n    |   ^\n\nerror: expected\
    \ one of `.`, `;`, `?`, `else`, or an operator, found keyword `fn`\n  --> /tmp/tmpmw5x8m9t.rs:89:1\n\
    \   |\n87 | }\n   |  - expected one of `.`, `;`, `?`, `else`, or an operator\n\
    88 | \n89 | fn main() {\n   | ^^ unexpected token\n\nwarning: use of deprecated\
    \ associated function `core::str::<impl str>::trim_left_matches`: superseded by\
    \ `trim_start_matches`\n  --> /tmp/tmpmw5x8m9t.rs:20:14\n   |\n20 |     date_str.trim_left_matches(\"\
    -\");\n   |              ^^^^^^^^^^^^^^^^^ help: replace the use of the deprecated\
    \ associated function: `trim_start_matches`\n   |\n   = note: `#[warn(deprecated)]`\
    \ on by default\n\nwarning: use of deprecated associated function `core::str::<impl\
    \ str>::trim_right_matches`: superseded by `trim_end_matches`\n  --> /tmp/tmpmw5x8m9t.rs:21:14\n\
    \   |\n21 |     date_str.trim_right_matches(\"-\");\n   |              ^^^^^^^^^^^^^^^^^^\
    \ help: replace the use of the deprecated associated function: `trim_end_matches`\n\
    \nerror[E0608]: cannot index into a value of type `SplitWhitespace<'_>`\n  -->\
    \ /tmp/tmpmw5x8m9t.rs:23:21\n   |\n23 |     let mut month = date_parts[0];\n \
    \  |                     ^^^^^^^^^^^^^\n\nerror[E0608]: cannot index into a value\
    \ of type `SplitWhitespace<'_>`\n  --> /tmp/tmpmw5x8m9t.rs:24:19\n   |\n24 | \
    \    let mut day = date_parts[1];\n   |                   ^^^^^^^^^^^^^\n\nerror[E0608]:\
    \ cannot index into a value of type `SplitWhitespace<'_>`\n  --> /tmp/tmpmw5x8m9t.rs:25:20\n\
    \   |\n25 |     let mut year = date_parts[2];\n   |                    ^^^^^^^^^^^^^\n\
    \nerror: aborting due to 5 previous errors; 2 warnings emitted\n\nFor more information\
    \ about this error, try `rustc "
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    if !date.is_empty()\
    \ {\n        let mut date_str = date.to_string();\n        date_str.trim_left_matches('-');\n\
    \        date_str.trim_right_matches('-');\n        let mut split_str = date_str.split_whitespace();\n\
    \        let mut days: u32 = 0;\n        let mut months: u32 = 0;\n        let\
    \ mut years: u32 = 0;\n        for s in split_str {\n            if s.is_digit()\
    \ {\n                days += s.parse::<u32>().unwrap();\n            } else {\n\
    \                months += s.parse::<u32>().unwrap();\n            }\n       \
    \ }\n        if days > 31 || months > 12 || months < 1 || days < 1 {\n       \
    \     return false;\n        }\n        if months == 2 {\n            if days\
    \ > 29 {\n                return false;\n            }\n        }\n        if\
    \ months == 4 {\n            if days > 30 {\n                return false;\n \
    \           }\n        }\n        if months == 6 {\n            if days > 31 {\n\
    \                return false;\n            }\n        }\n        if months ==\
    \ 9 {\n            if days > 30 {\n                return false;\n           \
    \ }\n        }\n        if months == 11 {\n            if days > 31 {\n      \
    \          return false;\n            }\n        }\n        if months == 12 {\n\
    \            if days > 31 {\n                return false;\n            }\n  \
    \      }\n        if years > 9999 {\n            return false;\n        }\n  \
    \  }\n    true\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmg6eydj7.rs:76:17\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmg6eydj7.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmg6eydj7.rs:77:17\n   |\n77 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmg6eydj7.rs:77:25\n\
    \   |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmg6eydj7.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmg6eydj7.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmg6eydj7.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmg6eydj7.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmg6eydj7.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmg6eydj7.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmg6eydj7.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<Date>().is_ok()\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `Date` in this scope\n  --> /tmp/tmp68zjkgcz.rs:21:22\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |              - help: you\
    \ might be missing a type parameter: `<Date>`\n...\n21 |     date_str.parse::<Date>().is_ok()\n\
    \   |                      ^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68zjkgcz.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:25\n\
    \   "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.parse::<usize>().unwrap();\n\
    \    date_str.parse::<usize>().unwrap();\n    date_str.\n}\n\nfn main() {\n  \
    \  let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmpuws30jui.rs:60:1\n   |\n60\
    \ | }\n   | ^\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpuws30jui.rs:64:17\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuws30jui.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuws30jui.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuws30jui.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuws30jui.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuws30jui.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuws30jui.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuws30jui.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuws30jui.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuws30jui.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuws30jui.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    if date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let mut days: u32 = 0;\n    let mut months:\
    \ u32 = 0;\n    let mut years: u32 = 0;\n    for part in date_parts {\n      \
    \  let mut date_part = part.to_string();\n        date_part.trim();\n        if\
    \ date_part.len() == 0 {\n            return false;\n        }\n        let mut\
    \ date_parts = date_part.split_whitespace();\n        if date_parts.len() != 3\
    \ {\n            return false;\n        }\n        days = date_parts[0].to_string().parse().unwrap();\n\
    \        months = date_parts[1].to_string().parse().unwrap();\n        years =\
    \ date_parts[2].to_string().parse().unwrap();\n    }\n    if days > 31 || months\
    \ > 12 || years > 30 {\n        return false;\n    }\n    if months == 1 || months\
    \ == 3 || months == 5 || months == 7 || months == 8 || months == 10 || months\
    \ == 12 {\n        if days == 31 || days == 30 {\n            return true;\n \
    \       }\n    }\n    if months == 4 || months == 6 || months == 9 || months ==\
    \ 11 {\n        if days == 29 {\n            return true;\n        }\n    }\n\
    \    if months == 2 {\n        if days == 29 {\n            return true;\n   \
    \     }\n    }\n    return false;\n}\n\nfn main() {\n    let candidate = valid_date;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpm69850b2.rs:69:17\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm69850b2.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm69850b2.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpm69850b2.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpm69850b2.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpm69850b2.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpm69850b2.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpm69850b2.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpm69850b2.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm69850b2.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm69850b2.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    let mut date_str2 = date_str.clone();\n  \
    \  date_str2.remove_prefix(\"0\");\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"\
    0\");\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\"\
    );\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n\
    \    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n  \
    \  date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"\
    0\");\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\"\
    );\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n\
    \    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n  \
    \  date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"\
    0\");\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\"\
    );\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n\
    \    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n  \
    \  date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"\
    0\");\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\"\
    );\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n\
    \    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n  \
    \  date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"\
    0\");\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\"\
    );\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n\
    \    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n  \
    \  date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"0\");\n    date_str2.remove_suffix(\"\
    0\");\n    date_str2.remove_suffix(\"0\");\n    date_str\n}\n\nfn main() {\n \
    \   let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0g_dfffm.rs:75:17\n\
    \   |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0g_dfffm.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0g_dfffm.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0g_dfffm.rs:76:25\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0g_dfffm.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0g_dfffm.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0g_dfffm.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0g_dfffm.rs:78:25\n   |\n78 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0g_dfffm.rs:79:17\n  \
    \ |\n79 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0g_dfffm.rs:79:25\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0g_dfffm.rs:80:17\n   |\n80 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && valid_day(date.as_str()) && valid_month(date.as_str()) && valid_year(date.as_str())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:25\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                         ^^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `valid_month` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:19:53\n   |\n19 |     !date.is_empty() && valid_day(date.as_str())\
    \ && valid_month(date.as_str()) && valid_year(date.as_str())\n   |           \
    \                                          ^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find function `valid_year` in this scope\n  --> /tmp/tmp7szrmq88.rs:19:83\n\
    \   |\n19 |     !date.is_empty() && valid_day(date.as_str()) && valid_month(date.as_str())\
    \ && valid_year(date.as_str())\n   |                                         \
    \                                          ^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7szrmq88.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7szrmq88.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7szrmq88.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find v"
  stdout: ''
  timestamp: 1659800297
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    date.len()\
    \ > 0 && valid_day(date.chars().nth(1).unwrap()) && valid_month(date.chars().nth(2).unwrap())\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmpvreo_7so.rs:19:23\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.chars().nth(1).unwrap()) && valid_month(date.chars().nth(2).unwrap())\n\
    \   |                       ^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `valid_month` in this scope\n  --> /tmp/tmpvreo_7so.rs:19:66\n\
    \   |\n19 |     date.len() > 0 && valid_day(date.chars().nth(1).unwrap()) && valid_month(date.chars().nth(2).unwrap())\n\
    \   |                                                                  ^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvreo_7so.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvreo_7so.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvreo_7so.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvreo_7so.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvreo_7so.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvreo_7so.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvreo_7so.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvreo_7so.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found "
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    date.trim_end().to_string().parse::<usize>().unwrap()\
    \ > 0 &&\n        date.trim_end().to_string().parse::<usize>().unwrap() <= 31\
    \ &&\n        date.trim_end().to_string().parse::<usize>().unwrap() <= 30 &&\n\
    \        date.trim_end().to_string().parse::<usize>().unwrap() <= 29 &&\n    \
    \    date.trim_end().to_string().parse::<usize>().unwrap() <= 12 &&\n        date.trim_end().to_string().parse::<usize>().unwrap()\
    \ >= 1 &&\n        date.trim_end().to_string().parse::<usize>().unwrap() <= 12\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5l3pmyg9.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5l3pmyg9.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5l3pmyg9.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5l3pmyg9.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5l3pmyg9.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<Date>().is_ok()\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `Date` in this scope\n  --> /tmp/tmp68zjkgcz.rs:21:22\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |              - help: you\
    \ might be missing a type parameter: `<Date>`\n...\n21 |     date_str.parse::<Date>().is_ok()\n\
    \   |                      ^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68zjkgcz.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68zjkgcz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68zjkgcz.rs:30:25\n\
    \   "
  stdout: ''
  timestamp: 1659800298
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '\n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0762]: unterminated character literal\n  --> /tmp/tmp__ugf6g3.rs:19:1325\n\
    \   |\n19 | ...c| c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c\
    \ <= '\n   |                                                                 \
    \     ^\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0762`.\n"
  stdout: ''
  timestamp: 1659749442
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches(\"-\");\n    date_str.trim_right_matches(\"\
    -\");\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    /\");\n    date_str.trim_right_matches(\"/\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\".\");\n    date_str.trim_right_matches(\".\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    -\");\n    date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\".\");\n    date_str.trim_right_matches(\".\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    -\");\n    date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\".\");\n    date_str.trim_right_matches(\".\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    -\");\n    date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\".\");\n    date_str.trim_right_matches(\".\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    -\");\n    date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\".\");\n    date_str.trim_right_matches(\".\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    -\");\n    date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\".\");\n    date_str.trim_right_matches(\".\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    -\");\n    date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\".\");\n    date_str.trim_right_matches(\".\"\
    );\n    let mut date_str = date_str.to_string();\n    date_str.trim_left_matches(\"\
    -\");\n    date_str.trim_right_matches(\"-\");\n    let mut date_str = date_str.to_string();\n\
    \    date_str.trim_left_matches(\".\");\n    date_str.trim_right_matches(\".\"\
    );\n    let mut \n}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpdeha84b8.rs:71:1\n\
    \   |\n71 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpdeha84b8.rs:75:17\n   |\n75 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpdeha84b8.rs:75:25\n \
    \  |\n75 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdeha84b8.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdeha84b8.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdeha84b8.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdeha84b8.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdeha84b8.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdeha84b8.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdeha84b8.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdeha84b8.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdeha84b8.rs:80:17\n   |\n80 |     "
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && date.chars().all(|c| c.is_digit()) && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c\n}\n\nfn main() {\n    let candidate\
    \ = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmpuol3zzls.rs:19:1581\n\
    \   |\n18 | fn valid_date(date: String) -> bool {\n   |                      \
    \               - closing delimiter possibly meant for this\n19 |     !date.is_empty()\
    \ && date.len() == 10 && date.chars().all(|c| c.is_digit()) && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c| c == '/') < 2 && date.chars().count(|c|\
    \ c == '-') < 2 && date.chars().count(|c...\n   |                            \
    \                                                                            \
    \                                                                            \
    \                                                                "
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim_left_matches('-');\n    date_str.trim_right_matches('-');\n\
    \    date_str.trim_left_matches(' ');\n    date_str.trim_right_matches(' ');\n\
    \    let mut date_parts = date_str.split_whitespace();\n    let mut days_parts:\
    \ Vec<&str> = date_parts.split_whitespace().collect();\n    let mut months_parts:\
    \ Vec<&str> = date_parts.split_whitespace().collect();\n    let mut years_parts:\
    \ Vec<&str> = date_parts.split_whitespace().collect();\n    let mut days_parts_int:\
    \ Vec<i32> = days_parts.iter().map(|x| x.parse().unwrap()).collect();\n    let\
    \ mut months_parts_int: Vec<i32> = months_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut years_parts_int: Vec<i32> = years_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut days_parts_int: Vec<i32> = days_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut months_parts_int: Vec<i32> = months_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut years_parts_int: Vec<i32> = years_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut days_parts_int: Vec<i32> = days_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut months_parts_int: Vec<i32> = months_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut years_parts_int: Vec<i32> = years_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut days_parts_int: Vec<i32> = days_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut months_parts_int: Vec<i32> = months_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut years_parts_int: Vec<i32> = years_parts.iter().map(|x| x.parse().unwrap()).collect();\n\
    \    let mut days_parts_int: Vec<i32> = days_parts.\n}\n\nfn main() {\n    let\
    \ candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmprvdpfvq8.rs:41:1\n   |\n41\
    \ | }\n   | ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmprvdpfvq8.rs:40:51\n\
    \   |\n40 |     let mut days_parts_int: Vec<i32> = days_parts.\n   |         \
    \                                          ^ help: add `;` here\n41 | }\n   |\
    \ - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprvdpfvq8.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprvdpfvq8.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprvdpfvq8.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprvdpfvq8.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprvdpfvq8.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprvdpfvq8.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprvdpfvq8.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprvdpfvq8.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprvdpfvq8.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprvdpfvq8.rs:49:25"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ &&\n    date.len() == 10 &&\n    !date.contains(\"-\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !date.contains(\"\
    /\") &&\n    !date.contains(\".\") &&\n    !date.contains(\":\") &&\n    !\n}\n\
    \nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmplhevrktt.rs:77:1\n\
    \   |\n77 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmplhevrktt.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmplhevrktt.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplhevrktt.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplhevrktt.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplhevrktt.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplhevrktt.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplhevrktt.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplhevrktt.rs:84:25\n   |\n84 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplhevrktt.rs:85:17\n   |\n85 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplhevrktt.rs:85:25\n\
    \   |\n85 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplhevrktt.rs:86:17\n   |\n86 |     "
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    if date_str.len() ==\
    \ 0 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    if date_parts.len() != 3 {\n        return false;\n    }\n    let mut date_parts\
    \ = date_str.split_whitespace();\n    let month = date_parts[0].parse().unwrap();\n\
    \    let day = date_parts[1].parse().unwrap();\n    let year = date_parts[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 && day > 30 {\n        return\
    \ false;\n    }\n    if month == 6 && day > 31 {\n        return false;\n    }\n\
    \    if month == 9 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 11 && day > 30 {\n        return false;\n    }\n    if month == 1 && day > 31\
    \ {\n        return false;\n    }\n    if month == 3 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 5 && day > 31 {\n        return false;\n    }\n\
    \    if month == 7 && day > 31 {\n        return false;\n    }\n    if month ==\
    \ 8 && day > 31 {\n        return false;\n    }\n    if month == 10 && day > 31\
    \ {\n        return false;\n    }\n    if month == 12 && day > 31 {\n        return\
    \ false;\n    }\n    if month == 1 && day > 30 {\n        return false;\n    }\n\
    \    if month == 3 && day > 30 {\n        return false;\n    }\n    if month ==\
    \ 5 && day > 30 {\n        return false;\n    }\n    if month == 7 && day > 30\
    \ {\n        return false;\n    }\n    if month == 8 && day > 30 {\n        return\
    \ false;\n    }\n    if month == 10 && day > 30 {\n        return false;\n   \
    \ }\n    if month == 12 && day > 30 {\n        return false;\n    }\n    if month\
    \ == 1 && day > 29 {\n        return false;\n    }\n    if month == 3 && day >\
    \ 29 {\n        return false;\n    }\n    if month == 5 && day > 29 {\n      \
    \  return false;\n    }\n    if month == 7 && day > 29 {\n        return false;\n\
    \    }\n    if month == 8 && day > 29 {\n        return false;\n    }\n    if\
    \ month == 10 && day > 29 {\n        return false;\n    }\n    if month == 12\
    \ && day > 29 {\n        return false;\n    }\n    return true;\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmpc5ol5x3v.rs:121:17\n\
    \    |\n121 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpc5ol5x3v.rs:121:25\n    |\n121 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpc5ol5x3v.rs:122:17\n\
    \    |\n122 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpc5ol5x3v.rs:122:25\n    |\n122 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpc5ol5x3v.rs:123:17\n\
    \    |\n123 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpc5ol5x3v.rs:123:25\n    |\n123 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpc5ol5x3v.rs:124:17\n\
    \    |\n124 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpc5ol5x3v.rs:124:25\n    |\n124 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpc5ol5x3v.rs:125:17\n\
    \    |\n125 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpc5ol5x3v.rs:125:25\n    |\n125 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpc5ol5x3v.rs:126:17\n\
    \    |\n126 |     assert_eq!({left}, {right});\n    |                 ^^^^"
  stdout: ''
  timestamp: 1659821494
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    !date.is_empty()\
    \ && date.len() == 10 && valid_day(date) && valid_month(date) && valid_year(date)\n\
    }\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `valid_day` in this scope\n  --> /tmp/tmp0_jizsi5.rs:19:45\n\
    \   |\n19 |     !date.is_empty() && date.len() == 10 && valid_day(date) && valid_month(date)\
    \ && valid_year(date)\n   |                                             ^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `valid_month`\
    \ in this scope\n  --> /tmp/tmp0_jizsi5.rs:19:64\n   |\n19 |     !date.is_empty()\
    \ && date.len() == 10 && valid_day(date) && valid_month(date) && valid_year(date)\n\
    \   |                                                                ^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `valid_year` in\
    \ this scope\n  --> /tmp/tmp0_jizsi5.rs:19:85\n   |\n19 |     !date.is_empty()\
    \ && date.len() == 10 && valid_day(date) && valid_month(date) && valid_year(date)\n\
    \   |                                                                        \
    \             ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmp0_jizsi5.rs:24:17\n   |\n24 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0_jizsi5.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0_jizsi5.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0_jizsi5.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0_jizsi5.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0_jizsi5.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ c"
  stdout: ''
  timestamp: 1659821493
- exit_code: 1
  program: "/// You have to write a function which validates a given date string and\n\
    /// returns True if the date is valid otherwise False.\n/// The date is valid\
    \ if all of the following rules are satisfied:\n/// 1. The date string is not\
    \ empty.\n/// 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n/// 3. The months should not be less than\
    \ 1 or higher than 12.\n/// 4. The date should be in the format: mm-dd-yyyy\n\
    /// >>> valid_date(String::from(\"03-11-2000\"))\n/// true\n/// >>> valid_date(String::from(\"\
    15-01-2012\"))\n/// false\n/// >>> valid_date(String::from(\"04-0-2040\"))\n///\
    \ false\n/// >>> valid_date(String::from(\"06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"\
    06/04/2020\"))\n/// false\nfn valid_date(date: String) -> bool {\n    let mut\
    \ date = date.to_string();\n    let mut date_components = date.split_whitespace();\n\
    \    let mut days_components = date_components[1..3].collect::<Vec<_>>();\n  \
    \  let mut months_components = date_components[4..6].collect::<Vec<_>>();\n  \
    \  let mut years_components = date_components[7..10].collect::<Vec<_>>();\n  \
    \  let mut days_count = days_components.len();\n    let mut months_count = months_components.len();\n\
    \    let mut years_count = years_components.len();\n    let mut days_count_in_months\
    \ = days_count / months_count;\n    let mut months_count_in_years = months_count\
    \ / years_count;\n    let mut days_count_in_years = days_count / years_count;\n\
    \    let mut months_count_in_months = months_count / months_count_in_years;\n\
    \    let mut days_count_in_months_count = days_count_in_months / months_count_in_years;\n\
    \    let mut months_count_in_years_count = months_count_in_years / years_count_in_months;\n\
    \    if days_count_in_months_count > 31 || months_count_in_years_count > 12 ||\
    \ months_count_in_months_count > 12 {\n        return false;\n    }\n    if days_count_in_months_count\
    \ < 1 || months_count_in_years_count < 1 || months_count_in_months_count < 1 {\n\
    \        return false;\n    }\n    if days_count_in_months_count > 29 || months_count_in_years_count\
    \ > 12 || months_count_in_months_count > 12 {\n        return false;\n    }\n\
    \    if days_count_in_months_count > 31 || months_count_in_years_count > 12 ||\
    \ months_count_in_months_count > 12 {\n        return false;\n    }\n    if days_count_in_months_count\
    \ > 30 || months_count_in_years_count > 12 || months_count_in_months_count > 12\
    \ {\n        return false;\n    }\n    if days_count_in_months_count > 29 || months_count_in_years_count\
    \ > 12 || months_count_in_months_count > 12 {\n        return false;\n    }\n\
    \    if days_count_in_months_count > 31 || months_count_in_years_count > 12 ||\
    \ months_count_in_months_count > 12 {\n        return false;\n    }\n    if days_count_in_months_count\
    \ > 30 || months_count_in_years_count > 12 || months_count_in_\n}\n\nfn main()\
    \ {\n    let candidate = valid_date;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n  --> /tmp/tmper8raqz3.rs:55:1\n   |\n\
    54 |     if days_count_in_months_count > 30 || months_count_in_years_count > 12\
    \ || months_count_in_\n   |     -- this `if` expression has a condition, but no\
    \ block\n55 | }\n   | ^ expected `{`\n\nerror[E0425]: cannot find value `years_count_in_months`\
    \ in this scope\n  --> /tmp/tmper8raqz3.rs:32:67\n   |\n32 |     let mut months_count_in_years_count\
    \ = months_count_in_years / years_count_in_months;\n   |                     \
    \                                              ^^^^^^^^^^^^^^^^^^^^^ help: a local\
    \ variable with a similar name exists: `days_count_in_months`\n\nerror[E0425]:\
    \ cannot find value `months_count_in_months_count` in this scope\n  --> /tmp/tmper8raqz3.rs:33:79\n\
    \   |\n33 |     if days_count_in_months_count > 31 || months_count_in_years_count\
    \ > 12 || months_count_in_months_count > 12 {\n   |                          \
    \                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `days_count_in_months_count`\n\
    \nerror[E0425]: cannot find value `months_count_in_months_count` in this scope\n\
    \  --> /tmp/tmper8raqz3.rs:36:77\n   |\n36 |     if days_count_in_months_count\
    \ < 1 || months_count_in_years_count < 1 || months_count_in_months_count < 1 {\n\
    \   |                                                                        \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a local variable with a similar name\
    \ exists: `days_count_in_months_count`\n\nerror[E0425]: cannot find value `months_count_in_months_count`\
    \ in this scope\n  --> /tmp/tmper8raqz3.rs:39:79\n   |\n39 |     if days_count_in_months_count\
    \ > 29 || months_count_in_years_count > 12 || months_count_in_months_count > 12\
    \ {\n   |                                                                    \
    \           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a local variable with a similar\
    \ name exists: `days_count_in_months_count`\n\nerror[E0425]: cannot find value\
    \ `months_count_in_months_count` in this scope\n  --> /tmp/tmper8raqz3.rs:42:79\n\
    \   |\n42 |     if days_count_in_months_c"
  stdout: ''
  timestamp: 1659821494

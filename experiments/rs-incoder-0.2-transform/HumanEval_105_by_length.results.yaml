language: rs
name: HumanEval_105_by_length
results:
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    let mut len = arr.len();\n    let mut i\
    \ = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n         \
    \   i += 1;\n            continue;\n        }\n\n        let mut j = i;\n    \
    \    while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n        }\n\n\
    \        let mut tmp = arr[j];\n        arr[j] = arr[i];\n        arr[i] = tmp;\n\
    \        i += 1;\n    }\n\n    let mut result = vec![];\n    for i in arr.iter()\
    \ {\n        result.push(String::from(&format!(\"{}\", i)));\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3ppbi4iv.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3ppbi4iv.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3ppbi4iv.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3ppbi4iv.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut i = 0;\n    while i\
    \ < arr.len() {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        let mut j = i;\n        while j < arr.len()\
    \ && arr[j] == arr[j] + 1 {\n            j += 1\n        }\n        result.push(String::from(&arr[j\
    \ as usize]));\n        i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvsl_lzly.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvsl_lzly.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvsl_lzly.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvsl_lzly.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvsl_lzly.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvsl_lzly.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvsl_lzly.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvsl_lzly.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvsl_lzly.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvsl_lzly.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpvsl_lzly.rs:25:21\n\
    \    |\n25  |         result.push(String::from(&arr[j as usize]));\n    |    \
    \                 ^^^^^^^^^^^^ t"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    let mut result = Vec::new();\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i;\n     \
    \   while j < arr.len() && arr[j] < 10 {\n            j += 1\n        }\n    \
    \    if j > i {\n            result.push(by_length(arr.split_off(i).reverse()));\n\
    \            i = j;\n        } else {\n            result.push(by_length(arr.split_off(i)));\n\
    \            i += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8fqgdd0b.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8fqgdd0b.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8fqgdd0b.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8fqgdd0b.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp8fqgdd0b.rs:23:35\n   |\n23 |             result.push(by_length(arr.split_off(i).reverse()));\n\
    \   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ expec"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    let mut result = vec![];\n\
    \    while arr.len() > 0 {\n        let mut cur = arr.split_off(1).unwrap();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp5_w8e8zc.rs:53:3\n\
    \   |\n13 | fn by_length(arr: Vec<isize>) -> Vec<String> {\n   |             \
    \                                 - unclosed delimiter\n...\n16 |     while arr.len()\
    \ > 0 {\n   |                         - this delimiter might not be properly closed...\n\
    ...\n44 | }\n   | - ...as it matches this but it has different indentation\n...\n\
    53 | }\n   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5_w8e8zc.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5_w8e8zc.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5_w8e8zc.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5_w8e8zc.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not foun"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut reversed = arr.rev();\n    let mut digits\
    \ = vec![];\n    let mut i = 0;\n    while i < reversed.len() {\n        let digit\
    \ = reversed[i] % 10;\n        digits.push(digit);\n        i += 1;\n    }\n \
    \   for digit in digits {\n        let index = digit as usize;\n        let name\
    \ = &NAMES[index];\n        result.push(name);\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `NAMES` in this scope\n  --> /tmp/tmpyu214xgd.rs:28:21\n\
    \   |\n28 |         let name = &NAMES[index];\n   |                     ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyu214xgd.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyu214xgd.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyu214xgd.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyu214xgd.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyu214xgd.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyu214xgd.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyu214xgd.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyu214xgd.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyu214xgd.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyu214xgd.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0599]: the meth"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n\n    while digits_len > 0 {\n      \
    \  let mut digit = digits.remove(0);\n        let mut index = digit as usize;\n\
    \        let mut digits_len = digits_len as usize;\n\n        while digits_len\
    \ > 0 {\n            let mut digit = digits.remove(0);\n            let mut index\
    \ = index as usize;\n            let mut digits_len = digits_len as usize;\n\n\
    \            if index >= 10 {\n                index -= 10;\n                result.push(String::from(\"\
    Nine\"));\n            }\n\n            if index >= 10 {\n                index\
    \ -= 10;\n                result.push(String::from(\"Eight\"));\n            }\n\
    \n            if index >= 10 {\n                index -= 10;\n               \
    \ result.push(String::from(\"Seven\"));\n            }\n\n            if index\
    \ >= 10 {\n                index -= 10;\n                result.push(String::from(\"\
    Six\"));\n            }\n\n            if index >= 10 {\n                index\
    \ -= 10;\n                result.push(String::from(\"Five\"));\n            }\n\
    \n            if index >= 10 {\n                index -= 10;\n               \
    \ result.push(String::from(\"Four\"));\n            }\n\n            if index\
    \ >= 10 {\n                index -= 10;\n                result.push(String::from(\"\
    Three\"));\n            }\n\n            if index >= 10 {\n                index\
    \ -= 10;\n                result.push(String::from(\"Two\"));\n            }\n\
    \n            if index >= 10 {\n                index -= 10;\n               \
    \ result.push(String::from(\"One\"));\n            }\n\n            if index ==\
    \ 0 {\n                result.push(String::from(\"Zero\"));\n            }\n\n\
    \            if index > 0 {\n                result.push(String::from(&digits[digit\
    \ as usize]));\n            }\n        }\n    }\n\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:92:17\n\
    \   |\n92 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo9dr4ksb.rs:92:25\n   |\n92 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:93:17\n   |\n93 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:93:25\n\
    \   |\n93 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo9dr4ksb.rs:94:17\n   |\n94 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:94:25\n   |\n94 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo9dr4ksb.rs:95:17\n   |\n95 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:95:25\n   |\n95 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:96:17\n  \
    \ |\n96 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo9dr4ksb.rs:96:25\n   |\n96 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpo9dr4ksb.rs:82:29\n\
    \    |\n82  |                 result.push(String::from(&digits[digit as usize]));\n\
    \    |                    "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n        } else {\n            let mut j = i;\n     \
    \       while j < len && arr[j] == arr[j - 1] {\n                j += 1;\n   \
    \         }\n            let mut k = j;\n            while k < len && arr[k] ==\
    \ arr[k + 1] {\n                k += 1;\n            }\n            arr[i] = String::from(&arr[i\
    \ - k]);\n            i += 1;\n        }\n    }\n    arr\n}\n\nfn main() {\n \
    \   let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5pl0sr9b.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5pl0sr9b.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5pl0sr9b.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5pl0sr9b.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmp5pl0sr9b.rs:33:22\n\
    \    |\n33  |             arr[i] = String::from(&arr[i - k]);\n    |         \
    \             ^^^^^^^^^^^^ the t"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        if j == digits_len {\n            break;\n\
    \        }\n        let mut digit = digits[j];\n        digits[j] = digits_len\
    \ - j;\n        digits_len = j;\n        result.push(String::from(&digits[digit]));\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqzvj10oe.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqzvj10oe.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqzvj10oe.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqzvj10oe.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqzvj10oe.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqzvj10oe.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqzvj10oe.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqzvj10oe.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqzvj10oe.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqzvj10oe.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpqzvj10oe.rs:31:21\n   |\n31 |         digits[j] = digits_len\
    \ - j;\n   |                     ^^^^^^^^^^^^^^ expected `isize`, found `usize`\n\
    \nerror[E0277]: the type `[i"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as isize).collect::<Vec<_>>();\n  \
    \  arr.sort_unstable();\n    arr.reverse();\n\n    let mut result = vec![];\n\
    \    for i in arr {\n        let num = i as usize;\n        let name = match num\
    \ {\n            1 => \"One\",\n            2 => \"Two\",\n            3 => \"\
    Three\",\n            4 => \"Four\",\n            5 => \"Five\",\n           \
    \ 6 => \"Six\",\n            7 => \"Seven\",\n            8 => \"Eight\",\n  \
    \          9 => \"Nine\",\n            _ => return vec![],\n        };\n     \
    \   result.push(name);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7jcw1sou.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7jcw1sou.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7jcw1sou.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7jcw1sou.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7jcw1sou.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7jcw1sou.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7jcw1sou.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7jcw1sou.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7jcw1sou.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7jcw1sou.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp7jcw1sou.rs:40:5\n   |\n13 | fn by_length(arr: Vec<isize>)\
    \ -> Vec<String> {\n   |                                  ----------- expected\
    \ `Vec<String>` because of retur"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        let mut digit = digits[j];\n        if\
    \ digit < 10 {\n            result.push(String::from(&format!(\"One\", digit)));\n\
    \            i += 1;\n        } else {\n            result.push(String::from(&format!(\"\
    Ten\", digit)));\n            i += 2;\n        }\n        while i < digits_len\
    \ && digits_len > 1 && digits_len > i && digits_len > j && digits_len > k {\n\
    \            if digits_len > i + 1 && digits_len > j + 1 && digits_len > k + 1\
    \ {\n                let mut digit = digits[i];\n                digits[i] = digits[j];\n\
    \                digits[j] = digit;\n                i += 1;\n               \
    \ j += 1;\n                k += 1;\n            }\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: argument never used\n  --> /tmp/tmp9ovuu0xz.rs:28:54\n   |\n28 |\
    \             result.push(String::from(&format!(\"One\", digit)));\n   |     \
    \                                          -----  ^^^^^ argument never used\n\
    \   |                                               |\n   |                  \
    \                             formatting specifier missing\n\nerror: argument\
    \ never used\n  --> /tmp/tmp9ovuu0xz.rs:31:54\n   |\n31 |             result.push(String::from(&format!(\"\
    Ten\", digit)));\n   |                                               -----  ^^^^^\
    \ argument never used\n   |                                               |\n\
    \   |                                               formatting specifier missing\n\
    \nerror[E0425]: cannot find value `k` in this scope\n   --> /tmp/tmp9ovuu0xz.rs:34:100\n\
    \    |\n34  |         while i < digits_len && digits_len > 1 && digits_len > i\
    \ && digits_len > j && digits_len > k {\n    |                               \
    \                                                                     ^ help:\
    \ a tuple variant with a similar name exists: `Ok`\n\nerror[E0425]: cannot find\
    \ value `k` in this scope\n   --> /tmp/tmp9ovuu0xz.rs:35:73\n    |\n35  |    \
    \         if digits_len > i + 1 && digits_len > j + 1 && digits_len > k + 1 {\n\
    \    |                                                                       \
    \  ^ help: a tuple variant with a similar name exists: `Ok`\n\nerror[E0425]: cannot\
    \ find value `k` in this scope\n   --> /tmp/tmp9ovuu0xz.rs:41:17\n    |\n41  |\
    \                 k += 1;\n    |                 ^ help: a tuple variant with\
    \ a similar name exists: `Ok`\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp9ovuu0xz.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9ovuu0xz.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9ovuu0xz.rs:51:17\n   |\n51 |     assert_eq"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] > 9 {\n          \
    \  len = len;\n        } else {\n            arr[i] = String::from(&arr[i as usize]);\n\
    \            i += 1;\n        }\n    }\n    arr.reverse();\n    arr\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmu_nwwix.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmu_nwwix.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmu_nwwix.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmu_nwwix.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmu_nwwix.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmu_nwwix.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmu_nwwix.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmu_nwwix.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmu_nwwix.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmu_nwwix.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpmu_nwwix.rs:24:22\n\
    \    |\n24  |             arr[i] = String::from(&arr[i as usize]);\n    |    \
    \                  ^^^^^^^^^^^^ "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = vec![];\n    let mut i = 0;\n   \
    \ while i < arr.len() {\n        let mut j = i;\n        while j < arr.len() &&\
    \ arr[j] < 10 {\n            digits.push(arr[j]);\n            j += 1\n      \
    \  }\n        let mut k = i;\n        while k < arr.len() && arr[k] > 9 {\n  \
    \          digits.push(arr[k]);\n            k += 1\n        }\n        let mut\
    \ reversed = vec![];\n        for i in 0..digits.len() {\n            reversed.push(digits[digits.len()\
    \ - 1 - i]);\n        }\n        result.push(reversed.join(\"\"));\n        i\
    \ += digits.len() - 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphanl5wba.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphanl5wba.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphanl5wba.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphanl5wba.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphanl5wba.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphanl5wba.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphanl5wba.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphanl5wba.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphanl5wba.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphanl5wba.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: the method\
    \ `join` exists for struct `Vec<isize>`, but its trait bounds were not satisfied\n\
    \  --> /tmp/tmphanl5wba.rs:35:30\n   |\n35 |         result.push(reversed.join(\"\
    \"));\n   |                  "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut digits = vec![];\n\
    \    let mut digits_len = vec![];\n    let mut digits_len_len = vec![];\n    let\
    \ mut digits_len_len_len = vec![];\n    let mut digits_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len = vec![];\n    let mut digits_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len = vec![];\n    let\
    \ mut digits_len_len_len_len_len_len_len_len = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len_len_len_len_len_len_len = vec![];\n  \
    \  let mut digits_len_len_len_len_len_len_len_len_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmprerg244l.rs:39:68\n   |\n\
    39 |     let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_\n   |\
    \                                                                    ^ help: add\
    \ `;` here\n40 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmprerg244l.rs:44:17\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmprerg244l.rs:44:25\n \
    \  |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprerg244l.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprerg244l.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprerg244l.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprerg244l.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprerg244l.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprerg244l.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprerg244l.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprerg244l.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n  "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n  \
    \  let mut i = 0;\n    while i < reversed.len() {\n        let digit = reversed[i];\n\
    \        let index = digits.iter().position(|&x| x == digit).unwrap();\n     \
    \   result.push(by_digit(index, digits, &mut reversed));\n        i += 1;\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmpob0tolr5.rs:24:21\n\
    \   |\n24 |         result.push(by_digit(index, digits, &mut reversed));\n   |\
    \                     ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpob0tolr5.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpob0tolr5.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpob0tolr5.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpob0tolr5.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpob0tolr5.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpob0tolr5.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpob0tolr5.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpob0tolr5.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpob0tolr5.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpob0tolr5.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found i"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let len = arr[i] - 1;\n        if len < 1 || len > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        result.push(String::from(&arr[i as\
    \ usize]));\n        i += len;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3g9oxcio.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3g9oxcio.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3g9oxcio.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3g9oxcio.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3g9oxcio.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3g9oxcio.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3g9oxcio.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3g9oxcio.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3g9oxcio.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3g9oxcio.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmp3g9oxcio.rs:25:21\n\
    \    |\n25  |         result.push(String::from(&arr[i as usize]));\n    |    \
    \                 ^^^^^^^^^^^^ t"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    arr.sort();\n    arr.reverse();\n\
    \    arr.iter().map(|x| {\n        match x {\n            1 => \"One\",\n    \
    \        2 => \"Two\",\n            3 => \"Three\",\n            4 => \"Four\"\
    ,\n            5 => \"Five\",\n            6 => \"Six\",\n            7 => \"\
    Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\",\n          \
    \  _ => panic!(\"Invalid number in array: {}\", x),\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprxxyh88z.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprxxyh88z.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprxxyh88z.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprxxyh88z.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprxxyh88z.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprxxyh88z.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprxxyh88z.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprxxyh88z.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprxxyh88z.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprxxyh88z.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmprxxyh88z.rs:30:8\n   |\n30 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut reversed = arr\n  \
    \      .iter()\n        .cloned()\n        .enumerate()\n        .map(|(i, x)|\
    \ {\n            if x < 10 {\n                let name = &\"One\"[x as usize];\n\
    \                result.push(name);\n            } else if x < 100 {\n       \
    \         let name = &\"Two\"[x as usize];\n                result.push(name);\n\
    \            } else if x < 1000 {\n                let name = &\"Three\"[x as\
    \ usize];\n                result.push(name);\n            } else if x < 10000\
    \ {\n                let name = &\"Four\"[x as usize];\n                result.push(name);\n\
    \            } else if x < 100000 {\n                let name = &\"Five\"[x as\
    \ usize];\n                result.push(name);\n            } else if x < 1000000\
    \ {\n                let name = &\"Six\"[x as usize];\n                result.push(name);\n\
    \            } else if x < 10000000 {\n                let name = &\"Seven\"[x\
    \ as usize];\n                result.push(name);\n            } else if x < 100000000\
    \ {\n                let name = &\"Eight\"[x as usize];\n                result.push(name);\n\
    \            } else if x < 1000000000 {\n                let name = &\"Nine\"\
    [x as usize];\n                result.push(name);\n            } else {\n    \
    \            panic!(\"Invalid number: {}\", x);\n            }\n        })\n \
    \       .collect::<Vec<_>>();\n    reversed.reverse();\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpokb2_eai.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpokb2_eai.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpokb2_eai.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpokb2_eai.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpokb2_eai.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpokb2_eai.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpokb2_eai.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpokb2_eai.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpokb2_eai.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpokb2_eai.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the type\
    \ `str` cannot be indexed by `usize`\n  --> /tmp/tmpokb2_eai.rs:21:29\n   |\n\
    21 |                 let name = &\"One\"[x as usize];\n   |                  \
    \           ^^^^^^^^^^^^^^^^^ string ind"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut j = i;\n        while j < arr.len() {\n          \
    \  if arr[j] > arr[i] {\n                break;\n            }\n            i\
    \ += 1;\n            j += 1\n        }\n        let mut k = i;\n        while\
    \ k > 0 {\n            let mut tmp = arr[k];\n            arr[k] = arr[k - 1];\n\
    \            arr[k - 1] = tmp;\n            k -= 1;\n        }\n        result.push(String::from(&arr[i]));\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzbqucxpc.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzbqucxpc.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzbqucxpc.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzbqucxpc.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzbqucxpc.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzbqucxpc.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzbqucxpc.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzbqucxpc.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzbqucxpc.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzbqucxpc.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpzbqucxpc.rs:39:21\n\
    \    |\n39  |         result.push(String::from(&arr[i]));\n    |             \
    \        ^^^^^^^^^^^^ the trait "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n            j\
    \ += 1\n        }\n        if j == i {\n            break;\n        }\n      \
    \  let mut k = i;\n        while k < j {\n            result.push(by_digit(arr[k]));\n\
    \            k += 1;\n        }\n        i = j;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmph55caauj.rs:29:25\n\
    \   |\n29 |             result.push(by_digit(arr[k]));\n   |                 \
    \        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmph55caauj.rs:39:17\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmph55caauj.rs:39:25\n \
    \  |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph55caauj.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph55caauj.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmph55caauj.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmph55caauj.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph55caauj.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph55caauj.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph55caauj.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmph55caauj.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\n"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n\n    while digits_len > 0 {\n        let mut\
    \ digit = digits[digits_index];\n        let mut digits_index = digits_index +\
    \ 1;\n        let mut digits_len = digits.len();\n\n        while digits_len >\
    \ 0 {\n            let mut digit = digits[digits_index];\n            let mut\
    \ digits_index = digits_index + 1;\n            let mut digits_len = digits.len();\n\
    \n            if digit < 10 {\n                let mut digit = digit + 1;\n  \
    \              let mut digits_len = digits.len();\n                result.push(String::from(\"\
    One\"));\n            } else if digit < 20 {\n                let mut digit =\
    \ digit + 2;\n                let mut digits_len = digits.len();\n           \
    \     result.push(String::from(\"Two\"));\n            } else if digit < 30 {\n\
    \                let mut digit = digit + 3;\n                let mut digits_len\
    \ = digits.len();\n                result.push(String::from(\"Three\"));\n   \
    \         } else if digit < 40 {\n                let mut digit = digit + 4;\n\
    \                let mut digits_len = digits.len();\n                result.push(String::from(\"\
    Four\"));\n            } else if digit < 50 {\n                let mut digit =\
    \ digit + 5;\n                let mut digits_len = digits.len();\n           \
    \     result.push(String::from(\"Five\"));\n            } else if digit < 60 {\n\
    \                let mut digit = digit + 6;\n                let mut digits_len\
    \ = digits.len();\n                result.push(String::from(\"Six\"));\n     \
    \       } else if digit < 70 {\n                let mut digit = digit + 7;\n \
    \               let mut digits_len = digits.len();\n                result.push(String::from(\"\
    Seven\"));\n            } else if digit < 80 {\n                let mut digit\
    \ = digit + 8;\n                let mut digits_len = digits.len();\n         \
    \       result.push(String::from(\"Eight\"));\n            } else if digit < 90\
    \ {\n                let mut digit = digit + 9;\n                let mut digits_len\
    \ = digits.len();\n                result.push(String::from(\"Nine\"));\n    \
    \        } else {\n                let mut digit = digit + \n}\n\nfn main() {\n\
    \    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpyezs2pzo.rs:81:3\n\
    \   |\n13 | fn by_length(arr: Vec<isize>) -> Vec<String> {\n   |             \
    \                                 - unclosed delimiter\n...\n24 |     while digits_len\
    \ > 0 {\n   |                          - unclosed delimiter\n...\n29 |       \
    \  while digits_len > 0 {\n   |                              - unclosed delimiter\n\
    ...\n70 |             } else {\n   |                    - this delimiter might\
    \ not be properly closed...\n71 |                 let mut digit = digit + \n72\
    \ | }\n   | - ...as it matches this but it has different indentation\n...\n81\
    \ | }\n   |   ^\n\nerror: expected expression, found `}`\n  --> /tmp/tmpyezs2pzo.rs:72:1\n\
    \   |\n72 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpyezs2pzo.rs:76:17\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpyezs2pzo.rs:76:25\n \
    \  |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyezs2pzo.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyezs2pzo.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyezs2pzo.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyezs2pzo.rs:78:25\n   |\n78 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyezs2pzo.rs:79:17\n  \
    \ |\n79 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find va"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 10 {\n            result.push(String::from(\"One\"));\n       \
    \ } else if arr[i] < 100 {\n            result.push(String::from(\"Two\"));\n\
    \        } else if arr[i] < 1000 {\n            result.push(String::from(\"Three\"\
    ));\n        } else if arr[i] < 10000 {\n            result.push(String::from(\"\
    Four\"));\n        } else if arr[i] < 100000 {\n            result.push(String::from(\"\
    Five\"));\n        } else if arr[i] < 1000000 {\n            result.push(String::from(\"\
    Six\"));\n        } else if arr[i] < 10000000 {\n            result.push(String::from(\"\
    Seven\"));\n        } else if arr[i] < 100000000 {\n            result.push(String::from(\"\
    Eight\"));\n        } else if arr[i] < 1000000000 {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            result.push(String::from(\"Zero\"));\n\
    \        }\n        i += 1;\n    }\n    result.reverse();\n    result\n}\n\nfn\
    \ main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi6vwjdih.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi6vwjdih.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi6vwjdih.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi6vwjdih.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi6vwjdih.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi6vwjdih.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi6vwjdih.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi6vwjdih.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi6vwjdih.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi6vwjdih.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut j = i;\n        while j < arr.len() {\n          \
    \  if arr[j] < 1 || arr[j] > 9 {\n                j += 1;\n                continue;\n\
    \            }\n            if arr[j] < arr[i] {\n                result.push(String::from(\"\
    One\"));\n                break;\n            }\n            if arr[j] > arr[i]\
    \ {\n                result.push(String::from(\"Nine\"));\n                break;\n\
    \            }\n            j += 1;\n        }\n        i += 1;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpiema23jl.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiema23jl.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpiema23jl.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpiema23jl.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpiema23jl.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpiema23jl.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpiema23jl.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpiema23jl.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpiema23jl.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiema23jl.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ x.cmp(&1).unwrap());\n    arr.sort_by_key(|x| x.cmp(&9).unwrap());\n    arr.iter().map(|x|\
    \ {\n        match x {\n            1 => \"One\",\n            2 => \"Two\",\n\
    \            3 => \"Three\",\n            4 => \"Four\",\n            5 => \"\
    Five\",\n            6 => \"Six\",\n            7 => \"Seven\",\n            8\
    \ => \"Eight\",\n            9 => \"Nine\",\n            _ => panic!(\"Invalid\
    \ number {}\", x),\n        }\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzh734yji.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzh734yji.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzh734yji.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzh734yji.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzh734yji.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzh734yji.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzh734yji.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzh734yji.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzh734yji.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzh734yji.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `unwrap` found for enum `std::cmp::Ordering` in the current scope\n  -->\
    \ /tmp/tmpzh734yji.rs:19:35\n   |\n19 |     arr.sort_by_key(|x| x.cmp(&1).unwrap());\n\
    \   |                     "
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.clone();\n    let mut len = arr.len();\n    let mut i = 0;\n \
    \   while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n\
    \        } else {\n            let mut j = i;\n            while j < len && arr[j]\
    \ < 1 && arr[j] > 9 {\n                j += 1;\n            }\n            swap(&mut\
    \ arr[i..j], &mut arr);\n            i += j - i;\n        }\n    }\n    let mut\
    \ result = vec![];\n    for i in arr.iter().rev() {\n        result.push(String::from(&names[i]))\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmp3l6owvuz.rs:28:13\n\
    \   |\n28 |             swap(&mut arr[i..j], &mut arr);\n   |             ^^^^\
    \ not found in this scope\n   |\nhelp: consider importing one of these items\n\
    \   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]:\
    \ cannot find value `names` in this scope\n  --> /tmp/tmp3l6owvuz.rs:34:35\n \
    \  |\n34 |         result.push(String::from(&names[i]))\n   |                \
    \                   ^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmp3l6owvuz.rs:41:17\n   |\n41 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3l6owvuz.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3l6owvuz.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3l6owvuz.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3l6owvuz.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3l6owvuz.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3l6owvuz.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3l6owvuz.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tm"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    arr.iter().map(|x| {\n        match x {\n           \
    \ 1 => \"One\",\n            2 => \"Two\",\n            3 => \"Three\",\n    \
    \        4 => \"Four\",\n            5 => \"Five\",\n            6 => \"Six\"\
    ,\n            7 => \"Seven\",\n            8 => \"Eight\",\n            9 =>\
    \ \"Nine\",\n            _ => panic!(\"Unexpected number in array: {}\", x),\n\
    \        }\n    }).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3gveeva4.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3gveeva4.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3gveeva4.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3gveeva4.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3gveeva4.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3gveeva4.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3gveeva4.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3gveeva4.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3gveeva4.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3gveeva4.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmp3gveeva4.rs:33:8\n   |\n33 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] > 9 {\n          \
    \  arr[i] = String::from(\"Nine\");\n            i += 1;\n        } else {\n \
    \           arr[i] = String::from(\"One\");\n            i += 1;\n        }\n\
    \    }\n    arr.reverse();\n    arr\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwcaonirp.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwcaonirp.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwcaonirp.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwcaonirp.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwcaonirp.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwcaonirp.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwcaonirp.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwcaonirp.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwcaonirp.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwcaonirp.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpwcaonirp.rs:23:22\n   |\n23 |             arr[i] = String::from(\"\
    Nine\");\n   |                      ^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ struct `String`\n\nerro"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n        let mut j\
    \ = i;\n        while j < len {\n            if arr[j] == arr[i] {\n         \
    \       j += 1;\n                continue;\n            }\n            if arr[j]\
    \ > arr[i] {\n                break;\n            }\n            arr[j] = arr[i];\n\
    \            i += 1;\n        }\n        i += 1;\n    }\n    arr.iter().cloned().collect::<Vec<_>>()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwxgqocpi.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwxgqocpi.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwxgqocpi.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwxgqocpi.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwxgqocpi.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwxgqocpi.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwxgqocpi.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwxgqocpi.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwxgqocpi.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwxgqocpi.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpwxgqocpi.rs:39:5\n   |\n13 | fn by_length(arr: Vec<isize>)\
    \ -> Vec<String> {\n   |                                  ----------- expected\
    \ `Vec<String>` because of retur"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut j = i;\n        while j < arr.len() {\n          \
    \  if arr[j] < 1 || arr[j] > 9 {\n                j += 1;\n                continue;\n\
    \            }\n            if arr[j] == arr[i] {\n                i += 1;\n \
    \               j += 1;\n                continue;\n            }\n          \
    \  if arr[j] > arr[i] {\n                result.push(by_length(arr.iter().take(j).rev()));\n\
    \                i += 1;\n                j += 1;\n                continue;\n\
    \            }\n            if arr[j] < arr[i] {\n                result.push(by_length(arr.iter().take(j).rev()));\n\
    \                i += 1;\n                j += 1;\n                continue;\n\
    \            }\n            i += 1;\n            j += 1;\n        }\n        result.push(by_length(arr.iter().take(i).rev()));\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyeosbuvx.rs:57:17\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyeosbuvx.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyeosbuvx.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyeosbuvx.rs:58:25\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyeosbuvx.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyeosbuvx.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyeosbuvx.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyeosbuvx.rs:60:25\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyeosbuvx.rs:61:17\n  \
    \ |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyeosbuvx.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpyeosbuvx.rs:36:39\n   |\n36 |                 result.push(by_length(arr.iter().take(j).rev()));\n\
    \   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ e"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as usize).collect();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    arr.iter().map(|x| {\n        let mut s = String::new();\n\
    \        match x {\n            1 => s.push_str(\"One\"),\n            2 => s.push_str(\"\
    Two\"),\n            3 => s.push_str(\"Three\"),\n            4 => s.push_str(\"\
    Four\"),\n            5 => s.push_str(\"Five\"),\n            6 => s.push_str(\"\
    Six\"),\n            7 => s.push_str(\"Seven\"),\n            8 => s.push_str(\"\
    Eight\"),\n            9 => s.push_str(\"Nine\"),\n            _ => panic!(\"\
    Unexpected number: {}\", x),\n        }\n        s\n    }).collect()\n}\n\nfn\
    \ main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjw98kaiz.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjw98kaiz.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjw98kaiz.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjw98kaiz.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjw98kaiz.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjw98kaiz.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjw98kaiz.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjw98kaiz.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjw98kaiz.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjw98kaiz.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0282]: type\
    \ annotations needed\n  --> /tmp/tmpjw98kaiz.rs:19:5\n   |\n18 |     let mut arr\
    \ = arr.into_iter().map(|x| x as usize).collect();\n   |         ------- consider\
    \ giving `arr` a type\n19 |     arr.s"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n\n        let mut\
    \ j = i;\n        while j < len {\n            if arr[j] < 1 || arr[j] > 9 {\n\
    \                j += 1;\n                continue;\n            }\n\n       \
    \     if arr[j] == arr[i] {\n                arr.swap(i, j);\n               \
    \ i += 1;\n                j += 1;\n                continue;\n            }\n\
    \n            if arr[j] > arr[i] {\n                arr.swap(i, j);\n        \
    \        i += 1;\n                j += 1;\n                continue;\n       \
    \     }\n\n            if arr[j] < arr[i] {\n                arr.swap(i, j);\n\
    \                i += 1;\n                j += 1;\n                continue;\n\
    \            }\n        }\n    }\n\n    arr.iter().map(|x| String::from(x)).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgan2m_kq.rs:62:17\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgan2m_kq.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgan2m_kq.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgan2m_kq.rs:63:25\n\
    \   |\n63 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgan2m_kq.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgan2m_kq.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgan2m_kq.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgan2m_kq.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgan2m_kq.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgan2m_kq.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpgan2m_kq.rs:57:24\n\
    \    |\n57  |     arr.iter().map(|x| String::from(x)).collect()\n    |       \
    \                 ^^^^^^^^^^^^ t"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut i = 0;\n    let mut j = 0;\n    let mut\
    \ n = arr.len();\n\n    while i < n {\n        if arr[i] < 1 || arr[i] > 9 {\n\
    \            i += 1;\n            continue;\n        }\n\n        let mut tmp\
    \ = 0;\n        while j < i {\n            tmp += arr[j] * 10 + arr[j + 1];\n\
    \            j += 2;\n        }\n\n        if tmp > 9 {\n            i += 1;\n\
    \            continue;\n        }\n\n        result.push(String::from(&names[tmp\
    \ as usize]));\n        i += 1;\n    }\n\n    result\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpn1geubu0.rs:40:35\n\
    \   |\n40 |         result.push(String::from(&names[tmp as usize]));\n   |   \
    \                                ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn1geubu0.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn1geubu0.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn1geubu0.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn1geubu0.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn1geubu0.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn1geubu0.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn1geubu0.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn1geubu0.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn1geubu0.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn1geubu0.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found "
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() {\n            if arr[j] < 10 {\n\
    \                result.push(String::from(\"One\"));\n                break;\n\
    \            }\n            if arr[j] < 100 {\n                result.push(String::from(\"\
    Two\"));\n                break;\n            }\n            if arr[j] < 1000\
    \ {\n                result.push(String::from(\"Three\"));\n                break;\n\
    \            }\n            if arr[j] < 10000 {\n                result.push(String::from(\"\
    Four\"));\n                break;\n            }\n            if arr[j] < 100000\
    \ {\n                result.push(String::from(\"Five\"));\n                break;\n\
    \            }\n            if arr[j] < 1000000 {\n                result.push(String::from(\"\
    Six\"));\n                break;\n            }\n            if arr[j] < 10000000\
    \ {\n                result.push(String::from(\"Seven\"));\n                break;\n\
    \            }\n            if arr[j] < 100000000 {\n                result.push(String::from(\"\
    Eight\"));\n                break;\n            }\n            if arr[j] < 1000000000\
    \ {\n                result.push(String::from(\"Nine\"));\n                break;\n\
    \            }\n            j += 1\n        }\n        i = j;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpl4d5ql27.rs:67:17\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl4d5ql27.rs:67:25\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl4d5ql27.rs:68:17\n   |\n68 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpl4d5ql27.rs:68:25\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpl4d5ql27.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl4d5ql27.rs:69:25\n   |\n69 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpl4d5ql27.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpl4d5ql27.rs:70:25\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl4d5ql27.rs:71:17\n  \
    \ |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl4d5ql27.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.into_iter().map(|x| x as isize).collect();\n\
    \    arr.sort_unstable();\n    arr.reverse();\n    arr.iter().map(|x| String::from(&names[x\
    \ as usize])).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmphg_8py9a.rs:17:38\n\
    \   |\n17 |     arr.iter().map(|x| String::from(&names[x as usize])).collect()\n\
    \   |                                      ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphg_8py9a.rs:22:17\n  \
    \ |\n22 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphg_8py9a.rs:22:25\n   |\n22 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphg_8py9a.rs:23:17\n   |\n23 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphg_8py9a.rs:23:25\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphg_8py9a.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphg_8py9a.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphg_8py9a.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphg_8py9a.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphg_8py9a.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphg_8py9a.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ x.checked_div(10).unwrap());\n    arr.sort_by_key(|x| x.checked_mul((10 as isize)).unwrap());\n\
    \    arr.iter_mut().for_each(|x| {\n        if *x < 10 {\n            *x = String::from(\"\
    One\");\n        } else if *x < 20 {\n            *x = String::from(\"Two\");\n\
    \        } else if *x < 30 {\n            *x = String::from(\"Three\");\n    \
    \    } else if *x < 40 {\n            *x = String::from(\"Four\");\n        }\
    \ else if *x < 50 {\n            *x = String::from(\"Five\");\n        } else\
    \ if *x < 60 {\n            *x = String::from(\"Six\");\n        } else if *x\
    \ < 70 {\n            *x = String::from(\"Seven\");\n        } else if *x < 80\
    \ {\n            *x = String::from(\"Eight\");\n        } else if *x < 90 {\n\
    \            *x = String::from(\"Nine\");\n        } else {\n            *x =\
    \ String::from(\"Ten\");\n        }\n    });\n    arr\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnhw94ilk.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnhw94ilk.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnhw94ilk.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnhw94ilk.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnhw94ilk.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnhw94ilk.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnhw94ilk.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnhw94ilk.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnhw94ilk.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnhw94ilk.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nwarning: unnecessary\
    \ parentheses around method argument\n  --> /tmp/tmpnhw94ilk.rs:20:39\n   |\n\
    20 |     arr.sort_by_key(|x| x.checked_mul((10 as isize)).unwrap());\n   |   \
    \                                    ^^^"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ x.checked_sub(1));\n    arr.reverse();\n\n    let mut result = vec![];\n   \
    \ for i in arr {\n        let mut s = String::new();\n        if i < 10 {\n  \
    \          s.push_str(&format!(\"One\", i));\n        } else if i < 20 {\n   \
    \         s.push_str(&format!(\"Two\", i));\n        } else if i < 30 {\n    \
    \        s.push_str(&format!(\"Three\", i));\n        } else if i < 40 {\n   \
    \         s.push_str(&format!(\"Four\", i));\n        } else if i < 50 {\n   \
    \         s.push_str(&format!(\"Five\", i));\n        } else if i < 60 {\n   \
    \         s.push_str(&format!(\"Six\", i));\n        } else if i < 70 {\n    \
    \        s.push_str(&format!(\"Seven\", i));\n        } else if i < 80 {\n   \
    \         s.push_str(&format!(\"Eight\", i));\n        } else if i < 90 {\n  \
    \          s.push_str(&format!(\"Nine\", i));\n        } else {\n            s.push_str(&format!(\"\
    Ten\", i));\n        }\n        result.push(s);\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: argument never used\n  --> /tmp/tmpjwdocn1x.rs:26:40\n   |\n26 |\
    \             s.push_str(&format!(\"One\", i));\n   |                        \
    \         -----  ^ argument never used\n   |                                 |\n\
    \   |                                 formatting specifier missing\n\nerror: argument\
    \ never used\n  --> /tmp/tmpjwdocn1x.rs:28:40\n   |\n28 |             s.push_str(&format!(\"\
    Two\", i));\n   |                                 -----  ^ argument never used\n\
    \   |                                 |\n   |                                \
    \ formatting specifier missing\n\nerror: argument never used\n  --> /tmp/tmpjwdocn1x.rs:30:42\n\
    \   |\n30 |             s.push_str(&format!(\"Three\", i));\n   |            \
    \                     -------  ^ argument never used\n   |                   \
    \              |\n   |                                 formatting specifier missing\n\
    \nerror: argument never used\n  --> /tmp/tmpjwdocn1x.rs:32:41\n   |\n32 |    \
    \         s.push_str(&format!(\"Four\", i));\n   |                           \
    \      ------  ^ argument never used\n   |                                 |\n\
    \   |                                 formatting specifier missing\n\nerror: argument\
    \ never used\n  --> /tmp/tmpjwdocn1x.rs:34:41\n   |\n34 |             s.push_str(&format!(\"\
    Five\", i));\n   |                                 ------  ^ argument never used\n\
    \   |                                 |\n   |                                \
    \ formatting specifier missing\n\nerror: argument never used\n  --> /tmp/tmpjwdocn1x.rs:36:40\n\
    \   |\n36 |             s.push_str(&format!(\"Six\", i));\n   |              \
    \                   -----  ^ argument never used\n   |                       \
    \          |\n   |                                 formatting specifier missing\n\
    \nerror: argument never used\n  --> /tmp/tmpjwdocn1x.rs:38:42\n   |\n38 |    \
    \         s.push_str(&format!(\"Seven\", i));\n   |                          \
    \       -------  ^ argument never used\n   |                                 |\n\
    \   |                                 formatting specifier missing\n\nerror: argument\
    \ never used\n  --> /tmp/tmp"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n  \
    \  let mut digits_iter = reversed.iter_mut();\n    let mut digits_end = reversed.len();\n\
    \n    while digits_iter.is_some() {\n        let digit = digits_iter.next().unwrap();\n\
    \        if digit < 10 {\n            result.push(String::from(\"One\"));\n  \
    \      } else if digit < 100 {\n            result.push(String::from(\"Two\"));\n\
    \        } else if digit < 1000 {\n            result.push(String::from(\"Three\"\
    ));\n        } else if digit < 10000 {\n            result.push(String::from(\"\
    Four\"));\n        } else if digit < 100000 {\n            result.push(String::from(\"\
    Five\"));\n        } else if digit < 1000000 {\n            result.push(String::from(\"\
    Six\"));\n        } else if digit < 10000000 {\n            result.push(String::from(\"\
    Seven\"));\n        } else if digit < 100000000 {\n            result.push(String::from(\"\
    Eight\"));\n        } else if digit < 1000000000 {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            result.push(String::from(\"Ten\"));\n\
    \        }\n    }\n\n    for digit in digits {\n        if digit < 10 {\n    \
    \        result.push(String::from(\"One\"));\n        } else if digit < 100 {\n\
    \            result.push(String::from(\"Two\"));\n        } else if digit < 1000\
    \ {\n            result.push(String::from(\"Three\"));\n        } else if digit\
    \ < 10000 {\n            result.push(String::from(\"Four\"));\n        } else\
    \ if digit < 100000 {\n            result.push(String::from(\"Five\"));\n    \
    \    } else if digit < 1000000 {\n            result.push(String::from(\"Six\"\
    ));\n        } else if digit < 10000000 {\n            result.push(String::from(\"\
    Seven\"));\n        } else if digit < 100000000 {\n            result.push(String::from(\"\
    Eight\"));\n        } else if digit < 1000000000 {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            result.push(String::from(\"Ten\"));\n\
    \        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqij_c6pd.rs:78:17\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqij_c6pd.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqij_c6pd.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqij_c6pd.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqij_c6pd.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqij_c6pd.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqij_c6pd.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqij_c6pd.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqij_c6pd.rs:82:17\n  \
    \ |\n82 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqij_c6pd.rs:82:25\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `is_some` found for struct `std::slice::IterMut` in the current scope\n\
    \  --> /tmp/tmpqij_c6pd.rs:24:23\n   |\n24 |     while digits_iter.is_some() {\n\
    \   |                       ^^^^^"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.clone();\n    let mut reversed = vec![];\n    let mut counter\
    \ = 0;\n    while counter < arr.len() {\n        let mut i = 0;\n        while\
    \ i < arr.len() && arr[i] < 10 {\n            i += 1;\n        }\n        if i\
    \ == arr.len() {\n            break;\n        }\n        let mut j = i;\n    \
    \    while j > 0 && arr[j - 1] > 10 {\n            j -= 1;\n        }\n      \
    \  if j == 0 {\n            break;\n        }\n        reversed.push(String::from(&arr[counter..j]));\n\
    \        counter = j;\n    }\n    for &s in &reversed {\n        arr.push(s.chars().next().unwrap());\n\
    \    }\n    arr\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpd446o_91.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd446o_91.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd446o_91.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpd446o_91.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd446o_91.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd446o_91.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd446o_91.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd446o_91.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd446o_91.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd446o_91.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&[isize]>` is not satisfied\n   --> /tmp/tmpd446o_91.rs:35:23\n\
    \    |\n35  |         reversed.push(String::from(&arr[counter..j]));\n    |  \
    \                     ^^^^^^^^"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n        } else {\n            swap(&mut arr[i..], &mut\
    \ arr[len-i..]);\n            i += 1;\n        }\n    }\n    arr.iter().map(|x|\
    \ String::from(x)).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmphaf6g815.rs:25:13\n\
    \   |\n25 |             swap(&mut arr[i..], &mut arr[len-i..]);\n   |        \
    \     ^^^^ not found in this scope\n   |\nhelp: consider importing one of these\
    \ items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphaf6g815.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphaf6g815.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphaf6g815.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphaf6g815.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphaf6g815.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphaf6g815.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphaf6g815.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphaf6g815.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphaf6g815.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphaf6g815.rs:38:25\n"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\n   \
    \ while digits_len > 0 {\n        let mut digit = digits[digits_index];\n    \
    \    let mut digits_remaining = digits_len;\n\n        while digit > 9 {\n   \
    \         digit /= 10;\n            digits_remaining--;\n        }\n\n       \
    \ if digits_remaining == 0 {\n            result.push(String::from(&digits[digits_index]));\n\
    \            digits_index += 1;\n            digits_len -= 1;\n        } else\
    \ {\n            let mut digits_remaining = digits_len;\n            let mut digits_index\
    \ = digits_index;\n\n            while digit > 0 {\n                digit %= 10;\n\
    \                digits_remaining--;\n            }\n\n            if digits_remaining\
    \ == 0 {\n                result.push(String::from(&digits[digits_index]));\n\
    \                digits_index += 1;\n                digits_len -= 1;\n      \
    \      }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `;`\n  --> /tmp/tmpxwfeqwyq.rs:30:31\n\
    \   |\n30 |             digits_remaining--;\n   |                            \
    \   ^ expected expression\n\nerror: expected expression, found `;`\n  --> /tmp/tmpxwfeqwyq.rs:43:35\n\
    \   |\n43 |                 digits_remaining--;\n   |                        \
    \           ^ expected expression\n\nerror[E0425]: cannot find value `left` in\
    \ this scope\n  --> /tmp/tmpxwfeqwyq.rs:59:17\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpxwfeqwyq.rs:59:25\n \
    \  |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxwfeqwyq.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxwfeqwyq.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxwfeqwyq.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxwfeqwyq.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxwfeqwyq.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxwfeqwyq.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxwfeqwyq.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this s"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let len = arr[i] - 1;\n        if len < 1 || len > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        let mut j = i;\n        while j < arr.len()\
    \ {\n            if arr[j] == len + 1 {\n                result.push(by_name(len));\n\
    \                i += 1;\n                break;\n            }\n            j\
    \ += 1\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_name` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:28:29\n\
    \   |\n28 |                 result.push(by_name(len));\n   |                 \
    \            ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:40:17\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:40:25\n \
    \  |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkvq5ndm5.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkvq5ndm5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkvq5ndm5.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut reversed = vec![];\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i;\n     \
    \   while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n        }\n   \
    \     reversed.push(arr[j]);\n        i += j - 1;\n    }\n    for &i in reversed\
    \ {\n        let index = i as usize;\n        arr.swap(index, index - 1);\n  \
    \  }\n    arr.iter().map(|&i| String::from(&names[i])).collect()\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpgk0adpfi.rs:32:39\n\
    \   |\n32 |     arr.iter().map(|&i| String::from(&names[i])).collect()\n   | \
    \                                      ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgk0adpfi.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgk0adpfi.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgk0adpfi.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgk0adpfi.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgk0adpfi.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgk0adpfi.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgk0adpfi.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgk0adpfi.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgk0adpfi.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgk0adpfi.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not "
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n        } else {\n            swap(&mut arr, i, len\
    \ - 1);\n            i += 1;\n        }\n    }\n    arr.iter().cloned().collect::<Vec<_>>()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpwn8273pp.rs:25:13\n\
    \   |\n25 |             swap(&mut arr, i, len - 1);\n   |             ^^^^ not\
    \ found in this scope\n   |\nhelp: consider importing one of these items\n   |\n\
    1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwn8273pp.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwn8273pp.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwn8273pp.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwn8273pp.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwn8273pp.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwn8273pp.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwn8273pp.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwn8273pp.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwn8273pp.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwn8273pp.rs:38:25\n   |\n38 |   "
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n\n        let mut\
    \ j = i;\n        while j < len {\n            if arr[j] > arr[j + 1] {\n    \
    \            swap(&mut arr[j], &mut arr[j + 1]);\n            }\n            j\
    \ += 1;\n        }\n\n        i += 1;\n    }\n\n    let mut result = vec![];\n\
    \    for i in 0..len {\n        result.push(String::from(&arr[i]));\n    }\n\n\
    \    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:30:17\n\
    \   |\n30 |                 swap(&mut arr[j], &mut arr[j + 1]);\n   |        \
    \         ^^^^ not found in this scope\n   |\nhelp: consider importing one of\
    \ these items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n\
    \   |\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6qiu3a8.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx6qiu3a8.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx6qiu3a8.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6qiu3a8.rs:52"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = vec![];\n    let mut reversed = vec![];\n\
    \    let mut i = 0;\n    let mut j = 0;\n    while i < arr.len() {\n        if\
    \ arr[i] < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n\
    \            i += 1;\n        } else {\n            reversed.push(arr[i]);\n \
    \           i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!\n}\n\nfn main() {\n   \
    \ let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpf9jsziye.rs:115:3\n\
    \    |\n13  | fn by_length(arr: Vec<isize>) -> Vec<String> {\n    |          \
    \                                    - unclosed delimiter\n...\n103 |     while\
    \ i < arr.len() {\n    |                         - unclosed delimiter\n104 | \
    \        if arr[i] < 10 {\n    |                        - this delimiter might\
    \ not be properly closed...\n105 |             digits.push(String::from(format!\n\
    106 | }\n    | - ...as it matches this but it has different indentation\n...\n\
    115 | }\n    |   ^\n\nerror: expected one of `(`, `[`, or `{`, found `)`\n   -->\
    \ /tmp/tmpf9jsziye.rs:106:1\n    |\n105 |             digits.push(String::from(format!\n\
    \    |                                             - expected one of `(`, `[`,\
    \ or `{`\n106 | }\n    | ^ unexpected token\n\nerror: mismatched closing delimiter:\
    \ `}`\n   --> /tmp/tmpf9jsziye.rs:105:37\n    |\n13  | fn by_length(arr: Vec<isize>)\
    \ -> Vec<String> {\n    |                                              - closing\
    \ delimiter possibly meant for this\n...\n105 |             digits.push(String::from(format!\n\
    \    |                                     ^ unclosed delimiter\n106 | }\n   \
    \ | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value `left` in\
    \ this scope\n   --> /tmp/tmpf9jsziye.rs:110:17\n    |\n110 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpf9jsziye.rs:110:25\n\
    \    |\n110 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpf9jsziye.rs:111:17\n    |\n111 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpf9jsziye.rs:111:25\n\
    \    |\n111 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpf9jsziye.rs:112:17"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index\
    \ = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index\
    \ = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index\
    \ = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digit\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp72334o8y.rs:71:18\n   |\n\
    71 |     let mut digit\n   |                  ^ help: add `;` here\n72 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp72334o8y.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp72334o8y.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp72334o8y.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp72334o8y.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp72334o8y.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp72334o8y.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp72334o8y.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp72334o8y.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp72334o8y.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp72334o8y.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        if j == digits_len {\n            break;\n\
    \        }\n        let mut digit = digits[j];\n        let mut digits_len = digits_len;\n\
    \        while digit > 9 {\n            digit /= 10;\n            digits_len -=\
    \ 1;\n        }\n        let mut digit = digit;\n        let mut digits_len =\
    \ digits_len;\n        while digit > 0 {\n            let mut digit = digit;\n\
    \            let mut digits_len = digits_len;\n            while digit > 9 {\n\
    \                digit /= 10;\n                digits_len -= 1;\n            }\n\
    \            let mut digit = digit;\n            let mut digits_len = digits_len;\n\
    \            let mut digit = digit;\n            let mut digits_len = digits_len;\n\
    \            while digit > 9 {\n                digit /= 10;\n               \
    \ digits_len -= 1;\n            }\n            let mut digit = digit;\n      \
    \      let mut digits_len = digits_len;\n            let mut digit = digit;\n\
    \            let mut digits_len = digits_len;\n            while digit > 9 {\n\
    \                digit /= 10;\n                digits_len -= 1;\n            }\n\
    \            let mut digit = digit;\n            let mut digits_len = digits_len;\n\
    \            let mut digit = digit;\n            let mut digits_len = digits_len;\n\
    \            while digit > 9 {\n                digit /= 10;\n               \
    \ digits_len -= 1;\n            }\n            let mut digit = digit;\n      \
    \      let mut digits_len = digits_len;\n            let mut digit = digit;\n\
    \            let mut digits_len = digits_len;\n            while digit > 9 {\n\
    \                digit /= 10;\n                digits_len -= 1;\n            }\n\
    \            let mut digit = digit;\n            let mut digits_len = digits_len;\n\
    \            let mut digit = digit;\n            let mut digits_len = digits_len;\n\
    \            while digit > 9 {\n                digit /= 10;\n               \
    \ digits_len -= 1;\n            }\n            let mut digit = digit;\n      \
    \      let mut digits_len = digits_len;\n            let mut digit = digit;\n\
    \            let mut digits_len = digits_\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpkn57dq3v.rs:98:3\n\
    \   |\n13 | fn by_length(arr: Vec<isize>) -> Vec<String> {\n   |             \
    \                                 - unclosed delimiter\n...\n22 |     while i\
    \ < digits_len {\n   |                          - unclosed delimiter\n...\n38\
    \ |         while digit > 0 {\n   |                         - this delimiter might\
    \ not be properly closed...\n...\n89 | }\n   | - ...as it matches this but it\
    \ has different indentation\n...\n98 | }\n   |   ^\n\nerror: expected `;`, found\
    \ `}`\n  --> /tmp/tmpkn57dq3v.rs:88:41\n   |\n88 |             let mut digits_len\
    \ = digits_\n   |                                         ^ help: add `;` here\n\
    89 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `digits_` in\
    \ this scope\n  --> /tmp/tmpkn57dq3v.rs:88:34\n   |\n88 |             let mut\
    \ digits_len = digits_\n   |                                  ^^^^^^^ help: a\
    \ local variable with a similar name exists: `digits`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkn57dq3v.rs:93:17\n   |\n93 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkn57dq3v.rs:93:25\n\
    \   |\n93 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkn57dq3v.rs:94:17\n   |\n94 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkn57dq3v.rs:94:25\n   |\n94 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkn57dq3v.rs:95:17\n   |\n95 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkn57dq3v.rs:95:25\n   |\n95 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found "
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ {\n        match x {\n            1 => 1,\n            2 => 2,\n           \
    \ 3 => 3,\n            4 => 4,\n            5 => 5,\n            6 => 6,\n   \
    \         7 => 7,\n            8 => 8,\n            9 => 9,\n            _ =>\
    \ panic!(\"Invalid number in array: {}\", x),\n        }\n    });\n    arr.reverse();\n\
    \    arr.iter().map(|x| {\n        match x {\n            1 => \"One\",\n    \
    \        2 => \"Two\",\n            3 => \"Three\",\n            4 => \"Four\"\
    ,\n            5 => \"Five\",\n            6 => \"Six\",\n            7 => \"\
    Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\",\n          \
    \  _ => panic!(\"Invalid number in array: {}\", x),\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2nio_rzp.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2nio_rzp.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2nio_rzp.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2nio_rzp.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2nio_rzp.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2nio_rzp.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2nio_rzp.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2nio_rzp.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2nio_rzp.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2nio_rzp.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmp2nio_rzp.rs:47:8\n   |\n47 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index\
    \ = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index\
    \ = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index\
    \ = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digit\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp72334o8y.rs:71:18\n   |\n\
    71 |     let mut digit\n   |                  ^ help: add `;` here\n72 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp72334o8y.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp72334o8y.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp72334o8y.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp72334o8y.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp72334o8y.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp72334o8y.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp72334o8y.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp72334o8y.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp72334o8y.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp72334o8y.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/"
  stdout: ''
  timestamp: 1659803537

language: rs
name: HumanEval_105_by_length
results:
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    let mut len = arr.len();\n    let mut i\
    \ = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n         \
    \   i += 1;\n            continue;\n        }\n\n        let mut j = i;\n    \
    \    while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n        }\n\n\
    \        let mut tmp = arr[j];\n        arr[j] = arr[i];\n        arr[i] = tmp;\n\
    \        i += 1;\n    }\n\n    let mut result = vec![];\n    for i in arr.iter()\
    \ {\n        result.push(String::from(&format!(\"{}\", i)));\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3ppbi4iv.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3ppbi4iv.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3ppbi4iv.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3ppbi4iv.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut i = 0;\n    while i\
    \ < arr.len() {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        let mut j = i;\n        while j < arr.len()\
    \ && arr[j] == arr[j] + 1 {\n            j += 1\n        }\n        result.push(String::from(&arr[j\
    \ as usize]));\n        i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvsl_lzly.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvsl_lzly.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvsl_lzly.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvsl_lzly.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvsl_lzly.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvsl_lzly.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvsl_lzly.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvsl_lzly.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvsl_lzly.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvsl_lzly.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpvsl_lzly.rs:25:21\n\
    \    |\n25  |         result.push(String::from(&arr[j as usize]));\n    |    \
    \                 ^^^^^^^^^^^^ t"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    let mut result = Vec::new();\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i;\n     \
    \   while j < arr.len() && arr[j] < 10 {\n            j += 1\n        }\n    \
    \    if j > i {\n            result.push(by_length(arr.split_off(i).reverse()));\n\
    \            i = j;\n        } else {\n            result.push(by_length(arr.split_off(i)));\n\
    \            i += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8fqgdd0b.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8fqgdd0b.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8fqgdd0b.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8fqgdd0b.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp8fqgdd0b.rs:23:35\n   |\n23 |             result.push(by_length(arr.split_off(i).reverse()));\n\
    \   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ expec"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    let mut result = vec![];\n\
    \    while arr.len() > 0 {\n        let mut cur = arr.split_off(1).unwrap();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp5_w8e8zc.rs:53:3\n\
    \   |\n13 | fn by_length(arr: Vec<isize>) -> Vec<String> {\n   |             \
    \                                 - unclosed delimiter\n...\n16 |     while arr.len()\
    \ > 0 {\n   |                         - this delimiter might not be properly closed...\n\
    ...\n44 | }\n   | - ...as it matches this but it has different indentation\n...\n\
    53 | }\n   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5_w8e8zc.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5_w8e8zc.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5_w8e8zc.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5_w8e8zc.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not foun"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut reversed = arr.rev();\n    let mut digits\
    \ = vec![];\n    let mut i = 0;\n    while i < reversed.len() {\n        let digit\
    \ = reversed[i] % 10;\n        digits.push(digit);\n        i += 1;\n    }\n \
    \   for digit in digits {\n        let index = digit as usize;\n        let name\
    \ = &NAMES[index];\n        result.push(name);\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `NAMES` in this scope\n  --> /tmp/tmpyu214xgd.rs:28:21\n\
    \   |\n28 |         let name = &NAMES[index];\n   |                     ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyu214xgd.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyu214xgd.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyu214xgd.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyu214xgd.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyu214xgd.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyu214xgd.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyu214xgd.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyu214xgd.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyu214xgd.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyu214xgd.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0599]: the meth"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n\n    while digits_len > 0 {\n      \
    \  let mut digit = digits.remove(0);\n        let mut index = digit as usize;\n\
    \        let mut digits_len = digits_len as usize;\n\n        while digits_len\
    \ > 0 {\n            let mut digit = digits.remove(0);\n            let mut index\
    \ = index as usize;\n            let mut digits_len = digits_len as usize;\n\n\
    \            if index >= 10 {\n                index -= 10;\n                result.push(String::from(\"\
    Nine\"));\n            }\n\n            if index >= 10 {\n                index\
    \ -= 10;\n                result.push(String::from(\"Eight\"));\n            }\n\
    \n            if index >= 10 {\n                index -= 10;\n               \
    \ result.push(String::from(\"Seven\"));\n            }\n\n            if index\
    \ >= 10 {\n                index -= 10;\n                result.push(String::from(\"\
    Six\"));\n            }\n\n            if index >= 10 {\n                index\
    \ -= 10;\n                result.push(String::from(\"Five\"));\n            }\n\
    \n            if index >= 10 {\n                index -= 10;\n               \
    \ result.push(String::from(\"Four\"));\n            }\n\n            if index\
    \ >= 10 {\n                index -= 10;\n                result.push(String::from(\"\
    Three\"));\n            }\n\n            if index >= 10 {\n                index\
    \ -= 10;\n                result.push(String::from(\"Two\"));\n            }\n\
    \n            if index >= 10 {\n                index -= 10;\n               \
    \ result.push(String::from(\"One\"));\n            }\n\n            if index ==\
    \ 0 {\n                result.push(String::from(\"Zero\"));\n            }\n\n\
    \            if index > 0 {\n                result.push(String::from(&digits[digit\
    \ as usize]));\n            }\n        }\n    }\n\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:92:17\n\
    \   |\n92 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo9dr4ksb.rs:92:25\n   |\n92 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:93:17\n   |\n93 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:93:25\n\
    \   |\n93 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo9dr4ksb.rs:94:17\n   |\n94 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:94:25\n   |\n94 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo9dr4ksb.rs:95:17\n   |\n95 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:95:25\n   |\n95 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:96:17\n  \
    \ |\n96 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo9dr4ksb.rs:96:25\n   |\n96 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpo9dr4ksb.rs:82:29\n\
    \    |\n82  |                 result.push(String::from(&digits[digit as usize]));\n\
    \    |                    "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n        } else {\n            let mut j = i;\n     \
    \       while j < len && arr[j] == arr[j - 1] {\n                j += 1;\n   \
    \         }\n            let mut k = j;\n            while k < len && arr[k] ==\
    \ arr[k + 1] {\n                k += 1;\n            }\n            arr[i] = String::from(&arr[i\
    \ - k]);\n            i += 1;\n        }\n    }\n    arr\n}\n\nfn main() {\n \
    \   let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5pl0sr9b.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5pl0sr9b.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5pl0sr9b.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5pl0sr9b.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmp5pl0sr9b.rs:33:22\n\
    \    |\n33  |             arr[i] = String::from(&arr[i - k]);\n    |         \
    \             ^^^^^^^^^^^^ the t"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        if j == digits_len {\n            break;\n\
    \        }\n        let mut digit = digits[j];\n        digits[j] = digits_len\
    \ - j;\n        digits_len = j;\n        result.push(String::from(&digits[digit]));\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqzvj10oe.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqzvj10oe.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqzvj10oe.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqzvj10oe.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqzvj10oe.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqzvj10oe.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqzvj10oe.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqzvj10oe.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqzvj10oe.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqzvj10oe.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpqzvj10oe.rs:31:21\n   |\n31 |         digits[j] = digits_len\
    \ - j;\n   |                     ^^^^^^^^^^^^^^ expected `isize`, found `usize`\n\
    \nerror[E0277]: the type `[i"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as isize).collect::<Vec<_>>();\n  \
    \  arr.sort_unstable();\n    arr.reverse();\n\n    let mut result = vec![];\n\
    \    for i in arr {\n        let num = i as usize;\n        let name = match num\
    \ {\n            1 => \"One\",\n            2 => \"Two\",\n            3 => \"\
    Three\",\n            4 => \"Four\",\n            5 => \"Five\",\n           \
    \ 6 => \"Six\",\n            7 => \"Seven\",\n            8 => \"Eight\",\n  \
    \          9 => \"Nine\",\n            _ => return vec![],\n        };\n     \
    \   result.push(name);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7jcw1sou.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7jcw1sou.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7jcw1sou.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7jcw1sou.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7jcw1sou.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7jcw1sou.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7jcw1sou.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7jcw1sou.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7jcw1sou.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7jcw1sou.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp7jcw1sou.rs:40:5\n   |\n13 | fn by_length(arr: Vec<isize>)\
    \ -> Vec<String> {\n   |                                  ----------- expected\
    \ `Vec<String>` because of retur"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        let mut digit = digits[j];\n        if\
    \ digit < 10 {\n            result.push(String::from(&format!(\"One\", digit)));\n\
    \            i += 1;\n        } else {\n            result.push(String::from(&format!(\"\
    Ten\", digit)));\n            i += 2;\n        }\n        while i < digits_len\
    \ && digits_len > 1 && digits_len > i && digits_len > j && digits_len > k {\n\
    \            if digits_len > i + 1 && digits_len > j + 1 && digits_len > k + 1\
    \ {\n                let mut digit = digits[i];\n                digits[i] = digits[j];\n\
    \                digits[j] = digit;\n                i += 1;\n               \
    \ j += 1;\n                k += 1;\n            }\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: argument never used\n  --> /tmp/tmp9ovuu0xz.rs:28:54\n   |\n28 |\
    \             result.push(String::from(&format!(\"One\", digit)));\n   |     \
    \                                          -----  ^^^^^ argument never used\n\
    \   |                                               |\n   |                  \
    \                             formatting specifier missing\n\nerror: argument\
    \ never used\n  --> /tmp/tmp9ovuu0xz.rs:31:54\n   |\n31 |             result.push(String::from(&format!(\"\
    Ten\", digit)));\n   |                                               -----  ^^^^^\
    \ argument never used\n   |                                               |\n\
    \   |                                               formatting specifier missing\n\
    \nerror[E0425]: cannot find value `k` in this scope\n   --> /tmp/tmp9ovuu0xz.rs:34:100\n\
    \    |\n34  |         while i < digits_len && digits_len > 1 && digits_len > i\
    \ && digits_len > j && digits_len > k {\n    |                               \
    \                                                                     ^ help:\
    \ a tuple variant with a similar name exists: `Ok`\n\nerror[E0425]: cannot find\
    \ value `k` in this scope\n   --> /tmp/tmp9ovuu0xz.rs:35:73\n    |\n35  |    \
    \         if digits_len > i + 1 && digits_len > j + 1 && digits_len > k + 1 {\n\
    \    |                                                                       \
    \  ^ help: a tuple variant with a similar name exists: `Ok`\n\nerror[E0425]: cannot\
    \ find value `k` in this scope\n   --> /tmp/tmp9ovuu0xz.rs:41:17\n    |\n41  |\
    \                 k += 1;\n    |                 ^ help: a tuple variant with\
    \ a similar name exists: `Ok`\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp9ovuu0xz.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9ovuu0xz.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9ovuu0xz.rs:51:17\n   |\n51 |     assert_eq"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] > 9 {\n          \
    \  len = len;\n        } else {\n            arr[i] = String::from(&arr[i as usize]);\n\
    \            i += 1;\n        }\n    }\n    arr.reverse();\n    arr\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmu_nwwix.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmu_nwwix.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmu_nwwix.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmu_nwwix.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmu_nwwix.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmu_nwwix.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmu_nwwix.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmu_nwwix.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmu_nwwix.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmu_nwwix.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpmu_nwwix.rs:24:22\n\
    \    |\n24  |             arr[i] = String::from(&arr[i as usize]);\n    |    \
    \                  ^^^^^^^^^^^^ "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = vec![];\n    let mut i = 0;\n   \
    \ while i < arr.len() {\n        let mut j = i;\n        while j < arr.len() &&\
    \ arr[j] < 10 {\n            digits.push(arr[j]);\n            j += 1\n      \
    \  }\n        let mut k = i;\n        while k < arr.len() && arr[k] > 9 {\n  \
    \          digits.push(arr[k]);\n            k += 1\n        }\n        let mut\
    \ reversed = vec![];\n        for i in 0..digits.len() {\n            reversed.push(digits[digits.len()\
    \ - 1 - i]);\n        }\n        result.push(reversed.join(\"\"));\n        i\
    \ += digits.len() - 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphanl5wba.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphanl5wba.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphanl5wba.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphanl5wba.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphanl5wba.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphanl5wba.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphanl5wba.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphanl5wba.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphanl5wba.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphanl5wba.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: the method\
    \ `join` exists for struct `Vec<isize>`, but its trait bounds were not satisfied\n\
    \  --> /tmp/tmphanl5wba.rs:35:30\n   |\n35 |         result.push(reversed.join(\"\
    \"));\n   |                  "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut digits = vec![];\n\
    \    let mut digits_len = vec![];\n    let mut digits_len_len = vec![];\n    let\
    \ mut digits_len_len_len = vec![];\n    let mut digits_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len = vec![];\n    let mut digits_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len = vec![];\n    let\
    \ mut digits_len_len_len_len_len_len_len_len = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len_len_len_len_len_len_len = vec![];\n  \
    \  let mut digits_len_len_len_len_len_len_len_len_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmprerg244l.rs:39:68\n   |\n\
    39 |     let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_\n   |\
    \                                                                    ^ help: add\
    \ `;` here\n40 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmprerg244l.rs:44:17\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmprerg244l.rs:44:25\n \
    \  |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprerg244l.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprerg244l.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprerg244l.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprerg244l.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprerg244l.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprerg244l.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprerg244l.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprerg244l.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n  "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n  \
    \  let mut i = 0;\n    while i < reversed.len() {\n        let digit = reversed[i];\n\
    \        let index = digits.iter().position(|&x| x == digit).unwrap();\n     \
    \   result.push(by_digit(index, digits, &mut reversed));\n        i += 1;\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmpob0tolr5.rs:24:21\n\
    \   |\n24 |         result.push(by_digit(index, digits, &mut reversed));\n   |\
    \                     ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpob0tolr5.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpob0tolr5.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpob0tolr5.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpob0tolr5.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpob0tolr5.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpob0tolr5.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpob0tolr5.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpob0tolr5.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpob0tolr5.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpob0tolr5.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found i"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let len = arr[i] - 1;\n        if len < 1 || len > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        result.push(String::from(&arr[i as\
    \ usize]));\n        i += len;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3g9oxcio.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3g9oxcio.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3g9oxcio.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3g9oxcio.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3g9oxcio.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3g9oxcio.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3g9oxcio.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3g9oxcio.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3g9oxcio.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3g9oxcio.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmp3g9oxcio.rs:25:21\n\
    \    |\n25  |         result.push(String::from(&arr[i as usize]));\n    |    \
    \                 ^^^^^^^^^^^^ t"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    arr.sort();\n    arr.reverse();\n\
    \    arr.iter().map(|x| {\n        match x {\n            1 => \"One\",\n    \
    \        2 => \"Two\",\n            3 => \"Three\",\n            4 => \"Four\"\
    ,\n            5 => \"Five\",\n            6 => \"Six\",\n            7 => \"\
    Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\",\n          \
    \  _ => panic!(\"Invalid number in array: {}\", x),\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprxxyh88z.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprxxyh88z.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprxxyh88z.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprxxyh88z.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprxxyh88z.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprxxyh88z.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprxxyh88z.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprxxyh88z.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprxxyh88z.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprxxyh88z.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmprxxyh88z.rs:30:8\n   |\n30 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut reversed = arr\n  \
    \      .iter()\n        .cloned()\n        .enumerate()\n        .map(|(i, x)|\
    \ {\n            if x < 10 {\n                let name = &\"One\"[x as usize];\n\
    \                result.push(name);\n            } else if x < 100 {\n       \
    \         let name = &\"Two\"[x as usize];\n                result.push(name);\n\
    \            } else if x < 1000 {\n                let name = &\"Three\"[x as\
    \ usize];\n                result.push(name);\n            } else if x < 10000\
    \ {\n                let name = &\"Four\"[x as usize];\n                result.push(name);\n\
    \            } else if x < 100000 {\n                let name = &\"Five\"[x as\
    \ usize];\n                result.push(name);\n            } else if x < 1000000\
    \ {\n                let name = &\"Six\"[x as usize];\n                result.push(name);\n\
    \            } else if x < 10000000 {\n                let name = &\"Seven\"[x\
    \ as usize];\n                result.push(name);\n            } else if x < 100000000\
    \ {\n                let name = &\"Eight\"[x as usize];\n                result.push(name);\n\
    \            } else if x < 1000000000 {\n                let name = &\"Nine\"\
    [x as usize];\n                result.push(name);\n            } else {\n    \
    \            panic!(\"Invalid number: {}\", x);\n            }\n        })\n \
    \       .collect::<Vec<_>>();\n    reversed.reverse();\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpokb2_eai.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpokb2_eai.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpokb2_eai.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpokb2_eai.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpokb2_eai.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpokb2_eai.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpokb2_eai.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpokb2_eai.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpokb2_eai.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpokb2_eai.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the type\
    \ `str` cannot be indexed by `usize`\n  --> /tmp/tmpokb2_eai.rs:21:29\n   |\n\
    21 |                 let name = &\"One\"[x as usize];\n   |                  \
    \           ^^^^^^^^^^^^^^^^^ string ind"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut j = i;\n        while j < arr.len() {\n          \
    \  if arr[j] > arr[i] {\n                break;\n            }\n            i\
    \ += 1;\n            j += 1\n        }\n        let mut k = i;\n        while\
    \ k > 0 {\n            let mut tmp = arr[k];\n            arr[k] = arr[k - 1];\n\
    \            arr[k - 1] = tmp;\n            k -= 1;\n        }\n        result.push(String::from(&arr[i]));\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzbqucxpc.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzbqucxpc.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzbqucxpc.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzbqucxpc.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzbqucxpc.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzbqucxpc.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzbqucxpc.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzbqucxpc.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzbqucxpc.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzbqucxpc.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpzbqucxpc.rs:39:21\n\
    \    |\n39  |         result.push(String::from(&arr[i]));\n    |             \
    \        ^^^^^^^^^^^^ the trait "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n            j\
    \ += 1\n        }\n        if j == i {\n            break;\n        }\n      \
    \  let mut k = i;\n        while k < j {\n            result.push(by_digit(arr[k]));\n\
    \            k += 1;\n        }\n        i = j;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmph55caauj.rs:29:25\n\
    \   |\n29 |             result.push(by_digit(arr[k]));\n   |                 \
    \        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmph55caauj.rs:39:17\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmph55caauj.rs:39:25\n \
    \  |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph55caauj.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph55caauj.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmph55caauj.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmph55caauj.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph55caauj.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph55caauj.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph55caauj.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmph55caauj.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\n"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n\n    while digits_len > 0 {\n        let mut\
    \ digit = digits[digits_index];\n        let mut digits_index = digits_index +\
    \ 1;\n        let mut digits_len = digits.len();\n\n        while digits_len >\
    \ 0 {\n            let mut digit = digits[digits_index];\n            let mut\
    \ digits_index = digits_index + 1;\n            let mut digits_len = digits.len();\n\
    \n            if digit < 10 {\n                let mut digit = digit + 1;\n  \
    \              let mut digits_len = digits.len();\n                result.push(String::from(\"\
    One\"));\n            } else if digit < 20 {\n                let mut digit =\
    \ digit + 2;\n                let mut digits_len = digits.len();\n           \
    \     result.push(String::from(\"Two\"));\n            } else if digit < 30 {\n\
    \                let mut digit = digit + 3;\n                let mut digits_len\
    \ = digits.len();\n                result.push(String::from(\"Three\"));\n   \
    \         } else if digit < 40 {\n                let mut digit = digit + 4;\n\
    \                let mut digits_len = digits.len();\n                result.push(String::from(\"\
    Four\"));\n            } else if digit < 50 {\n                let mut digit =\
    \ digit + 5;\n                let mut digits_len = digits.len();\n           \
    \     result.push(String::from(\"Five\"));\n            } else if digit < 60 {\n\
    \                let mut digit = digit + 6;\n                let mut digits_len\
    \ = digits.len();\n                result.push(String::from(\"Six\"));\n     \
    \       } else if digit < 70 {\n                let mut digit = digit + 7;\n \
    \               let mut digits_len = digits.len();\n                result.push(String::from(\"\
    Seven\"));\n            } else if digit < 80 {\n                let mut digit\
    \ = digit + 8;\n                let mut digits_len = digits.len();\n         \
    \       result.push(String::from(\"Eight\"));\n            } else if digit < 90\
    \ {\n                let mut digit = digit + 9;\n                let mut digits_len\
    \ = digits.len();\n                result.push(String::from(\"Nine\"));\n    \
    \        } else {\n                let mut digit = digit + \n}\n\nfn main() {\n\
    \    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpyezs2pzo.rs:81:3\n\
    \   |\n13 | fn by_length(arr: Vec<isize>) -> Vec<String> {\n   |             \
    \                                 - unclosed delimiter\n...\n24 |     while digits_len\
    \ > 0 {\n   |                          - unclosed delimiter\n...\n29 |       \
    \  while digits_len > 0 {\n   |                              - unclosed delimiter\n\
    ...\n70 |             } else {\n   |                    - this delimiter might\
    \ not be properly closed...\n71 |                 let mut digit = digit + \n72\
    \ | }\n   | - ...as it matches this but it has different indentation\n...\n81\
    \ | }\n   |   ^\n\nerror: expected expression, found `}`\n  --> /tmp/tmpyezs2pzo.rs:72:1\n\
    \   |\n72 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpyezs2pzo.rs:76:17\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpyezs2pzo.rs:76:25\n \
    \  |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyezs2pzo.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyezs2pzo.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyezs2pzo.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyezs2pzo.rs:78:25\n   |\n78 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyezs2pzo.rs:79:17\n  \
    \ |\n79 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find va"
  stdout: ''
  timestamp: 1659749588

language: rs
name: HumanEval_105_by_length
results:
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    let mut len = arr.len();\n    let mut i\
    \ = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n         \
    \   i += 1;\n            continue;\n        }\n\n        let mut j = i;\n    \
    \    while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n        }\n\n\
    \        let mut tmp = arr[j];\n        arr[j] = arr[i];\n        arr[i] = tmp;\n\
    \        i += 1;\n    }\n\n    let mut result = vec![];\n    for i in arr.iter()\
    \ {\n        result.push(String::from(&format!(\"{}\", i)));\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3ppbi4iv.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3ppbi4iv.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3ppbi4iv.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3ppbi4iv.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3ppbi4iv.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut i = 0;\n    while i\
    \ < arr.len() {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        let mut j = i;\n        while j < arr.len()\
    \ && arr[j] == arr[j] + 1 {\n            j += 1\n        }\n        result.push(String::from(&arr[j\
    \ as usize]));\n        i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvsl_lzly.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvsl_lzly.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvsl_lzly.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvsl_lzly.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvsl_lzly.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvsl_lzly.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvsl_lzly.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvsl_lzly.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvsl_lzly.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvsl_lzly.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpvsl_lzly.rs:25:21\n\
    \    |\n25  |         result.push(String::from(&arr[j as usize]));\n    |    \
    \                 ^^^^^^^^^^^^ t"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    let mut result = Vec::new();\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i;\n     \
    \   while j < arr.len() && arr[j] < 10 {\n            j += 1\n        }\n    \
    \    if j > i {\n            result.push(by_length(arr.split_off(i).reverse()));\n\
    \            i = j;\n        } else {\n            result.push(by_length(arr.split_off(i)));\n\
    \            i += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8fqgdd0b.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8fqgdd0b.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8fqgdd0b.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8fqgdd0b.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8fqgdd0b.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp8fqgdd0b.rs:23:35\n   |\n23 |             result.push(by_length(arr.split_off(i).reverse()));\n\
    \   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ expec"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    let mut result = vec![];\n\
    \    while arr.len() > 0 {\n        let mut cur = arr.split_off(1).unwrap();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut\
    \ cur = cur.iter().cloned().collect::<Vec<_>>();\n        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp5_w8e8zc.rs:53:3\n\
    \   |\n13 | fn by_length(arr: Vec<isize>) -> Vec<String> {\n   |             \
    \                                 - unclosed delimiter\n...\n16 |     while arr.len()\
    \ > 0 {\n   |                         - this delimiter might not be properly closed...\n\
    ...\n44 | }\n   | - ...as it matches this but it has different indentation\n...\n\
    53 | }\n   |   ^\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5_w8e8zc.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5_w8e8zc.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5_w8e8zc.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5_w8e8zc.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5_w8e8zc.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not foun"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut reversed = arr.rev();\n    let mut digits\
    \ = vec![];\n    let mut i = 0;\n    while i < reversed.len() {\n        let digit\
    \ = reversed[i] % 10;\n        digits.push(digit);\n        i += 1;\n    }\n \
    \   for digit in digits {\n        let index = digit as usize;\n        let name\
    \ = &NAMES[index];\n        result.push(name);\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `NAMES` in this scope\n  --> /tmp/tmpyu214xgd.rs:28:21\n\
    \   |\n28 |         let name = &NAMES[index];\n   |                     ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyu214xgd.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyu214xgd.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyu214xgd.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyu214xgd.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyu214xgd.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyu214xgd.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyu214xgd.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyu214xgd.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyu214xgd.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyu214xgd.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0599]: the meth"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n\n    while digits_len > 0 {\n      \
    \  let mut digit = digits.remove(0);\n        let mut index = digit as usize;\n\
    \        let mut digits_len = digits_len as usize;\n\n        while digits_len\
    \ > 0 {\n            let mut digit = digits.remove(0);\n            let mut index\
    \ = index as usize;\n            let mut digits_len = digits_len as usize;\n\n\
    \            if index >= 10 {\n                index -= 10;\n                result.push(String::from(\"\
    Nine\"));\n            }\n\n            if index >= 10 {\n                index\
    \ -= 10;\n                result.push(String::from(\"Eight\"));\n            }\n\
    \n            if index >= 10 {\n                index -= 10;\n               \
    \ result.push(String::from(\"Seven\"));\n            }\n\n            if index\
    \ >= 10 {\n                index -= 10;\n                result.push(String::from(\"\
    Six\"));\n            }\n\n            if index >= 10 {\n                index\
    \ -= 10;\n                result.push(String::from(\"Five\"));\n            }\n\
    \n            if index >= 10 {\n                index -= 10;\n               \
    \ result.push(String::from(\"Four\"));\n            }\n\n            if index\
    \ >= 10 {\n                index -= 10;\n                result.push(String::from(\"\
    Three\"));\n            }\n\n            if index >= 10 {\n                index\
    \ -= 10;\n                result.push(String::from(\"Two\"));\n            }\n\
    \n            if index >= 10 {\n                index -= 10;\n               \
    \ result.push(String::from(\"One\"));\n            }\n\n            if index ==\
    \ 0 {\n                result.push(String::from(\"Zero\"));\n            }\n\n\
    \            if index > 0 {\n                result.push(String::from(&digits[digit\
    \ as usize]));\n            }\n        }\n    }\n\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:92:17\n\
    \   |\n92 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo9dr4ksb.rs:92:25\n   |\n92 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:93:17\n   |\n93 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:93:25\n\
    \   |\n93 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo9dr4ksb.rs:94:17\n   |\n94 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:94:25\n   |\n94 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo9dr4ksb.rs:95:17\n   |\n95 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:95:25\n   |\n95 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo9dr4ksb.rs:96:17\n  \
    \ |\n96 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo9dr4ksb.rs:96:25\n   |\n96 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpo9dr4ksb.rs:82:29\n\
    \    |\n82  |                 result.push(String::from(&digits[digit as usize]));\n\
    \    |                    "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n        } else {\n            let mut j = i;\n     \
    \       while j < len && arr[j] == arr[j - 1] {\n                j += 1;\n   \
    \         }\n            let mut k = j;\n            while k < len && arr[k] ==\
    \ arr[k + 1] {\n                k += 1;\n            }\n            arr[i] = String::from(&arr[i\
    \ - k]);\n            i += 1;\n        }\n    }\n    arr\n}\n\nfn main() {\n \
    \   let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5pl0sr9b.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5pl0sr9b.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5pl0sr9b.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5pl0sr9b.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5pl0sr9b.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmp5pl0sr9b.rs:33:22\n\
    \    |\n33  |             arr[i] = String::from(&arr[i - k]);\n    |         \
    \             ^^^^^^^^^^^^ the t"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        if j == digits_len {\n            break;\n\
    \        }\n        let mut digit = digits[j];\n        digits[j] = digits_len\
    \ - j;\n        digits_len = j;\n        result.push(String::from(&digits[digit]));\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqzvj10oe.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqzvj10oe.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqzvj10oe.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqzvj10oe.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqzvj10oe.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqzvj10oe.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqzvj10oe.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqzvj10oe.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqzvj10oe.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqzvj10oe.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpqzvj10oe.rs:31:21\n   |\n31 |         digits[j] = digits_len\
    \ - j;\n   |                     ^^^^^^^^^^^^^^ expected `isize`, found `usize`\n\
    \nerror[E0277]: the type `[i"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as isize).collect::<Vec<_>>();\n  \
    \  arr.sort_unstable();\n    arr.reverse();\n\n    let mut result = vec![];\n\
    \    for i in arr {\n        let num = i as usize;\n        let name = match num\
    \ {\n            1 => \"One\",\n            2 => \"Two\",\n            3 => \"\
    Three\",\n            4 => \"Four\",\n            5 => \"Five\",\n           \
    \ 6 => \"Six\",\n            7 => \"Seven\",\n            8 => \"Eight\",\n  \
    \          9 => \"Nine\",\n            _ => return vec![],\n        };\n     \
    \   result.push(name);\n    }\n\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7jcw1sou.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7jcw1sou.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7jcw1sou.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7jcw1sou.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7jcw1sou.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7jcw1sou.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7jcw1sou.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7jcw1sou.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7jcw1sou.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7jcw1sou.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp7jcw1sou.rs:40:5\n   |\n13 | fn by_length(arr: Vec<isize>)\
    \ -> Vec<String> {\n   |                                  ----------- expected\
    \ `Vec<String>` because of retur"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        let mut digit = digits[j];\n        if\
    \ digit < 10 {\n            result.push(String::from(&format!(\"One\", digit)));\n\
    \            i += 1;\n        } else {\n            result.push(String::from(&format!(\"\
    Ten\", digit)));\n            i += 2;\n        }\n        while i < digits_len\
    \ && digits_len > 1 && digits_len > i && digits_len > j && digits_len > k {\n\
    \            if digits_len > i + 1 && digits_len > j + 1 && digits_len > k + 1\
    \ {\n                let mut digit = digits[i];\n                digits[i] = digits[j];\n\
    \                digits[j] = digit;\n                i += 1;\n               \
    \ j += 1;\n                k += 1;\n            }\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: argument never used\n  --> /tmp/tmp9ovuu0xz.rs:28:54\n   |\n28 |\
    \             result.push(String::from(&format!(\"One\", digit)));\n   |     \
    \                                          -----  ^^^^^ argument never used\n\
    \   |                                               |\n   |                  \
    \                             formatting specifier missing\n\nerror: argument\
    \ never used\n  --> /tmp/tmp9ovuu0xz.rs:31:54\n   |\n31 |             result.push(String::from(&format!(\"\
    Ten\", digit)));\n   |                                               -----  ^^^^^\
    \ argument never used\n   |                                               |\n\
    \   |                                               formatting specifier missing\n\
    \nerror[E0425]: cannot find value `k` in this scope\n   --> /tmp/tmp9ovuu0xz.rs:34:100\n\
    \    |\n34  |         while i < digits_len && digits_len > 1 && digits_len > i\
    \ && digits_len > j && digits_len > k {\n    |                               \
    \                                                                     ^ help:\
    \ a tuple variant with a similar name exists: `Ok`\n\nerror[E0425]: cannot find\
    \ value `k` in this scope\n   --> /tmp/tmp9ovuu0xz.rs:35:73\n    |\n35  |    \
    \         if digits_len > i + 1 && digits_len > j + 1 && digits_len > k + 1 {\n\
    \    |                                                                       \
    \  ^ help: a tuple variant with a similar name exists: `Ok`\n\nerror[E0425]: cannot\
    \ find value `k` in this scope\n   --> /tmp/tmp9ovuu0xz.rs:41:17\n    |\n41  |\
    \                 k += 1;\n    |                 ^ help: a tuple variant with\
    \ a similar name exists: `Ok`\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp9ovuu0xz.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9ovuu0xz.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9ovuu0xz.rs:51:17\n   |\n51 |     assert_eq"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] > 9 {\n          \
    \  len = len;\n        } else {\n            arr[i] = String::from(&arr[i as usize]);\n\
    \            i += 1;\n        }\n    }\n    arr.reverse();\n    arr\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmu_nwwix.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmu_nwwix.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmu_nwwix.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmu_nwwix.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmu_nwwix.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmu_nwwix.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmu_nwwix.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmu_nwwix.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmu_nwwix.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmu_nwwix.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpmu_nwwix.rs:24:22\n\
    \    |\n24  |             arr[i] = String::from(&arr[i as usize]);\n    |    \
    \                  ^^^^^^^^^^^^ "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = vec![];\n    let mut i = 0;\n   \
    \ while i < arr.len() {\n        let mut j = i;\n        while j < arr.len() &&\
    \ arr[j] < 10 {\n            digits.push(arr[j]);\n            j += 1\n      \
    \  }\n        let mut k = i;\n        while k < arr.len() && arr[k] > 9 {\n  \
    \          digits.push(arr[k]);\n            k += 1\n        }\n        let mut\
    \ reversed = vec![];\n        for i in 0..digits.len() {\n            reversed.push(digits[digits.len()\
    \ - 1 - i]);\n        }\n        result.push(reversed.join(\"\"));\n        i\
    \ += digits.len() - 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphanl5wba.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphanl5wba.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphanl5wba.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphanl5wba.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphanl5wba.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphanl5wba.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphanl5wba.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphanl5wba.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphanl5wba.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphanl5wba.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: the method\
    \ `join` exists for struct `Vec<isize>`, but its trait bounds were not satisfied\n\
    \  --> /tmp/tmphanl5wba.rs:35:30\n   |\n35 |         result.push(reversed.join(\"\
    \"));\n   |                  "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut digits = vec![];\n\
    \    let mut digits_len = vec![];\n    let mut digits_len_len = vec![];\n    let\
    \ mut digits_len_len_len = vec![];\n    let mut digits_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len = vec![];\n    let mut digits_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len = vec![];\n    let\
    \ mut digits_len_len_len_len_len_len_len_len = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len_len_len_len_len_len_len = vec![];\n  \
    \  let mut digits_len_len_len_len_len_len_len_len_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len = vec![];\n\
    \    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = vec![];\n    let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmprerg244l.rs:39:68\n   |\n\
    39 |     let mut digits_len_len_len_len_len_len_len_len_len_len_len_len_\n   |\
    \                                                                    ^ help: add\
    \ `;` here\n40 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmprerg244l.rs:44:17\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmprerg244l.rs:44:25\n \
    \  |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprerg244l.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprerg244l.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprerg244l.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprerg244l.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprerg244l.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprerg244l.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprerg244l.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprerg244l.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n  "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n  \
    \  let mut i = 0;\n    while i < reversed.len() {\n        let digit = reversed[i];\n\
    \        let index = digits.iter().position(|&x| x == digit).unwrap();\n     \
    \   result.push(by_digit(index, digits, &mut reversed));\n        i += 1;\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmpob0tolr5.rs:24:21\n\
    \   |\n24 |         result.push(by_digit(index, digits, &mut reversed));\n   |\
    \                     ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpob0tolr5.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpob0tolr5.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpob0tolr5.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpob0tolr5.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpob0tolr5.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpob0tolr5.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpob0tolr5.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpob0tolr5.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpob0tolr5.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpob0tolr5.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found i"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let len = arr[i] - 1;\n        if len < 1 || len > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        result.push(String::from(&arr[i as\
    \ usize]));\n        i += len;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3g9oxcio.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3g9oxcio.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3g9oxcio.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3g9oxcio.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3g9oxcio.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3g9oxcio.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3g9oxcio.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3g9oxcio.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3g9oxcio.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3g9oxcio.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmp3g9oxcio.rs:25:21\n\
    \    |\n25  |         result.push(String::from(&arr[i as usize]));\n    |    \
    \                 ^^^^^^^^^^^^ t"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    arr.sort();\n    arr.reverse();\n\
    \    arr.iter().map(|x| {\n        match x {\n            1 => \"One\",\n    \
    \        2 => \"Two\",\n            3 => \"Three\",\n            4 => \"Four\"\
    ,\n            5 => \"Five\",\n            6 => \"Six\",\n            7 => \"\
    Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\",\n          \
    \  _ => panic!(\"Invalid number in array: {}\", x),\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprxxyh88z.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprxxyh88z.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprxxyh88z.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprxxyh88z.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprxxyh88z.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprxxyh88z.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprxxyh88z.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprxxyh88z.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprxxyh88z.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprxxyh88z.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmprxxyh88z.rs:30:8\n   |\n30 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut reversed = arr\n  \
    \      .iter()\n        .cloned()\n        .enumerate()\n        .map(|(i, x)|\
    \ {\n            if x < 10 {\n                let name = &\"One\"[x as usize];\n\
    \                result.push(name);\n            } else if x < 100 {\n       \
    \         let name = &\"Two\"[x as usize];\n                result.push(name);\n\
    \            } else if x < 1000 {\n                let name = &\"Three\"[x as\
    \ usize];\n                result.push(name);\n            } else if x < 10000\
    \ {\n                let name = &\"Four\"[x as usize];\n                result.push(name);\n\
    \            } else if x < 100000 {\n                let name = &\"Five\"[x as\
    \ usize];\n                result.push(name);\n            } else if x < 1000000\
    \ {\n                let name = &\"Six\"[x as usize];\n                result.push(name);\n\
    \            } else if x < 10000000 {\n                let name = &\"Seven\"[x\
    \ as usize];\n                result.push(name);\n            } else if x < 100000000\
    \ {\n                let name = &\"Eight\"[x as usize];\n                result.push(name);\n\
    \            } else if x < 1000000000 {\n                let name = &\"Nine\"\
    [x as usize];\n                result.push(name);\n            } else {\n    \
    \            panic!(\"Invalid number: {}\", x);\n            }\n        })\n \
    \       .collect::<Vec<_>>();\n    reversed.reverse();\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpokb2_eai.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpokb2_eai.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpokb2_eai.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpokb2_eai.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpokb2_eai.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpokb2_eai.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpokb2_eai.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpokb2_eai.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpokb2_eai.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpokb2_eai.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the type\
    \ `str` cannot be indexed by `usize`\n  --> /tmp/tmpokb2_eai.rs:21:29\n   |\n\
    21 |                 let name = &\"One\"[x as usize];\n   |                  \
    \           ^^^^^^^^^^^^^^^^^ string ind"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut j = i;\n        while j < arr.len() {\n          \
    \  if arr[j] > arr[i] {\n                break;\n            }\n            i\
    \ += 1;\n            j += 1\n        }\n        let mut k = i;\n        while\
    \ k > 0 {\n            let mut tmp = arr[k];\n            arr[k] = arr[k - 1];\n\
    \            arr[k - 1] = tmp;\n            k -= 1;\n        }\n        result.push(String::from(&arr[i]));\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzbqucxpc.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzbqucxpc.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzbqucxpc.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzbqucxpc.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzbqucxpc.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzbqucxpc.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzbqucxpc.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzbqucxpc.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzbqucxpc.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzbqucxpc.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpzbqucxpc.rs:39:21\n\
    \    |\n39  |         result.push(String::from(&arr[i]));\n    |             \
    \        ^^^^^^^^^^^^ the trait "
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n            j\
    \ += 1\n        }\n        if j == i {\n            break;\n        }\n      \
    \  let mut k = i;\n        while k < j {\n            result.push(by_digit(arr[k]));\n\
    \            k += 1;\n        }\n        i = j;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmph55caauj.rs:29:25\n\
    \   |\n29 |             result.push(by_digit(arr[k]));\n   |                 \
    \        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmph55caauj.rs:39:17\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmph55caauj.rs:39:25\n \
    \  |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph55caauj.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph55caauj.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmph55caauj.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmph55caauj.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph55caauj.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph55caauj.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph55caauj.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmph55caauj.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\n"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n\n    while digits_len > 0 {\n        let mut\
    \ digit = digits[digits_index];\n        let mut digits_index = digits_index +\
    \ 1;\n        let mut digits_len = digits.len();\n\n        while digits_len >\
    \ 0 {\n            let mut digit = digits[digits_index];\n            let mut\
    \ digits_index = digits_index + 1;\n            let mut digits_len = digits.len();\n\
    \n            if digit < 10 {\n                let mut digit = digit + 1;\n  \
    \              let mut digits_len = digits.len();\n                result.push(String::from(\"\
    One\"));\n            } else if digit < 20 {\n                let mut digit =\
    \ digit + 2;\n                let mut digits_len = digits.len();\n           \
    \     result.push(String::from(\"Two\"));\n            } else if digit < 30 {\n\
    \                let mut digit = digit + 3;\n                let mut digits_len\
    \ = digits.len();\n                result.push(String::from(\"Three\"));\n   \
    \         } else if digit < 40 {\n                let mut digit = digit + 4;\n\
    \                let mut digits_len = digits.len();\n                result.push(String::from(\"\
    Four\"));\n            } else if digit < 50 {\n                let mut digit =\
    \ digit + 5;\n                let mut digits_len = digits.len();\n           \
    \     result.push(String::from(\"Five\"));\n            } else if digit < 60 {\n\
    \                let mut digit = digit + 6;\n                let mut digits_len\
    \ = digits.len();\n                result.push(String::from(\"Six\"));\n     \
    \       } else if digit < 70 {\n                let mut digit = digit + 7;\n \
    \               let mut digits_len = digits.len();\n                result.push(String::from(\"\
    Seven\"));\n            } else if digit < 80 {\n                let mut digit\
    \ = digit + 8;\n                let mut digits_len = digits.len();\n         \
    \       result.push(String::from(\"Eight\"));\n            } else if digit < 90\
    \ {\n                let mut digit = digit + 9;\n                let mut digits_len\
    \ = digits.len();\n                result.push(String::from(\"Nine\"));\n    \
    \        } else {\n                let mut digit = digit + \n}\n\nfn main() {\n\
    \    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpyezs2pzo.rs:81:3\n\
    \   |\n13 | fn by_length(arr: Vec<isize>) -> Vec<String> {\n   |             \
    \                                 - unclosed delimiter\n...\n24 |     while digits_len\
    \ > 0 {\n   |                          - unclosed delimiter\n...\n29 |       \
    \  while digits_len > 0 {\n   |                              - unclosed delimiter\n\
    ...\n70 |             } else {\n   |                    - this delimiter might\
    \ not be properly closed...\n71 |                 let mut digit = digit + \n72\
    \ | }\n   | - ...as it matches this but it has different indentation\n...\n81\
    \ | }\n   |   ^\n\nerror: expected expression, found `}`\n  --> /tmp/tmpyezs2pzo.rs:72:1\n\
    \   |\n72 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpyezs2pzo.rs:76:17\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpyezs2pzo.rs:76:25\n \
    \  |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyezs2pzo.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyezs2pzo.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyezs2pzo.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyezs2pzo.rs:78:25\n   |\n78 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyezs2pzo.rs:79:17\n  \
    \ |\n79 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find va"
  stdout: ''
  timestamp: 1659749588
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 10 {\n            result.push(String::from(\"One\"));\n       \
    \ } else if arr[i] < 100 {\n            result.push(String::from(\"Two\"));\n\
    \        } else if arr[i] < 1000 {\n            result.push(String::from(\"Three\"\
    ));\n        } else if arr[i] < 10000 {\n            result.push(String::from(\"\
    Four\"));\n        } else if arr[i] < 100000 {\n            result.push(String::from(\"\
    Five\"));\n        } else if arr[i] < 1000000 {\n            result.push(String::from(\"\
    Six\"));\n        } else if arr[i] < 10000000 {\n            result.push(String::from(\"\
    Seven\"));\n        } else if arr[i] < 100000000 {\n            result.push(String::from(\"\
    Eight\"));\n        } else if arr[i] < 1000000000 {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            result.push(String::from(\"Zero\"));\n\
    \        }\n        i += 1;\n    }\n    result.reverse();\n    result\n}\n\nfn\
    \ main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi6vwjdih.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi6vwjdih.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi6vwjdih.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi6vwjdih.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi6vwjdih.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi6vwjdih.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi6vwjdih.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi6vwjdih.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi6vwjdih.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi6vwjdih.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut j = i;\n        while j < arr.len() {\n          \
    \  if arr[j] < 1 || arr[j] > 9 {\n                j += 1;\n                continue;\n\
    \            }\n            if arr[j] < arr[i] {\n                result.push(String::from(\"\
    One\"));\n                break;\n            }\n            if arr[j] > arr[i]\
    \ {\n                result.push(String::from(\"Nine\"));\n                break;\n\
    \            }\n            j += 1;\n        }\n        i += 1;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpiema23jl.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiema23jl.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpiema23jl.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpiema23jl.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpiema23jl.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpiema23jl.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpiema23jl.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpiema23jl.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpiema23jl.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiema23jl.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ x.cmp(&1).unwrap());\n    arr.sort_by_key(|x| x.cmp(&9).unwrap());\n    arr.iter().map(|x|\
    \ {\n        match x {\n            1 => \"One\",\n            2 => \"Two\",\n\
    \            3 => \"Three\",\n            4 => \"Four\",\n            5 => \"\
    Five\",\n            6 => \"Six\",\n            7 => \"Seven\",\n            8\
    \ => \"Eight\",\n            9 => \"Nine\",\n            _ => panic!(\"Invalid\
    \ number {}\", x),\n        }\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzh734yji.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzh734yji.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzh734yji.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzh734yji.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzh734yji.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzh734yji.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzh734yji.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzh734yji.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzh734yji.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzh734yji.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `unwrap` found for enum `std::cmp::Ordering` in the current scope\n  -->\
    \ /tmp/tmpzh734yji.rs:19:35\n   |\n19 |     arr.sort_by_key(|x| x.cmp(&1).unwrap());\n\
    \   |                     "
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.clone();\n    let mut len = arr.len();\n    let mut i = 0;\n \
    \   while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n\
    \        } else {\n            let mut j = i;\n            while j < len && arr[j]\
    \ < 1 && arr[j] > 9 {\n                j += 1;\n            }\n            swap(&mut\
    \ arr[i..j], &mut arr);\n            i += j - i;\n        }\n    }\n    let mut\
    \ result = vec![];\n    for i in arr.iter().rev() {\n        result.push(String::from(&names[i]))\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmp3l6owvuz.rs:28:13\n\
    \   |\n28 |             swap(&mut arr[i..j], &mut arr);\n   |             ^^^^\
    \ not found in this scope\n   |\nhelp: consider importing one of these items\n\
    \   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]:\
    \ cannot find value `names` in this scope\n  --> /tmp/tmp3l6owvuz.rs:34:35\n \
    \  |\n34 |         result.push(String::from(&names[i]))\n   |                \
    \                   ^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmp3l6owvuz.rs:41:17\n   |\n41 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3l6owvuz.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3l6owvuz.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3l6owvuz.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3l6owvuz.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3l6owvuz.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3l6owvuz.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3l6owvuz.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tm"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    arr.iter().map(|x| {\n        match x {\n           \
    \ 1 => \"One\",\n            2 => \"Two\",\n            3 => \"Three\",\n    \
    \        4 => \"Four\",\n            5 => \"Five\",\n            6 => \"Six\"\
    ,\n            7 => \"Seven\",\n            8 => \"Eight\",\n            9 =>\
    \ \"Nine\",\n            _ => panic!(\"Unexpected number in array: {}\", x),\n\
    \        }\n    }).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3gveeva4.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3gveeva4.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3gveeva4.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3gveeva4.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3gveeva4.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3gveeva4.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3gveeva4.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3gveeva4.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3gveeva4.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3gveeva4.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmp3gveeva4.rs:33:8\n   |\n33 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] > 9 {\n          \
    \  arr[i] = String::from(\"Nine\");\n            i += 1;\n        } else {\n \
    \           arr[i] = String::from(\"One\");\n            i += 1;\n        }\n\
    \    }\n    arr.reverse();\n    arr\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwcaonirp.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwcaonirp.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwcaonirp.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwcaonirp.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwcaonirp.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwcaonirp.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwcaonirp.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwcaonirp.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwcaonirp.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwcaonirp.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpwcaonirp.rs:23:22\n   |\n23 |             arr[i] = String::from(\"\
    Nine\");\n   |                      ^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ struct `String`\n\nerro"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n        let mut j\
    \ = i;\n        while j < len {\n            if arr[j] == arr[i] {\n         \
    \       j += 1;\n                continue;\n            }\n            if arr[j]\
    \ > arr[i] {\n                break;\n            }\n            arr[j] = arr[i];\n\
    \            i += 1;\n        }\n        i += 1;\n    }\n    arr.iter().cloned().collect::<Vec<_>>()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwxgqocpi.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwxgqocpi.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwxgqocpi.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwxgqocpi.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwxgqocpi.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwxgqocpi.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwxgqocpi.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwxgqocpi.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwxgqocpi.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwxgqocpi.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpwxgqocpi.rs:39:5\n   |\n13 | fn by_length(arr: Vec<isize>)\
    \ -> Vec<String> {\n   |                                  ----------- expected\
    \ `Vec<String>` because of retur"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut j = i;\n        while j < arr.len() {\n          \
    \  if arr[j] < 1 || arr[j] > 9 {\n                j += 1;\n                continue;\n\
    \            }\n            if arr[j] == arr[i] {\n                i += 1;\n \
    \               j += 1;\n                continue;\n            }\n          \
    \  if arr[j] > arr[i] {\n                result.push(by_length(arr.iter().take(j).rev()));\n\
    \                i += 1;\n                j += 1;\n                continue;\n\
    \            }\n            if arr[j] < arr[i] {\n                result.push(by_length(arr.iter().take(j).rev()));\n\
    \                i += 1;\n                j += 1;\n                continue;\n\
    \            }\n            i += 1;\n            j += 1;\n        }\n        result.push(by_length(arr.iter().take(i).rev()));\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyeosbuvx.rs:57:17\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyeosbuvx.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyeosbuvx.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyeosbuvx.rs:58:25\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyeosbuvx.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyeosbuvx.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyeosbuvx.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyeosbuvx.rs:60:25\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyeosbuvx.rs:61:17\n  \
    \ |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyeosbuvx.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpyeosbuvx.rs:36:39\n   |\n36 |                 result.push(by_length(arr.iter().take(j).rev()));\n\
    \   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ e"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as usize).collect();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    arr.iter().map(|x| {\n        let mut s = String::new();\n\
    \        match x {\n            1 => s.push_str(\"One\"),\n            2 => s.push_str(\"\
    Two\"),\n            3 => s.push_str(\"Three\"),\n            4 => s.push_str(\"\
    Four\"),\n            5 => s.push_str(\"Five\"),\n            6 => s.push_str(\"\
    Six\"),\n            7 => s.push_str(\"Seven\"),\n            8 => s.push_str(\"\
    Eight\"),\n            9 => s.push_str(\"Nine\"),\n            _ => panic!(\"\
    Unexpected number: {}\", x),\n        }\n        s\n    }).collect()\n}\n\nfn\
    \ main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjw98kaiz.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjw98kaiz.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjw98kaiz.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjw98kaiz.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjw98kaiz.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjw98kaiz.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjw98kaiz.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjw98kaiz.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjw98kaiz.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjw98kaiz.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0282]: type\
    \ annotations needed\n  --> /tmp/tmpjw98kaiz.rs:19:5\n   |\n18 |     let mut arr\
    \ = arr.into_iter().map(|x| x as usize).collect();\n   |         ------- consider\
    \ giving `arr` a type\n19 |     arr.s"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n\n        let mut\
    \ j = i;\n        while j < len {\n            if arr[j] < 1 || arr[j] > 9 {\n\
    \                j += 1;\n                continue;\n            }\n\n       \
    \     if arr[j] == arr[i] {\n                arr.swap(i, j);\n               \
    \ i += 1;\n                j += 1;\n                continue;\n            }\n\
    \n            if arr[j] > arr[i] {\n                arr.swap(i, j);\n        \
    \        i += 1;\n                j += 1;\n                continue;\n       \
    \     }\n\n            if arr[j] < arr[i] {\n                arr.swap(i, j);\n\
    \                i += 1;\n                j += 1;\n                continue;\n\
    \            }\n        }\n    }\n\n    arr.iter().map(|x| String::from(x)).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgan2m_kq.rs:62:17\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgan2m_kq.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgan2m_kq.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgan2m_kq.rs:63:25\n\
    \   |\n63 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgan2m_kq.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgan2m_kq.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgan2m_kq.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgan2m_kq.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgan2m_kq.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgan2m_kq.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpgan2m_kq.rs:57:24\n\
    \    |\n57  |     arr.iter().map(|x| String::from(x)).collect()\n    |       \
    \                 ^^^^^^^^^^^^ t"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut i = 0;\n    let mut j = 0;\n    let mut\
    \ n = arr.len();\n\n    while i < n {\n        if arr[i] < 1 || arr[i] > 9 {\n\
    \            i += 1;\n            continue;\n        }\n\n        let mut tmp\
    \ = 0;\n        while j < i {\n            tmp += arr[j] * 10 + arr[j + 1];\n\
    \            j += 2;\n        }\n\n        if tmp > 9 {\n            i += 1;\n\
    \            continue;\n        }\n\n        result.push(String::from(&names[tmp\
    \ as usize]));\n        i += 1;\n    }\n\n    result\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpn1geubu0.rs:40:35\n\
    \   |\n40 |         result.push(String::from(&names[tmp as usize]));\n   |   \
    \                                ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn1geubu0.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn1geubu0.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn1geubu0.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn1geubu0.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn1geubu0.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn1geubu0.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn1geubu0.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn1geubu0.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn1geubu0.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn1geubu0.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found "
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() {\n            if arr[j] < 10 {\n\
    \                result.push(String::from(\"One\"));\n                break;\n\
    \            }\n            if arr[j] < 100 {\n                result.push(String::from(\"\
    Two\"));\n                break;\n            }\n            if arr[j] < 1000\
    \ {\n                result.push(String::from(\"Three\"));\n                break;\n\
    \            }\n            if arr[j] < 10000 {\n                result.push(String::from(\"\
    Four\"));\n                break;\n            }\n            if arr[j] < 100000\
    \ {\n                result.push(String::from(\"Five\"));\n                break;\n\
    \            }\n            if arr[j] < 1000000 {\n                result.push(String::from(\"\
    Six\"));\n                break;\n            }\n            if arr[j] < 10000000\
    \ {\n                result.push(String::from(\"Seven\"));\n                break;\n\
    \            }\n            if arr[j] < 100000000 {\n                result.push(String::from(\"\
    Eight\"));\n                break;\n            }\n            if arr[j] < 1000000000\
    \ {\n                result.push(String::from(\"Nine\"));\n                break;\n\
    \            }\n            j += 1\n        }\n        i = j;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpl4d5ql27.rs:67:17\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl4d5ql27.rs:67:25\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl4d5ql27.rs:68:17\n   |\n68 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpl4d5ql27.rs:68:25\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpl4d5ql27.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl4d5ql27.rs:69:25\n   |\n69 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpl4d5ql27.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpl4d5ql27.rs:70:25\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl4d5ql27.rs:71:17\n  \
    \ |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl4d5ql27.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.into_iter().map(|x| x as isize).collect();\n\
    \    arr.sort_unstable();\n    arr.reverse();\n    arr.iter().map(|x| String::from(&names[x\
    \ as usize])).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmphg_8py9a.rs:17:38\n\
    \   |\n17 |     arr.iter().map(|x| String::from(&names[x as usize])).collect()\n\
    \   |                                      ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphg_8py9a.rs:22:17\n  \
    \ |\n22 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphg_8py9a.rs:22:25\n   |\n22 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphg_8py9a.rs:23:17\n   |\n23 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphg_8py9a.rs:23:25\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphg_8py9a.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphg_8py9a.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphg_8py9a.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphg_8py9a.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphg_8py9a.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphg_8py9a.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ x.checked_div(10).unwrap());\n    arr.sort_by_key(|x| x.checked_mul((10 as isize)).unwrap());\n\
    \    arr.iter_mut().for_each(|x| {\n        if *x < 10 {\n            *x = String::from(\"\
    One\");\n        } else if *x < 20 {\n            *x = String::from(\"Two\");\n\
    \        } else if *x < 30 {\n            *x = String::from(\"Three\");\n    \
    \    } else if *x < 40 {\n            *x = String::from(\"Four\");\n        }\
    \ else if *x < 50 {\n            *x = String::from(\"Five\");\n        } else\
    \ if *x < 60 {\n            *x = String::from(\"Six\");\n        } else if *x\
    \ < 70 {\n            *x = String::from(\"Seven\");\n        } else if *x < 80\
    \ {\n            *x = String::from(\"Eight\");\n        } else if *x < 90 {\n\
    \            *x = String::from(\"Nine\");\n        } else {\n            *x =\
    \ String::from(\"Ten\");\n        }\n    });\n    arr\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnhw94ilk.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnhw94ilk.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnhw94ilk.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnhw94ilk.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnhw94ilk.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnhw94ilk.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnhw94ilk.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnhw94ilk.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnhw94ilk.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnhw94ilk.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nwarning: unnecessary\
    \ parentheses around method argument\n  --> /tmp/tmpnhw94ilk.rs:20:39\n   |\n\
    20 |     arr.sort_by_key(|x| x.checked_mul((10 as isize)).unwrap());\n   |   \
    \                                    ^^^"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ x.checked_sub(1));\n    arr.reverse();\n\n    let mut result = vec![];\n   \
    \ for i in arr {\n        let mut s = String::new();\n        if i < 10 {\n  \
    \          s.push_str(&format!(\"One\", i));\n        } else if i < 20 {\n   \
    \         s.push_str(&format!(\"Two\", i));\n        } else if i < 30 {\n    \
    \        s.push_str(&format!(\"Three\", i));\n        } else if i < 40 {\n   \
    \         s.push_str(&format!(\"Four\", i));\n        } else if i < 50 {\n   \
    \         s.push_str(&format!(\"Five\", i));\n        } else if i < 60 {\n   \
    \         s.push_str(&format!(\"Six\", i));\n        } else if i < 70 {\n    \
    \        s.push_str(&format!(\"Seven\", i));\n        } else if i < 80 {\n   \
    \         s.push_str(&format!(\"Eight\", i));\n        } else if i < 90 {\n  \
    \          s.push_str(&format!(\"Nine\", i));\n        } else {\n            s.push_str(&format!(\"\
    Ten\", i));\n        }\n        result.push(s);\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: argument never used\n  --> /tmp/tmpjwdocn1x.rs:26:40\n   |\n26 |\
    \             s.push_str(&format!(\"One\", i));\n   |                        \
    \         -----  ^ argument never used\n   |                                 |\n\
    \   |                                 formatting specifier missing\n\nerror: argument\
    \ never used\n  --> /tmp/tmpjwdocn1x.rs:28:40\n   |\n28 |             s.push_str(&format!(\"\
    Two\", i));\n   |                                 -----  ^ argument never used\n\
    \   |                                 |\n   |                                \
    \ formatting specifier missing\n\nerror: argument never used\n  --> /tmp/tmpjwdocn1x.rs:30:42\n\
    \   |\n30 |             s.push_str(&format!(\"Three\", i));\n   |            \
    \                     -------  ^ argument never used\n   |                   \
    \              |\n   |                                 formatting specifier missing\n\
    \nerror: argument never used\n  --> /tmp/tmpjwdocn1x.rs:32:41\n   |\n32 |    \
    \         s.push_str(&format!(\"Four\", i));\n   |                           \
    \      ------  ^ argument never used\n   |                                 |\n\
    \   |                                 formatting specifier missing\n\nerror: argument\
    \ never used\n  --> /tmp/tmpjwdocn1x.rs:34:41\n   |\n34 |             s.push_str(&format!(\"\
    Five\", i));\n   |                                 ------  ^ argument never used\n\
    \   |                                 |\n   |                                \
    \ formatting specifier missing\n\nerror: argument never used\n  --> /tmp/tmpjwdocn1x.rs:36:40\n\
    \   |\n36 |             s.push_str(&format!(\"Six\", i));\n   |              \
    \                   -----  ^ argument never used\n   |                       \
    \          |\n   |                                 formatting specifier missing\n\
    \nerror: argument never used\n  --> /tmp/tmpjwdocn1x.rs:38:42\n   |\n38 |    \
    \         s.push_str(&format!(\"Seven\", i));\n   |                          \
    \       -------  ^ argument never used\n   |                                 |\n\
    \   |                                 formatting specifier missing\n\nerror: argument\
    \ never used\n  --> /tmp/tmp"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n  \
    \  let mut digits_iter = reversed.iter_mut();\n    let mut digits_end = reversed.len();\n\
    \n    while digits_iter.is_some() {\n        let digit = digits_iter.next().unwrap();\n\
    \        if digit < 10 {\n            result.push(String::from(\"One\"));\n  \
    \      } else if digit < 100 {\n            result.push(String::from(\"Two\"));\n\
    \        } else if digit < 1000 {\n            result.push(String::from(\"Three\"\
    ));\n        } else if digit < 10000 {\n            result.push(String::from(\"\
    Four\"));\n        } else if digit < 100000 {\n            result.push(String::from(\"\
    Five\"));\n        } else if digit < 1000000 {\n            result.push(String::from(\"\
    Six\"));\n        } else if digit < 10000000 {\n            result.push(String::from(\"\
    Seven\"));\n        } else if digit < 100000000 {\n            result.push(String::from(\"\
    Eight\"));\n        } else if digit < 1000000000 {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            result.push(String::from(\"Ten\"));\n\
    \        }\n    }\n\n    for digit in digits {\n        if digit < 10 {\n    \
    \        result.push(String::from(\"One\"));\n        } else if digit < 100 {\n\
    \            result.push(String::from(\"Two\"));\n        } else if digit < 1000\
    \ {\n            result.push(String::from(\"Three\"));\n        } else if digit\
    \ < 10000 {\n            result.push(String::from(\"Four\"));\n        } else\
    \ if digit < 100000 {\n            result.push(String::from(\"Five\"));\n    \
    \    } else if digit < 1000000 {\n            result.push(String::from(\"Six\"\
    ));\n        } else if digit < 10000000 {\n            result.push(String::from(\"\
    Seven\"));\n        } else if digit < 100000000 {\n            result.push(String::from(\"\
    Eight\"));\n        } else if digit < 1000000000 {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            result.push(String::from(\"Ten\"));\n\
    \        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqij_c6pd.rs:78:17\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqij_c6pd.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqij_c6pd.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqij_c6pd.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqij_c6pd.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqij_c6pd.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqij_c6pd.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqij_c6pd.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqij_c6pd.rs:82:17\n  \
    \ |\n82 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqij_c6pd.rs:82:25\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `is_some` found for struct `std::slice::IterMut` in the current scope\n\
    \  --> /tmp/tmpqij_c6pd.rs:24:23\n   |\n24 |     while digits_iter.is_some() {\n\
    \   |                       ^^^^^"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.clone();\n    let mut reversed = vec![];\n    let mut counter\
    \ = 0;\n    while counter < arr.len() {\n        let mut i = 0;\n        while\
    \ i < arr.len() && arr[i] < 10 {\n            i += 1;\n        }\n        if i\
    \ == arr.len() {\n            break;\n        }\n        let mut j = i;\n    \
    \    while j > 0 && arr[j - 1] > 10 {\n            j -= 1;\n        }\n      \
    \  if j == 0 {\n            break;\n        }\n        reversed.push(String::from(&arr[counter..j]));\n\
    \        counter = j;\n    }\n    for &s in &reversed {\n        arr.push(s.chars().next().unwrap());\n\
    \    }\n    arr\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpd446o_91.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd446o_91.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd446o_91.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpd446o_91.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd446o_91.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd446o_91.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd446o_91.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd446o_91.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd446o_91.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd446o_91.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&[isize]>` is not satisfied\n   --> /tmp/tmpd446o_91.rs:35:23\n\
    \    |\n35  |         reversed.push(String::from(&arr[counter..j]));\n    |  \
    \                     ^^^^^^^^"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n        } else {\n            swap(&mut arr[i..], &mut\
    \ arr[len-i..]);\n            i += 1;\n        }\n    }\n    arr.iter().map(|x|\
    \ String::from(x)).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmphaf6g815.rs:25:13\n\
    \   |\n25 |             swap(&mut arr[i..], &mut arr[len-i..]);\n   |        \
    \     ^^^^ not found in this scope\n   |\nhelp: consider importing one of these\
    \ items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphaf6g815.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphaf6g815.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphaf6g815.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphaf6g815.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphaf6g815.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphaf6g815.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphaf6g815.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphaf6g815.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphaf6g815.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphaf6g815.rs:38:25\n"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\n   \
    \ while digits_len > 0 {\n        let mut digit = digits[digits_index];\n    \
    \    let mut digits_remaining = digits_len;\n\n        while digit > 9 {\n   \
    \         digit /= 10;\n            digits_remaining--;\n        }\n\n       \
    \ if digits_remaining == 0 {\n            result.push(String::from(&digits[digits_index]));\n\
    \            digits_index += 1;\n            digits_len -= 1;\n        } else\
    \ {\n            let mut digits_remaining = digits_len;\n            let mut digits_index\
    \ = digits_index;\n\n            while digit > 0 {\n                digit %= 10;\n\
    \                digits_remaining--;\n            }\n\n            if digits_remaining\
    \ == 0 {\n                result.push(String::from(&digits[digits_index]));\n\
    \                digits_index += 1;\n                digits_len -= 1;\n      \
    \      }\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `;`\n  --> /tmp/tmpxwfeqwyq.rs:30:31\n\
    \   |\n30 |             digits_remaining--;\n   |                            \
    \   ^ expected expression\n\nerror: expected expression, found `;`\n  --> /tmp/tmpxwfeqwyq.rs:43:35\n\
    \   |\n43 |                 digits_remaining--;\n   |                        \
    \           ^ expected expression\n\nerror[E0425]: cannot find value `left` in\
    \ this scope\n  --> /tmp/tmpxwfeqwyq.rs:59:17\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpxwfeqwyq.rs:59:25\n \
    \  |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxwfeqwyq.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxwfeqwyq.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxwfeqwyq.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxwfeqwyq.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxwfeqwyq.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxwfeqwyq.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxwfeqwyq.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this s"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let len = arr[i] - 1;\n        if len < 1 || len > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        let mut j = i;\n        while j < arr.len()\
    \ {\n            if arr[j] == len + 1 {\n                result.push(by_name(len));\n\
    \                i += 1;\n                break;\n            }\n            j\
    \ += 1\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_name` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:28:29\n\
    \   |\n28 |                 result.push(by_name(len));\n   |                 \
    \            ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:40:17\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:40:25\n \
    \  |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkvq5ndm5.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkvq5ndm5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkvq5ndm5.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkvq5ndm5.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut reversed = vec![];\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i;\n     \
    \   while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n        }\n   \
    \     reversed.push(arr[j]);\n        i += j - 1;\n    }\n    for &i in reversed\
    \ {\n        let index = i as usize;\n        arr.swap(index, index - 1);\n  \
    \  }\n    arr.iter().map(|&i| String::from(&names[i])).collect()\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpgk0adpfi.rs:32:39\n\
    \   |\n32 |     arr.iter().map(|&i| String::from(&names[i])).collect()\n   | \
    \                                      ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgk0adpfi.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgk0adpfi.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgk0adpfi.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgk0adpfi.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgk0adpfi.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgk0adpfi.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgk0adpfi.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgk0adpfi.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgk0adpfi.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgk0adpfi.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not "
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n        } else {\n            swap(&mut arr, i, len\
    \ - 1);\n            i += 1;\n        }\n    }\n    arr.iter().cloned().collect::<Vec<_>>()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpwn8273pp.rs:25:13\n\
    \   |\n25 |             swap(&mut arr, i, len - 1);\n   |             ^^^^ not\
    \ found in this scope\n   |\nhelp: consider importing one of these items\n   |\n\
    1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwn8273pp.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwn8273pp.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwn8273pp.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwn8273pp.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwn8273pp.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwn8273pp.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwn8273pp.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwn8273pp.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwn8273pp.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwn8273pp.rs:38:25\n   |\n38 |   "
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n\n        let mut\
    \ j = i;\n        while j < len {\n            if arr[j] > arr[j + 1] {\n    \
    \            swap(&mut arr[j], &mut arr[j + 1]);\n            }\n            j\
    \ += 1;\n        }\n\n        i += 1;\n    }\n\n    let mut result = vec![];\n\
    \    for i in 0..len {\n        result.push(String::from(&arr[i]));\n    }\n\n\
    \    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:30:17\n\
    \   |\n30 |                 swap(&mut arr[j], &mut arr[j + 1]);\n   |        \
    \         ^^^^ not found in this scope\n   |\nhelp: consider importing one of\
    \ these items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n\
    \   |\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6qiu3a8.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx6qiu3a8.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx6qiu3a8.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx6qiu3a8.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx6qiu3a8.rs:52"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = vec![];\n    let mut reversed = vec![];\n\
    \    let mut i = 0;\n    let mut j = 0;\n    while i < arr.len() {\n        if\
    \ arr[i] < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n\
    \            i += 1;\n        } else {\n            reversed.push(arr[i]);\n \
    \           i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!(\"{}\", arr[i])));\n  \
    \          i += 1;\n        } else {\n            reversed.push(arr[i]);\n   \
    \         i += 1;\n        }\n    }\n    while i < arr.len() {\n        if arr[i]\
    \ < 10 {\n            digits.push(String::from(format!\n}\n\nfn main() {\n   \
    \ let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpf9jsziye.rs:115:3\n\
    \    |\n13  | fn by_length(arr: Vec<isize>) -> Vec<String> {\n    |          \
    \                                    - unclosed delimiter\n...\n103 |     while\
    \ i < arr.len() {\n    |                         - unclosed delimiter\n104 | \
    \        if arr[i] < 10 {\n    |                        - this delimiter might\
    \ not be properly closed...\n105 |             digits.push(String::from(format!\n\
    106 | }\n    | - ...as it matches this but it has different indentation\n...\n\
    115 | }\n    |   ^\n\nerror: expected one of `(`, `[`, or `{`, found `)`\n   -->\
    \ /tmp/tmpf9jsziye.rs:106:1\n    |\n105 |             digits.push(String::from(format!\n\
    \    |                                             - expected one of `(`, `[`,\
    \ or `{`\n106 | }\n    | ^ unexpected token\n\nerror: mismatched closing delimiter:\
    \ `}`\n   --> /tmp/tmpf9jsziye.rs:105:37\n    |\n13  | fn by_length(arr: Vec<isize>)\
    \ -> Vec<String> {\n    |                                              - closing\
    \ delimiter possibly meant for this\n...\n105 |             digits.push(String::from(format!\n\
    \    |                                     ^ unclosed delimiter\n106 | }\n   \
    \ | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value `left` in\
    \ this scope\n   --> /tmp/tmpf9jsziye.rs:110:17\n    |\n110 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpf9jsziye.rs:110:25\n\
    \    |\n110 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpf9jsziye.rs:111:17\n    |\n111 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpf9jsziye.rs:111:25\n\
    \    |\n111 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpf9jsziye.rs:112:17"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index\
    \ = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index\
    \ = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index\
    \ = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digit\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp72334o8y.rs:71:18\n   |\n\
    71 |     let mut digit\n   |                  ^ help: add `;` here\n72 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp72334o8y.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp72334o8y.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp72334o8y.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp72334o8y.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp72334o8y.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp72334o8y.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp72334o8y.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp72334o8y.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp72334o8y.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp72334o8y.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        if j == digits_len {\n            break;\n\
    \        }\n        let mut digit = digits[j];\n        let mut digits_len = digits_len;\n\
    \        while digit > 9 {\n            digit /= 10;\n            digits_len -=\
    \ 1;\n        }\n        let mut digit = digit;\n        let mut digits_len =\
    \ digits_len;\n        while digit > 0 {\n            let mut digit = digit;\n\
    \            let mut digits_len = digits_len;\n            while digit > 9 {\n\
    \                digit /= 10;\n                digits_len -= 1;\n            }\n\
    \            let mut digit = digit;\n            let mut digits_len = digits_len;\n\
    \            let mut digit = digit;\n            let mut digits_len = digits_len;\n\
    \            while digit > 9 {\n                digit /= 10;\n               \
    \ digits_len -= 1;\n            }\n            let mut digit = digit;\n      \
    \      let mut digits_len = digits_len;\n            let mut digit = digit;\n\
    \            let mut digits_len = digits_len;\n            while digit > 9 {\n\
    \                digit /= 10;\n                digits_len -= 1;\n            }\n\
    \            let mut digit = digit;\n            let mut digits_len = digits_len;\n\
    \            let mut digit = digit;\n            let mut digits_len = digits_len;\n\
    \            while digit > 9 {\n                digit /= 10;\n               \
    \ digits_len -= 1;\n            }\n            let mut digit = digit;\n      \
    \      let mut digits_len = digits_len;\n            let mut digit = digit;\n\
    \            let mut digits_len = digits_len;\n            while digit > 9 {\n\
    \                digit /= 10;\n                digits_len -= 1;\n            }\n\
    \            let mut digit = digit;\n            let mut digits_len = digits_len;\n\
    \            let mut digit = digit;\n            let mut digits_len = digits_len;\n\
    \            while digit > 9 {\n                digit /= 10;\n               \
    \ digits_len -= 1;\n            }\n            let mut digit = digit;\n      \
    \      let mut digits_len = digits_len;\n            let mut digit = digit;\n\
    \            let mut digits_len = digits_\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpkn57dq3v.rs:98:3\n\
    \   |\n13 | fn by_length(arr: Vec<isize>) -> Vec<String> {\n   |             \
    \                                 - unclosed delimiter\n...\n22 |     while i\
    \ < digits_len {\n   |                          - unclosed delimiter\n...\n38\
    \ |         while digit > 0 {\n   |                         - this delimiter might\
    \ not be properly closed...\n...\n89 | }\n   | - ...as it matches this but it\
    \ has different indentation\n...\n98 | }\n   |   ^\n\nerror: expected `;`, found\
    \ `}`\n  --> /tmp/tmpkn57dq3v.rs:88:41\n   |\n88 |             let mut digits_len\
    \ = digits_\n   |                                         ^ help: add `;` here\n\
    89 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `digits_` in\
    \ this scope\n  --> /tmp/tmpkn57dq3v.rs:88:34\n   |\n88 |             let mut\
    \ digits_len = digits_\n   |                                  ^^^^^^^ help: a\
    \ local variable with a similar name exists: `digits`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkn57dq3v.rs:93:17\n   |\n93 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkn57dq3v.rs:93:25\n\
    \   |\n93 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkn57dq3v.rs:94:17\n   |\n94 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkn57dq3v.rs:94:25\n   |\n94 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkn57dq3v.rs:95:17\n   |\n95 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkn57dq3v.rs:95:25\n   |\n95 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found "
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ {\n        match x {\n            1 => 1,\n            2 => 2,\n           \
    \ 3 => 3,\n            4 => 4,\n            5 => 5,\n            6 => 6,\n   \
    \         7 => 7,\n            8 => 8,\n            9 => 9,\n            _ =>\
    \ panic!(\"Invalid number in array: {}\", x),\n        }\n    });\n    arr.reverse();\n\
    \    arr.iter().map(|x| {\n        match x {\n            1 => \"One\",\n    \
    \        2 => \"Two\",\n            3 => \"Three\",\n            4 => \"Four\"\
    ,\n            5 => \"Five\",\n            6 => \"Six\",\n            7 => \"\
    Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\",\n          \
    \  _ => panic!(\"Invalid number in array: {}\", x),\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2nio_rzp.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2nio_rzp.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2nio_rzp.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2nio_rzp.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2nio_rzp.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2nio_rzp.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2nio_rzp.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2nio_rzp.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2nio_rzp.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2nio_rzp.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmp2nio_rzp.rs:47:8\n   |\n47 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index\
    \ = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index\
    \ = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index\
    \ = 0;\n    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len\
    \ = digits.len();\n    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n\
    \    let mut digits_index = 0;\n    let mut digits_len = digits.len();\n    let\
    \ mut digits_index = 0;\n    let mut digit\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp72334o8y.rs:71:18\n   |\n\
    71 |     let mut digit\n   |                  ^ help: add `;` here\n72 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp72334o8y.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp72334o8y.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp72334o8y.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp72334o8y.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp72334o8y.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp72334o8y.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp72334o8y.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp72334o8y.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp72334o8y.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp72334o8y.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/"
  stdout: ''
  timestamp: 1659803537
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut j = i;\n        while j < arr.len() {\n          \
    \  if arr[j] == arr[i] {\n                j += 1;\n                continue;\n\
    \            }\n            if arr[j] > arr[i] {\n                break;\n   \
    \         }\n            result.push(by_length(arr.iter().skip(j).take(arr[i]\
    \ - arr[j]).collect()));\n            j += 1;\n        }\n        i += 1;\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbrvary0p.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbrvary0p.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbrvary0p.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbrvary0p.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbrvary0p.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbrvary0p.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbrvary0p.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbrvary0p.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbrvary0p.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbrvary0p.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpbrvary0p.rs:33:59\n   |\n33 |             result.push(by_length(arr.iter().skip(j).take(arr[i]\
    \ - arr[j]).collect()));\n   |                                           "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        let digit = digits[j];\n        let digit\
    \ = digit.to_string();\n        if digit == \"1\" {\n            result.push(String::from(\"\
    One\"));\n        } else if digit == \"2\" {\n            result.push(String::from(\"\
    Two\"));\n        } else if digit == \"3\" {\n            result.push(String::from(\"\
    Three\"));\n        } else if digit == \"4\" {\n            result.push(String::from(\"\
    Four\"));\n        } else if digit == \"5\" {\n            result.push(String::from(\"\
    Five\"));\n        } else if digit == \"6\" {\n            result.push(String::from(\"\
    Six\"));\n        } else if digit == \"7\" {\n            result.push(String::from(\"\
    Seven\"));\n        } else if digit == \"8\" {\n            result.push(String::from(\"\
    Eight\"));\n        } else if digit == \"9\" {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            i += 1;\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp83p2szn4.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp83p2szn4.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp83p2szn4.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp83p2szn4.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp83p2szn4.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp83p2szn4.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp83p2szn4.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp83p2szn4.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp83p2szn4.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp83p2szn4.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut reversed = digits.iter().cloned().rev().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = reversed.iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_iter.into_iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_iter = digits_\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpb6xk3_iq.rs:37:34\n   |\n\
    37 |     let mut digits_iter = digits_\n   |                                 \
    \ ^ help: add `;` here\n38 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `digits_` in this scope\n  --> /tmp/tmpb6xk3_iq.rs:37:27\n   |\n\
    37 |     let mut digits_iter = digits_\n   |                           ^^^^^^^\
    \ help: a local variable with a similar name exists: `digits`\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpb6xk3_iq.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb6xk3_iq.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb6xk3_iq.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb6xk3_iq.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb6xk3_iq.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb6xk3_iq.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpb6xk3_iq.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpb6xk3_iq.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpb6xk3_iq.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |              "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut i = 0;\n    while i\
    \ < arr.len() {\n        let mut j = i;\n        while j < arr.len() && arr[j]\
    \ < 10 {\n            j += 1\n        }\n        let mut k = j;\n        while\
    \ k < arr.len() && arr[k] > 9 {\n            k += 1\n        }\n        if k ==\
    \ j {\n            result.push(String::from(&arr[i..j]));\n        } else {\n\
    \            result.push(String::from(&arr[i..k]));\n        }\n        i = k;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphsgluflr.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphsgluflr.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphsgluflr.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphsgluflr.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphsgluflr.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphsgluflr.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphsgluflr.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphsgluflr.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphsgluflr.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphsgluflr.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&[isize]>` is not satisfied\n   --> /tmp/tmphsgluflr.rs:26:25\n\
    \    |\n26  |             result.push(String::from(&arr[i..j]));\n    |      \
    \                   ^^^^^^^^^^"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<isize>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_reversed = digits.clone();\n\
    \    digits_reversed.reverse();\n    let mut digits_reversed_len = digits_reversed.len();\n\
    \    let mut digits_reversed_reversed = digits_reversed.clone();\n    digits_reversed_reversed.reverse();\n\
    \    let mut digits_reversed_reversed_len = digits_reversed_reversed.len();\n\
    \    let mut digits_reversed_reversed_reversed = digits_reversed_reversed.clone();\n\
    \    digits_reversed_reversed_reversed.reverse();\n    let mut digits_reversed_reversed_reversed_len\
    \ = digits_reversed_reversed_reversed.len();\n    let mut digits_reversed_reversed_reversed_reversed\
    \ = digits_reversed_reversed_reversed.clone();\n    digits_reversed_reversed_reversed_reversed.reverse();\n\
    \    let mut digits_reversed_reversed_reversed_reversed_len = digits_reversed_reversed_reversed_reversed.len();\n\
    \    let mut digits_reversed_reversed_reversed_reversed_reversed = digits_reversed_reversed_reversed_reversed.clone();\n\
    \    digits_reversed_reversed_reversed_reversed_reversed.reverse();\n    let mut\
    \ digits_reversed_reversed_reversed_reversed_reversed_len = digits_reversed_reversed_reversed_reversed_reversed.len();\n\
    \    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed = digits_reversed_reversed_reversed_reversed_reversed.clone();\n\
    \    digits_reversed_reversed_reversed_reversed_reversed_reversed_len\n      \
    \  = digits_reversed_reversed_reversed_reversed_reversed_reversed.len();\n   \
    \ digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n    \
    \    = digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed.clone();\n\
    \    digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_len\n\
    \        = digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed.len();\n\
    \    digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \        = digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed.clone();\n\
    \    digits_reversed_reversed_reverse\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `digits_reversed_reversed_reversed_reversed_reversed_reversed_len`\
    \ in this scope\n  --> /tmp/tmp7yxv4shd.rs:36:5\n   |\n36 |     digits_reversed_reversed_reversed_reversed_reversed_reversed_len\n\
    \   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help:\
    \ a local variable with a similar name exists: `digits_reversed_reversed_reversed_reversed_reversed_reversed`\n\
    \nerror[E0425]: cannot find value `digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed`\
    \ in this scope\n  --> /tmp/tmp7yxv4shd.rs:38:5\n   |\n38 |     digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `digits_reversed_reversed_reversed_reversed_reversed_reversed`\n\
    \nerror[E0425]: cannot find value `digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed`\
    \ in this scope\n  --> /tmp/tmp7yxv4shd.rs:39:11\n   |\n39 |         = digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed.clone();\n\
    \   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `digits_reversed_reversed_reversed_reversed_reversed_reversed`\n\
    \nerror[E0425]: cannot find value `digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_len`\
    \ in this scope\n  --> /tmp/tmp7yxv4shd.rs:40:5\n   |\n40 |     digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_len\n\
    \   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `digits_reversed_reversed_reversed_reversed_reversed_reversed`\n\
    \nerror[E0425]: cannot find value `digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed`\
    \ in this scope\n  --> /tmp/tmp7yxv4shd.rs:41:11\n   |\n41 |         = digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed.len();\n\
    \   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_index = 0;\n\n   \
    \ while digits_len > 0 {\n        let mut digit = digits[digits_index];\n    \
    \    let mut digits_remaining = digits_len;\n\n        while digits_remaining\
    \ > 0 {\n            let mut digit = digits[digits_index];\n            digits_remaining\
    \ -= 1;\n\n            if digit < 10 {\n                result.push(String::from(\"\
    One\"));\n            } else if digit < 100 {\n                result.push(String::from(\"\
    Two\"));\n            } else if digit < 1000 {\n                result.push(String::from(\"\
    Three\"));\n            } else if digit < 10000 {\n                result.push(String::from(\"\
    Four\"));\n            } else if digit < 100000 {\n                result.push(String::from(\"\
    Five\"));\n            } else if digit < 1000000 {\n                result.push(String::from(\"\
    Six\"));\n            } else if digit < 10000000 {\n                result.push(String::from(\"\
    Seven\"));\n            } else if digit < 100000000 {\n                result.push(String::from(\"\
    Eight\"));\n            } else if digit < 1000000000 {\n                result.push(String::from(\"\
    Nine\"));\n            } else {\n                result.push(String::from(\"Ten\"\
    ));\n            }\n        }\n\n        digits_index += 1;\n    }\n\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6e8d92u1.rs:63:17\n\
    \   |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6e8d92u1.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6e8d92u1.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6e8d92u1.rs:64:25\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6e8d92u1.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6e8d92u1.rs:65:25\n   |\n65 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6e8d92u1.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6e8d92u1.rs:66:25\n   |\n66 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6e8d92u1.rs:67:17\n  \
    \ |\n67 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6e8d92u1.rs:67:25\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    let mut len = arr.len();\n    let mut i\
    \ = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n         \
    \   i += 1;\n        } else {\n            let mut j = i;\n            while j\
    \ < len && arr[j] < 1 || arr[j] > 9 {\n                j += 1;\n            }\n\
    \            swap(&mut arr[i..j], &mut arr[i..j]);\n            i += j - i;\n\
    \        }\n    }\n    arr.iter().map(|x| String::from(&x[..])).collect()\n}\n\
    \nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmp5tn5wlj4.rs:29:13\n\
    \   |\n29 |             swap(&mut arr[i..j], &mut arr[i..j]);\n   |          \
    \   ^^^^ not found in this scope\n   |\nhelp: consider importing one of these\
    \ items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5tn5wlj4.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5tn5wlj4.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5tn5wlj4.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5tn5wlj4.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5tn5wlj4.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5tn5wlj4.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5tn5wlj4.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5tn5wlj4.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5tn5wlj4.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5tn5wlj4.rs:42:25\n  "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = vec![];\n    let mut digits_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed = vec![];\n    let mut digits_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed = vec![];\n\
    \    let mut digits_reversed_reversed_reversed_reversed_reversed = vec![];\n \
    \   let mut digits_reversed_reversed_reversed_reversed_reversed_reversed = vec![];\n\
    \    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec![];\n    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmps44f1ubw.rs:37:151\n   |\n\
    37 |     let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec\n   |                                                                \
    \                                                                            \
    \           ^ help: add `;` here\n38 | }\n   | - unexpected token\n\nerror[E0423]:\
    \ expected value, found macro `vec`\n  --> /tmp/tmps44f1ubw.rs:37:148\n   |\n\
    37 | ...ed_reversed_reversed_reversed_reversed_reversed_reversed = vec\n   | \
    \                                                              ^^^ not a value\n\
    \   |\nhelp: use `!` to invoke the macro\n   |\n37 |     let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = vec!\n   |                                                               \
    \                                                                            \
    \            +\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmps44f1ubw.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmps44f1ubw.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmps44f1ubw.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps44f1ubw.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps44f1ubw.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmps44f1ubw.rs:44:25\n\
    \   |\n44 |     a"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    let mut len = arr.len();\n    let mut i\
    \ = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut temp = 0;\n\n    while\
    \ i < len {\n        j = i;\n        while j < len {\n            k = j;\n   \
    \         while k < len {\n                if arr[k] > arr[j] {\n            \
    \        temp = arr[k];\n                    arr[k] = arr[j];\n              \
    \      arr[j] = temp;\n                }\n                k += 1;\n          \
    \  }\n            j += 1;\n        }\n        i += 1;\n    }\n\n    let mut result\
    \ = vec![];\n    for i in arr {\n        result.push(String::from(&names[i]))\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpxku_290_.rs:44:35\n\
    \   |\n44 |         result.push(String::from(&names[i]))\n   |               \
    \                    ^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmpxku_290_.rs:51:17\n   |\n51 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxku_290_.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxku_290_.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxku_290_.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxku_290_.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxku_290_.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxku_290_.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxku_290_.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxku_290_.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxku_290_.rs:55:25\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scop"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n        let mut j\
    \ = i;\n        while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n  \
    \      }\n        swap(&mut arr[j], &mut arr[i]);\n        i += 1;\n    }\n  \
    \  arr.iter().map(|&x| String::from(x)).collect()\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmp0kp9m4ru.rs:29:9\n\
    \   |\n29 |         swap(&mut arr[j], &mut arr[i]);\n   |         ^^^^ not found\
    \ in this scope\n   |\nhelp: consider importing one of these items\n   |\n1  |\
    \ use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0kp9m4ru.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0kp9m4ru.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0kp9m4ru.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0kp9m4ru.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0kp9m4ru.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0kp9m4ru.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0kp9m4ru.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0kp9m4ru.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0kp9m4ru.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0kp9m4ru.rs:41:25\n\
    \   |\n41 |     ass"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    let mut result = vec![];\n    for num in arr {\n    \
    \    let num = num as usize;\n        let name = match num {\n            1 =>\
    \ \"One\",\n            2 => \"Two\",\n            3 => \"Three\",\n         \
    \   4 => \"Four\",\n            5 => \"Five\",\n            6 => \"Six\",\n  \
    \          7 => \"Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\"\
    ,\n            _ => return vec![],\n        };\n        result.push(name);\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpeyt2crrd.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeyt2crrd.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpeyt2crrd.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpeyt2crrd.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpeyt2crrd.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpeyt2crrd.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpeyt2crrd.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpeyt2crrd.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpeyt2crrd.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeyt2crrd.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpeyt2crrd.rs:34:5\n   |\n13 | fn by_length(arr: Vec<isize>)\
    \ -> Vec<String> {\n   |                                  ----------- expected\
    \ `Vec<String>` because of retur"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        if j == digits_len {\n            break;\n\
    \        }\n        let mut digit = digits[j];\n        let mut digits_len = digits.len();\n\
    \        while digit > 9 {\n            digits_len -= 1;\n            digit /=\
    \ 10;\n        }\n        let digit = digits_len + digit;\n        result.push(String::from(&digits[digit]));\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0sh9uike.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0sh9uike.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0sh9uike.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0sh9uike.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0sh9uike.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0sh9uike.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0sh9uike.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0sh9uike.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0sh9uike.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0sh9uike.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp0sh9uike.rs:35:34\n   |\n35 |         let digit = digits_len\
    \ + digit;\n   |                                  ^^^^^ expected `usize`, found\
    \ `isize`\n\nerror[E0277]: cann"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as usize).collect::<Vec<_>>();\n  \
    \  let mut len = arr.len();\n    let mut i = 0;\n    while i < len {\n       \
    \ if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n\n        let mut j = i;\n        while j < len {\n            if\
    \ arr[j] > arr[i] {\n                swap(&mut arr[j], &mut arr[i]);\n       \
    \     }\n            j += 1;\n        }\n\n        i += 1;\n    }\n\n    arr.iter().map(|x|\
    \ String::from(&x)).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpj1q1lghw.rs:30:17\n\
    \   |\n30 |                 swap(&mut arr[j], &mut arr[i]);\n   |            \
    \     ^^^^ not found in this scope\n   |\nhelp: consider importing one of these\
    \ items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpj1q1lghw.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj1q1lghw.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpj1q1lghw.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpj1q1lghw.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpj1q1lghw.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpj1q1lghw.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpj1q1lghw.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpj1q1lghw.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpj1q1lghw.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj1q1lghw.rs:47:25\n"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut i = 0;\n    while i\
    \ < arr.len() {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        result.push(String::from(&arr[i] -\
    \ 1));\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmps7m6zrm2.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps7m6zrm2.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps7m6zrm2.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmps7m6zrm2.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmps7m6zrm2.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmps7m6zrm2.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmps7m6zrm2.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmps7m6zrm2.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmps7m6zrm2.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps7m6zrm2.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<isize>` is not satisfied\n   --> /tmp/tmps7m6zrm2.rs:21:21\n\
    \    |\n21  |         result.push(String::from(&arr[i] - 1));\n    |         \
    \            ^^^^^^^^^^^^ the tra"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as usize).collect::<Vec<_>>();\n  \
    \  let mut reversed = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n\
    \        let mut j = i;\n        while j > 0 && arr[j - 1] > arr[j] {\n      \
    \      j -= 1;\n        }\n        reversed.push((arr[j] as usize - i) as usize);\n\
    \        i = j;\n    }\n\n    let mut i = 0;\n    while i < reversed.len() {\n\
    \        let mut j = i;\n        while j > 0 && reversed[j - 1] > reversed[j]\
    \ {\n            j -= 1;\n        }\n        reversed.splice(j, 1, String::from(\"\
    One\"));\n        i = j;\n    }\n\n    reversed\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphv5tdnyd.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphv5tdnyd.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphv5tdnyd.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphv5tdnyd.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphv5tdnyd.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphv5tdnyd.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphv5tdnyd.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphv5tdnyd.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphv5tdnyd.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphv5tdnyd.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0061]: this\
    \ function takes 2 arguments but 3 arguments were supplied\n    --> /tmp/tmphv5tdnyd.rs:36:18\n\
    \     |\n36   |         reversed.splice(j, 1, String::from(\"One\"));\n     |\
    \                  ^^^^^^ -"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n  \
    \  let mut one = String::from(\"One\");\n    let mut two = String::from(\"Two\"\
    );\n    let mut three = String::from(\"Three\");\n    let mut four = String::from(\"\
    Four\");\n    let mut five = String::from(\"Five\");\n    let mut six = String::from(\"\
    Six\");\n    let mut seven = String::from(\"Seven\");\n    let mut eight = String::from(\"\
    Eight\");\n    let mut nine = String::from(\"Nine\");\n\n    loop {\n        if\
    \ reversed.len() == 0 {\n            break;\n        }\n        let mut digit\
    \ = reversed.remove(0).unwrap();\n        if digit == 1 {\n            result.push(one);\n\
    \        } else if digit == 2 {\n            result.push(two);\n        } else\
    \ if digit == 3 {\n            result.push(three);\n        } else if digit ==\
    \ 4 {\n            result.push(four);\n        } else if digit == 5 {\n      \
    \      result.push(five);\n        } else if digit == 6 {\n            result.push(six);\n\
    \        } else if digit == 7 {\n            result.push(seven);\n        } else\
    \ if digit == 8 {\n            result.push(eight);\n        } else if digit ==\
    \ 9 {\n            result.push(nine);\n        } else {\n            break;\n\
    \        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmikef8sl.rs:64:17\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmikef8sl.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmikef8sl.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmikef8sl.rs:65:25\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmikef8sl.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmikef8sl.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmikef8sl.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmikef8sl.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmikef8sl.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmikef8sl.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `unwrap` found for type `isize` in the current scope\n  --> /tmp/tmpmikef8sl.rs:35:44\n\
    \   |\n35 |         let mut digit = reversed.remove(0).unwrap();\n   |       \
    \                   "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n            j\
    \ += 1\n        }\n        result.push(by_length(arr.split_off(j).reverse()));\n\
    \        i = j;\n    }\n    result.push(by_length(arr.split_off(i).reverse()));\n\
    \    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpiy5ddxwy.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiy5ddxwy.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpiy5ddxwy.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpiy5ddxwy.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpiy5ddxwy.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpiy5ddxwy.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpiy5ddxwy.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpiy5ddxwy.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpiy5ddxwy.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpiy5ddxwy.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpiy5ddxwy.rs:24:31\n   |\n24 |         result.push(by_length(arr.split_off(j).reverse()));\n\
    \   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected stru"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let len = arr[i] - 1;\n        if len < 1 || len > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        let mut j = i;\n        while j > 0\
    \ && arr[j - 1] > len {\n            j -= 1;\n        }\n        result.push(by_length(arr.subslice(i,\
    \ j)));\n        i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppcn7my7w.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppcn7my7w.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppcn7my7w.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppcn7my7w.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppcn7my7w.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppcn7my7w.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppcn7my7w.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppcn7my7w.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppcn7my7w.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppcn7my7w.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `subslice` found for struct `Vec<isize>` in the current scope\n  --> /tmp/tmppcn7my7w.rs:29:35\n\
    \   |\n29 |         result.push(by_length(arr.subslice(i, j)));\n   |        \
    \          "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    arr.iter().map(|x| {\n        match x {\n           \
    \ 1 => \"One\",\n            2 => \"Two\",\n            3 => \"Three\",\n    \
    \        4 => \"Four\",\n            5 => \"Five\",\n            6 => \"Six\"\
    ,\n            7 => \"Seven\",\n            8 => \"Eight\",\n            9 =>\
    \ \"Nine\",\n            _ => panic!(\"Invalid number: {}\", x),\n        }\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpelkpvqq6.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpelkpvqq6.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpelkpvqq6.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpelkpvqq6.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpelkpvqq6.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpelkpvqq6.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpelkpvqq6.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpelkpvqq6.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpelkpvqq6.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpelkpvqq6.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmpelkpvqq6.rs:30:8\n   |\n30 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n\n    for i in arr.iter().rev() {\n        let index\
    \ = i as usize;\n        let name = match index {\n            1 => \"One\",\n\
    \            2 => \"Two\",\n            3 => \"Three\",\n            4 => \"Four\"\
    ,\n            5 => \"Five\",\n            6 => \"Six\",\n            7 => \"\
    Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\",\n          \
    \  _ => return vec![],\n        };\n        result.push(name);\n    }\n\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfycyj9sv.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfycyj9sv.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfycyj9sv.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfycyj9sv.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfycyj9sv.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfycyj9sv.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfycyj9sv.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfycyj9sv.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfycyj9sv.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfycyj9sv.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpfycyj9sv.rs:37:5\n   |\n13 | fn by_length(arr: Vec<isize>)\
    \ -> Vec<String> {\n   |                                  ----------- expected\
    \ `Vec<String>` because of retur"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ {\n        if x < 1 || x > 9 {\n            0\n        } else {\n          \
    \  x\n        }\n    });\n    arr.reverse();\n    arr.iter().map(|x| {\n     \
    \   match x {\n            x if x < 10 => \"One\".to_string(),\n            x\
    \ if x < 20 => \"Two\".to_string(),\n            x if x < 30 => \"Three\".to_string(),\n\
    \            x if x < 40 => \"Four\".to_string(),\n            x if x < 50 =>\
    \ \"Five\".to_string(),\n            x if x < 60 => \"Six\".to_string(),\n   \
    \         x if x < 70 => \"Seven\".to_string(),\n            x if x < 80 => \"\
    Eight\".to_string(),\n            x if x < 90 => \"Nine\".to_string(),\n     \
    \       _ => panic!(\"Invalid number: {}\", x),\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprmxdjey9.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprmxdjey9.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprmxdjey9.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprmxdjey9.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprmxdjey9.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprmxdjey9.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprmxdjey9.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprmxdjey9.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprmxdjey9.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprmxdjey9.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmprmxdjey9.rs:19:16\n   |\n19 |         if x < 1 || x > 9\
    \ {\n   |                ^\n   |                |\n   |                expected\
    \ `&isize`, found integer\n   |      "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_unstable_by_key(|x|\
    \ x.checked_div(10).unwrap());\n    arr.sort_unstable_by_key(|x| x.checked_mul((10\
    \ as isize)).unwrap());\n    arr.iter().map(|x| {\n        match x {\n       \
    \     0 => \"Zero\".to_string(),\n            1 => \"One\".to_string(),\n    \
    \        2 => \"Two\".to_string(),\n            3 => \"Three\".to_string(),\n\
    \            4 => \"Four\".to_string(),\n            5 => \"Five\".to_string(),\n\
    \            6 => \"Six\".to_string(),\n            7 => \"Seven\".to_string(),\n\
    \            8 => \"Eight\".to_string(),\n            9 => \"Nine\".to_string(),\n\
    \            _ => panic!(\"Invalid number {:?}\", x),\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppkq4v9fk.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppkq4v9fk.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppkq4v9fk.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppkq4v9fk.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppkq4v9fk.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppkq4v9fk.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppkq4v9fk.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppkq4v9fk.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppkq4v9fk.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppkq4v9fk.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nwarning: unnecessary\
    \ parentheses around method argument\n  --> /tmp/tmppkq4v9fk.rs:19:48\n   |\n\
    19 |     arr.sort_unstable_by_key(|x| x.checked_mul((10 as isize)).unwrap());\n\
    \   |                                 "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = vec![];\n    let mut digits_len =\
    \ arr.len();\n    let mut i = 0;\n    while i < digits_len {\n        let digit\
    \ = arr[i];\n        if digit < 10 {\n            digits.push(digit);\n      \
    \  } else {\n            digits.push(digit - 10);\n            digits.push((digit\
    \ % 10) + 1);\n        }\n        i += 1;\n    }\n    let mut i = 0;\n    while\
    \ i < digits_len {\n        let digit = digits[i];\n        let index = digit\
    \ - 1;\n        let mut digit = digit;\n        let mut digit = digit;\n     \
    \   let mut digit = digit;\n        let mut digit = digit;\n        let mut digit\
    \ = digit;\n        let mut digit = digit;\n        let mut digit = digit;\n \
    \       let mut digit = digit;\n        let mut digit = digit;\n        let mut\
    \ digit = digit;\n        let mut digit = digit;\n        let mut digit = digit;\n\
    \        let mut digit = digit;\n        let mut digit = digit;\n        let mut\
    \ digit = digit;\n        let mut digit = digit;\n        let mut digit = digit;\n\
    \        let mut digit = digit;\n        let mut digit = digit;\n        let mut\
    \ digit = digit;\n        let mut digit = digit;\n        let mut digit = digit;\n\
    \        let mut digit = digit;\n        let mut digit = digit;\n        let mut\
    \ digit = digit;\n        let mut digit = digit;\n        let mut digit = digit;\n\
    \        let mut digit = digit;\n        let mut digit = digit;\n        let mut\
    \ digit = digit;\n        let mut digit = digit;\n        let mut digit = digit;\n\
    \        let mut digit = digit;\n        let mut digit = digit;\n        let mut\
    \ digit = digit;\n        let mut digit = digit;\n        let mut digit = digit;\n\
    \        let mut digit = digit;\n        let mut digit = digit;\n        let mut\
    \ digit = digit;\n        let mut digit = digit;\n        let mut digit = digit;\n\
    \        let mut digit = digit;\n        let mut digit = digit;\n        let mut\
    \ digit = digit;\n        let mut digit = digit;\n        let mut digit = digit;\n\
    \        let mut digit = digit;\n        let mut digit = digit;\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmppe3r4i1v.rs:93:3\n\
    \   |\n13 | fn by_length(arr: Vec<isize>) -> Vec<String> {\n   |             \
    \                                 - unclosed delimiter\n...\n32 |     while i\
    \ < digits_len {\n   |                          - this delimiter might not be\
    \ properly closed...\n...\n84 | }\n   | - ...as it matches this but it has different\
    \ indentation\n...\n93 | }\n   |   ^\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmppe3r4i1v.rs:88:17\n   |\n88 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmppe3r4i1v.rs:88:25\n \
    \  |\n88 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppe3r4i1v.rs:89:17\n   |\n89 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppe3r4i1v.rs:89:25\n   |\n89 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppe3r4i1v.rs:90:17\n   |\n90 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppe3r4i1v.rs:90:25\n   |\n90 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppe3r4i1v.rs:91:17\n  \
    \ |\n91 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppe3r4i1v.rs:91:25\n   |\n91 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppe3r4i1v.rs:92:17\n   |\n92 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not fo"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ {\n        let mut i = x;\n        loop {\n            i += 1;\n           \
    \ if i >= 10 {\n                break;\n            }\n        }\n        i\n\
    \    });\n    let mut result = vec![];\n    for &i in arr {\n        let mut s\
    \ = String::from(\"One\");\n        if i < 10 {\n            s.push_str(&format!(\"\
    0{}\", i));\n        } else {\n            s.push_str(&format!(\"{}\", i));\n\
    \        }\n        result.push(s);\n    }\n    result\n}\n\nfn main() {\n   \
    \ let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmps77jmf5t.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps77jmf5t.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmps77jmf5t.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmps77jmf5t.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmps77jmf5t.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmps77jmf5t.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmps77jmf5t.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmps77jmf5t.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmps77jmf5t.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmps77jmf5t.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0368]: binary\
    \ assignment operation `+=` cannot be applied to type `&isize`\n  --> /tmp/tmps77jmf5t.rs:21:13\n\
    \   |\n21 |             i += 1;\n   |             -^^^^^\n   |             |\n\
    \   |             cann"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n        let mut j\
    \ = i;\n        while j < len {\n            if arr[j] == arr[i] {\n         \
    \       j += 1;\n                continue;\n            }\n            if arr[j]\
    \ > arr[i] {\n                swap(&mut arr[j], &mut arr[i]);\n            }\n\
    \            j += 1;\n        }\n        i += 1;\n    }\n    arr.iter().map(|x|\
    \ String::from(x)).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpadr9vp1s.rs:32:17\n\
    \   |\n32 |                 swap(&mut arr[j], &mut arr[i]);\n   |            \
    \     ^^^^ not found in this scope\n   |\nhelp: consider importing one of these\
    \ items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpadr9vp1s.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpadr9vp1s.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpadr9vp1s.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpadr9vp1s.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpadr9vp1s.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpadr9vp1s.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpadr9vp1s.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpadr9vp1s.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpadr9vp1s.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpadr9vp1s.rs:47:25\n"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n \
    \       let len = arr[i] - 1;\n        if len < 1 || len > 9 {\n            i\
    \ += 1;\n            continue;\n        }\n\n        let mut j = i;\n        while\
    \ j < arr.len() {\n            if arr[j] == len {\n                result.push(by_name(len));\n\
    \                break;\n            }\n            j += 1\n        }\n      \
    \  i += 1;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_name` in this scope\n  --> /tmp/tmpdms7ulcz.rs:30:29\n\
    \   |\n30 |                 result.push(by_name(len));\n   |                 \
    \            ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpdms7ulcz.rs:43:17\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpdms7ulcz.rs:43:25\n \
    \  |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdms7ulcz.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdms7ulcz.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdms7ulcz.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdms7ulcz.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdms7ulcz.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdms7ulcz.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdms7ulcz.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdms7ulcz.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n  \
    \  let mut index = 0;\n    while index < reversed.len() {\n        let digit =\
    \ reversed[index];\n        if digit < 10 {\n            result.push(String::from(\"\
    One\"));\n        } else if digit < 100 {\n            result.push(String::from(\"\
    Two\"));\n        } else if digit < 1000 {\n            result.push(String::from(\"\
    Three\"));\n        } else if digit < 10000 {\n            result.push(String::from(\"\
    Four\"));\n        } else if digit < 100000 {\n            result.push(String::from(\"\
    Five\"));\n        } else if digit < 1000000 {\n            result.push(String::from(\"\
    Six\"));\n        } else if digit < 10000000 {\n            result.push(String::from(\"\
    Seven\"));\n        } else if digit < 100000000 {\n            result.push(String::from(\"\
    Eight\"));\n        } else if digit < 1000000000 {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            result.push(String::from(\"Ten\"));\n\
    \        }\n        index += 1;\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8y6a0k5m.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8y6a0k5m.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8y6a0k5m.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8y6a0k5m.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8y6a0k5m.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8y6a0k5m.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8y6a0k5m.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8y6a0k5m.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8y6a0k5m.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8y6a0k5m.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut j = i;\n        while j < arr.len() {\n          \
    \  if arr[j] < 1 || arr[j] > 9 {\n                j += 1;\n                continue;\n\
    \            }\n            if arr[j] == arr[i] {\n                result.push(by_length(arr.iter().skip(j).rev().collect()));\n\
    \                i += 1;\n                break;\n            }\n            j\
    \ += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpe2srl437.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe2srl437.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe2srl437.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpe2srl437.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpe2srl437.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpe2srl437.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpe2srl437.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpe2srl437.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpe2srl437.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe2srl437.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<isize>` cannot be built from an iterator over elements of type\
    \ `&isize`\n  --> /tmp/tmpe2srl437.rs:31:39\n   |\n31 |                 result.push(by_length(arr.iter().skip(j).re"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        if j == digits_len {\n            break;\n\
    \        }\n        let mut digit = digits[j];\n        digits[j] = digits_len\
    \ - j - 1;\n        result.push(String::from(&digits[digit]));\n        i += 1;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvr4scdqx.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvr4scdqx.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvr4scdqx.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvr4scdqx.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvr4scdqx.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvr4scdqx.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvr4scdqx.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvr4scdqx.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvr4scdqx.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvr4scdqx.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpvr4scdqx.rs:30:21\n   |\n30 |         digits[j] = digits_len\
    \ - j - 1;\n   |                     ^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `usize`\n\nerror[E0277]: the "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n \
    \       let len = arr[i] - 1;\n        if len > 9 {\n            i += 1;\n   \
    \         continue;\n        }\n\n        result.push(String::from(&names[len]));\n\
    \        i += 1;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpjvkf3_25.rs:27:35\n\
    \   |\n27 |         result.push(String::from(&names[len]));\n   |            \
    \                       ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjvkf3_25.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjvkf3_25.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjvkf3_25.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjvkf3_25.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjvkf3_25.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjvkf3_25.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjvkf3_25.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjvkf3_25.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjvkf3_25.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjvkf3_25.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this s"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as isize).collect();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    arr.iter().map(|x| {\n        match x {\n           \
    \ 1 => \"One\".to_string(),\n            2 => \"Two\".to_string(),\n         \
    \   3 => \"Three\".to_string(),\n            4 => \"Four\".to_string(),\n    \
    \        5 => \"Five\".to_string(),\n            6 => \"Six\".to_string(),\n \
    \           7 => \"Seven\".to_string(),\n            8 => \"Eight\".to_string(),\n\
    \            9 => \"Nine\".to_string(),\n            _ => panic!(\"Unexpected\
    \ number {:?}\", x),\n        }\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplg56xyv5.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplg56xyv5.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplg56xyv5.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplg56xyv5.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplg56xyv5.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplg56xyv5.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplg56xyv5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplg56xyv5.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplg56xyv5.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplg56xyv5.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0282]: type\
    \ annotations needed\n  --> /tmp/tmplg56xyv5.rs:19:5\n   |\n18 |     let mut arr\
    \ = arr.into_iter().map(|x| x as isize).collect();\n   |         ------- consider\
    \ giving `arr` a type\n19 |     arr.s"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n  \
    \  let mut i = 0;\n    while i < reversed.len() {\n        let mut j = i;\n  \
    \      while j < reversed.len() && reversed[j] < 10 {\n            j += 1\n  \
    \      }\n        if j == reversed.len() {\n            break;\n        }\n  \
    \      let mut k = j;\n        while reversed[k] > 9 {\n            k += 1;\n\
    \        }\n        result.push(by_digit(reversed[i], reversed[k]));\n       \
    \ i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmpdl2k0giv.rs:33:21\n\
    \   |\n33 |         result.push(by_digit(reversed[i], reversed[k]));\n   |   \
    \                  ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmpdl2k0giv.rs:41:17\n   |\n41 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdl2k0giv.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdl2k0giv.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdl2k0giv.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdl2k0giv.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdl2k0giv.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdl2k0giv.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdl2k0giv.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdl2k0giv.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdl2k0giv.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in th"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    arr.sort_unstable();\n\
    \    arr.iter().map(|x| {\n        match x {\n            1 => \"One\",\n    \
    \        2 => \"Two\",\n            3 => \"Three\",\n            4 => \"Four\"\
    ,\n            5 => \"Five\",\n            6 => \"Six\",\n            7 => \"\
    Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\",\n          \
    \  _ => panic!(\"Invalid number in array: {}\", x),\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp07n4hrpd.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp07n4hrpd.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp07n4hrpd.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp07n4hrpd.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp07n4hrpd.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp07n4hrpd.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp07n4hrpd.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp07n4hrpd.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp07n4hrpd.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp07n4hrpd.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmp07n4hrpd.rs:29:8\n   |\n29 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n\
    \    let mut digits_reversed_len = digits_reversed.len();\n    let mut digits_reversed_reversed\
    \ = digits_reversed.iter().cloned().rev().collect::<Vec<_>>();\n    let mut digits_reversed_reversed_len\
    \ = digits_reversed_reversed.len();\n    let mut digits_reversed_reversed_reversed\
    \ = digits_reversed_reversed.iter().cloned().rev().collect::<Vec<_>>();\n    let\
    \ mut digits_reversed_reversed_reversed_len = digits_reversed_reversed_reversed.len();\n\
    \    let mut digits_reversed_reversed_reversed_reversed = digits_reversed_reversed_reversed.iter().cloned().rev().collect::<Vec<_>>();\n\
    \    let mut digits_reversed_reversed_reversed_reversed_len = digits_reversed_reversed_reversed_reversed.len();\n\
    \    let mut digits_reversed_reversed_reversed_reversed_reversed = digits_reversed_reversed_reversed_reversed.iter().cloned().rev().collect::<Vec<_>>();\n\
    \    let mut digits_reversed_reversed_reversed_reversed_reversed_len = digits_reversed_reversed_reversed_reversed_reversed.len();\n\
    \    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed = digits_reversed_reversed_reversed_reversed_reversed.iter().cloned().rev().collect::<Vec<_>>();\n\
    \    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_len\
    \ = digits_reversed_reversed_reversed_reversed_reversed_reversed.len();\n    let\
    \ mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed =\
    \ digits_reversed_reversed_reversed_reversed_reversed_reversed.iter().cloned().rev().collect::<Vec<_>>();\n\
    \    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_len\
    \ = digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed.len();\n\
    \    let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = digit\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp7s_1wk86.rs:34:99\n   |\n\
    34 |     let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = digit\n   |                                                              \
    \                                     ^ help: add `;` here\n35 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `digit` in this scope\n  --> /tmp/tmp7s_1wk86.rs:34:94\n\
    \   |\n34 |     let mut digits_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = digit\n   |                                                              \
    \                                ^^^^^ help: a local variable with a similar name\
    \ exists: `digits`\n\nerror[E0425]: cannot find value `left` in this scope\n \
    \ --> /tmp/tmp7s_1wk86.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7s_1wk86.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7s_1wk86.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7s_1wk86.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7s_1wk86.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7s_1wk86.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7s_1wk86.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7s_1wk86."
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_reversed = digits.clone();\n\
    \    digits_reversed.reverse();\n\n    while digits_len > 0 {\n        let mut\
    \ digit = digits_reversed.pop();\n        let mut digits_len = digits_len.saturating_sub(1);\n\
    \        result.push(String::from(&digits[digits_len]));\n    }\n\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb6jj_jl2.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb6jj_jl2.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb6jj_jl2.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb6jj_jl2.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb6jj_jl2.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb6jj_jl2.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpb6jj_jl2.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpb6jj_jl2.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpb6jj_jl2.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb6jj_jl2.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpb6jj_jl2.rs:27:21\n\
    \    |\n27  |         result.push(String::from(&digits[digits_len]));\n    | \
    \                    ^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.into_iter().map(|x| x as isize).collect::<Vec<_>>();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    arr.iter().map(|x| {\n        match x {\n           \
    \ 1 => \"One\",\n            2 => \"Two\",\n            3 => \"Three\",\n    \
    \        4 => \"Four\",\n            5 => \"Five\",\n            6 => \"Six\"\
    ,\n            7 => \"Seven\",\n            8 => \"Eight\",\n            9 =>\
    \ \"Nine\",\n            _ => panic!(\"Invalid number: {}\", x),\n        }\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgomez3mk.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgomez3mk.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgomez3mk.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgomez3mk.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgomez3mk.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgomez3mk.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgomez3mk.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgomez3mk.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgomez3mk.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgomez3mk.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmpgomez3mk.rs:33:8\n   |\n33 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut i = 0;\n    while i\
    \ < arr.len() {\n        let mut j = i;\n        while j < arr.len() && arr[j]\
    \ < 10 {\n            j += 1\n        }\n        if j == i {\n            result.push(String::from(\"\
    One\"));\n            i += 1;\n        } else {\n            result.push(String::from(&arr[i\
    \ - j]));\n            i += j - i;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb16jkgcc.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb16jkgcc.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb16jkgcc.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb16jkgcc.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb16jkgcc.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb16jkgcc.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpb16jkgcc.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpb16jkgcc.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpb16jkgcc.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb16jkgcc.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpb16jkgcc.rs:25:25\n\
    \    |\n25  |             result.push(String::from(&arr[i - j]));\n    |     \
    \                    ^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    arr.iter().map(|&x| {\n        match x {\n          \
    \  1 => \"One\",\n            2 => \"Two\",\n            3 => \"Three\",\n   \
    \         4 => \"Four\",\n            5 => \"Five\",\n            6 => \"Six\"\
    ,\n            7 => \"Seven\",\n            8 => \"Eight\",\n            9 =>\
    \ \"Nine\",\n            _ => panic!(\"invalid number in array: {}\", x),\n  \
    \      }\n    }).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw6yfu345.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw6yfu345.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw6yfu345.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw6yfu345.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw6yfu345.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw6yfu345.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw6yfu345.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw6yfu345.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw6yfu345.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw6yfu345.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmpw6yfu345.rs:30:8\n   |\n30 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n        let mut j\
    \ = i;\n        while j < len {\n            if arr[j] == arr[i] {\n         \
    \       arr.swap(i, j);\n                i += 1;\n                j += 1;\n  \
    \              continue;\n            }\n            j += 1\n        }\n     \
    \   i += 1;\n    }\n    arr.iter().map(|x| String::from(&x[..])).collect()\n}\n\
    \nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpkuk0jd02.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkuk0jd02.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkuk0jd02.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkuk0jd02.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkuk0jd02.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkuk0jd02.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkuk0jd02.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkuk0jd02.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkuk0jd02.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkuk0jd02.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0608]: cannot\
    \ index into a value of type `&isize`\n  --> /tmp/tmpkuk0jd02.rs:37:38\n   |\n\
    37 |     arr.iter().map(|x| String::from(&x[..])).collect()\n   |            \
    \                          ^^^^^\n\nerror"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n  \
    \  let mut i = 0;\n    while i < reversed.len() {\n        let mut j = i;\n  \
    \      while j < reversed.len() && reversed[j] < 10 {\n            j += 1\n  \
    \      }\n        if j == reversed.len() {\n            break;\n        }\n  \
    \      let mut digit = reversed[j];\n        while digit > 9 {\n            digit\
    \ /= 10;\n        }\n        result.push(String::from(&format!(\"{}\", digits[digit].to_string())));\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdulf57or.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdulf57or.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdulf57or.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdulf57or.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdulf57or.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdulf57or.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdulf57or.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdulf57or.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdulf57or.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdulf57or.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the type\
    \ `[isize]` cannot be indexed by `isize`\n  --> /tmp/tmpdulf57or.rs:33:49\n  \
    \ |\n33 |         result.push(String::from(&format!(\"{}\", digits[digit].to_string())));\n\
    \   |                      "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n            j\
    \ += 1\n        }\n        if j == i {\n            break;\n        }\n      \
    \  let mut reversed = vec![];\n        reversed.extend_from_slice(&arr[i..j]);\n\
    \        reversed.extend_from_slice(&arr[j..]);\n        reversed.reverse();\n\
    \        let mut reversed_str = String::new();\n        for &s in reversed {\n\
    \            reversed_str.push_str(&names[s]);\n        }\n        result.push(reversed_str);\n\
    \        i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpdq1l8xr8.rs:33:36\n\
    \   |\n33 |             reversed_str.push_str(&names[s]);\n   |              \
    \                      ^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmpdq1l8xr8.rs:43:17\n   |\n43 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdq1l8xr8.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdq1l8xr8.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdq1l8xr8.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdq1l8xr8.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdq1l8xr8.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdq1l8xr8.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdq1l8xr8.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdq1l8xr8.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdq1l8xr8.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this sc"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut reversed\
    \ = vec![];\n\n    while arr.len() > 0 {\n        let mut cur = arr.iter().cloned().collect::<Vec<_>>();\n\
    \        let mut cur = cur.iter().cloned().collect::<Vec<_>>();\n\n        let\
    \ mut i = 0;\n        while i < cur.len() {\n            let mut j = i;\n    \
    \        while j < cur.len() {\n                if cur[j] < 10 {\n           \
    \         cur[j] = \"One\".to_string();\n                } else if cur[j] < 100\
    \ {\n                    cur[j] = \"Two\".to_string();\n                } else\
    \ if cur[j] < 1000 {\n                    cur[j] = \"Three\".to_string();\n  \
    \              } else if cur[j] < 10000 {\n                    cur[j] = \"Four\"\
    .to_string();\n                } else if cur[j] < 100000 {\n                 \
    \   cur[j] = \"Five\".to_string();\n                } else if cur[j] < 1000000\
    \ {\n                    cur[j] = \"Six\".to_string();\n                } else\
    \ if cur[j] < 10000000 {\n                    cur[j] = \"Seven\".to_string();\n\
    \                } else if cur[j] < 100000000 {\n                    cur[j] =\
    \ \"Eight\".to_string();\n                } else if cur[j] < 1000000000 {\n  \
    \                  cur[j] = \"Nine\".to_string();\n                } else {\n\
    \                    cur[j] = \"Ten\".to_string();\n                }\n      \
    \          j += 1;\n            }\n            i += 1;\n        }\n        reversed.extend(cur.clone());\n\
    \    }\n\n    reversed\n}\n\nfn main() {\n    let candidate = by_length;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpl7h0khfz.rs:62:17\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl7h0khfz.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl7h0khfz.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpl7h0khfz.rs:63:25\n\
    \   |\n63 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpl7h0khfz.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl7h0khfz.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpl7h0khfz.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpl7h0khfz.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl7h0khfz.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl7h0khfz.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpl7h0khfz.rs:30:30\n   |\n30 |                     cur[j]\
    \ = \"One\".to_string();\n   |                              ^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found struct `Str"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.into_iter().map(|x| x as isize).collect();\n    arr.sort_unstable();\n\
    \    let mut res = vec![];\n    for i in arr.iter() {\n        let mut s = String::new();\n\
    \        if i > 9 {\n            s.push_str(&format!(\"{}\", i));\n        } else\
    \ {\n            s.push_str(&format!(\"{}\", i));\n            s.push_str(&format!(\"\
    {}\", &by_length_digits[i - 10]));\n        }\n        res.push(s);\n    }\n \
    \   res\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `by_length_digits` in this scope\n  -->\
    \ /tmp/tmpw2b6zg55.rs:26:40\n   |\n26 |             s.push_str(&format!(\"{}\"\
    , &by_length_digits[i - 10]));\n   |                                        ^^^^^^^^^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw2b6zg55.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw2b6zg55.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw2b6zg55.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw2b6zg55.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw2b6zg55.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw2b6zg55.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw2b6zg55.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw2b6zg55.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw2b6zg55.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw2b6zg55.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |    "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut reversed = arr\n        .iter()\n   \
    \     .cloned()\n        .enumerate()\n        .map(|(i, x)| (i, x))\n       \
    \ .collect::<Vec<_>>();\n    reversed.sort_by_key(|&(i, _)| i);\n    for i in\
    \ 0..arr.len() {\n        let index = reversed[i];\n        let value = arr[i];\n\
    \        if index == i {\n            result.push(String::from(\"One\"));\n  \
    \      } else if index == i + 1 {\n            result.push(String::from(\"Two\"\
    ));\n        } else if index == i + 2 {\n            result.push(String::from(\"\
    Three\"));\n        } else if index == i + 3 {\n            result.push(String::from(\"\
    Four\"));\n        } else if index == i + 4 {\n            result.push(String::from(\"\
    Five\"));\n        } else if index == i + 5 {\n            result.push(String::from(\"\
    Six\"));\n        } else if index == i + 6 {\n            result.push(String::from(\"\
    Seven\"));\n        } else if index == i + 7 {\n            result.push(String::from(\"\
    Eight\"));\n        } else if index == i + 8 {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            result.push(String::from(format!(\"{}\"\
    , value)));\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcnhghppl.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcnhghppl.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcnhghppl.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcnhghppl.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcnhghppl.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcnhghppl.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcnhghppl.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcnhghppl.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcnhghppl.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcnhghppl.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpcnhghppl.rs:29:21\n   |\n29 |         if index == i {\n\
    \   |                     ^ expected tuple, found `usize`\n   |\n   = note: expected\
    \ tuple `(usize, isize)`\n      "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut reversed\
    \ = vec![];\n    let mut digits = vec![];\n    let mut i = 0;\n    while i < arr.len()\
    \ {\n        let mut j = i;\n        while j > 0 && arr[j - 1] > arr[j] {\n  \
    \          j -= 1;\n        }\n        reversed.push(arr[j]);\n        digits.push(String::from(&arr[j].to_string()));\n\
    \        i = j;\n    }\n    for i in 0..digits.len() {\n        arr[i] = reversed[i];\n\
    \    }\n    arr\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppfx35udy.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppfx35udy.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppfx35udy.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppfx35udy.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppfx35udy.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppfx35udy.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppfx35udy.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppfx35udy.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppfx35udy.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppfx35udy.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmppfx35udy.rs:34:5\n   |\n13 | fn by_length(arr: Vec<isize>)\
    \ -> Vec<String> {\n   |                                  ----------- expected\
    \ `Vec<String>` because of retur"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    let mut reversed = vec![];\n    let mut\
    \ digits = vec![];\n    let mut i = 0;\n\n    while i < arr.len() {\n        let\
    \ mut j = i;\n        let mut digit = arr[i];\n        while j > 0 && digit >\
    \ 9 {\n            reversed.push((digit % 10).to_string());\n            digits\
    \ += vec![\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\"];\n            digit /= 10;\n            j -= 1;\n     \
    \   }\n        reversed.push((digit % 10).to_string());\n        digits += vec![\"\
    One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\",\
    \ \"Nine\"];\n        i += 1;\n    }\n\n    for digit in reversed {\n        arr.push(digits.remove(digit).unwrap());\n\
    \    }\n\n    arr\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpm26msiwq.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm26msiwq.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm26msiwq.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpm26msiwq.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpm26msiwq.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpm26msiwq.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpm26msiwq.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpm26msiwq.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpm26msiwq.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm26msiwq.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0368]: binary\
    \ assignment operation `+=` cannot be applied to type `Vec<_>`\n  --> /tmp/tmpm26msiwq.rs:28:13\n\
    \   |\n28 |             digits += vec![\"One\", \"Two\", \"Three\", \"Four\",\
    \ \"Five\", \"Six\", \"Seven\", \"E"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    arr.sort_unstable_by_key(|x| {\n       \
    \ match x {\n            1 => 1,\n            2 => 2,\n            3 => 3,\n \
    \           4 => 4,\n            5 => 5,\n            6 => 6,\n            7 =>\
    \ 7,\n            8 => 8,\n            9 => 9,\n            _ => unreachable!(),\n\
    \        }\n    });\n    arr.iter().map(|x| {\n        match x {\n           \
    \ 1 => \"One\",\n            2 => \"Two\",\n            3 => \"Three\",\n    \
    \        4 => \"Four\",\n            5 => \"Five\",\n            6 => \"Six\"\
    ,\n            7 => \"Seven\",\n            8 => \"Eight\",\n            9 =>\
    \ \"Nine\",\n            _ => unreachable!(),\n        }\n    }).collect()\n}\n\
    \nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5slx5p5h.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5slx5p5h.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5slx5p5h.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5slx5p5h.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5slx5p5h.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5slx5p5h.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5slx5p5h.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5slx5p5h.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5slx5p5h.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5slx5p5h.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmp5slx5p5h.rs:46:8\n   |\n46 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as isize).collect::<Vec<_>>();\n  \
    \  arr.sort_unstable();\n    arr.reverse();\n    arr.iter().map(|x| {\n      \
    \  match x {\n            0 => \"Zero\",\n            1 => \"One\",\n        \
    \    2 => \"Two\",\n            3 => \"Three\",\n            4 => \"Four\",\n\
    \            5 => \"Five\",\n            6 => \"Six\",\n            7 => \"Seven\"\
    ,\n            8 => \"Eight\",\n            9 => \"Nine\",\n            _ => panic!(\"\
    Invalid number: {}\", x),\n        }\n    }).collect()\n}\n\nfn main() {\n   \
    \ let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3pn8sihl.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3pn8sihl.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3pn8sihl.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3pn8sihl.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3pn8sihl.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3pn8sihl.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3pn8sihl.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3pn8sihl.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3pn8sihl.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3pn8sihl.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmp3pn8sihl.rs:35:8\n   |\n35 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut reversed = arr.rev();\n    let mut digits\
    \ = vec![];\n    let mut digits_map = vec![];\n    let mut i = 0;\n    while i\
    \ < reversed.len() {\n        let digit = reversed[i] - 1;\n        digits.push(digit);\n\
    \        digits_map.push(digit);\n        i += 1;\n    }\n    let mut j = 0;\n\
    \    while j < digits_map.len() {\n        let digit = digits_map[j];\n      \
    \  let name = digits_to_name(digit);\n        result.append(name);\n        j\
    \ += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `digits_to_name` in this scope\n  -->\
    \ /tmp/tmpgl5u73b8.rs:31:20\n   |\n31 |         let name = digits_to_name(digit);\n\
    \   |                    ^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgl5u73b8.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgl5u73b8.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgl5u73b8.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgl5u73b8.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgl5u73b8.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgl5u73b8.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgl5u73b8.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgl5u73b8.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgl5u73b8.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgl5u73b8.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this s"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    let mut j = 0;\n    let mut k = arr.len() - 1;\n\n  \
    \  while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n\
    \            continue;\n        }\n\n        j = i;\n        while j > 0 && arr[j\
    \ - 1] > arr[j] {\n            j -= 1;\n        }\n\n        if j == i {\n   \
    \         i += 1;\n            continue;\n        }\n\n        let mut tmp = arr[i];\n\
    \        arr[i] = arr[j];\n        arr[j] = tmp;\n\n        i += 1;\n        j\
    \ -= 1;\n    }\n\n    let mut result = vec![];\n    for i in 0..arr.len() {\n\
    \        result.push(String::from(&arr[i]));\n    }\n\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp5s2dj4kh.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5s2dj4kh.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5s2dj4kh.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5s2dj4kh.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5s2dj4kh.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5s2dj4kh.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5s2dj4kh.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5s2dj4kh.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5s2dj4kh.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5s2dj4kh.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmp5s2dj4kh.rs:50:21\n\
    \    |\n50  |         result.push(String::from(&arr[i]));\n    |             \
    \        ^^^^^^^^^^^^ the trait "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n\n    for n in arr {\n        if n < 1 || n > 9 {\n\
    \            continue;\n        }\n\n        let mut digit = String::from(\"One\"\
    );\n\n        if n == 1 {\n            digit = String::from(\"One\");\n      \
    \  } else if n == 2 {\n            digit = String::from(\"Two\");\n        } else\
    \ if n == 3 {\n            digit = String::from(\"Three\");\n        } else if\
    \ n == 4 {\n            digit = String::from(\"Four\");\n        } else if n ==\
    \ 5 {\n            digit = String::from(\"Five\");\n        } else if n == 6 {\n\
    \            digit = String::from(\"Six\");\n        } else if n == 7 {\n    \
    \        digit = String::from(\"Seven\");\n        } else if n == 8 {\n      \
    \      digit = String::from(\"Eight\");\n        } else if n == 9 {\n        \
    \    digit = String::from(\"Nine\");\n        }\n\n        result.push(digit);\n\
    \    }\n\n    result.reverse();\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpkwlkivc8.rs:56:17\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkwlkivc8.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkwlkivc8.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkwlkivc8.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkwlkivc8.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkwlkivc8.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkwlkivc8.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkwlkivc8.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkwlkivc8.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkwlkivc8.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut reversed\
    \ = vec![];\n    let mut digits = vec![];\n    let mut i = 0;\n    while i < arr.len()\
    \ {\n        let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n  \
    \          j += 1\n        }\n        reversed.push(arr[j]);\n        digits.push(String::from(&arr[j\
    \ as usize]));\n        i = j;\n    }\n    for i in 0..digits.len() {\n      \
    \  arr[i] = reversed[i];\n    }\n    arr\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwsh2mryx.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwsh2mryx.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwsh2mryx.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwsh2mryx.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwsh2mryx.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwsh2mryx.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwsh2mryx.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwsh2mryx.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwsh2mryx.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwsh2mryx.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpwsh2mryx.rs:28:21\n\
    \    |\n28  |         digits.push(String::from(&arr[j as usize]));\n    |    \
    \                 ^^^^^^^^^^^^ t"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as isize).collect::<Vec<_>>();\n  \
    \  let mut len = arr.len();\n    let mut i = 0;\n    while i < len {\n       \
    \ if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n        } else {\n     \
    \       arr[i] = \"One\".to_string();\n            i += 1;\n            arr[i]\
    \ = \"Two\".to_string();\n            i += 1;\n            arr[i] = \"Three\"\
    .to_string();\n            i += 1;\n            arr[i] = \"Four\".to_string();\n\
    \            i += 1;\n            arr[i] = \"Five\".to_string();\n           \
    \ i += 1;\n            arr[i] = \"Six\".to_string();\n            i += 1;\n  \
    \          arr[i] = \"Seven\".to_string();\n            i += 1;\n            arr[i]\
    \ = \"Eight\".to_string();\n            i += 1;\n            arr[i] = \"Nine\"\
    .to_string();\n            i += 1;\n        }\n    }\n    arr.into_iter().map(|x|\
    \ x as String).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg9esak8l.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg9esak8l.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg9esak8l.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg9esak8l.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg9esak8l.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg9esak8l.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg9esak8l.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg9esak8l.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg9esak8l.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg9esak8l.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpg9esak8l.rs:25:22\n   |\n25 |             arr[i] = \"One\"\
    .to_string();\n   |                      ^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ struct `String`\n\nerror[E030"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.into_iter().map(|x| x as isize).collect();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    arr.iter().map(|x| String::from(&names[x as usize])).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmp98ig7jhz.rs:20:38\n\
    \   |\n20 |     arr.iter().map(|x| String::from(&names[x as usize])).collect()\n\
    \   |                                      ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp98ig7jhz.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp98ig7jhz.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp98ig7jhz.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp98ig7jhz.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp98ig7jhz.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp98ig7jhz.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp98ig7jhz.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp98ig7jhz.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp98ig7jhz.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp98ig7jhz.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = Vec::<String>::new();\n    let mut digits\
    \ = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n        let digit\
    \ = arr[i] - 1;\n        if digit < 10 {\n            digits.push(digit as String);\n\
    \        } else {\n            let digit = digit % 10;\n            result.push(by_length(digits.clone()));\n\
    \            digits = vec![];\n            result.push(digit as String);\n   \
    \     }\n        i += 1;\n    }\n    if !digits.is_empty() {\n        result.push(by_length(digits.clone()));\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpc5vmukrd.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc5vmukrd.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc5vmukrd.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpc5vmukrd.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpc5vmukrd.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpc5vmukrd.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpc5vmukrd.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpc5vmukrd.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpc5vmukrd.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc5vmukrd.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpc5vmukrd.rs:23:35\n   |\n23 |             result.push(by_length(digits.clone()));\n\
    \   |                                   ^^^^^^^^^^^^^^ expected `isize`, found\
    \ struc"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while len > 0 {\n        if len == 1 {\n            arr[i]\
    \ = \"One\";\n            len -= 1;\n        } else if len == 2 {\n          \
    \  arr[i] = \"Two\";\n            len -= 1;\n        } else if len == 3 {\n  \
    \          arr[i] = \"Three\";\n            len -= 1;\n        } else if len ==\
    \ 4 {\n            arr[i] = \"Four\";\n            len -= 1;\n        } else if\
    \ len == 5 {\n            arr[i] = \"Five\";\n            len -= 1;\n        }\
    \ else if len == 6 {\n            arr[i] = \"Six\";\n            len -= 1;\n \
    \       } else if len == 7 {\n            arr[i] = \"Seven\";\n            len\
    \ -= 1;\n        } else if len == 8 {\n            arr[i] = \"Eight\";\n     \
    \       len -= 1;\n        } else if len == 9 {\n            arr[i] = \"Nine\"\
    ;\n            len -= 1;\n        } else {\n            i += 1;\n        }\n \
    \   }\n    arr\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4wj6nv76.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4wj6nv76.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4wj6nv76.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4wj6nv76.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4wj6nv76.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4wj6nv76.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4wj6nv76.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4wj6nv76.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4wj6nv76.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4wj6nv76.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp4wj6nv76.rs:23:22\n   |\n23 |             arr[i] = \"One\"\
    ;\n   |                      ^^^^^ expected `isize`, found `&str`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/t"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.to_owned();\n    arr.sort();\n    arr.iter().for_each(|x| {\n\
    \        match x {\n            1 => arr.push(String::from(\"One\")),\n      \
    \      2 => arr.push(String::from(\"Two\")),\n            3 => arr.push(String::from(\"\
    Three\")),\n            4 => arr.push(String::from(\"Four\")),\n            5\
    \ => arr.push(String::from(\"Five\")),\n            6 => arr.push(String::from(\"\
    Six\")),\n            7 => arr.push(String::from(\"Seven\")),\n            8 =>\
    \ arr.push(String::from(\"Eight\")),\n            9 => arr.push(String::from(\"\
    Nine\")),\n            _ => (),\n        }\n    });\n    arr\n}\n\nfn main() {\n\
    \    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzprir5_r.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzprir5_r.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzprir5_r.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzprir5_r.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzprir5_r.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzprir5_r.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzprir5_r.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzprir5_r.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzprir5_r.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzprir5_r.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpzprir5_r.rs:21:27\n   |\n21 |             1 => arr.push(String::from(\"\
    One\")),\n   |                           ^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found struct `Stri"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n  \
    \  let mut i = 0;\n    while i < reversed.len() {\n        let digit = reversed[i];\n\
    \        if digit < 10 {\n            result.push(String::from(\"One\"));\n  \
    \      } else if digit < 100 {\n            result.push(String::from(\"Two\"));\n\
    \        } else if digit < 1000 {\n            result.push(String::from(\"Three\"\
    ));\n        } else if digit < 10000 {\n            result.push(String::from(\"\
    Four\"));\n        } else if digit < 100000 {\n            result.push(String::from(\"\
    Five\"));\n        } else if digit < 1000000 {\n            result.push(String::from(\"\
    Six\"));\n        } else if digit < 10000000 {\n            result.push(String::from(\"\
    Seven\"));\n        } else if digit < 100000000 {\n            result.push(String::from(\"\
    Eight\"));\n        } else if digit < 1000000000 {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            result.push(String::from(\"Ten\"));\n\
    \        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpz3b0troj.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpz3b0troj.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpz3b0troj.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpz3b0troj.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpz3b0troj.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpz3b0troj.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpz3b0troj.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpz3b0troj.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpz3b0troj.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpz3b0troj.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    let mut len = arr.len();\n    let mut i\
    \ = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n         \
    \   i += 1;\n        } else {\n            swap(&mut arr, i, len - 1);\n     \
    \       i += 1;\n        }\n    }\n    arr.to_owned()\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmp255sy64s.rs:25:13\n\
    \   |\n25 |             swap(&mut arr, i, len - 1);\n   |             ^^^^ not\
    \ found in this scope\n   |\nhelp: consider importing one of these items\n   |\n\
    1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp255sy64s.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp255sy64s.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp255sy64s.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp255sy64s.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp255sy64s.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp255sy64s.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp255sy64s.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp255sy64s.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp255sy64s.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp255sy64s.rs:38:25\n   |\n38 |   "
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    for num in arr {\n        if\
    \ num > 0 && num < 10 {\n            result.push(String::from(&format!(\"{}\"\
    , num)));\n        } else {\n            result.push(String::from(&format!(\"\
    {}\", num)));\n        }\n    }\n    result.reverse();\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7ucmeay0.rs:28:17\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7ucmeay0.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7ucmeay0.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7ucmeay0.rs:29:25\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7ucmeay0.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7ucmeay0.rs:30:25\n   |\n30 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7ucmeay0.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7ucmeay0.rs:31:25\n   |\n31 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7ucmeay0.rs:32:17\n  \
    \ |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7ucmeay0.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n\n\
    \    let mut i = 0;\n    while i < reversed.len() {\n        let mut j = i;\n\
    \        while j < reversed.len() && reversed[j] < 10 {\n            j += 1\n\
    \        }\n        result.push(by_digit(reversed[i..j]));\n        i = j;\n \
    \   }\n\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmpnmkt69sa.rs:29:21\n\
    \   |\n29 |         result.push(by_digit(reversed[i..j]));\n   |             \
    \        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpnmkt69sa.rs:38:17\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpnmkt69sa.rs:38:25\n \
    \  |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnmkt69sa.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnmkt69sa.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnmkt69sa.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnmkt69sa.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnmkt69sa.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnmkt69sa.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnmkt69sa.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnmkt69sa.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\n"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as isize).collect::<Vec<_>>();\n  \
    \  arr.sort_unstable();\n    arr.reverse();\n    arr.iter().map(|x| {\n      \
    \  match x {\n            1 => \"One\",\n            2 => \"Two\",\n         \
    \   3 => \"Three\",\n            4 => \"Four\",\n            5 => \"Five\",\n\
    \            6 => \"Six\",\n            7 => \"Seven\",\n            8 => \"Eight\"\
    ,\n            9 => \"Nine\",\n            _ => panic!(\"Invalid number: {}\"\
    , x),\n        }\n    }).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0y45lk7b.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0y45lk7b.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0y45lk7b.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0y45lk7b.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0y45lk7b.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0y45lk7b.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0y45lk7b.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0y45lk7b.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0y45lk7b.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0y45lk7b.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmp0y45lk7b.rs:34:8\n   |\n34 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n        let mut j\
    \ = i;\n        while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n  \
    \      }\n        swap(&mut arr[i], &mut arr[j]);\n        i += 1;\n    }\n  \
    \  arr.iter().map(|x| String::from(&format!(\"{}\", x)).to_string()).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpu1w6ah14.rs:30:9\n\
    \   |\n30 |         swap(&mut arr[i], &mut arr[j]);\n   |         ^^^^ not found\
    \ in this scope\n   |\nhelp: consider importing one of these items\n   |\n1  |\
    \ use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu1w6ah14.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu1w6ah14.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu1w6ah14.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu1w6ah14.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu1w6ah14.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu1w6ah14.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpu1w6ah14.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu1w6ah14.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu1w6ah14.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu1w6ah14.rs:42:25\n\
    \   |\n42 |     ass"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n\n    for num in arr {\n        if num < 1 || num\
    \ > 9 {\n            continue;\n        }\n\n        let mut digit = num as usize;\n\
    \        let mut reversed = digit as usize;\n\n        while reversed > 0 {\n\
    \            reversed = reversed / 10;\n            result.push(by_digit(digit));\n\
    \            digit = digit % 10;\n        }\n    }\n\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmp7y6dg7xe.rs:30:25\n\
    \   |\n30 |             result.push(by_digit(digit));\n   |                  \
    \       ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp7y6dg7xe.rs:40:17\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp7y6dg7xe.rs:40:25\n \
    \  |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7y6dg7xe.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7y6dg7xe.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7y6dg7xe.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7y6dg7xe.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7y6dg7xe.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7y6dg7xe.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7y6dg7xe.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7y6dg7xe.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\ne"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n        let mut j\
    \ = i;\n        while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n  \
    \      }\n        swap(&mut arr[j], &mut arr[i]);\n        i += 1;\n    }\n\n\
    \    let mut result = vec![];\n    for i in arr {\n        result.push(String::from(&names[i]))\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpgu_uo11n.rs:30:9\n\
    \   |\n30 |         swap(&mut arr[j], &mut arr[i]);\n   |         ^^^^ not found\
    \ in this scope\n   |\nhelp: consider importing one of these items\n   |\n1  |\
    \ use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]: cannot\
    \ find value `names` in this scope\n  --> /tmp/tmpgu_uo11n.rs:36:35\n   |\n36\
    \ |         result.push(String::from(&names[i]))\n   |                       \
    \            ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpgu_uo11n.rs:43:17\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpgu_uo11n.rs:43:25\n \
    \  |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgu_uo11n.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgu_uo11n.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgu_uo11n.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgu_uo11n.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgu_uo11n.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgu_uo11n.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgu_u"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n            j\
    \ += 1\n        }\n        let mut k = j;\n        while k < arr.len() && arr[k]\
    \ > 9 {\n            k += 1\n        }\n        if k > j {\n            result.push(by_length(arr.split_off(j)));\n\
    \            result.push(by_length(arr.split_off(k)));\n        } else {\n   \
    \         result.push(by_length(arr.split_off(i)));\n        }\n        i = j;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpeo5fnpjr.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeo5fnpjr.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpeo5fnpjr.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpeo5fnpjr.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpeo5fnpjr.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpeo5fnpjr.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpeo5fnpjr.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpeo5fnpjr.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpeo5fnpjr.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeo5fnpjr.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpeo5fnpjr.rs:36:5\n   |\n13 | fn by_length(arr: Vec<isize>)\
    \ -> Vec<String> {\n   |                                  ----------- expected\
    \ `Vec<String>` because of retur"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        if digits[i] < 10 {\n            result.push(String::from(\"One\"\
    ));\n        } else if digits[i] < 100 {\n            result.push(String::from(\"\
    Two\"));\n        } else if digits[i] < 1000 {\n            result.push(String::from(\"\
    Three\"));\n        } else if digits[i] < 10000 {\n            result.push(String::from(\"\
    Four\"));\n        } else if digits[i] < 100000 {\n            result.push(String::from(\"\
    Five\"));\n        } else if digits[i] < 1000000 {\n            result.push(String::from(\"\
    Six\"));\n        } else if digits[i] < 10000000 {\n            result.push(String::from(\"\
    Seven\"));\n        } else if digits[i] < 100000000 {\n            result.push(String::from(\"\
    Eight\"));\n        } else if digits[i] < 1000000000 {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            result.push(String::from(\"Ten\"));\n\
    \        }\n        i += 1;\n    }\n    result.reverse();\n    for digit in result\
    \ {\n        arr.swap(i, digits_len - i - 1);\n    }\n    arr\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpr3pc82pb.rs:55:17\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr3pc82pb.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr3pc82pb.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr3pc82pb.rs:56:25\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr3pc82pb.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr3pc82pb.rs:57:25\n   |\n57 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr3pc82pb.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpr3pc82pb.rs:58:25\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr3pc82pb.rs:59:17\n  \
    \ |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr3pc82pb.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpr3pc82pb.rs:50:5\n   |\n13 | fn by_length(arr: Vec<isize>)\
    \ -> Vec<String> {\n   |                                  ----------- expected\
    \ `Vec<String>` because of retur"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ {\n        if x < 1 || x > 9 {\n            0\n        } else {\n          \
    \  x\n        }\n    });\n    arr.reverse();\n    let mut result = vec![];\n \
    \   for x in arr {\n        let mut s = String::new();\n        if x < 10 {\n\
    \            s.push_str(&format!(\"{}\", x));\n        } else {\n            s.push_str(&format!(\"\
    {}\", x - 10));\n            s.push_str(&format!(\"{}\", by_length(vec![x - 10,\
    \ x - 1]).to_owned()));\n        }\n        result.push(s);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsvral704.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsvral704.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsvral704.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsvral704.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsvral704.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsvral704.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsvral704.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsvral704.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsvral704.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsvral704.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpsvral704.rs:19:16\n   |\n19 |         if x < 1 || x > 9\
    \ {\n   |                ^\n   |                |\n   |                expected\
    \ `&isize`, found integer\n   |      "
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.clone();\n    arr.sort_unstable();\n    arr.reverse();\n    let\
    \ mut result = vec![];\n    for &i in arr {\n        let mut s = String::from(\"\
    One\");\n        if i < 10 {\n            s.push_str(&format!(\"{}\", i));\n \
    \       } else {\n            s.push_str(&format!(\"{}\", i - 10));\n        }\n\
    \        result.push(s);\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpa9egdbze.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa9egdbze.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa9egdbze.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa9egdbze.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa9egdbze.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa9egdbze.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa9egdbze.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa9egdbze.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa9egdbze.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa9egdbze.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpa9egdbze.rs:21:9\n   |\n21 |     for &i in arr {\n   |\
    \         ^^    --- this expression has type `isize`\n   |         |\n   |   \
    \      expected `isize`, found referenc"
  stdout: ''
  timestamp: 1659821480
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    let mut len = arr.len();\n    let mut i\
    \ = 0;\n    let mut j = 0;\n    let mut k = arr.len() - 1;\n\n    while i < k\
    \ {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n\n        while j < len {\n            if arr[j] < 1 || arr[j] > 9\
    \ {\n                j += 1;\n                continue;\n            }\n\n   \
    \         if arr[j] == arr[i] {\n                arr[j] = arr[j].to_string() +\
    \ &arr[i];\n                i += 1;\n                j += 1;\n               \
    \ len -= 1;\n                continue;\n            }\n        }\n\n        arr[i]\
    \ = arr[i].to_string() + &arr[k];\n        k -= 1;\n        i += 1;\n    }\n\n\
    \    arr\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpuh6n4d4v.rs:55:17\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuh6n4d4v.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuh6n4d4v.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuh6n4d4v.rs:56:25\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuh6n4d4v.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuh6n4d4v.rs:57:25\n   |\n57 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuh6n4d4v.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuh6n4d4v.rs:58:25\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuh6n4d4v.rs:59:17\n  \
    \ |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuh6n4d4v.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpuh6n4d4v.rs:37:47\n   |\n37 |                 arr[j] =\
    \ arr[j].to_string() + &arr[i];\n   |                                        \
    \       ^^^^^^^ expected `str`, found"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    arr.sort();\n    arr.reverse();\n\n    let\
    \ mut result = vec![];\n    for &i in arr {\n        let index = i as usize;\n\
    \        let name = match index {\n            0 => \"One\",\n            1 =>\
    \ \"Two\",\n            2 => \"Three\",\n            3 => \"Four\",\n        \
    \    4 => \"Five\",\n            5 => \"Six\",\n            6 => \"Seven\",\n\
    \            7 => \"Eight\",\n            8 => \"Nine\",\n            _ => panic!(\"\
    Invalid number {:?}\", i),\n        };\n        result.push(name);\n    }\n\n\
    \    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpa28b09mj.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa28b09mj.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa28b09mj.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa28b09mj.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa28b09mj.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa28b09mj.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa28b09mj.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa28b09mj.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa28b09mj.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa28b09mj.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpa28b09mj.rs:23:9\n   |\n23 |     for &i in arr {\n   |\
    \         ^^    --- this expression has type `isize`\n   |         |\n   |   \
    \      expected `isize`, found referenc"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.to_owned();\n    let mut len = arr.len();\n    let mut i = 0;\n\
    \    while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n            i +=\
    \ 1;\n            continue;\n        }\n        let mut j = i;\n        while\
    \ j < len {\n            if arr[j] > arr[j + 1] {\n                swap(&mut arr[j],\
    \ &mut arr[j + 1]);\n            }\n            j += 1;\n        }\n        i\
    \ += 1;\n    }\n    arr.iter().map(|x| String::from(&format!(\"{}\", x)).to_string()).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpk47czxrf.rs:28:17\n\
    \   |\n28 |                 swap(&mut arr[j], &mut arr[j + 1]);\n   |        \
    \         ^^^^ not found in this scope\n   |\nhelp: consider importing one of\
    \ these items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n\
    \   |\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpk47czxrf.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpk47czxrf.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpk47czxrf.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpk47czxrf.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpk47czxrf.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpk47czxrf.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpk47czxrf.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpk47czxrf.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpk47czxrf.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpk47czxrf.rs:43"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.clone();\n    let mut len = arr.len();\n    let mut i = 0;\n\
    \    while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n            i +=\
    \ 1;\n            continue;\n        }\n\n        let mut j = i;\n        while\
    \ j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n        }\n\n        swap(&mut\
    \ arr, i, j);\n        i += 1;\n        len -= 1;\n    }\n\n    arr.iter().map(|x|\
    \ String::from(&format!(\"{}\", x)).collect::<Vec<_>>()).collect()\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpf4n5e26q.rs:32:9\n\
    \   |\n32 |         swap(&mut arr, i, j);\n   |         ^^^^ not found in this\
    \ scope\n   |\nhelp: consider importing one of these items\n   |\n1  | use std::mem::swap;\n\
    \   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpf4n5e26q.rs:42:17\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpf4n5e26q.rs:42:25\n \
    \  |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf4n5e26q.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf4n5e26q.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpf4n5e26q.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpf4n5e26q.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpf4n5e26q.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf4n5e26q.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf4n5e26q.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpf4n5e26q.rs:46:25\n\
    \   |\n46 |     assert_eq!({l"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_len = digits_len.saturating_add((digits_len\
    \ % 10).unwrap());\n    let mut digits_len = digits_len.saturating_add(1);\n \
    \   let mut digits_len = digits_len.saturating_add(1);\n    let mut digits_len\
    \ = digits_len.saturating_add(1);\n    let mut digits_len = digits_len.saturating_add(1);\n\
    \    let mut digits_len = digits_len.saturating_add(1);\n    let mut digits_len\
    \ = digits_len.saturating_add(1);\n    let mut digits_len = digits_len.saturating_add(1);\n\
    \    let mut digits_len = digits_len.saturating_add(1);\n    let mut digits_len\
    \ = digits_len.saturating_add(1);\n    let mut digits_len = digits_len.saturating_add(1);\n\
    \    let mut digits_len = digits_len.saturating_add(1);\n    let mut digits_len\
    \ = digits_len.saturating_add(1);\n    let mut digits_len = digits_len.saturating_add(1);\n\
    \    let mut digits_len = digits_len.saturating_add(1);\n    let mut digits_len\
    \ = digits_len.saturating_add(1);\n    let mut digits_len = digits_len.saturating_add(1);\n\
    \    let mut digits_len = digits_len.saturating_add(1);\n    let mut digits_len\
    \ = digits_len.saturating_add(1);\n    let mut digits_len = digits_len.saturating_add(1);\n\
    \    let mut digits_len = digits_len.saturating_add(1);\n    let mut digits_len\
    \ = digits_len.saturating_add(1);\n    let mut digits_len = digits_len.saturating_add(1);\n\
    \    let mut digits_len = digits_len.saturating_add(1);\n    let mut digits_len\
    \ = digits_len.saturating_add(1);\n    let mut digits_len = digits_len.saturating_add(1);\n\
    \    let mut digits_len = digits_len.saturating_add(1);\n    let mut digits_len\
    \ = digits_len.saturating_add(1);\n    let mut digits_len = digits_len.saturating_add(1);\n\
    \    let mut digits_len = digits_len.saturating_add(1);\n    let mut digit\n}\n\
    \nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp068vwmic.rs:50:18\n   |\n\
    50 |     let mut digit\n   |                  ^ help: add `;` here\n51 | }\n \
    \  | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp068vwmic.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp068vwmic.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp068vwmic.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp068vwmic.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp068vwmic.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp068vwmic.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp068vwmic.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp068vwmic.rs:58:25\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp068vwmic.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp068vwmic.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0599]: no method named `unwrap` fou"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    let mut len = arr.len();\n    let mut i\
    \ = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n         \
    \   i += 1;\n        } else {\n            let mut j = i;\n            while j\
    \ > 0 && arr[j - 1] > arr[j] {\n                j -= 1;\n            }\n     \
    \       arr[i] = String::from(&arr[j]);\n            i += 1;\n        }\n    }\n\
    \    arr\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpp989w4_0.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp989w4_0.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp989w4_0.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp989w4_0.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp989w4_0.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp989w4_0.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp989w4_0.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp989w4_0.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp989w4_0.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp989w4_0.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpp989w4_0.rs:29:22\n\
    \    |\n29  |             arr[i] = String::from(&arr[j]);\n    |             \
    \         ^^^^^^^^^^^^ the trait"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ x.checked_div(10).unwrap());\n    arr.sort_by_key(|x| x.checked_mul((10 as isize)).unwrap());\n\
    \    arr.sort_by_key(|x| x.checked_div((10 as isize)).unwrap());\n    arr.sort_by_key(|x|\
    \ x.checked_mul((10 as isize)).unwrap());\n    arr.sort_by_key(|x| x.checked_div((10\
    \ as isize)).unwrap());\n    arr.sort_by_key(|x| x.checked_mul((10 as isize)).unwrap());\n\
    \    arr.sort_by_key(|x| x.checked_div((10 as isize)).unwrap());\n    arr.sort_by_key(|x|\
    \ x.checked_mul((10 as isize)).unwrap());\n    arr.sort_by_key(|x| x.checked_div((10\
    \ as isize)).unwrap());\n    arr.sort_by_key(|x| x.checked_mul((10 as isize)).unwrap());\n\
    \    arr.sort_by_key(|x| x.checked_div((10 as isize)).unwrap());\n    arr.sort_by_key(|x|\
    \ x.checked_mul((10 as isize)).unwrap());\n    arr.sort_by_key(|x| x.checked_div((10\
    \ as isize)).unwrap());\n    arr.sort_by_key(|x| x.checked_mul((10 as isize)).unwrap());\n\
    \    arr.sort_by_key(|x| x.checked_div((10 as isize)).unwrap());\n    arr.sort_by_key(|x|\
    \ x.checked_mul((10 as isize)).unwrap());\n    arr.sort_by_key(|x| x.checked_div((10\
    \ as isize)).unwrap());\n    arr.sort_by_key(|x| x.checked_mul((10 as isize)).unwrap());\n\
    \    arr.sort_by_key(|x| x.checked_div((10 as isize)).unwrap());\n    arr.sort_by_key(|x|\
    \ x.checked_mul((10 as isize)).unwrap());\n    arr.sort_by_key(|x| x.checked_div((10\
    \ as isize)).unwrap());\n    arr.sort_by_key(|x| x.checked_mul((10 as isize)).unwrap());\n\
    \    arr.sort_by_key(|x| x.checked_div((10 as isize)).unwrap());\n    \n}\n\n\
    fn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptykrttzu.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptykrttzu.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptykrttzu.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptykrttzu.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptykrttzu.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptykrttzu.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptykrttzu.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptykrttzu.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptykrttzu.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptykrttzu.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nwarning: unnecessary\
    \ parentheses around method argument\n  --> /tmp/tmptykrttzu.rs:20:39\n   |\n\
    20 |     arr.sort_by_key(|x| x.checked_mul((10 as isize)).unwrap());\n   |   \
    \                                    ^^^"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as isize).collect();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    let mut result = vec![];\n    for i in arr {\n      \
    \  let mut s = String::from(\"One\");\n        if i <= 9 {\n            s.push_str(&format!(\"\
    {}\", i));\n        } else {\n            s.push_str(&format!(\"{}\", i - 10));\n\
    \        }\n        result.push(s);\n    }\n    result\n}\n\nfn main() {\n   \
    \ let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmpsazl_h.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmpsazl_h.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmpsazl_h.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmpsazl_h.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmpsazl_h.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmpsazl_h.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmpsazl_h.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmpsazl_h.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmpsazl_h.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmpsazl_h.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0282]: type\
    \ annotations needed\n  --> /tmp/tmpmpsazl_h.rs:19:5\n   |\n18 |     let mut arr\
    \ = arr.into_iter().map(|x| x as isize).collect();\n   |         ------- consider\
    \ giving `arr` a type\n19 |     arr.s"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while len > 0 {\n        let mut j = i;\n        while\
    \ j < len && arr[j] < 10 {\n            i += 1;\n            len -= 1;\n     \
    \       arr.swap(i, j);\n        }\n        i += 1;\n        len -= 1;\n    }\n\
    \    arr.iter().map(|x| String::from(x)).collect()\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpz48bjky6.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpz48bjky6.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpz48bjky6.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpz48bjky6.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpz48bjky6.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpz48bjky6.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpz48bjky6.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpz48bjky6.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpz48bjky6.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpz48bjky6.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpz48bjky6.rs:31:24\n\
    \    |\n31  |     arr.iter().map(|x| String::from(x)).collect()\n    |       \
    \                 ^^^^^^^^^^^^ t"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.into_iter().collect::<Vec<_>>();\n    let mut reversed = vec![];\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i;\n     \
    \   while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n        }\n   \
    \     reversed.push(arr[j]);\n        i += j - 1;\n    }\n    for i in 0..(reversed.len()\
    \ - 1) {\n        let mut j = i;\n        while j > 0 && reversed[j - 1] > reversed[j]\
    \ {\n            j -= 1;\n        }\n        reversed.swap(j, j + 1);\n    }\n\
    \    for i in 0..(reversed.len() - 1) {\n        reversed.push(String::from(\"\
    One\"));\n        reversed.push(String::from(\"Two\"));\n        reversed.push(String::from(\"\
    Three\"));\n        reversed.push(String::from(\"Four\"));\n        reversed.push(String::from(\"\
    Five\"));\n        reversed.push(String::from(\"Six\"));\n        reversed.push(String::from(\"\
    Seven\"));\n        reversed.push(String::from(\"Eight\"));\n        reversed.push(String::from(\"\
    Nine\"));\n    }\n    reversed\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpa9tz7uoo.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa9tz7uoo.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa9tz7uoo.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa9tz7uoo.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa9tz7uoo.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa9tz7uoo.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa9tz7uoo.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa9tz7uoo.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa9tz7uoo.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa9tz7uoo.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpa9tz7uoo.rs:36:23\n   |\n36 |         reversed.push(String::from(\"\
    One\"));\n   |                       ^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ struct `String`\n\nerr"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    arr.sort_unstable();\n\
    \    let mut result = vec![];\n    for i in arr {\n        if i <= 9 {\n     \
    \       result.push(String::from(\"One\"));\n        } else if i <= 99 {\n   \
    \         result.push(String::from(\"Two\"));\n        } else if i <= 999 {\n\
    \            result.push(String::from(\"Three\"));\n        } else if i <= 9999\
    \ {\n            result.push(String::from(\"Four\"));\n        } else if i <=\
    \ 99999 {\n            result.push(String::from(\"Five\"));\n        } else if\
    \ i <= 999999 {\n            result.push(String::from(\"Six\"));\n        } else\
    \ if i <= 9999999 {\n            result.push(String::from(\"Seven\"));\n     \
    \   } else if i <= 999999999 {\n            result.push(String::from(\"Eight\"\
    ));\n        } else if i <= 99999999999 {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            result.push(String::from(\"Zero\"));\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4oh1m72l.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4oh1m72l.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4oh1m72l.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4oh1m72l.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4oh1m72l.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4oh1m72l.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4oh1m72l.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4oh1m72l.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4oh1m72l.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4oh1m72l.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = vec![];\n    let mut i = 0;\n   \
    \ while i < arr.len() {\n        let digit = arr[i] - 1;\n        if digit < 10\
    \ {\n            digits.push(digit as char);\n            i += 1;\n        } else\
    \ {\n            let mut j = i;\n            while j > 0 && digits[j - 1] > digit\
    \ {\n                j -= 1;\n            }\n            result.push(digits[j].to_string());\n\
    \            i += j - i;\n        }\n    }\n    result.reverse();\n    for digit\
    \ in result {\n        result.push(String::from(digits[digit]));\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpz3vvsgfe.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpz3vvsgfe.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpz3vvsgfe.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpz3vvsgfe.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpz3vvsgfe.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpz3vvsgfe.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpz3vvsgfe.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpz3vvsgfe.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpz3vvsgfe.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpz3vvsgfe.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpz3vvsgfe.rs:27:44\n   |\n27 |             while j > 0 &&\
    \ digits[j - 1] > digit {\n   |                                            ^^^^^\
    \ expected `char`, found `isize`"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.to_owned();\n    let mut len = arr.len();\n    let mut i = 0;\n\
    \    while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n            i +=\
    \ 1;\n            continue;\n        }\n        let mut j = i;\n        while\
    \ j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n        }\n        swap(&mut\
    \ arr[j], &mut arr[i]);\n        i += 1;\n    }\n    arr.iter().map(|x| String::from(x)).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpr1d2w625.rs:29:9\n\
    \   |\n29 |         swap(&mut arr[j], &mut arr[i]);\n   |         ^^^^ not found\
    \ in this scope\n   |\nhelp: consider importing one of these items\n   |\n1  |\
    \ use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr1d2w625.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr1d2w625.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr1d2w625.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr1d2w625.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr1d2w625.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpr1d2w625.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr1d2w625.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr1d2w625.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr1d2w625.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr1d2w625.rs:41:25\n\
    \   |\n41 |     ass"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as isize).collect::<Vec<_>>();\n  \
    \  arr.sort_unstable();\n    arr.reverse();\n\n    let mut result = vec![];\n\
    \    for &x in arr {\n        let index = match x {\n            0 => 0,\n   \
    \         1 => 1,\n            2 => 2,\n            3 => 3,\n            4 =>\
    \ 4,\n            5 => 5,\n            6 => 6,\n            7 => 7,\n        \
    \    8 => 8,\n            9 => 9,\n            _ => continue,\n        };\n  \
    \      result.push(String::from(&names[index]));\n    }\n\n    result\n}\n\nfn\
    \ main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpx20fpt6x.rs:37:35\n\
    \   |\n37 |         result.push(String::from(&names[index]));\n   |          \
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx20fpt6x.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx20fpt6x.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx20fpt6x.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx20fpt6x.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx20fpt6x.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx20fpt6x.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx20fpt6x.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx20fpt6x.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx20fpt6x.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx20fpt6x.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n        let mut j\
    \ = i;\n        while j < len {\n            if arr[j] > arr[j + 1] {\n      \
    \          swap(&mut arr[j], &mut arr[j + 1]);\n            }\n            j +=\
    \ 1;\n        }\n        i += 1;\n    }\n    arr.iter().map(|x| String::from(x)).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmp7_9_uxu5.rs:28:17\n\
    \   |\n28 |                 swap(&mut arr[j], &mut arr[j + 1]);\n   |        \
    \         ^^^^ not found in this scope\n   |\nhelp: consider importing one of\
    \ these items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n\
    \   |\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7_9_uxu5.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7_9_uxu5.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7_9_uxu5.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7_9_uxu5.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7_9_uxu5.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7_9_uxu5.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7_9_uxu5.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7_9_uxu5.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7_9_uxu5.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7_9_uxu5.rs:43"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n\n        let mut\
    \ j = i;\n        while j < len {\n            if arr[j] > arr[j + 1] {\n    \
    \            swap(&mut arr[j], &mut arr[j + 1]);\n            }\n            j\
    \ += 1;\n        }\n\n        i += 1;\n    }\n\n    arr.iter().map(|x| String::from(&format!(\"\
    {}\", x)))\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpanhoc0ys.rs:30:17\n\
    \   |\n30 |                 swap(&mut arr[j], &mut arr[j + 1]);\n   |        \
    \         ^^^^ not found in this scope\n   |\nhelp: consider importing one of\
    \ these items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n\
    \   |\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpanhoc0ys.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpanhoc0ys.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpanhoc0ys.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpanhoc0ys.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpanhoc0ys.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpanhoc0ys.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpanhoc0ys.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpanhoc0ys.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpanhoc0ys.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpanhoc0ys.rs:47"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut j = i;\n        while j < arr.len() {\n          \
    \  if arr[j] < 1 || arr[j] > 9 {\n                j += 1;\n                continue;\n\
    \            }\n            if arr[j] < arr[i] {\n                result.push(by_length(arr.iter().skip(i).take(j\
    \ - i)));\n                break;\n            }\n            j += 1;\n      \
    \  }\n        i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_0kabsw6.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_0kabsw6.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_0kabsw6.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_0kabsw6.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_0kabsw6.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_0kabsw6.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_0kabsw6.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_0kabsw6.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_0kabsw6.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_0kabsw6.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp_0kabsw6.rs:31:39\n   |\n31 |                 result.push(by_length(arr.iter().skip(i).take(j\
    \ - i)));\n   |                                       ^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n        let mut j\
    \ = i;\n        while j < len {\n            if arr[j] > arr[i] {\n          \
    \      swap(&mut arr[j], &mut arr[i]);\n            }\n            j += 1;\n \
    \       }\n        i += 1;\n    }\n    arr.iter().map(|x| String::from(&names[x\
    \ as usize])).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpj5o2ve00.rs:28:17\n\
    \   |\n28 |                 swap(&mut arr[j], &mut arr[i]);\n   |            \
    \     ^^^^ not found in this scope\n   |\nhelp: consider importing one of these\
    \ items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\
    \nerror[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpj5o2ve00.rs:34:38\n\
    \   |\n34 |     arr.iter().map(|x| String::from(&names[x as usize])).collect()\n\
    \   |                                      ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpj5o2ve00.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj5o2ve00.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpj5o2ve00.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpj5o2ve00.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpj5o2ve00.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpj5o2ve00.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpj5o2ve00.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpj5o2ve00.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find val"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n        } else {\n            arr[i] = String::from(&names[arr[i]\
    \ - 1]);\n            i += 1;\n        }\n    }\n    arr\n}\n\nfn main() {\n \
    \   let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpj81661yp.rs:24:36\n\
    \   |\n24 |             arr[i] = String::from(&names[arr[i] - 1]);\n   |     \
    \                               ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpj81661yp.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj81661yp.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpj81661yp.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpj81661yp.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpj81661yp.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpj81661yp.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpj81661yp.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpj81661yp.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpj81661yp.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj81661yp.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found i"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n \
    \       let mut j = i;\n        while j < arr.len() && arr[j] >= 10 {\n      \
    \      j += 1\n        }\n        result.push(String::from(&arr[..j]));\n    \
    \    i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4fex4hou.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4fex4hou.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4fex4hou.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4fex4hou.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4fex4hou.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4fex4hou.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4fex4hou.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4fex4hou.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4fex4hou.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4fex4hou.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&[isize]>` is not satisfied\n   --> /tmp/tmp4fex4hou.rs:25:21\n\
    \    |\n25  |         result.push(String::from(&arr[..j]));\n    |           \
    \          ^^^^^^^^^^^^ the tr"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut arr = arr.to_owned();\n    let mut len = arr.len();\n\
    \    while len > 0 {\n        let mut i = 0;\n        while i < len {\n      \
    \      if arr[i] > 9 {\n                i += 1;\n                continue;\n \
    \           }\n            if arr[i] < 1 {\n                i += 1;\n        \
    \        continue;\n            }\n            arr[i] = String::from(&names[i\
    \ * 10 + arr[i] - 1]);\n            i += 1;\n            break;\n        }\n \
    \       len -= i;\n    }\n    arr\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpacn6ul_7.rs:27:36\n\
    \   |\n27 |             arr[i] = String::from(&names[i * 10 + arr[i] - 1]);\n\
    \   |                                    ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpacn6ul_7.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpacn6ul_7.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpacn6ul_7.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpacn6ul_7.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpacn6ul_7.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpacn6ul_7.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpacn6ul_7.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpacn6ul_7.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpacn6ul_7.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpacn6ul_7.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ no"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n            j\
    \ += 1\n        }\n        if j == i {\n            result.push(String::from(\"\
    One\"));\n            i += 1;\n        } else {\n            result.push(String::from(&arr[i\
    \ - j]));\n            i += j - i;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplva9pct_.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplva9pct_.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplva9pct_.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplva9pct_.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplva9pct_.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplva9pct_.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplva9pct_.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplva9pct_.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplva9pct_.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplva9pct_.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmplva9pct_.rs:28:25\n\
    \    |\n28  |             result.push(String::from(&arr[i - j]));\n    |     \
    \                    ^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        if j == digits_len {\n            break;\n\
    \        }\n        let mut digit = digits[j];\n        let mut digits_len = digits_len;\n\
    \        while digit > 9 {\n            digit /= 10;\n            digits_len -=\
    \ 1;\n        }\n        let mut digit = digit;\n        let mut digits_len =\
    \ digits_len;\n        while digit > 0 {\n            result.push(String::from(&names[digit]));\n\
    \            digit /= 10;\n            digits_len -= 1;\n        }\n        i\
    \ = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpy43qij9h.rs:38:39\n\
    \   |\n38 |             result.push(String::from(&names[digit]));\n   |      \
    \                                 ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpy43qij9h.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpy43qij9h.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpy43qij9h.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpy43qij9h.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpy43qij9h.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpy43qij9h.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpy43qij9h.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpy43qij9h.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpy43qij9h.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpy43qij9h.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut i = 0;\n    while i\
    \ < arr.len() {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        let mut j = i;\n        while j < arr.len()\
    \ && arr[j] == arr[j] + 1 {\n            result += vec![String::from(\"One\")];\n\
    \            j += 1;\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpah4d28_o.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpah4d28_o.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpah4d28_o.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpah4d28_o.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpah4d28_o.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpah4d28_o.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpah4d28_o.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpah4d28_o.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpah4d28_o.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpah4d28_o.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0368]: binary\
    \ assignment operation `+=` cannot be applied to type `Vec<_>`\n  --> /tmp/tmpah4d28_o.rs:23:13\n\
    \   |\n23 |             result += vec![String::from(\"One\")];\n   |         \
    \    ------^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    let mut len = arr.len();\n    let mut i\
    \ = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n         \
    \   i += 1;\n            continue;\n        }\n\n        let mut j = i;\n    \
    \    while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n        }\n\n\
    \        swap(&mut arr[j], &mut arr[i]);\n        i += 1;\n    }\n\n    let mut\
    \ result = vec![];\n    for i in arr.iter().rev() {\n        result.push(String::from(&format!(\"\
    {}\", i)));\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmp7dogwyaf.rs:32:9\n\
    \   |\n32 |         swap(&mut arr[j], &mut arr[i]);\n   |         ^^^^ not found\
    \ in this scope\n   |\nhelp: consider importing one of these items\n   |\n1  |\
    \ use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7dogwyaf.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7dogwyaf.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7dogwyaf.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7dogwyaf.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7dogwyaf.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7dogwyaf.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7dogwyaf.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7dogwyaf.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7dogwyaf.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7dogwyaf.rs:50:25\n\
    \   |\n50 |     ass"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    let mut reversed = vec![];\n    let mut\
    \ digits = vec![];\n    let mut counter = 0;\n\n    while counter < arr.len()\
    \ {\n        let mut digit = arr[counter];\n        let mut index = counter;\n\
    \n        while index > 0 && digit > 9 {\n            digit = digit / 10;\n  \
    \          index -= 1;\n        }\n\n        reversed.push(digit as isize);\n\
    \        digits.push(String::from(&names[digit]));\n        counter += 1;\n  \
    \  }\n\n    arr.copy_from_slice(reversed);\n    arr\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmp7_878vvl.rs:33:35\n\
    \   |\n33 |         digits.push(String::from(&names[digit]));\n   |          \
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7_878vvl.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7_878vvl.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7_878vvl.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7_878vvl.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7_878vvl.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7_878vvl.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7_878vvl.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7_878vvl.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7_878vvl.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7_878vvl.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n            j\
    \ += 1\n        }\n        result.push(String::from(&arr[i .. (j as usize)]));\n\
    \        i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp88oawzht.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp88oawzht.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp88oawzht.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp88oawzht.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp88oawzht.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp88oawzht.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp88oawzht.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp88oawzht.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp88oawzht.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp88oawzht.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&[isize]>` is not satisfied\n   --> /tmp/tmp88oawzht.rs:24:21\n\
    \    |\n24  |         result.push(String::from(&arr[i .. (j as usize)]));\n  \
    \  |                     ^^^^^"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as isize).collect::<Vec<_>>();\n  \
    \  arr.sort_unstable();\n    arr.reverse();\n\n    let mut result = vec![];\n\
    \    for i in arr {\n        let mut s = String::new();\n        if i < 10 {\n\
    \            s.push_str(&format!(\"One\", i));\n        } else if i < 20 {\n \
    \           s.push_str(&format!(\"Two\", i));\n        } else if i < 30 {\n  \
    \          s.push_str(&format!(\"Three\", i));\n        } else if i < 40 {\n \
    \           s.push_str(&format!(\"Four\", i));\n        } else if i < 50 {\n \
    \           s.push_str(&format!(\"Five\", i));\n        } else if i < 60 {\n \
    \           s.push_str(&format!(\"Six\", i));\n        } else if i < 70 {\n  \
    \          s.push_str(&format!(\"Seven\", i));\n        } else if i < 80 {\n \
    \           s.push_str(&format!(\"Eight\", i));\n        } else if i < 90 {\n\
    \            s.push_str(&format!(\"Nine\", i));\n        } else {\n          \
    \  continue;\n        }\n        result.push(s);\n    }\n\n    result\n}\n\nfn\
    \ main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: argument never used\n  --> /tmp/tmpznm2gv2z.rs:26:40\n   |\n26 |\
    \             s.push_str(&format!(\"One\", i));\n   |                        \
    \         -----  ^ argument never used\n   |                                 |\n\
    \   |                                 formatting specifier missing\n\nerror: argument\
    \ never used\n  --> /tmp/tmpznm2gv2z.rs:28:40\n   |\n28 |             s.push_str(&format!(\"\
    Two\", i));\n   |                                 -----  ^ argument never used\n\
    \   |                                 |\n   |                                \
    \ formatting specifier missing\n\nerror: argument never used\n  --> /tmp/tmpznm2gv2z.rs:30:42\n\
    \   |\n30 |             s.push_str(&format!(\"Three\", i));\n   |            \
    \                     -------  ^ argument never used\n   |                   \
    \              |\n   |                                 formatting specifier missing\n\
    \nerror: argument never used\n  --> /tmp/tmpznm2gv2z.rs:32:41\n   |\n32 |    \
    \         s.push_str(&format!(\"Four\", i));\n   |                           \
    \      ------  ^ argument never used\n   |                                 |\n\
    \   |                                 formatting specifier missing\n\nerror: argument\
    \ never used\n  --> /tmp/tmpznm2gv2z.rs:34:41\n   |\n34 |             s.push_str(&format!(\"\
    Five\", i));\n   |                                 ------  ^ argument never used\n\
    \   |                                 |\n   |                                \
    \ formatting specifier missing\n\nerror: argument never used\n  --> /tmp/tmpznm2gv2z.rs:36:40\n\
    \   |\n36 |             s.push_str(&format!(\"Six\", i));\n   |              \
    \                   -----  ^ argument never used\n   |                       \
    \          |\n   |                                 formatting specifier missing\n\
    \nerror: argument never used\n  --> /tmp/tmpznm2gv2z.rs:38:42\n   |\n38 |    \
    \         s.push_str(&format!(\"Seven\", i));\n   |                          \
    \       -------  ^ argument never used\n   |                                 |\n\
    \   |                                 formatting specifier missing\n\nerror: argument\
    \ never used\n  --> /tmp/tmp"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n\n    let mut i = 0;\n    while i < arr.len() {\n\
    \        let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n      \
    \      j += 1\n        }\n\n        let mut k = j;\n        while k < arr.len()\
    \ && arr[k] > 9 {\n            k += 1\n        }\n\n        if k > i {\n     \
    \       result.push(by_length(arr.split_off(i).reverse()));\n        }\n\n   \
    \     result.push(by_length(arr.split_off(k).reverse()));\n        i = j;\n  \
    \  }\n\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpq5few4dx.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq5few4dx.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpq5few4dx.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpq5few4dx.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpq5few4dx.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpq5few4dx.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpq5few4dx.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpq5few4dx.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpq5few4dx.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq5few4dx.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpq5few4dx.rs:33:35\n   |\n33 |             result.push(by_length(arr.split_off(i).reverse()));\n\
    \   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ expec"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut i = 0;\n    let mut j = 0;\n    let mut\
    \ k = arr.len() - 1;\n\n    while i <= k {\n        if arr[i] < 9 {\n        \
    \    result.push(String::from(\"One\"));\n            i += 1;\n        } else\
    \ {\n            result.push(String::from(\"Nine\"));\n            i += 1;\n \
    \       }\n    }\n\n    while j <= k {\n        if arr[j] < 9 {\n            result.push(String::from(\"\
    Two\"));\n            j += 1;\n        } else {\n            result.push(String::from(\"\
    Nine\"));\n            j += 1;\n        }\n    }\n\n    while i <= k {\n     \
    \   if arr[i] < 9 {\n            result.push(String::from(\"Three\"));\n     \
    \       i += 1;\n        } else {\n            result.push(String::from(\"Nine\"\
    ));\n            i += 1;\n        }\n    }\n\n    while j <= k {\n        if arr[j]\
    \ < 9 {\n            result.push(String::from(\"Four\"));\n            j += 1;\n\
    \        } else {\n            result.push(String::from(\"Nine\"));\n        \
    \    j += 1;\n        }\n    }\n\n    while i <= k {\n        if arr[i] < 9 {\n\
    \            result.push(String::from(\"Five\"));\n            i += 1;\n     \
    \   } else {\n            result.push(String::from(\"Nine\"));\n            i\
    \ += 1;\n        }\n    }\n\n    while j <= k {\n        if arr[j] < 9 {\n   \
    \         result.push(String::from(\"Six\"));\n            j += 1;\n        }\
    \ else {\n            result.push(String::from(\"Nine\"));\n            j += 1;\n\
    \        }\n    }\n\n    while i <= k {\n        if arr[i] < 9 {\n           \
    \ result.push(String::from(\"Seven\"));\n            i += 1;\n        } else {\n\
    \            result.push(String::from(\"Nine\"));\n            i += 1;\n     \
    \   }\n    }\n\n    while j <= k {\n        if arr[j] < 9 {\n            result.push(String::from(\"\
    Eight\"));\n            j += 1;\n        } else {\n            result.push(String::from(\"\
    Nine\"));\n            j += 1;\n        }\n    }\n\n    while i <= k {\n     \
    \   if arr[i] < 9 {\n            result.push(String::from(\"Nine\"));\n      \
    \      i += 1;\n        } else {\n            result.push(String::from(\"One\"\
    ));\n            i += 1;\n        }\n    }\n\n    result\n}\n\nfn main() {\n \
    \   let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmphdoruw1a.rs:118:17\n\
    \    |\n118 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmphdoruw1a.rs:118:25\n    |\n118 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmphdoruw1a.rs:119:17\n\
    \    |\n119 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmphdoruw1a.rs:119:25\n    |\n119 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmphdoruw1a.rs:120:17\n\
    \    |\n120 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmphdoruw1a.rs:120:25\n    |\n120 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmphdoruw1a.rs:121:17\n\
    \    |\n121 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmphdoruw1a.rs:121:25\n    |\n121 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmphdoruw1a.rs:122:17\n\
    \    |\n122 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmphdoruw1a.rs:122:25\n    |\n122 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 10 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut len = arr.len();\n\
    \    while len > 0 {\n        let mut i = 0;\n        let mut j = len - 1;\n \
    \       while i < j {\n            if arr[i] < arr[j] {\n                result.push(by_length(arr.swap(i,\
    \ j)));\n                i += 1;\n            } else {\n                j -= 1;\n\
    \            }\n        }\n        len = j;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpuh9bkmqm.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuh9bkmqm.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuh9bkmqm.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuh9bkmqm.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuh9bkmqm.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuh9bkmqm.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuh9bkmqm.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuh9bkmqm.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuh9bkmqm.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuh9bkmqm.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpuh9bkmqm.rs:21:39\n   |\n21 |                 result.push(by_length(arr.swap(i,\
    \ j)));\n   |                                       ^^^^^^^^^^^^^^ expected struct\
    \ `Vec`"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ {\n        match x {\n            1 => 0,\n            2 => 1,\n           \
    \ 3 => 2,\n            4 => 3,\n            5 => 4,\n            6 => 5,\n   \
    \         7 => 6,\n            8 => 7,\n            9 => 8,\n            _ =>\
    \ panic!(\"Invalid number: {}\", x),\n        }\n    });\n    arr.iter().map(|x|\
    \ {\n        match x {\n            0 => \"One\",\n            1 => \"Two\",\n\
    \            2 => \"Three\",\n            3 => \"Four\",\n            4 => \"\
    Five\",\n            5 => \"Six\",\n            6 => \"Seven\",\n            7\
    \ => \"Eight\",\n            8 => \"Nine\",\n            _ => panic!(\"Invalid\
    \ number: {}\", x),\n        }\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp96f0w05w.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp96f0w05w.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp96f0w05w.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp96f0w05w.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp96f0w05w.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp96f0w05w.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp96f0w05w.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp96f0w05w.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp96f0w05w.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp96f0w05w.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmp96f0w05w.rs:46:8\n   |\n46 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut reversed\
    \ = vec![];\n    let mut digits = vec![];\n    let mut digits_map = vec![];\n\
    \    let mut digits_map_reversed = vec![];\n    let mut digits_map_reversed_map\
    \ = vec![];\n\n    let mut i = 0;\n    while i < arr.len() {\n        let mut\
    \ j = i;\n        while j < arr.len() {\n            if arr[j] < 10 {\n      \
    \          digits.push(String::from(format!(\"{}\", arr[j])));\n             \
    \   digits_map.push(vec![String::from(\"One\"), String::from(\"Two\"), String::from(\"\
    Three\"), String::from(\"Four\"), String::from(\"Five\"), String::from(\"Six\"\
    ), String::from(\"Seven\"), String::from(\"Eight\"), String::from(\"Nine\")]);\n\
    \                digits_map_reversed.push(vec![String::from(\"One\"), String::from(\"\
    Two\"), String::from(\"Three\"), String::from(\"Four\"), String::from(\"Five\"\
    ), String::from(\"Six\"), String::from(\"Seven\"), String::from(\"Eight\"), String::from(\"\
    Nine\")]);\n                digits_map_reversed_map.push(vec![String::from(\"\
    One\"), String::from(\"Two\"), String::from(\"Three\"), String::from(\"Four\"\
    ), String::from(\"Five\"), String::from(\"Six\"), String::from(\"Seven\"), String::from(\"\
    Eight\"), String::from(\"Nine\")]);\n            }\n            j += 1\n     \
    \   }\n        reversed.push(String::from(format!(\"{}\", arr[arr.len() - 1])));\n\
    \        i += 1;\n    }\n\n    for digit in digits {\n        for map_digit in\
    \ digits_map {\n            if digit == map_digit[0] {\n                let mut\
    \ i = 0;\n                while i < digits_map_reversed.len() {\n            \
    \        if digits_map_reversed[i] == map_digit[1] {\n                       \
    \ digits_map_reversed.swap(i, digits_map_reversed.len() - 1);\n              \
    \          digits_map_reversed_map.swap(i, digits_map_reversed.len() - 1);\n \
    \                       break;\n                    }\n                    i +=\
    \ 1;\n                }\n            }\n        }\n    }\n\n    for digit in digits_map_reversed\
    \ {\n        for map_digit in digits_map_reversed_map {\n            if digit\
    \ == map_digit[0] {\n                let mut i = 0;\n                while i <\
    \ \n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpit5a8go8.rs:71:3\n\
    \   |\n13 | fn by_length(arr: Vec<isize>) -> Vec<String> {\n   |             \
    \                                 - unclosed delimiter\n...\n57 |     for digit\
    \ in digits_map_reversed {\n   |                                      - unclosed\
    \ delimiter\n58 |         for map_digit in digits_map_reversed_map {\n   |   \
    \                                               - unclosed delimiter\n59 |   \
    \          if digit == map_digit[0] {\n   |                                  \
    \    - this delimiter might not be properly closed...\n...\n62 | }\n   | - ...as\
    \ it matches this but it has different indentation\n...\n71 | }\n   |   ^\n\n\
    error: expected expression, found `}`\n  --> /tmp/tmpit5a8go8.rs:62:1\n   |\n\
    62 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left` in\
    \ this scope\n  --> /tmp/tmpit5a8go8.rs:66:17\n   |\n66 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpit5a8go8.rs:66:25\n \
    \  |\n66 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpit5a8go8.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpit5a8go8.rs:67:25\n   |\n67 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpit5a8go8.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpit5a8go8.rs:68:25\n   |\n68 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpit5a8go8.rs:69:17\n  \
    \ |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n\n        let mut\
    \ j = i;\n        while j < len {\n            if arr[j] > arr[i] {\n        \
    \        swap(&mut arr[j], &mut arr[i]);\n            }\n            j += 1;\n\
    \        }\n        i += 1;\n    }\n\n    arr.iter().map(|x| String::from(&names[x\
    \ as usize])).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmp2dtoi1j_.rs:30:17\n\
    \   |\n30 |                 swap(&mut arr[j], &mut arr[i]);\n   |            \
    \     ^^^^ not found in this scope\n   |\nhelp: consider importing one of these\
    \ items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\
    \nerror[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmp2dtoi1j_.rs:37:38\n\
    \   |\n37 |     arr.iter().map(|x| String::from(&names[x as usize])).collect()\n\
    \   |                                      ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2dtoi1j_.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2dtoi1j_.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2dtoi1j_.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2dtoi1j_.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2dtoi1j_.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2dtoi1j_.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2dtoi1j_.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2dtoi1j_.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find val"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    arr.sort();\n    arr.reverse();\n    arr.iter().map(|&x|\
    \ {\n        match x {\n            1 => \"One\",\n            2 => \"Two\",\n\
    \            3 => \"Three\",\n            4 => \"Four\",\n            5 => \"\
    Five\",\n            6 => \"Six\",\n            7 => \"Seven\",\n            8\
    \ => \"Eight\",\n            9 => \"Nine\",\n            _ => panic!(\"Invalid\
    \ number: {}\", x),\n        }\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpydx43hcq.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpydx43hcq.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpydx43hcq.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpydx43hcq.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpydx43hcq.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpydx43hcq.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpydx43hcq.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpydx43hcq.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpydx43hcq.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpydx43hcq.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmpydx43hcq.rs:34:8\n   |\n34 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n        } else {\n            arr[i] = String::from(&name[arr[i]\
    \ - 1]);\n            i += 1;\n        }\n    }\n    arr\n}\n\nfn main() {\n \
    \   let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `name` in this scope\n  --> /tmp/tmp28obchfp.rs:25:36\n\
    \   |\n25 |             arr[i] = String::from(&name[arr[i] - 1]);\n   |      \
    \                              ^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp28obchfp.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp28obchfp.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp28obchfp.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp28obchfp.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp28obchfp.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp28obchfp.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp28obchfp.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp28obchfp.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp28obchfp.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp28obchfp.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in t"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = vec![];\n    let mut digits_len\
    \ = arr.len();\n    let mut i = 0;\n    while i < digits_len {\n        let digit\
    \ = arr[i];\n        if digit < 10 {\n            digits.push(digit);\n      \
    \  } else {\n            let mut j = i;\n            while j < digits_len {\n\
    \                if arr[j] < 10 {\n                    break;\n              \
    \  }\n                j += 1;\n            }\n            if j == digits_len {\n\
    \                digits.push(digit);\n            } else {\n                digits.push(digit\
    \ - 10);\n                digits.push(arr[j]);\n            }\n        }\n   \
    \     i += 1;\n    }\n\n    let mut i = 0;\n    while i < digits_len {\n     \
    \   let digit = digits[i];\n        let digit = match digit {\n            0 =>\
    \ \"Zero\".to_string(),\n            1 => \"One\".to_string(),\n            2\
    \ => \"Two\".to_string(),\n            3 => \"Three\".to_string(),\n         \
    \   4 => \"Four\".to_string(),\n            5 => \"Five\".to_string(),\n     \
    \       6 => \"Six\".to_string(),\n            7 => \"Seven\".to_string(),\n \
    \           8 => \"Eight\".to_string(),\n            9 => \"Nine\".to_string(),\n\
    \            _ => panic!(\"Invalid digit {}\", digit),\n        };\n        result.push(digit);\n\
    \        i += 1;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpno7gvgq2.rs:69:17\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpno7gvgq2.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpno7gvgq2.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpno7gvgq2.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpno7gvgq2.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpno7gvgq2.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpno7gvgq2.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpno7gvgq2.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpno7gvgq2.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpno7gvgq2.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n\n        let mut\
    \ j = i;\n        while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n\
    \        }\n\n        swap(&mut arr[i], &mut arr[j]);\n        i += 1;\n     \
    \   len -= 1;\n    }\n\n    arr.iter().map(|x| String::from(format!(\"{}\", x)).collect::<Vec<_>>()).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpw1ag3jpv.rs:32:9\n\
    \   |\n32 |         swap(&mut arr[i], &mut arr[j]);\n   |         ^^^^ not found\
    \ in this scope\n   |\nhelp: consider importing one of these items\n   |\n1  |\
    \ use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw1ag3jpv.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw1ag3jpv.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw1ag3jpv.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw1ag3jpv.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw1ag3jpv.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw1ag3jpv.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw1ag3jpv.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw1ag3jpv.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw1ag3jpv.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw1ag3jpv.rs:46:25\n\
    \   |\n46 |     ass"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.into_iter().map(|x| x as usize).collect();\n    arr.sort_unstable();\n\
    \    arr.iter().map(|x| {\n        match x {\n            1 => \"One\",\n    \
    \        2 => \"Two\",\n            3 => \"Three\",\n            4 => \"Four\"\
    ,\n            5 => \"Five\",\n            6 => \"Six\",\n            7 => \"\
    Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\",\n          \
    \  _ => panic!(\"Invalid number: {}\", x),\n        }\n    }).collect()\n}\n\n\
    fn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpebvsc7xa.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpebvsc7xa.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpebvsc7xa.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpebvsc7xa.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpebvsc7xa.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpebvsc7xa.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpebvsc7xa.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpebvsc7xa.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpebvsc7xa.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpebvsc7xa.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0282]: type\
    \ annotations needed\n  --> /tmp/tmpebvsc7xa.rs:18:5\n   |\n17 |     let mut arr\
    \ = arr.into_iter().map(|x| x as usize).collect();\n   |         ------- consider\
    \ giving `arr` a type\n18 |     arr.s"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        let mut digit = digits[j];\n        let\
    \ mut reversed_digit = digit as usize;\n        while reversed_digit > 0 {\n \
    \           reversed_digit /= 10;\n            result.push(by_digit(digits[reversed_digit\
    \ as usize]));\n        }\n        i += j - i;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmpis235rrs.rs:30:25\n\
    \   |\n30 |             result.push(by_digit(digits[reversed_digit as usize]));\n\
    \   |                         ^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpis235rrs.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpis235rrs.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpis235rrs.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpis235rrs.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpis235rrs.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpis235rrs.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpis235rrs.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpis235rrs.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpis235rrs.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpis235rrs.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ "
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n            j\
    \ += 1\n        }\n        if j == i {\n            continue;\n        }\n   \
    \     let mut k = i;\n        while k < j {\n            result.append(&String::from(&arr[k]));\n\
    \            k += 1;\n        }\n        result.append(&String::from(&arr[k]));\n\
    \        i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpk1r7lrt7.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpk1r7lrt7.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpk1r7lrt7.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpk1r7lrt7.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpk1r7lrt7.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpk1r7lrt7.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpk1r7lrt7.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpk1r7lrt7.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpk1r7lrt7.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpk1r7lrt7.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpk1r7lrt7.rs:29:28\n\
    \    |\n29  |             result.append(&String::from(&arr[k]));\n    |      \
    \                      ^^^^^^^^^"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = vec![];\n    let mut i = 0;\n\
    \    let mut j = 0;\n    let mut k = arr.len() - 1;\n\n    while i <= k {\n  \
    \      if arr[i] < 10 {\n            digits.push(String::from(\"0\".to_string()));\n\
    \        }\n        digits.push(String::from(&arr[i].to_string()));\n        i\
    \ += 1;\n    }\n\n    while j >= 0 {\n        if digits[j].len() > 0 {\n     \
    \       result.push(digits[j]);\n        }\n        j -= 1;\n    }\n\n    result.reverse();\n\
    \    result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptxk3ojde.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptxk3ojde.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptxk3ojde.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptxk3ojde.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptxk3ojde.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptxk3ojde.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptxk3ojde.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptxk3ojde.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptxk3ojde.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptxk3ojde.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    for num in arr {\n        if\
    \ num < 1 || num > 9 {\n            continue;\n        }\n        result.push(String::from(&format!(\"\
    {}\", num)));\n    }\n    result.rev().iter().map(|x| x.to_ascii_lowercase()).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp26h11cep.rs:26:17\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp26h11cep.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp26h11cep.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp26h11cep.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp26h11cep.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp26h11cep.rs:28:25\n   |\n28 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp26h11cep.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp26h11cep.rs:29:25\n   |\n29 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp26h11cep.rs:30:17\n  \
    \ |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp26h11cep.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: the method\
    \ `rev` exists for struct `Vec<String>`, but its trait bounds were not satisfied\n\
    \   --> /tmp/tmp26h11cep.rs:21:12\n    |\n21  |       result.rev().iter().map(|x|\
    \ x.to_ascii_lowercase()).c"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut i = 0;\n    while i\
    \ < arr.len() {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        let mut j = i;\n        while j < arr.len()\
    \ {\n            if arr[j] == arr[i] {\n                j += 1;\n            \
    \    continue;\n            }\n            if arr[j] > arr[i] {\n            \
    \    break;\n            }\n            result.push(String::from(&arr[j as usize]));\n\
    \            j += 1;\n        }\n        i += 1;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpy8h8i9mc.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpy8h8i9mc.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpy8h8i9mc.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpy8h8i9mc.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpy8h8i9mc.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpy8h8i9mc.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpy8h8i9mc.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpy8h8i9mc.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpy8h8i9mc.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpy8h8i9mc.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpy8h8i9mc.rs:30:25\n\
    \    |\n30  |             result.push(String::from(&arr[j as usize]));\n    |\
    \                         ^^^^^^"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_unstable_by_key(|x|\
    \ x.checked_sub(1));\n    arr.iter_mut().for_each(|x| {\n        if *x < 10 {\n\
    \            *x = String::from(\"One\");\n        } else if *x < 20 {\n      \
    \      *x = String::from(\"Two\");\n        } else if *x < 30 {\n            *x\
    \ = String::from(\"Three\");\n        } else if *x < 40 {\n            *x = String::from(\"\
    Four\");\n        } else if *x < 50 {\n            *x = String::from(\"Five\"\
    );\n        } else if *x < 60 {\n            *x = String::from(\"Six\");\n   \
    \     } else if *x < 70 {\n            *x = String::from(\"Seven\");\n       \
    \ } else if *x < 80 {\n            *x = String::from(\"Eight\");\n        } else\
    \ if *x < 90 {\n            *x = String::from(\"Nine\");\n        } else {\n \
    \           *x = String::from(\"Ten\");\n        }\n    });\n    arr\n}\n\nfn\
    \ main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6tfet54u.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6tfet54u.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6tfet54u.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6tfet54u.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6tfet54u.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6tfet54u.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6tfet54u.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6tfet54u.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6tfet54u.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6tfet54u.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp6tfet54u.rs:22:18\n   |\n22 |             *x = String::from(\"\
    One\");\n   |                  ^^^^^^^^^^^^^^^^^^^ expected `isize`, found struct\
    \ `String`\n\nerror[E0308]: "
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut j = i;\n        while j > 0 && arr[j - 1] > arr[j]\
    \ {\n            j -= 1;\n        }\n        result.push(String::from(&arr[..j]));\n\
    \        i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqm8q9gf5.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqm8q9gf5.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqm8q9gf5.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqm8q9gf5.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqm8q9gf5.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqm8q9gf5.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqm8q9gf5.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqm8q9gf5.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqm8q9gf5.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqm8q9gf5.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&[isize]>` is not satisfied\n   --> /tmp/tmpqm8q9gf5.rs:28:21\n\
    \    |\n28  |         result.push(String::from(&arr[..j]));\n    |           \
    \          ^^^^^^^^^^^^ the tr"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut reversed\
    \ = arr.clone();\n    reversed.reverse();\n    for &i in &reversed {\n       \
    \ arr.push(by_digit(i));\n    }\n    arr\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmpg5ynlrap.rs:22:18\n\
    \   |\n22 |         arr.push(by_digit(i));\n   |                  ^^^^^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg5ynlrap.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg5ynlrap.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg5ynlrap.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg5ynlrap.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg5ynlrap.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg5ynlrap.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg5ynlrap.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg5ynlrap.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg5ynlrap.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg5ynlrap.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0308]: misma"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut digits = vec![];\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        if arr[i] < 10 {\n   \
    \         digits.push(String::from(format!(\"{}\", arr[i])));\n        } else\
    \ {\n            digits.push(String::from(format!(\"{}\", arr[i]).to_digit(10)));\n\
    \        }\n        i += 1;\n    }\n    digits.reverse();\n    for i in 0..digits.len()\
    \ {\n        result.push(String::from(format!(\"{}\", digits[i])));\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpel_5szf7.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpel_5szf7.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpel_5szf7.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpel_5szf7.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpel_5szf7.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpel_5szf7.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpel_5szf7.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpel_5szf7.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpel_5szf7.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpel_5szf7.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0599]: no method\
    \ named `to_digit` found for struct `String` in the current scope\n  --> /tmp/tmpel_5szf7.rs:21:60\n\
    \   |\n21 |             digits.push(String::from(format!(\"{}\", arr[i]).to_digit(10)));\n\
    \   "
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.to_owned();\n    arr.sort_unstable();\n    let mut result = vec![];\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i;\n     \
    \   while j < arr.len() && arr[j] < 10 {\n            j += 1; // skip leading\
    \ zeroes\n        }\n        if j == i {\n            break;\n        }\n    \
    \    result.push(String::from(&arr[i..j]));\n        i = j;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqxuxl8w9.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqxuxl8w9.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqxuxl8w9.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqxuxl8w9.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqxuxl8w9.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqxuxl8w9.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqxuxl8w9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqxuxl8w9.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqxuxl8w9.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqxuxl8w9.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&[isize]>` is not satisfied\n   --> /tmp/tmpqxuxl8w9.rs:29:21\n\
    \    |\n29  |         result.push(String::from(&arr[i..j]));\n    |          \
    \           ^^^^^^^^^^^^ the t"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.into_iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n        let mut j\
    \ = i;\n        while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n  \
    \      }\n        swap(&mut arr[j], &mut arr[i]);\n        i += 1;\n    }\n  \
    \  arr.into_iter().map(|x| String::from(x)).collect()\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmp6xn4zz2_.rs:29:9\n\
    \   |\n29 |         swap(&mut arr[j], &mut arr[i]);\n   |         ^^^^ not found\
    \ in this scope\n   |\nhelp: consider importing one of these items\n   |\n1  |\
    \ use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6xn4zz2_.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6xn4zz2_.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6xn4zz2_.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6xn4zz2_.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6xn4zz2_.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6xn4zz2_.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6xn4zz2_.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6xn4zz2_.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6xn4zz2_.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6xn4zz2_.rs:41:25\n\
    \   |\n41 |     ass"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut reversed\
    \ = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j\
    \ = i;\n        while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n  \
    \      }\n        reversed.push(arr[j]);\n        i += j - 1;\n    }\n    for\
    \ i in 0..(reversed.len() - 1) {\n        let mut j = i;\n        while j > 0\
    \ && reversed[j - 1] > reversed[j] {\n            j -= 1;\n        }\n       \
    \ reversed.swap(i, j);\n    }\n    for i in 0..(reversed.len() - 1) {\n      \
    \  let mut j = i;\n        while j > 0 && reversed[j - 1] > reversed[j] {\n  \
    \          j -= 1;\n        }\n        reversed.swap(i, j);\n    }\n    for i\
    \ in 0..(reversed.len() - 1) {\n        let mut j = i;\n        while j > 0 &&\
    \ reversed[j - 1] > reversed[j] {\n            j -= 1;\n        }\n        reversed.swap(i,\
    \ j);\n    }\n    for i in 0..(reversed.len() - 1) {\n        let mut j = i;\n\
    \        while j > 0 && reversed[j - 1] > reversed[j] {\n            j -= 1;\n\
    \        }\n        reversed.swap(i, j);\n    }\n    for i in 0..(reversed.len()\
    \ - 1) {\n        let mut j = i;\n        while j > 0 && reversed[j - 1] > reversed[j]\
    \ {\n            j -= 1;\n        }\n        reversed.swap(i, j);\n    }\n   \
    \ for i in 0..(reversed.len() - 1) {\n        let mut j = i;\n        while j\
    \ > 0 && reversed[j - 1] > reversed[j] {\n            j -= 1;\n        }\n   \
    \     reversed.swap(i, j);\n    }\n    for i in 0..(reversed.len() - 1) {\n  \
    \      let mut j = i;\n        while j > 0 && reversed[j - 1] > reversed[j] {\n\
    \            j -= 1;\n        }\n        reversed.swap(i, j);\n    }\n    for\
    \ i in 0..(reversed.len() - 1) {\n        let mut j = i;\n        while j > 0\
    \ && reversed[j - 1] > reversed[j] {\n            j -= 1;\n        }\n       \
    \ reversed.swap(i, j);\n    }\n    for i in 0..(reversed.len() - 1) {\n      \
    \  let mut j = i;\n        while j > 0 && reversed[j - 1] > reversed[j] {\n  \
    \          j -= 1;\n        }\n        reversed.swap(i, j);\n    }\n    for i\
    \ in 0..(reversed.len(\n}\n\nfn main() {\n    let candidate = by_length;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmp9s1xz0g7.rs:92:30\n\
    \   |\n13 | fn by_length(arr: Vec<isize>) -> Vec<String> {\n   |             \
    \                                 - closing delimiter possibly meant for this\n\
    ...\n92 |     for i in 0..(reversed.len(\n   |                              ^\
    \ unclosed delimiter\n93 | }\n   | ^ mismatched closing delimiter\n\nerror: expected\
    \ `{`, found `}`\n  --> /tmp/tmp9s1xz0g7.rs:93:1\n   |\n93 | }\n   | ^ expected\
    \ `{`\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9s1xz0g7.rs:97:17\n\
    \   |\n97 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9s1xz0g7.rs:97:25\n   |\n97 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9s1xz0g7.rs:98:17\n   |\n98 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9s1xz0g7.rs:98:25\n\
    \   |\n98 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9s1xz0g7.rs:99:17\n   |\n99 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9s1xz0g7.rs:99:25\n   |\n99 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmp9s1xz0g7.rs:100:17\n    |\n100 |     assert_eq!({left}, {right});\n\
    \    |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n   --> /tmp/tmp9s1xz0g7.rs:100:25\n    |\n100 |\
    \     assert_eq!({left}, {right});\n    |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n   -->\
    \ /tmp/tmp9s1xz0g7.rs:101:17\n    |\n101 |     asser"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let len = arr[i] - 1;\n        if len < 1 || len > 9 {\n            i += 1;\n\
    \            continue;\n        }\n        let mut j = i;\n        while j < arr.len()\
    \ {\n            if arr[j] == len + 1 {\n                result.push(String::from(&name[len]));\n\
    \                break;\n            }\n            j += 1;\n        }\n     \
    \   i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `name` in this scope\n  --> /tmp/tmpxg1cca2y.rs:28:43\n\
    \   |\n28 |                 result.push(String::from(&name[len]));\n   |     \
    \                                      ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxg1cca2y.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxg1cca2y.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxg1cca2y.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxg1cca2y.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxg1cca2y.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxg1cca2y.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxg1cca2y.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxg1cca2y.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxg1cca2y.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxg1cca2y.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not fo"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.into_iter().map(|x| x as isize).collect();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    let mut result = vec![];\n    for i in arr {\n      \
    \  let mut s = String::from(\"One\");\n        if i < 10 {\n            s = String::from(\"\
    One\");\n        } else if i < 20 {\n            s = String::from(\"Two\");\n\
    \        } else if i < 30 {\n            s = String::from(\"Three\");\n      \
    \  } else if i < 40 {\n            s = String::from(\"Four\");\n        } else\
    \ if i < 50 {\n            s = String::from(\"Five\");\n        } else if i <\
    \ 60 {\n            s = String::from(\"Six\");\n        } else if i < 70 {\n \
    \           s = String::from(\"Seven\");\n        } else if i < 80 {\n       \
    \     s = String::from(\"Eight\");\n        } else if i < 90 {\n            s\
    \ = String::from(\"Nine\");\n        }\n        result.push(s);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpoe46jl0n.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpoe46jl0n.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpoe46jl0n.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpoe46jl0n.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpoe46jl0n.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpoe46jl0n.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpoe46jl0n.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpoe46jl0n.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpoe46jl0n.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpoe46jl0n.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0282]: type\
    \ annotations needed\n  --> /tmp/tmpoe46jl0n.rs:18:5\n   |\n17 |     let mut arr\
    \ = arr.into_iter().map(|x| x as isize).collect();\n   |         ------- consider\
    \ giving `arr` a type\n18 |     arr.s"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n            j\
    \ += 1\n        }\n        let mut k = j;\n        while k < arr.len() && arr[k]\
    \ > 9 {\n            k += 1\n        }\n        if k == j {\n            result.push(String::from(&arr[i]));\n\
    \            i += 1;\n        } else {\n            result.push(String::from(&arr[k]));\n\
    \            i += 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp71rqdzq6.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp71rqdzq6.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp71rqdzq6.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp71rqdzq6.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp71rqdzq6.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp71rqdzq6.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp71rqdzq6.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp71rqdzq6.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp71rqdzq6.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp71rqdzq6.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmp71rqdzq6.rs:29:25\n\
    \    |\n29  |             result.push(String::from(&arr[i]));\n    |         \
    \                ^^^^^^^^^^^^ th"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.to_owned();\n    let mut reversed = vec![];\n    let mut i = 0;\n\
    \    while i < arr.len() {\n        if arr[i] < 1 || arr[i] > 9 {\n          \
    \  i += 1;\n            continue;\n        }\n        let mut j = i;\n       \
    \ while j > 0 && arr[j - 1] > arr[j] {\n            j -= 1;\n        }\n     \
    \   reversed.push(&arr[..j]);\n        i = j;\n    }\n    for i in 0..(reversed.len()\
    \ - 1) {\n        let mut j = i;\n        while j > 0 && reversed[j - 1] < reversed[j]\
    \ {\n            j -= 1;\n        }\n        reversed.swap(j, i + 1);\n    }\n\
    \    for i in 0..(reversed.len() - 1) {\n        reversed[i] = String::from(&reversed[i]);\n\
    \    }\n    reversed\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1hmf9th5.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1hmf9th5.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1hmf9th5.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1hmf9th5.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1hmf9th5.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1hmf9th5.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1hmf9th5.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1hmf9th5.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1hmf9th5.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1hmf9th5.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&&[isize]>` is not satisfied\n   --> /tmp/tmp1hmf9th5.rs:40:23\n\
    \    |\n40  |         reversed[i] = String::from(&reversed[i]);\n    |       \
    \                ^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_by_key(|x|\
    \ {\n        if x < 1 || x > 9 {\n            0\n        } else {\n          \
    \  x\n        }\n    });\n    arr.iter().map(|x| {\n        if x < 1 || x > 9\
    \ {\n            String::from(\"One\")\n        } else {\n            String::from(&names[x\
    \ - 1])\n        }\n    }).collect()\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpn9253v36.rs:29:27\n\
    \   |\n29 |             String::from(&names[x - 1])\n   |                    \
    \       ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpn9253v36.rs:36:17\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpn9253v36.rs:36:25\n \
    \  |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn9253v36.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn9253v36.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn9253v36.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn9253v36.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn9253v36.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn9253v36.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn9253v36.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn9253v36.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E030"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_reversed = digits.iter().cloned().rev().collect::<Vec<_>>();\n\
    \    let mut digits_reversed_len = digits_reversed.len();\n\n    let mut i = 0;\n\
    \    while i < digits_len {\n        if digits_len > 1 && digits_reversed_len\
    \ > 1 && digits_len == digits_reversed_len {\n            if digits_len == digits_reversed_len\
    \ {\n                result.push(String::from(digits_reversed[i]));\n        \
    \        i += 1;\n                digits_len -= 1;\n                digits_reversed_len\
    \ -= 1;\n            } else {\n                let mut j = i;\n              \
    \  while j < digits_len {\n                    if digits_reversed_len > 1 && digits_len\
    \ == digits_reversed_len {\n                        if digits_len == digits_reversed_len\
    \ {\n                            result.push(String::from(digits_reversed[j]));\n\
    \                            j += 1;\n                            digits_len -=\
    \ 1;\n                            digits_reversed_len -= 1;\n                \
    \        } else {\n                            result.push(String::from(digits_reversed[j]));\n\
    \                            j += 1;\n                            digits_len -=\
    \ 1;\n                            digits_reversed_len -= 1;\n                \
    \        }\n                    } else {\n                        result.push(String::from(digits_reversed[j]));\n\
    \                        j += 1;\n                        digits_len -= 1;\n \
    \                       digits_reversed_len -= 1;\n                    }\n   \
    \             }\n            }\n        } else {\n            result.push(String::from(digits_reversed[i]));\n\
    \            i += 1;\n            digits_len -= 1;\n            digits_reversed_len\
    \ -= 1;\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate =\
    \ by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpu1z5x4bt.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu1z5x4bt.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu1z5x4bt.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu1z5x4bt.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu1z5x4bt.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu1z5x4bt.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu1z5x4bt.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu1z5x4bt.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpu1z5x4bt.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu1z5x4bt.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<isize>` is not satisfied\n   --> /tmp/tmpu1z5x4bt.rs:28:29\n\
    \    |\n28  |                 result.push(String::from(digits_reversed[i]));\n\
    \    |                          "
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.to_owned();\n    arr.sort_unstable();\n    let mut result = vec![];\n\
    \    for num in arr {\n        if num < 1 || num > 9 {\n            continue;\n\
    \        }\n        result.push(String::from(&num as &str));\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpemf86s67.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpemf86s67.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpemf86s67.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpemf86s67.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpemf86s67.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpemf86s67.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpemf86s67.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpemf86s67.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpemf86s67.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpemf86s67.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0605]: non-primitive\
    \ cast: `&isize` as `&str`\n  --> /tmp/tmpemf86s67.rs:24:34\n   |\n24 |      \
    \   result.push(String::from(&num as &str));\n   |                           \
    \       ^^^^^^^^^^^^ an `as` expre"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n        } else {\n            arr[i] = String::from(&names[arr[i]\
    \ - 1]);\n            i += 1;\n        }\n    }\n    arr\n}\n\nfn main() {\n \
    \   let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmp0mbx69wb.rs:25:36\n\
    \   |\n25 |             arr[i] = String::from(&names[arr[i] - 1]);\n   |     \
    \                               ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0mbx69wb.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0mbx69wb.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0mbx69wb.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0mbx69wb.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0mbx69wb.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0mbx69wb.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0mbx69wb.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0mbx69wb.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0mbx69wb.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0mbx69wb.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found i"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digit_index = 0;\n    while\
    \ digits_len > 0 {\n        let mut digit_value = digits[digit_index];\n     \
    \   let mut digit_name = String::from(\"One\");\n        if digit_value >= 1 &&\
    \ digit_value <= 9 {\n            digit_name = String::from(&format!(\"{}\", digit_value));\n\
    \        }\n        result.push(digit_name);\n        digit_index += 1;\n    \
    \    digits_len -= 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9e_xj_78.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9e_xj_78.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9e_xj_78.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9e_xj_78.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9e_xj_78.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9e_xj_78.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9e_xj_78.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9e_xj_78.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9e_xj_78.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9e_xj_78.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n        } else {\n            swap(&mut arr, i, len\
    \ - 1);\n            i += 1;\n        }\n    }\n    arr.iter().map(|x| String::from(x)).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpkg1ceggi.rs:25:13\n\
    \   |\n25 |             swap(&mut arr, i, len - 1);\n   |             ^^^^ not\
    \ found in this scope\n   |\nhelp: consider importing one of these items\n   |\n\
    1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkg1ceggi.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkg1ceggi.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkg1ceggi.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkg1ceggi.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkg1ceggi.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkg1ceggi.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkg1ceggi.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkg1ceggi.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkg1ceggi.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkg1ceggi.rs:38:25\n   |\n38 |   "
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = vec![];\n\n    for num in arr\
    \ {\n        if num < 10 {\n            digits.push(num);\n        } else {\n\
    \            let mut i = 0;\n            while i < digits.len() && digits[i] <\
    \ num {\n                i += 1;\n            }\n            result.push(by_length(digits.clone()));\n\
    \            digits = digits.clone();\n            result.push(by_name(num));\n\
    \        }\n    }\n    result.push(by_length(digits.clone()));\n    result\n}\n\
    \nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_name` in this scope\n  --> /tmp/tmp54xj2ybx.rs:31:25\n\
    \   |\n31 |             result.push(by_name(num));\n   |                     \
    \    ^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp54xj2ybx.rs:40:17\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp54xj2ybx.rs:40:25\n \
    \  |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp54xj2ybx.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp54xj2ybx.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp54xj2ybx.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp54xj2ybx.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp54xj2ybx.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp54xj2ybx.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp54xj2ybx.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp54xj2ybx.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror["
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.to_owned();\n    arr.sort();\n    let mut result = vec![];\n \
    \   let mut i = 0;\n    while i < arr.len() {\n        if arr[i] < 10 {\n    \
    \        result.push(String::from(\"One\"));\n        } else if arr[i] < 20 {\n\
    \            result.push(String::from(\"Two\"));\n        } else if arr[i] < 30\
    \ {\n            result.push(String::from(\"Three\"));\n        } else if arr[i]\
    \ < 40 {\n            result.push(String::from(\"Four\"));\n        } else if\
    \ arr[i] < 50 {\n            result.push(String::from(\"Five\"));\n        } else\
    \ if arr[i] < 60 {\n            result.push(String::from(\"Six\"));\n        }\
    \ else if arr[i] < 70 {\n            result.push(String::from(\"Seven\"));\n \
    \       } else if arr[i] < 80 {\n            result.push(String::from(\"Eight\"\
    ));\n        } else if arr[i] < 90 {\n            result.push(String::from(\"\
    Nine\"));\n        } else {\n            result.push(String::from(\"Ten\"));\n\
    \        }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpm2lwwo86.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm2lwwo86.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm2lwwo86.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpm2lwwo86.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpm2lwwo86.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpm2lwwo86.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpm2lwwo86.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpm2lwwo86.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpm2lwwo86.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm2lwwo86.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as isize).collect::<Vec<_>>();\n  \
    \  arr.sort_unstable();\n    arr.reverse();\n    arr.iter().map(|x| {\n      \
    \  match x {\n            1 => \"One\",\n            2 => \"Two\",\n         \
    \   3 => \"Three\",\n            4 => \"Four\",\n            5 => \"Five\",\n\
    \            6 => \"Six\",\n            7 => \"Seven\",\n            8 => \"Eight\"\
    ,\n            9 => \"Nine\",\n            _ => panic!(\"Invalid number in array:\
    \ {}\", x),\n        }\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmm0eco4j.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmm0eco4j.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmm0eco4j.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmm0eco4j.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmm0eco4j.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmm0eco4j.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmm0eco4j.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmm0eco4j.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmm0eco4j.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmm0eco4j.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmpmm0eco4j.rs:34:8\n   |\n34 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    let mut i = 0;\n    while i\
    \ < arr.len() {\n        let mut j = i;\n        while j < arr.len() && arr[j]\
    \ < 10 {\n            j += 1\n        }\n        if j == i {\n            result.push(String::from(\"\
    One\"));\n        } else {\n            result.push(String::from(&arr[i as usize].to_string()));\n\
    \        }\n        i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpj_quvsoa.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj_quvsoa.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpj_quvsoa.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpj_quvsoa.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpj_quvsoa.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpj_quvsoa.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpj_quvsoa.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpj_quvsoa.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpj_quvsoa.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj_quvsoa.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    while len > 0 {\n        if arr[i] < 1 || arr[i] > 9\
    \ {\n            i += 1;\n            continue;\n        }\n        let mut j\
    \ = i;\n        while j < len {\n            if arr[j] < 1 || arr[j] > 9 {\n \
    \               j += 1;\n                continue;\n            }\n          \
    \  if arr[j] == arr[i] {\n                arr.swap(i, j);\n                i +=\
    \ 1;\n                len -= 1;\n                break;\n            }\n     \
    \       j += 1;\n        }\n    }\n    arr.iter().map(|x| String::from(&x.to_string())).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmtmbu7ge.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmtmbu7ge.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmtmbu7ge.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmtmbu7ge.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmtmbu7ge.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmtmbu7ge.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmtmbu7ge.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmtmbu7ge.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmtmbu7ge.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmtmbu7ge.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 10 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    for n in arr {\n        if\
    \ n > 0 && n < 10 {\n            result.push(by_length_digit(n));\n        } else\
    \ {\n            result.push(by_length_digit(n - 10));\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_length_digit` in this scope\n  -->\
    \ /tmp/tmpdlvz_5n9.rs:17:25\n   |\n17 |             result.push(by_length_digit(n));\n\
    \   |                         ^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `by_length_digit` in this scope\n  --> /tmp/tmpdlvz_5n9.rs:19:25\n\
    \   |\n19 |             result.push(by_length_digit(n - 10));\n   |          \
    \               ^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdlvz_5n9.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdlvz_5n9.rs:27:25\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdlvz_5n9.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdlvz_5n9.rs:28:25\n   |\n28 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdlvz_5n9.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdlvz_5n9.rs:29:25\n   |\n29 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdlvz_5n9.rs:30:17\n  \
    \ |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdlvz_5n9.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdlvz_5n9.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {righ"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut digits_pos = 0;\n    let\
    \ mut digits_len = digits.len();\n    let mut digits_pos = 0;\n\n    while digits_pos\
    \ < digits_len {\n        let mut digit = digits[digits_pos];\n        let mut\
    \ digit_pos = 0;\n        let mut digit_len = digits_len;\n\n        while digit_pos\
    \ < digit_len {\n            let mut digit_value = digits[digit_pos];\n      \
    \      let mut digit_name = String::from(\"One\");\n\n            if digit_value\
    \ >= 1 && digit_value <= 9 {\n                digit_name = String::from(\"One\"\
    );\n            } else if digit_value >= 10 && digit_value <= 19 {\n         \
    \       digit_name = String::from(\"Two\");\n            } else if digit_value\
    \ >= 20 && digit_value <= 99 {\n                digit_name = String::from(\"Three\"\
    );\n            } else if digit_value >= 100 && digit_value <= 999 {\n       \
    \         digit_name = String::from(\"Four\");\n            } else if digit_value\
    \ >= 1000 && digit_value <= 9999 {\n                digit_name = String::from(\"\
    Five\");\n            } else if digit_value >= 10000 && digit_value <= 99999 {\n\
    \                digit_name = String::from(\"Six\");\n            } else if digit_value\
    \ >= 100000 && digit_value <= 999999 {\n                digit_name = String::from(\"\
    Seven\");\n            } else if digit_value >= 1000000 && digit_value <= 9999999\
    \ {\n                digit_name = String::from(\"Eight\");\n            } else\
    \ if digit_value >= 10000000 && digit_value <= 99999999 {\n                digit_name\
    \ = String::from(\"Nine\");\n            }\n\n            digits[digit_pos] =\
    \ digit_name;\n            digit_pos += 1;\n        }\n\n        result.append(&digits[digits_pos]);\n\
    \        digits_pos += 1;\n    }\n\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwctcw5fb.rs:67:17\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwctcw5fb.rs:67:25\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwctcw5fb.rs:68:17\n   |\n68 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwctcw5fb.rs:68:25\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwctcw5fb.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwctcw5fb.rs:69:25\n   |\n69 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwctcw5fb.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwctcw5fb.rs:70:25\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwctcw5fb.rs:71:17\n  \
    \ |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwctcw5fb.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpwctcw5fb.rs:54:33\n   |\n54 |             digits[digit_pos]\
    \ = digit_name;\n   |                                 ^^^^^^^^^^ expected `isize`,\
    \ found struct `String`\n\ner"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.clone();\n    arr.sort_unstable();\n    arr.reverse();\n\
    \    arr.iter().map(|x| {\n        match x {\n            1 => \"One\",\n    \
    \        2 => \"Two\",\n            3 => \"Three\",\n            4 => \"Four\"\
    ,\n            5 => \"Five\",\n            6 => \"Six\",\n            7 => \"\
    Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\",\n          \
    \  _ => panic!(\"Invalid number in array: {}\", x),\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_dmxlsvi.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_dmxlsvi.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_dmxlsvi.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_dmxlsvi.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_dmxlsvi.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_dmxlsvi.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_dmxlsvi.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_dmxlsvi.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_dmxlsvi.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_dmxlsvi.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: a value\
    \ of type `Vec<String>` cannot be built from an iterator over elements of type\
    \ `&str`\n  --> /tmp/tmp_dmxlsvi.rs:34:8\n   |\n34 |     }).collect()\n   |  \
    \      ^^^^^^^ value of type `Vec<Strin"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut reversed = vec![];\n    let mut digits = vec![];\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        let digit = arr[i];\n\
    \        if digit < 10 {\n            digits.push(digit);\n        } else {\n\
    \            reversed.push((digit % 10).to_string());\n            digits.push(digit\
    \ / 10);\n        }\n        i += 1;\n    }\n    for digit in digits {\n     \
    \   result.push(by_digit(digit));\n    }\n    for digit in reversed {\n      \
    \  result.push(by_digit(digit));\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmp71x4rt5a.rs:32:21\n\
    \   |\n32 |         result.push(by_digit(digit));\n   |                     ^^^^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find function `by_digit` in\
    \ this scope\n  --> /tmp/tmp71x4rt5a.rs:35:21\n   |\n35 |         result.push(by_digit(digit));\n\
    \   |                     ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp71x4rt5a.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp71x4rt5a.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp71x4rt5a.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp71x4rt5a.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp71x4rt5a.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp71x4rt5a.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp71x4rt5a.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp71x4rt5a.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp71x4rt5a.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.to_owned();\n    let mut len = arr.len();\n    let mut i\
    \ = 0;\n    while i < len {\n        if arr[i] < 1 || arr[i] > 9 {\n         \
    \   i += 1;\n            continue;\n        }\n\n        let mut j = i;\n    \
    \    while j < len {\n            if arr[j] > arr[j + 1] {\n                swap(&mut\
    \ arr[j], &mut arr[j + 1]);\n            }\n            j += 1;\n        }\n \
    \       i += 1;\n    }\n\n    let mut result = vec![];\n    for &i in arr {\n\
    \        result.push(String::from(&name_to_digit(&i)));\n    }\n\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpjopq4nl1.rs:30:17\n\
    \   |\n30 |                 swap(&mut arr[j], &mut arr[j + 1]);\n   |        \
    \         ^^^^ not found in this scope\n   |\nhelp: consider importing one of\
    \ these items\n   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n\
    \   |\n\nerror[E0425]: cannot find function `name_to_digit` in this scope\n  -->\
    \ /tmp/tmpjopq4nl1.rs:39:35\n   |\n39 |         result.push(String::from(&name_to_digit(&i)));\n\
    \   |                                   ^^^^^^^^^^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjopq4nl1.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjopq4nl1.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjopq4nl1.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjopq4nl1.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjopq4nl1.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjopq4nl1.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjopq4nl1.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjopq4nl1.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot "
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut digits = arr.iter().cloned().collect::<Vec<_>>();\n\
    \    let mut digits_len = digits.len();\n    let mut i = 0;\n    while i < digits_len\
    \ {\n        let mut j = i;\n        while j < digits_len && digits[j] < 10 {\n\
    \            j += 1\n        }\n        if j == digits_len {\n            break;\n\
    \        }\n        let mut digit = digits[j];\n        let mut digits_len = digits.len();\n\
    \        while digit > 9 {\n            digit /= 10;\n            digits_len -=\
    \ 1\n        }\n        result.push(String::from(&names[digit]));\n        i =\
    \ j;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `names` in this scope\n  --> /tmp/tmpd4q2wxc_.rs:35:35\n\
    \   |\n35 |         result.push(String::from(&names[digit]));\n   |          \
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd4q2wxc_.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpd4q2wxc_.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd4q2wxc_.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd4q2wxc_.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd4q2wxc_.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd4q2wxc_.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd4q2wxc_.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd4q2wxc_.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd4q2wxc_.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpd4q2wxc_.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.into_iter().map(|x| x as usize).collect();\n    arr.sort_unstable();\n\
    \    arr.iter().map(|x| {\n        match x % 10 {\n            0 => \"Zero\".to_string(),\n\
    \            1 => \"One\".to_string(),\n            2 => \"Two\".to_string(),\n\
    \            3 => \"Three\".to_string(),\n            4 => \"Four\".to_string(),\n\
    \            5 => \"Five\".to_string(),\n            6 => \"Six\".to_string(),\n\
    \            7 => \"Seven\".to_string(),\n            8 => \"Eight\".to_string(),\n\
    \            9 => \"Nine\".to_string(),\n            _ => panic!(\"Invalid number:\
    \ {}\", x),\n        }\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0sech2q2.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0sech2q2.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0sech2q2.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0sech2q2.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0sech2q2.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0sech2q2.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0sech2q2.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0sech2q2.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0sech2q2.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0sech2q2.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0282]: type\
    \ annotations needed\n  --> /tmp/tmp0sech2q2.rs:18:5\n   |\n17 |     let mut arr\
    \ = arr.into_iter().map(|x| x as usize).collect();\n   |         ------- consider\
    \ giving `arr` a type\n18 |     arr.s"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    let mut len = arr.len();\n\
    \    let mut i = 0;\n    let mut cur = String::from(\"One\");\n    while i < len\
    \ {\n        if arr[i] < 10 {\n            i += 1;\n            continue;\n  \
    \      }\n        let mut j = i;\n        while j < len {\n            if arr[j]\
    \ < 10 {\n                j += 1;\n                continue;\n            }\n\
    \            if arr[j] == arr[i] {\n                arr.swap(i, j);\n        \
    \        i += 1;\n                j += 1;\n                continue;\n       \
    \     }\n            i += 1;\n        }\n        i += 1;\n    }\n    arr.iter().map(|x|\
    \ {\n        if x < 10 {\n            String::from(\"One\")\n        } else {\n\
    \            String::from(&format!(\"{}\", x))\n        }\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpd2cm_p21.rs:54:17\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd2cm_p21.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd2cm_p21.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpd2cm_p21.rs:55:25\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd2cm_p21.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd2cm_p21.rs:56:25\n   |\n56 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd2cm_p21.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd2cm_p21.rs:57:25\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd2cm_p21.rs:58:17\n  \
    \ |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd2cm_p21.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpd2cm_p21.rs:44:16\n   |\n44 |         if x < 10 {\n   |\
    \                ^^\n   |                |\n   |                expected `&isize`,\
    \ found integer\n   |             "
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  let mut j = i;\n        while j < arr.len() {\n            if arr[j] >= 1 &&\
    \ arr[j] <= 9 {\n                result.push(by_digit(arr[j]));\n            \
    \    j += 1;\n            } else {\n                break;\n            }\n  \
    \      }\n        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_digit` in this scope\n  --> /tmp/tmp4rpedl6j.rs:23:29\n\
    \   |\n23 |                 result.push(by_digit(arr[j]));\n   |             \
    \                ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmp4rpedl6j.rs:36:17\n   |\n36 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4rpedl6j.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4rpedl6j.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4rpedl6j.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4rpedl6j.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4rpedl6j.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4rpedl6j.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4rpedl6j.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4rpedl6j.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4rpedl6j.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this"
  stdout: ''
  timestamp: 1659821481
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.to_owned();\n    arr.sort_unstable();\n    let mut result = vec![];\n\
    \    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i;\n     \
    \   while j < arr.len() && arr[j] < 10 {\n            j += 1\n        }\n    \
    \    result.push(String::from(&arr[i..j]));\n        i = j;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7o70hi22.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7o70hi22.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7o70hi22.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7o70hi22.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7o70hi22.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7o70hi22.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7o70hi22.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7o70hi22.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7o70hi22.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7o70hi22.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&[isize]>` is not satisfied\n   --> /tmp/tmp7o70hi22.rs:26:21\n\
    \    |\n26  |         result.push(String::from(&arr[i..j]));\n    |          \
    \           ^^^^^^^^^^^^ the t"
  stdout: ''
  timestamp: 1659821482
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut arr = arr.into_iter().map(|x| x as isize).collect();\n    arr.sort_unstable();\n\
    \    arr.reverse();\n    arr.iter().map(|x| {\n        let mut s = String::new();\n\
    \        match x {\n            1 => s.push_str(\"One\"),\n            2 => s.push_str(\"\
    Two\"),\n            3 => s.push_str(\"Three\"),\n            4 => s.push_str(\"\
    Four\"),\n            5 => s.push_str(\"Five\"),\n            6 => s.push_str(\"\
    Six\"),\n            7 => s.push_str(\"Seven\"),\n            8 => s.push_str(\"\
    Eight\"),\n            9 => s.push_str(\"Nine\"),\n            _ => panic!(\"\
    Unexpected number {}\", x),\n        }\n        s\n    }).collect()\n}\n\nfn main()\
    \ {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvqanc35h.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvqanc35h.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvqanc35h.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvqanc35h.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvqanc35h.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvqanc35h.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvqanc35h.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvqanc35h.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvqanc35h.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvqanc35h.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0282]: type\
    \ annotations needed\n  --> /tmp/tmpvqanc35h.rs:19:5\n   |\n18 |     let mut arr\
    \ = arr.into_iter().map(|x| x as isize).collect();\n   |         ------- consider\
    \ giving `arr` a type\n19 |     arr.s"
  stdout: ''
  timestamp: 1659821482
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut i = 0;\n    let mut j = 0;\n    let mut\
    \ k = arr.len() - 1;\n\n    while i <= k {\n        if arr[j] > arr[i] {\n   \
    \         result.push(String::from(\"One\"));\n            i += 1;\n        }\
    \ else {\n            result.push(String::from(\"Two\"));\n            i += 1;\n\
    \        }\n\n        if arr[j] > arr[i] {\n            result.push(String::from(\"\
    Three\"));\n            i += 1;\n        } else {\n            result.push(String::from(\"\
    Four\"));\n            i += 1;\n        }\n\n        if arr[j] > arr[i] {\n  \
    \          result.push(String::from(\"Five\"));\n            i += 1;\n       \
    \ } else {\n            result.push(String::from(\"Six\"));\n            i +=\
    \ 1;\n        }\n\n        if arr[j] > arr[i] {\n            result.push(String::from(\"\
    Seven\"));\n            i += 1;\n        } else {\n            result.push(String::from(\"\
    Eight\"));\n            i += 1;\n        }\n\n        if arr[j] > arr[i] {\n \
    \           result.push(String::from(\"Nine\"));\n            i += 1;\n      \
    \  } else {\n            result.push(String::from(\"Zero\"));\n            i +=\
    \ 1;\n        }\n\n        if arr[j] > arr[i] {\n            result.push(String::from(\"\
    Ten\"));\n            i += 1;\n        } else {\n            result.push(String::from(\"\
    Eleven\"));\n            i += 1;\n        }\n\n        if arr[j] > arr[i] {\n\
    \            result.push(String::from(\"Twelve\"));\n            i += 1;\n   \
    \     } else {\n            result.push(String::from(\"Thirteen\"));\n       \
    \     i += 1;\n        }\n\n        if arr[j] > arr[i] {\n            result.push(String::from(\"\
    Fourteen\"));\n            i += 1;\n        } else {\n            result.push(String::from(\"\
    Fifteen\"));\n            i += 1;\n        }\n\n        if arr[j] > arr[i] {\n\
    \            result.push(String::from(\"Sixteen\"));\n            i += 1;\n  \
    \      } else {\n            result.push(String::from(\"Seventeen\"));\n     \
    \       i += 1;\n        }\n\n        if arr[j] > arr[i] {\n            result.push(String::from(\"\
    Eighteen\"));\n            i += 1;\n        } else {\n            result.push(String::from(\"\
    Nineteen\"));\n            i += 1;\n        }\n\n        if arr[j] > arr[i] {\n\
    \            result.push(String::from(\"Twenty\"));\n            i += 1;\n   \
    \     } else {\n            result.push(String::from(\"TwentyOne\"));\n      \
    \      i += 1;\n        }\n\n        if arr[j] > arr[i] {\n            result.push(String::from(\"\
    TwentyTwo\"));\n            i += 1;\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpo6oae1xw.rs:124:3\n\
    \    |\n13  | fn by_length(arr: Vec<isize>) -> Vec<String> {\n    |          \
    \                                    - unclosed delimiter\n...\n23  |     while\
    \ i <= k {\n    |                  - unclosed delimiter\n...\n112 |         if\
    \ arr[j] > arr[i] {\n    |                            - this delimiter might not\
    \ be properly closed...\n...\n115 | }\n    | - ...as it matches this but it has\
    \ different indentation\n...\n124 | }\n    |   ^\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n   --> /tmp/tmpo6oae1xw.rs:119:17\n    |\n119 |\
    \     assert_eq!({left}, {right});\n    |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n   --> /tmp/tmpo6oae1xw.rs:119:25\n\
    \    |\n119 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpo6oae1xw.rs:120:17\n    |\n120 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpo6oae1xw.rs:120:25\n\
    \    |\n120 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpo6oae1xw.rs:121:17\n    |\n121 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpo6oae1xw.rs:121:25\n\
    \    |\n121 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpo6oae1xw.rs:122:17\n    |\n122 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpo6oae1xw.rs:122:25\n\
    \    |\n122 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value "
  stdout: ''
  timestamp: 1659821482
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut arr = arr.iter().cloned().collect::<Vec<_>>();\n    arr.sort_unstable_by_key(|x|\
    \ x.checked_div(10).unwrap());\n    arr.iter().map(|x| {\n        let mut s =\
    \ String::new();\n        match x {\n            0 => s.push(\"Zero\"),\n    \
    \        1 => s.push(\"One\"),\n            2 => s.push(\"Two\"),\n          \
    \  3 => s.push(\"Three\"),\n            4 => s.push(\"Four\"),\n            5\
    \ => s.push(\"Five\"),\n            6 => s.push(\"Six\"),\n            7 => s.push(\"\
    Seven\"),\n            8 => s.push(\"Eight\"),\n            9 => s.push(\"Nine\"\
    ),\n            _ => unreachable!(),\n        }\n        s\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptb7au7n9.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptb7au7n9.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptb7au7n9.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptb7au7n9.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptb7au7n9.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptb7au7n9.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptb7au7n9.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptb7au7n9.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptb7au7n9.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptb7au7n9.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmptb7au7n9.rs:22:25\n   |\n22 |             0 => s.push(\"\
    Zero\"),\n   |                         ^^^^^^ expected `char`, found `&str`\n\n\
    error[E0308]: mismatched types\n  --"
  stdout: ''
  timestamp: 1659821482
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = Vec::<String>::new();\n    let mut i = 0;\n\
    \    while i < arr.len() {\n        let mut j = i;\n        while j < arr.len()\
    \ && arr[j] < 10 {\n            j += 1\n        }\n        result.push(String::from(&arr[i..j]));\n\
    \        i = j;\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpkkz7_vml.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkkz7_vml.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkkz7_vml.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkkz7_vml.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkkz7_vml.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkkz7_vml.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkkz7_vml.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkkz7_vml.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkkz7_vml.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkkz7_vml.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&[isize]>` is not satisfied\n   --> /tmp/tmpkkz7_vml.rs:21:21\n\
    \    |\n21  |         result.push(String::from(&arr[i..j]));\n    |          \
    \           ^^^^^^^^^^^^ the t"
  stdout: ''
  timestamp: 1659821482
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    let mut result = vec![];\n    for n in arr {\n        if\
    \ n >= 1 && n <= 9 {\n            result.push(by_length_reverse(n));\n       \
    \ } else {\n            result.push(by_length_one(n));\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = by_length;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `by_length_reverse` in this scope\n\
    \  --> /tmp/tmpn_iwbstn.rs:17:25\n   |\n17 |             result.push(by_length_reverse(n));\n\
    \   |                         ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find function `by_length_one` in this scope\n  --> /tmp/tmpn_iwbstn.rs:19:25\n\
    \   |\n19 |             result.push(by_length_one(n));\n   |                 \
    \        ^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpn_iwbstn.rs:27:17\n   |\n27 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpn_iwbstn.rs:27:25\n \
    \  |\n27 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn_iwbstn.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn_iwbstn.rs:28:25\n   |\n28 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn_iwbstn.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn_iwbstn.rs:29:25\n   |\n29 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn_iwbstn.rs:30:17\n  \
    \ |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn_iwbstn.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn_iwbstn.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n"
  stdout: ''
  timestamp: 1659821482
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n\n  \
    \  let mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n \
    \       let mut j = i;\n        while j < arr.len() && arr[j] < 10 {\n       \
    \     j += 1\n        }\n        let mut k = j;\n        while k < arr.len() &&\
    \ arr[k] > 9 {\n            k += 1\n        }\n        if k > i {\n          \
    \  result.push(String::from(&arr[i..k]));\n            i = k;\n        } else\
    \ {\n            result.push(String::from(&arr[i..]));\n            i = arr.len();\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = by_length;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpec8kbi45.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpec8kbi45.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpec8kbi45.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpec8kbi45.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpec8kbi45.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpec8kbi45.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpec8kbi45.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpec8kbi45.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpec8kbi45.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpec8kbi45.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&[isize]>` is not satisfied\n   --> /tmp/tmpec8kbi45.rs:30:25\n\
    \    |\n30  |             result.push(String::from(&arr[i..k]));\n    |      \
    \                   ^^^^^^^^^^"
  stdout: ''
  timestamp: 1659821482
- exit_code: 1
  program: "/// Given an array of integers, sort the integers that are between 1 and\
    \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
    \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(vec![2,\
    \ 1, 1, 4, 5, 8, 2, 3])\n/// vec![String::from(\"Eight\"), String::from(\"Five\"\
    ), String::from(\"Four\"), String::from(\"Three\"), String::from(\"Two\"), String::from(\"\
    Two\"), String::from(\"One\"), String::from(\"One\")]\n/// If the array is empty,\
    \ return an empty array:\n/// >>> by_length(vec![])\n/// Vec::<String>::new()\n\
    /// If the array has any strange number ignore it:\n/// >>> by_length(vec![1,\
    \ -1, 55])\n/// vec![String::from(\"One\")]\nfn by_length(arr: Vec<isize>) ->\
    \ Vec<String> {\n    if arr.is_empty() {\n        return vec![];\n    }\n    let\
    \ mut result = vec![];\n    let mut i = 0;\n    while i < arr.len() {\n      \
    \  if arr[i] < 1 || arr[i] > 9 {\n            i += 1;\n            continue;\n\
    \        }\n        let mut j = i;\n        while j < arr.len() && arr[j] == arr[j\
    \ - 1] + 1 {\n            j += 1\n        }\n        result.push(String::from(&arr[j\
    \ as usize - 1]));\n        i = j;\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = by_length;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw71161ng.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw71161ng.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw71161ng.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw71161ng.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw71161ng.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw71161ng.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw71161ng.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw71161ng.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw71161ng.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw71161ng.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0277]: the trait\
    \ bound `String: From<&isize>` is not satisfied\n   --> /tmp/tmpw71161ng.rs:28:21\n\
    \    |\n28  |         result.push(String::from(&arr[j as usize - 1]));\n    |\
    \                     ^^^^^^^^^^"
  stdout: ''
  timestamp: 1659821482

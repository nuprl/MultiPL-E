name: HumanEval_120_maximum
language: r
prompt: "# Given an array arr of integers and a positive integer k, return a sorted\
  \ list \n# of length k with the maximum k numbers in arr.\n# Example 1:\n# Input:\
  \ arr = [-3, -4, 5], k = 3\n# Output: [-4, -3, 5]\n# Example 2:\n# Input: arr =\
  \ [4, -4, 4], k = 2\n# Output: [4, 4]\n# Example 3:\n# Input: arr = [-3, 2, 1, 2,\
  \ -1, -2, 1], k = 1\n# Output: [2]\n# Note:\n# 1. The length of the array will be\
  \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
  \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\nmaximum <- function(arr, k) {"
tests: "test_humaneval <- function() {\ncandidate <- maximum\n    if(!identical(candidate(c(-3,\
  \ -4, 5), 3), c(-4, -3, 5))){quit('no', 1)}\n    if(!identical(candidate(c(4, -4,\
  \ 4), 2), c(4, 4))){quit('no', 1)}\n    if(!identical(candidate(c(-3, 2, 1, 2, -1,\
  \ -2, 1), 1), c(2))){quit('no', 1)}\n    if(!identical(candidate(c(123, -123, 20,\
  \ 0, 1, 2, -3), 3), c(2, 20, 123))){quit('no', 1)}\n    if(!identical(candidate(c(-123,\
  \ 20, 0, 1, 2, -3), 4), c(0, 1, 2, 20))){quit('no', 1)}\n    if(!identical(candidate(c(5,\
  \ 15, 0, 3, -13, -8, 0), 7), c(-13, -8, 0, 0, 3, 5, 15))){quit('no', 1)}\n    if(!identical(candidate(c(-1,\
  \ 0, 2, 5, 3, -10), 2), c(3, 5))){quit('no', 1)}\n    if(!identical(candidate(c(1,\
  \ 0, 5, -7), 1), c(5))){quit('no', 1)}\n    if(!identical(candidate(c(4, -4), 2),\
  \ c(-4, 4))){quit('no', 1)}\n    if(!identical(candidate(c(-10, 10), 2), c(-10,\
  \ 10))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, -23, 243, -400, 0),\
  \ 0), c())){quit('no', 1)}\n}\ntest_humaneval()"
completions: []
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_118_get_closest_vowel
language: r
prompt: "# You are given a word. Your task is to find the closest vowel that stands\
  \ between \n# two consonants from the right side of the word (case sensitive).\n\
  # Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
  # find any vowel met the above condition. \n# You may assume that the given string\
  \ contains English letter only.\n# Example:\n# get_closest_vowel(\"yogurt\") ==>\
  \ \"u\"\n# get_closest_vowel(\"FULL\") ==> \"U\"\n# get_closest_vowel(\"quick\"\
  ) ==> \"\"\n# get_closest_vowel(\"ab\") ==> \"\"\nget_closest_vowel <- function(word)\
  \ {"
tests: "test_humaneval <- function() {\ncandidate <- get_closest_vowel\n    if(!identical(candidate('yogurt'),\
  \ 'u')){quit('no', 1)}\n    if(!identical(candidate('full'), 'u')){quit('no', 1)}\n\
  \    if(!identical(candidate('easy'), '')){quit('no', 1)}\n    if(!identical(candidate('eAsy'),\
  \ '')){quit('no', 1)}\n    if(!identical(candidate('ali'), '')){quit('no', 1)}\n\
  \    if(!identical(candidate('bad'), 'a')){quit('no', 1)}\n    if(!identical(candidate('most'),\
  \ 'o')){quit('no', 1)}\n    if(!identical(candidate('ab'), '')){quit('no', 1)}\n\
  \    if(!identical(candidate('ba'), '')){quit('no', 1)}\n    if(!identical(candidate('quick'),\
  \ '')){quit('no', 1)}\n    if(!identical(candidate('anime'), 'i')){quit('no', 1)}\n\
  \    if(!identical(candidate('Asia'), '')){quit('no', 1)}\n    if(!identical(candidate('Above'),\
  \ 'o')){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n  \n  right_cons\
    \ <- gregexpr(\"[[:upper:]]\", word)[[1]]\n  right_cons <- right_cons[right_cons\
    \ > 0]\n  right_cons <- right_cons[right_cons < length(word)]\n  \n  left_cons\
    \ <- gregexpr(\"[[:lower:]]\", word)[[1]]\n  left_cons <- left_cons[left_cons\
    \ > 0]\n  left_cons <- left_cons[left_cons < length(word)]\n  \n  right_vowel\
    \ <- word[right_cons]\n  left_vowel <- word[left_cons]\n  \n  if(right_vowel %in%\
    \ vowels) {\n    return(right_vowel)\n  }\n  if(left_vowel %in% vowels) {\n  \
    \  return(left_vowel)\n  }\n  \n  return(\"\")\n}\n", "\n  \n  vowels <- c(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  ", "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\"\
    , \"u\", \"y\") \n  \n  right_cons <- which(grepl(\"[bcdfghjklmnpqrstvwxyz]\"\
    ,word))\n  left_cons <- which(grepl(\"[bcdfghjklmnpqrstvwxyz]\",word,fixed=TRUE))\n\
    \  \n  if(length(right_cons) > 0) {\n    right_cons <- right_cons[length(right_cons)-1]\n\
    \  } else {\n    right_cons <- length(word)\n  }\n  \n  if(length(left_cons) >\
    \ 0) {\n    left_cons <- left_cons[length(left_cons)-1]\n  } else {\n    left_cons\
    \ <- length(word)\n  }\n  \n  if(left_cons > right_cons) {\n    left_cons <- left_cons\
    \ - 1\n  }\n  \n  if(left_cons == right_cons) {\n    left_cons <- left_cons -\
    \ 1\n  }\n  \n  if(left_cons < length(word)) {\n    left_cons <- left_cons + 1\n\
    \  }\n  \n  if(left_cons == length(word)) {\n    left_cons <- left_cons - 1\n\
    \  }\n  \n  if(left_cons == 0) {\n    left_cons <- left_cons - 1\n  }\n  \n  if(left_cons\
    \ == 1) {\n    left_cons <- left_cons - 1\n  }\n  \n  if(left_cons == 2) {\n \
    \   left_cons <- left_cons - 1\n  }\n  \n  if(left_cons == 3) {\n    left_cons\
    \ <- left_cons - 1\n  }\n  \n  if(left_cons == 4) {\n    left_cons <- left_cons\
    \ - 1\n  }\n  \n  if(left_cons == 5) {\n    left_cons <- left_cons - 1\n  }\n\
    \  \n  if(left_cons == 6) {\n    left_cons <- left_cons - 1\n  }\n  \n  if(left_cons\
    \ == 7) {\n    left_cons <- left_cons - 1\n  }\n  \n  if(left_cons == 8) {\n \
    \   left_cons <- left_cons - 1\n  }\n  \n  if(left_cons == 9) {\n    left_cons\
    \ <- left_cons - 1\n  }\n  \n  if(left_cons == 10) {\n    left_cons <- left_cons\
    \ - 1\n  }\n  \n  if(left_cons == 11) {\n    left_cons <- left_cons - 1\n  }\n\
    \  \n  if(left_cons == 12) {\n    left_cons <- ", "\n  \n  vowels <- c(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\")\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  ", "\n  \n  vowels <- c(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n  \n  word <- tolower(word)\n  \n  i <- 0\n  \n  while(i < length(word))\
    \ {\n    \n    if(word[i] == \"a\" | word[i] == \"e\" | word[i] == \"i\" | word[i]\
    \ == \"o\" | word[i] == \"u\") {\n      \n      i <- i + 1\n      \n      if(word[i]\
    \ == \"a\" | word[i] == \"e\" | word[i] == \"i\" | word[i] == \"o\" | word[i]\
    \ == \"u\") {\n        \n        i <- i + 1\n        \n        if(word[i] == \"\
    a\" | word[i] == \"e\" | word[i] == \"i\" | word[i] == \"o\" | word[i] == \"u\"\
    ) {\n          \n          i <- i + 1\n          \n          if(word[i] == \"\
    a\" | word[i] == \"e\" | word[i] == \"i\" | word[i] == \"o\" | word[i] == \"u\"\
    ) {\n            \n            i <- i + 1\n            \n            if(word[i]\
    \ == \"a\" | word[i] == \"e\" | word[i] == \"i\" | word[i] == \"o\" | word[i]\
    \ == \"u\") {\n              \n              i <- i + 1\n              \n    \
    \          if(word[i] == \"a\" | word[i] == \"e\" | word[i] == \"i\" | word[i]\
    \ == \"o\" | word[i] == \"u\") {\n                \n                i <- i + 1\n\
    \                \n                if(word[i] == \"a\" | word[i] == \"e\" | word[i]\
    \ == \"i\" | word[i] == \"o\" | word[i] == \"u\") {\n                  \n    \
    \              i <- i + 1\n                  \n                  if(word[i] ==\
    \ \"a\" | word[i] == \"e\" | word[i] == \"i\" | word[i] == \"o\" | word[i] ==\
    \ \"u\") {\n                    \n                    i <- i + 1\n           \
    \         \n                    if(word[i] == \"a\" | word[i] == \"e\" | word[i]\
    \ == \"i\" | word[i] == \"o\" | word[i] == \"u\") {\n                      \n\
    \                      i <- i + 1\n                      \n                  \
    \    if(word[i] == \"a\" | word[i] == \"e\" | word[i] == \"i\" | word[i] == \"\
    o\" | word[i] == \"u\") {\n                        \n                        i\
    \ <- i + 1\n                        \n                        if(word[i] == \"\
    a\" | word[i] == \"e\" | word[i] == \"i\" | word[i] == \"o\" | word[i] == \"u\"\
    ) {\n                          \n                          i <- i + 1\n      \
    \                    \n                          if(word[i] == \"a\" | word[i]\
    \ == \"e\" | word[i] == \"i\" | word[i] == \"o\" | word[i] == \"u\") {\n     \
    \                       \n                            i <- i + 1\n           \
    \                 \n                            if(word[i] == \"a\" | word[i]\
    \ == \"e\" | word[i] == \"i\" | word[i] == \"o\" | word[i] == \"u\"", "\n  vowels\
    \ <- c(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n  vowels_count <- 0\n  \n  for(i\
    \ in 1:length(word)) {\n    if(word[i] == \"a\" | word[i] == \"e\" | word[i] ==\
    \ \"i\" | word[i] == \"o\" | word[i] == \"u\") {\n      vowels_count <- vowels_count\
    \ + 1\n    }\n  }\n  \n  if(vowels_count > 1) {\n    for(i in 1:length(word))\
    \ {\n      if(word[i] == \"a\" | word[i] == \"e\" | word[i] == \"i\" | word[i]\
    \ == \"o\" | word[i] == \"u\") {\n        vowels_count <- vowels_count - 1\n \
    \     }\n    }\n  }\n  \n  if(vowels_count == 0) {\n    return(\"\")\n  }\n  \n\
    \  for(i in 1:length(word)) {\n    if(word[i] == \"a\" | word[i] == \"e\" | word[i]\
    \ == \"i\" | word[i] == \"o\" | word[i] == \"u\") {\n      return(word[i])\n \
    \   }\n  }\n}\n", "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\")\n  vowels_index <- which(vowels %in% word)\n  \n  if(length(vowels_index)\
    \ == 0) return(\"\")\n  \n  if(vowels_index[1] == length(word)) {\n    vowels_index[1]\
    \ - 1\n  } else {\n    vowels_index[1] + 1\n  }\n  \n  vowels_index <- sort(vowels_index)\n\
    \  \n  if(vowels_index[1] > length(word)) {\n    vowels_index[1] - 1\n  } else\
    \ {\n    vowels_index[1]\n  }\n  \n  return(vowels[vowels_index])\n}\n", "\n \
    \ vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n  \n  word <- tolower(word)\n\
    \  \n  vowel_count <- 0\n  \n  for(i in 1:length(word)) {\n    \n    if(word[i]\
    \ == \"a\" | word[i] == \"e\" | word[i] == \"i\" | word[i] == \"o\" | word[i]\
    \ == \"u\") {\n      vowel_count <- vowel_count + 1\n    }\n  }\n  \n  if(vowel_count\
    \ == 0) {\n    return(\"\")\n  }\n  \n  for(i in 1:length(word)) {\n    \n   \
    \ if(word[i] == \"a\" | word[i] == \"e\" | word[i] == \"i\" | word[i] == \"o\"\
    \ | word[i] == \"u\") {\n      \n      if(word[(i+1):length(word)] == \"a\" |\
    \ word[(i+1):length(word)] == \"e\" | word[(i+1):length(word)] == \"i\" | word[(i+1):length(word)]\
    \ == \"o\" | word[(i+1):length(word)] == \"u\") {\n        return(vowels[(vowel_count-1)])\n\
    \      }\n    }\n  }\n  \n  return(\"\")\n}\n", "\n  \n  vowels <- c(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n  \n  vowels_index <- which(vowels %in% word)\n  \n\
    \  if(length(vowels_index) == 0) return(\"\")\n  \n  vowels_index <- vowels_index[-1]\n\
    \  \n  vowels_index <- vowels_index - 1\n  \n  if(vowels_index > 0) return(vowels[vowels_index])\n\
    \  \n  return(\"\")\n}\n", "\n  \n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\")\n  \n  word <- tolower(word)\n  \n  vowel_count\
    \ <- 0\n  \n  for(i in 1:(length(word)-1)) {\n    \n    vowel_count <- vowel_count\
    \ + \n      ifelse(word[i] == \"a\" | word[i] == \"e\" | word[i] == \"i\" | word[i]\
    \ == \"o\" | word[i] == \"u\", 1, 0)\n    \n  }\n  \n  vowel_count <- vowel_count\
    \ + \n    ifelse(word[length(word)] == \"a\" | word[length(word)] == \"e\" | word[length(word)]\
    \ == \"i\" | word[length(word)] == \"o\" | word[length(word)] == \"u\", 1, 0)\n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n", "\n  \n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  \n\
    \  vowels_index <- which(vowels %in% word)\n  \n  if(length(vowels_index) == 0)\
    \ {\n    return(\"\")\n  }\n  \n  vowels_index <- sort(vowels_index)\n  \n  vowels_index\
    \ <- vowels_index[-1]\n  \n  vowels_index <- vowels_index - 1\n  \n  vowels_index\
    \ <- vowels_index - 1\n  \n  if(vowels_index[1] < 1) {\n    vowels_index <- vowels_index\
    \ - 1\n  }\n  \n  if(vowels_index[length(vowels_index)] < 1) {\n    vowels_index\
    \ <- vowels_index + 1\n  }\n  \n  if(vowels_index[1] > length(word)) {\n    vowels_index\
    \ <- vowels_index - 1\n  }\n  \n  if(vowels_index[length(vowels_index)] > length(word))\
    \ {\n    vowels_index <- vowels_index + 1\n  }\n  \n  return(vowels[vowels_index])\n\
    }\n", "\n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n  vowels_count\
    \ <- 0\n  \n  for(i in 1:length(word)) {\n    if(word[i] == \"a\") {\n      vowels_count\
    \ <- vowels_count + 1\n    }\n    if(word[i] == \"e\") {\n      vowels_count <-\
    \ vowels_count + 1\n    }\n    if(word[i] == \"i\") {\n      vowels_count <- vowels_count\
    \ + 1\n    }\n    if(word[i] == \"o\") {\n      vowels_count <- vowels_count +\
    \ 1\n    }\n    if(word[i] == \"u\") {\n      vowels_count <- vowels_count + 1\n\
    \    }\n    if(word[i] == \"y\") {\n      vowels_count <- vowels_count + 1\n \
    \   }\n  }\n  \n  if(vowels_count >= 2) {\n    for(i in 1:length(word)) {\n  \
    \    if(word[i] == vowels[1]) {\n        vowels_count <- vowels_count - 1\n  \
    \    }\n      if(word[i] == vowels[2]) {\n        vowels_count <- vowels_count\
    \ - 1\n      }\n    }\n  }\n  \n  if(vowels_count <= 0) {\n    for(i in 1:length(word))\
    \ {\n      if(word[i] == vowels[3]) {\n        vowels_count <- vowels_count -\
    \ 1\n      }\n      if(word[i] == vowels[4]) {\n        vowels_count <- vowels_count\
    \ - 1\n      }\n    }\n  }\n  \n  if(vowels_count == 0) {\n    return(\"\")\n\
    \  }\n  \n  return(vowels[which.min(abs(vowels_count - 1))])\n}\n", "\n  vowels\
    \ <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  \n  word <- tolower(word)\n  \n \
    \ i <- 0\n  \n  while(i < length(word)) {\n    \n    vowel <- substr(word, i,\
    \ i)\n    \n    if(vowels %in% vowel) {\n      \n      i <- i + 1\n      \n  \
    \    if(i %in% c(length(word), length(word) - 1)) {\n        \n        break\n\
    \      }\n      \n      vowel <- substr(word, i, i)\n      \n      if(vowels %in%\
    \ vowel) {\n        \n        i <- i + 1\n        \n        if(i %in% c(length(word),\
    \ length(word) - 1)) {\n          \n          break\n        }\n      }\n    }\n\
    \    \n    i <- i + 1\n  }\n  \n  return(vowel)\n}\n", "\n  \n  vowels <- c(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n  \n  vowels_idx <- which(vowels %in% word)\n\
    \  \n  if(length(vowels_idx) == 0) return(\"\")\n  \n  vowels_idx <- vowels_idx[order(vowels_idx,\
    \ decreasing = TRUE)]\n  \n  if(vowels_idx[1] == 0) return(\"\")\n  \n  if(vowels_idx[1]\
    \ == length(word)) return(\"\")\n  \n  return(vowels[vowels_idx[1]])\n}\n", "\n\
    \  \n  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  \n  vowel_count <- 0\n\
    \  \n  for(i in 1:length(word)) {\n    \n    if(word[i] == \"a\" | word[i] ==\
    \ \"e\" | word[i] == \"i\" | word[i] == \"o\" | word[i] == \"u\") {\n      vowel_count\
    \ <- vowel_count + 1\n    }\n  }\n  \n  if(vowel_count > 0) {\n    \n    vowel_count\
    \ <- vowel_count - 1\n    \n    for(i in 1:length(word)) {\n      \n      if(word[i]\
    \ == \"a\" | word[i] == \"e\" | word[i] == \"i\" | word[i] == \"o\" | word[i]\
    \ == \"u\") {\n        \n        vowel_count <- vowel_count + 1\n      }\n   \
    \ }\n    \n    for(i in 1:length(word)) {\n      \n      if(word[i] == word[length(word)])\
    \ {\n        \n        vowel_count <- vowel_count + 1\n      }\n    }\n    \n\
    \    for(i in 1:length(word)) {\n      \n      if(word[i] == word[length(word)])\
    \ {\n        \n        vowel_count <- vowel_count + 1\n      }\n    }\n    \n\
    \    for(i in 1:length(word)) {\n      \n      if(word[i] == word[length(word)])\
    \ {\n        \n        vowel_count <- vowel_count + 1\n      }\n    }\n    \n\
    \    for(i in 1:length(word)) {\n      \n      if(word[i] == word[length(word)])\
    \ {\n        \n        vowel_count <- vowel_count + 1\n      }\n    }\n    \n\
    \    for(i in 1:length(word)) {\n      \n      if(word[i] == word[length(word)])\
    \ {\n        \n        vowel_count <- vowel_count + 1\n      }\n    }\n    \n\
    \    for(i in 1:length(word)) {\n      \n      if(word[i] == word[length(word)])\
    \ {\n        \n        vowel_count <- vowel_count + 1\n      }\n    }\n    \n\
    \    for(i in 1:length(word)) {\n      \n      if(word[i] == word[length(word)])\
    \ {\n        \n        vowel_count <- vowel_count + 1\n      }\n    }\n    \n\
    \    for(i in 1:length(word)) {\n      \n      if(word[i] == word[length(word)])\
    \ {\n        \n        vowel_count <- vowel_count + 1\n      }\n    }\n    \n\
    \    for(i in 1:length(word)) {\n      \n      if(word[i] == word[length(word)])\
    \ {\n        \n        vowel_count <- vowel", "\n  vowels <- c(\"a\", \"e\", \"\
    i\", \"o\", \"u\")\n  \n  word <- tolower(word)\n  \n  i <- gregexpr(\"[aeiou]\"\
    , word)\n  \n  i <- i[[1]]\n  \n  j <- gregexpr(\"[bcdfghjklmnpqrstvwxyz]\", word)\n\
    \  \n  j <- j[[1]]\n  \n  k <- j[length(j)]\n  \n  k <- k - 1\n  \n  i <- i[k\
    \ != 0]\n  \n  j <- j[k != 0]\n  \n  k <- k - 1\n  \n  i <- i[k != 0]\n  \n  j\
    \ <- j[k != 0]\n  \n  k <- k - 1\n  \n  i <- i[k != 0]\n  \n  j <- j[k != 0]\n\
    \  \n  k <- k - 1\n  \n  i <- i[k != 0]\n  \n  j <- j[k != 0]\n  \n  k <- k -\
    \ 1\n  \n  i <- i[k != 0]\n  \n  j <- j[k != 0]\n  \n  k <- k - 1\n  \n  i <-\
    \ i[k != 0]\n  \n  j <- j[k != 0]\n  \n  k <- k - 1\n  \n  i <- i[k != 0]\n  \n\
    \  j <- j[k != 0]\n  \n  k <- k - 1\n  \n  i <- i[k != 0]\n  \n  j <- j[k != 0]\n\
    \  \n  k <- k - 1\n  \n  i <- i[k != 0]\n  \n  j <- j[k != 0]\n  \n  k <- k -\
    \ 1\n  \n  i <- i[k != 0]\n  \n  j <- j[k != 0]\n  \n  k <- k - 1\n  \n  i <-\
    \ i[k != 0]\n  \n  j <- j[k != 0]\n  \n  k <- k - 1\n  \n  i <- i[k != 0]\n  \n\
    \  j <- j[k != 0]\n  \n  k <- k - 1\n  \n  i <- i[k != 0]\n  \n  j <- j[k != 0]\n\
    \  \n  k <- k - 1\n  \n  i ", "\n  \n  vowels <- c(\"a\", \"e\", \"i\", \"o\"\
    , \"u\", \"y\") \n  \n  if(length(word) == 0) {\n    return(\"\")\n  }\n  \n \
    \ if(length(word) == 1) {\n    return(vowels[which.min(abs(vowels - tolower(word)))])\n\
    \  }\n  \n  if(length(word) == 2) {\n    return(vowels[which.min(abs(vowels -\
    \ tolower(word[1])))])\n  }\n  \n  if(length(word) == 3) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[2])))])\n  }\n  \n  if(length(word) == 4) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[3])))])\n  }\n  \n  if(length(word) == 5) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[4])))])\n  }\n  \n  if(length(word) == 6) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[5])))])\n  }\n  \n  if(length(word) == 7) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[6])))])\n  }\n  \n  if(length(word) == 8) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[7])))])\n  }\n  \n  if(length(word) == 9) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[8])))])\n  }\n  \n  if(length(word) == 10) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[9])))])\n  }\n  \n  if(length(word) == 11) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[10])))])\n  }\n  \n  if(length(word) == 12) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[11])))])\n  }\n  \n  if(length(word) == 13) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[12])))])\n  }\n  \n  if(length(word) == 14) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[13])))])\n  }\n  \n  if(length(word) == 15) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[14])))])\n  }\n  \n  if(length(word) == 16) {\n    return(vowels[which.min(abs(vowels\
    \ - tolower(word[15])))])\n  }\n  \n  if(length(word) == 17) {\n    return", "\n\
    \  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\",\
    \ \"U\")\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  ", "\n\
    \  vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  ", "\n  \n  vowels\
    \ <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n  \n  vowel_count <- 0\n  \n  for(i\
    \ in 1:length(word)) {\n    if(word[i] == \"a\" | word[i] == \"e\" | word[i] ==\
    \ \"i\" | word[i] == \"o\" | word[i] == \"u\") {\n      vowel_count <- vowel_count\
    \ + 1\n    }\n  }\n  \n  if(vowel_count > 1) {\n    for(i in 1:length(word)) {\n\
    \      if(word[length(word)] == \"a\" | word[length(word)] == \"e\" | word[length(word)]\
    \ == \"i\" | word[length(word)] == \"o\" | word[length(word)] == \"u\") {\n  \
    \      vowel_count <- vowel_count - 1\n      }\n    }\n  }\n  \n  if(vowel_count\
    \ == 0) {\n    return(\"\")\n  }\n  \n  for(i in 1:length(word)) {\n    if(word[i]\
    \ == \"a\" | word[i] == \"e\" | word[i] == \"i\" | word[i] == \"o\" | word[i]\
    \ == \"u\") {\n      return(word[i])\n    }\n  }\n  \n  return(\"\")\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_157_right_angle_triangle
language: r
prompt: "# Given the lengths of the three sides of a triangle. Return True if the\
  \ three\n# sides form a right-angled triangle, False otherwise.\n# A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n# 90 degree.\n#\
  \ Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1, 2,\
  \ 3) == False\nright_angle_triangle <- function(a, b, c) {"
tests: "test_humaneval <- function() {\ncandidate <- right_angle_triangle\n    if(!identical(candidate(3,\
  \ 4, 5), TRUE)){quit('no', 1)}\n    if(!identical(candidate(1, 2, 3), FALSE)){quit('no',\
  \ 1)}\n    if(!identical(candidate(10, 6, 8), TRUE)){quit('no', 1)}\n    if(!identical(candidate(2,\
  \ 2, 2), FALSE)){quit('no', 1)}\n    if(!identical(candidate(7, 24, 25), TRUE)){quit('no',\
  \ 1)}\n    if(!identical(candidate(10, 5, 7), FALSE)){quit('no', 1)}\n    if(!identical(candidate(5,\
  \ 12, 13), TRUE)){quit('no', 1)}\n    if(!identical(candidate(15, 8, 17), TRUE)){quit('no',\
  \ 1)}\n    if(!identical(candidate(48, 55, 73), TRUE)){quit('no', 1)}\n    if(!identical(candidate(1,\
  \ 1, 1), FALSE)){quit('no', 1)}\n    if(!identical(candidate(2, 2, 10), FALSE)){quit('no',\
  \ 1)}\n}\ntest_humaneval()"
completions: ["\n  a > b & b > c & a > c\n}\n", "\n  a > b & b > c & c > a\n}\n",
  "\n  \n  # Check that the sides are non-negative\n  if(a < 0 || b < 0 || c < 0)\
    \ {\n    stop(\"All sides of the triangle must be non-negative\")\n  }\n  \n \
    \ # Check that the sides are equal\n  if((a == b) && (a == c)) {\n    stop(\"\
    All sides of the triangle must be equal\")\n  }\n  \n  # Check that the sides\
    \ are equal\n  if((b == c)) {\n    stop(\"All sides of the triangle must be equal\"\
    )\n  }\n  \n  # Check that the sides are equal\n  if((a == b) || (b == c) || (c\
    \ == a)) {\n    stop(\"All sides of the triangle must be equal\")\n  }\n  \n \
    \ # Check that the sides are equal\n  if((a == b) || (b == c) || (c == a) || (a\
    \ == c) || (b == a)) {\n    stop(\"All sides of the triangle must be equal\")\n\
    \  }\n  \n  # Check that the sides are equal\n  if((a == b) || (b == c) || (c\
    \ == a) || (a == c) || (b == a)) {\n    stop(\"All sides of the triangle must\
    \ be equal\")\n  }\n  \n  # Check that the sides are equal\n  if((a == b) || (b\
    \ == c) || (c == a) || (a == c) || (b == a)) {\n    stop(\"All sides of the triangle\
    \ must be equal\")\n  }\n  \n  # Check that the sides are equal\n  if((a == b)\
    \ || (b == c) || (c == a) || (a == c) || (b == a)) {\n    stop(\"All sides of\
    \ the triangle must be equal\")\n  }\n  \n  # Check that the sides are equal\n\
    \  if((a == b) || (b == c) || (c == a) || (a == c) || (b == a)) {\n    stop(\"\
    All sides of the triangle must be equal\")\n  }\n  \n  # Check that the sides\
    \ are equal\n  if((a == b) || (b == c) || (c == a) || (a == c) || (b == a)) {\n\
    \    stop(\"All sides of the triangle must be equal\")\n  }\n  \n  # Check that\
    \ the sides are equal\n  if((a == b) || (b == c) || (c == a) || (a == c) || (b\
    \ == a)) {\n    stop(\"All sides of the triangle must be equal\")\n  }\n  \n \
    \ # Check that the sides are equal\n  if((a == b) || (b == c) || (c == a) || (a\
    \ == c) || (b == a)) {\n    stop(\"All sides of the triangle must be equal\")\n\
    \  }\n  \n  # Check that the sides are equal\n  if((a == b) || (b == c) || (c\
    \ == a) || (", "\n  a > b & a > c & b > c & a + b > c\n}\n", "\n  a > b & a >\
    \ c & b > c & a + b + c > 0 & a + b > c\n}\n", "\n  a < b & b < c & a > c\n}\n",
  "\n  a > b & a > c & b > c & a + b + c > 0 & a + b > c & b + c > a\n}\n", "\n  a\
    \ > b & a > c & b > c & a + b > c\n}\n", "\n  a > b & b > c & c > a\n}\n", "\n\
    \  a > b & b > c & a > c\n}\n", "\n  a > b & a > c & b > c & a + b > c\n}\n",
  "\n  \n  a <- abs(a)\n  b <- abs(b)\n  c <- abs(c)\n  \n  if((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n    \n    triangle_angle_90 <- function(x, y, z) {\n\
    \      \n      x <- abs(x)\n      y <- abs(y)\n      z <- abs(z)\n      \n   \
    \   if((x > y) && (x > z)) {\n        \n        y <- y - x\n        \n      }\
    \ else if((y > x) && (y > z)) {\n        \n        x <- x - y\n        \n    \
    \  } else if((z > x) && (z > y)) {\n        \n        x <- x - z\n        \n \
    \     } else if((x > y) && (y > z)) {\n        \n        y <- y - z\n        \n\
    \      } else if((y > x) && (z > y)) {\n        \n        x <- x - y\n       \
    \ \n      } else if((z > x) && (y > z)) {\n        \n        x <- x - z\n    \
    \    \n      } else if((x > y) && (z > y)) {\n        \n        y <- y - z\n \
    \       \n      } else if((y > x) && (z > y)) {\n        \n        x <- x - y\n\
    \        \n      } else if((z > x) && (y > z)) {\n        \n        x <- x - z\n\
    \        \n      } else if((x > y) && (y > z)) {\n        \n        y <- y - z\n\
    \        \n      } else if((y > x) && (z > y)) {\n        \n        x <- x - y\n\
    \        \n      } else if((z > x) && (y > z)) {\n        \n        x <- x - z\n\
    \        \n      } else if((x > y) && (y > z)) {\n        \n        y <- y - z\n\
    \        \n      } else if((y > x) && (z > y)) {\n        \n        x <- x - y\n\
    \        \n      } else if((z > x) && (y > z)) {\n        \n        x <- x - z\n\
    \        \n      } else if((x > y) && (y > z)) {\n        \n        y <- y - z\n\
    \        \n      } else if((y > x) && (z > y)) {\n        \n        x <- x - y\n\
    \        \n      } else if((z > x) && (y > z)) {\n        \n        x <- x - z\n\
    \        \n      } else if((x > y) && (y > z)) {\n        \n        y <- y - z\n\
    \        \n      } else if((y > ", "\n  a < b && a < c && b < c && a + b > c &&\
    \ a + c > b && b + c > a\n}\n", "\n  a > b && a > c || b > c || a > c\n}\n</cell>\n\
    <cell>", "\n  a > b & b > c & c > a\n}\n", "\n  a > b && a > c || b > c || a >\
    \ b && b > c || b > a && c > a\n}\n", "\n  a > b && a > c || b > c || a > c\n\
    }\n", "\n  a > b && a > c || b > c || a > c || b > a || c > a || c > b || a >\
    \ b\n}\n", "\n  a < b & b < c & a > c & a > b & b > c & c > a & c > b\n}\n", "\n\
    \  a > b & a > c & b > c & a + b > c\n}\n</code>\n<|/ a tags=r |>\n<| c |>\nThanks\
    \ for your answer. I'm sorry I didn't specify this in my question, but I do want\
    \ to use base R. I'm going to edit my question to reflect this.\n<|/ c |>\n<|\
    \ c |>\nI edited my answer to include a base R solution. Hope it helps.\n<|/ c\
    \ |>\n<| a tags=r |>\nHere's a base R solution:\n<code>\nright_angle_triangle\
    \ <- function(a, b, c) {\n  a > b & a > c & b > c & a + b > c\n}\n\nright_angle_triangle(3,\
    \ 4, 5)"]
stop_tokens:
- "\n#"
- "\n```"

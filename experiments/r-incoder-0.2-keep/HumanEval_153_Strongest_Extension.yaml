name: HumanEval_153_Strongest_Extension
language: r
prompt: "# You will be given the name of a class (a string) and a list of extensions.\n\
  # The extensions are to be used to load additional classes to the class. The\n#\
  \ strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  # letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n# in the extension's name, the strength is given by the fraction CAP - SM. \n\
  # You should find the strongest extension and return a string in this \n# format:\
  \ ClassName.StrongestExtensionName.\n# If there are two or more extensions with\
  \ the same strength, you should\n# choose the one that comes first in the list.\n\
  # For example, if you are given \"Slices\" as the class and a list of the\n# extensions:\
  \ ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n# return 'Slices.SErviNGSliCes'\
  \ since 'SErviNGSliCes' is the strongest extension \n# (its strength is -1).\n#\
  \ Example:\n# for Strongest_Extension('my_class', ['AA', 'Be', 'CC']) == 'my_class.AA'\n\
  Strongest_Extension <- function(class_name, extensions) {"
tests: "test_humaneval <- function() {\ncandidate <- Strongest_Extension\n    if(!identical(candidate('Watashi',\
  \ c('tEN', 'niNE', 'eIGHt8OKe')), 'Watashi.eIGHt8OKe')){quit('no', 1)}\n    if(!identical(candidate('Boku123',\
  \ c('nani', 'NazeDa', 'YEs.WeCaNe', '32145tggg')), 'Boku123.YEs.WeCaNe')){quit('no',\
  \ 1)}\n    if(!identical(candidate('__YESIMHERE', c('t', 'eMptY', 'nothing', 'zeR00',\
  \ 'NuLl__', '123NoooneB321')), '__YESIMHERE.NuLl__')){quit('no', 1)}\n    if(!identical(candidate('K',\
  \ c('Ta', 'TAR', 't234An', 'cosSo')), 'K.TAR')){quit('no', 1)}\n    if(!identical(candidate('__HAHA',\
  \ c('Tab', '123', '781345', '-_-')), '__HAHA.123')){quit('no', 1)}\n    if(!identical(candidate('YameRore',\
  \ c('HhAas', 'okIWILL123', 'WorkOut', 'Fails', '-_-')), 'YameRore.okIWILL123')){quit('no',\
  \ 1)}\n    if(!identical(candidate('finNNalLLly', c('Die', 'NowW', 'Wow', 'WoW')),\
  \ 'finNNalLLly.WoW')){quit('no', 1)}\n    if(!identical(candidate('_', c('Bb', '91245')),\
  \ '_.Bb')){quit('no', 1)}\n    if(!identical(candidate('Sp', c('671235', 'Bb')),\
  \ 'Sp.671235')){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  \n  # Your code here\n  \n}\n", "\n  \n  # Initialize a list to\
    \ store the extensions' strengths.\n  extensions_strength <- list()\n  \n  # Iterate\
    \ through the extensions and find the strongest one.\n  for(i in 1:length(extensions))\
    \ {\n    \n    # Get the extension's name.\n    extension_name <- substr(class_name,\
    \ 1, nchar(class_name) - i)\n    \n    # Get the extension's strength.\n    extension_strength\
    \ <- toupper(substr(extension_name, 1, nchar(extension_name) - i)) \n    \n  \
    \  # Add the extension's strength to the list.\n    extensions_strength[[i]] <-\
    \ extension_strength\n  }\n  \n  # Sort the extensions strength according to the\
    \ strength values.\n  extensions_strength <- sort(extensions_strength, decreasing\
    \ = TRUE)\n  \n  # Return the strongest extension.\n  return(paste(substr(class_name,\
    \ 1, nchar(class_name) - 1), extensions_strength[[1]]))\n}\n", "\n  extension_strength\
    \ <- 0\n  \n  for(i in 1:length(extensions)) {\n    extension_name <- substr(class_name,\
    \ 1, i)\n    extension_name <- substr(extension_name, 1, i)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n", "\n  extension_strength <- sapply(extensions, function(x) {\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(substr(x, 2, nchar(x)))\n    x\
    \ <- toupper(substr(x, 1, 1))\n    x <- tolower(", "\n  extension_strength <-\
    \ 0\n  \n  for(i in 1:length(extensions)) {\n    extension_name <- substr(class_name,\
    \ 1, nchar(class_name) - i - 1)\n    extension_name <- substr(extension_name,\
    \ 1, nchar(extension_name) - i - 1)\n    extension_name <- substr(extension_name,\
    \ 1, nchar(extension_name))\n    extension_name <- tolower(extension_name)\n \
    \   extension_name <- toupper(extension_name)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    \n    extension_strength <- extension_strength + \n      length(extension_name)\
    \ - length(toupper(extension_name))\n  }\n  \n  if(extension_strength == 0) return(class_name)\n\
    \  \n  extension_strength <- extension_strength / length(extensions)\n  \n  for(i\
    \ in 1:length(extensions)) {\n    extension_name <- substr(class_name, 1, nchar(class_name)\
    \ - i - 1)\n    extension_name <- substr(extension_name, 1, nchar(extension_name)\
    \ - i - 1)\n    extension_name <- substr(extension_name, 1, nchar(extension_name))\n\
    \    extension_name <- tolower(extension_name)\n    extension_name <- toupper(extension_name)\n\
    \    extension_name <- substr(extension_name, 1, 1)\n    \n    extension_strength\
    \ <- extension_strength + \n      length(extension_name) - length(toupper(extension_name))\n\
    \  }\n  \n  if(extension_strength == 0) return(class_name)\n  \n  extension_strength\
    \ <- extension_strength / length(extensions)\n  \n  for(i in 1:length(extensions))\
    \ {\n    extension_name <- substr(class_name, 1, nchar(class_name) - i - 1)\n\
    \    extension_name <- substr(extension_name, 1, nchar(extension_name) - i - 1)\n\
    \    extension_name <- substr(extension_name, 1, nchar(extension_name))\n    extension_name\
    \ <- tolower(extension_name)\n    extension_name <- toupper(extension_name)\n\
    \    extension_name <- substr(extension_name, 1, 1)\n    \n    extension_strength\
    \ <- extension_strength + \n      length(extension_name) - length(toupper(extension_name))\n\
    \  }\n  \n  if(extension_strength == 0) return(class_name)\n  \n  extension_strength\
    \ <- extension_strength / length(extensions)\n  \n  for(i in 1:length(extensions))\
    \ {\n    extension_name <- substr(class_name, 1, nchar(class_name) - i - 1)\n\
    \    extension_name <- substr(extension_name, 1, nchar(extension_name) - i - 1)\n\
    \    extension_name <- substr(extension_name, 1, nchar(extension_name))\n    extension_name\
    \ <- tolower(", "\n  extension_strength <- 0\n  \n  for(i in 1:length(extensions))\
    \ {\n    extension_name <- substr(class_name, i, i)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 2, nchar(extension_name))\n\
    \    extension_name <- toupper(extension_name)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- tolower(extension_name)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name, 1,\
    \ 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name <-\
    \ substr(", "\n  extension_strength <- 0\n  \n  for(i in 1:length(extensions))\
    \ {\n    extension_name <- substr(class_name, 1, nchar(class_name) - i)\n    extension_name\
    \ <- substr(extension_name, 1, nchar(extension_name) - i)\n    extension_name\
    \ <- substr(extension_name, 1, nchar(extension_name) - i)\n    extension_strength\
    \ <- extension_strength + \n      length(toupper(extension_name)) - length(tolower(extension_name))\n\
    \  }\n  \n  if(extension_strength == 0) return(class_name)\n  \n  extension_strength\
    \ <- extension_strength / length(extensions)\n  \n  if(extension_strength < 0)\
    \ return(class_name)\n  \n  extension_name <- substr(class_name, 1, nchar(class_name)\
    \ - \n    length(extensions) + 1)\n  \n  return(paste(class_name, extension_name,\
    \ sep = '.'))\n}\n", "\n  \n  # Your code here\n  \n}\n", "\n  extensions_count\
    \ <- length(extensions)\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count + 1\n  extension", "\n  \n  extension_strength <- 0\n  \n\
    \  for(i in 1:length(extensions)) {\n    \n    extension_name <- substr(class_name,\
    \ 1, i)\n    extension_name <- substr(extension_name, 1, i)\n    \n    extension_strength\
    \ <- extension_strength + \n      length(extension_name) - length(tolower(extension_name))\n\
    \    \n  }\n  \n  extension_strength <- extension_strength / length(extensions)\n\
    \  \n  if(extension_strength > 0) {\n    \n    extension_name <- substr(class_name,\
    \ 1, length(class_name))\n    extension_name <- substr(extension_name, 1, length(extension_name))\n\
    \    \n    return(paste0(class_name, \".\", extension_name))\n    \n  } else {\n\
    \    \n    return(class_name)\n    \n  }\n  \n}\n", "\n  extension_strength <-\
    \ 0\n  \n  for(i in 1:length(extensions)) {\n    extension_name <- substr(class_name,\
    \ 1, nchar(class_name) - i)\n    extension_name <- substr(extension_name, 1, nchar(extension_name)\
    \ - i)\n    extension_name <- substr(extension_name, 1, nchar(extension_name)\
    \ - i)\n    extension_strength <- extension_strength + toupper(extension_name)\
    \ - tolower(extension_name)\n  }\n  \n  if(extension_strength > 0) {\n    extension_strength\
    \ <- extension_strength - 1\n  }\n  \n  return(paste(class_name, extensions[which.max(extension_strength)],\
    \ sep = '.'))\n}\n", "\n  extensions_count <- length(extensions)\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extension",
  "\n  extension_strength <- 0\n  extension_name <- \"\"\n  \n  for(i in 1:length(extensions))\
    \ {\n    extension_name <- paste(extension_name, extensions[i], sep = \".\")\n\
    \    extension_strength <- extension_strength + toupper(class_name[i]) - toupper(extension_name[i])\n\
    \  }\n  \n  if(extension_strength == 0) return(class_name)\n  \n  extension_strength\
    \ <- extension_strength / length(extensions)\n  \n  for(i in 1:length(extensions))\
    \ {\n    if(extension_strength > 0) break\n    extension_strength <- extension_strength\
    \ - toupper(class_name[i]) - toupper(extension_name[i])\n  }\n  \n  return(paste(class_name,\
    \ extension_name, sep = \".\"))\n}\n", "\n  extension_strength <- 0\n  \n  for\
    \ (i in 1:length(extensions)) {\n    extension_name <- substr(class_name, 1, i)\n\
    \    extension_name <- substr(extension_name, 1, i)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    extension_name\
    \ <- substr(extension_name, 1, 1)\n    extension_name <- substr(extension_name,\
    \ 1, 1)\n    extension_name <- substr(extension_name, 1, 1)\n    ", "\n  extensions_count\
    \ <- length(extensions)\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extensions_count <- extensions_count - 1\n  extensions_count\
    \ <- extensions_count - 1\n  extension", "\n  \n  # Your code here\n  \n}\n</cell>\n\
    <cell>", "\n  extension_strength <- 0\n  \n  for(i in 1:length(extensions)) {\n\
    \    extension_name <- substr(class_name, i, i)\n    extension_strength <- extension_strength\
    \ + toupper(extension_name) - tolower(extension_name)\n  }\n  \n  if(extension_strength\
    \ > 0) {\n    return(paste0(class_name, '.', extensions[which.max(extension_strength)]))\n\
    \  } else {\n    return(class_name)\n  }\n}\n", "\n  \n  # Initialize a list to\
    \ store the strongest extension\n  strongest_extension <- list()\n  \n  # Loop\
    \ through the list of extensions\n  for(i in 1:length(extensions)) {\n    \n \
    \   # Initialize a counter to keep track of the number of uppercase letters\n\
    \    # in the extension\n    counter <- 0\n    \n    # Loop through the letters\
    \ in the extension\n    for(j in 1:length(extensions[[i]])) {\n      \n      #\
    \ Increment the counter by 1\n      counter <- counter + 1\n      \n      # If\
    \ the letter is uppercase\n      if(toupper(extensions[[i]][[j]]) == extensions[[i]][[j]])\
    \ {\n        \n        # Update the counter\n        counter <- counter - 1\n\
    \      }\n    }\n    \n    # If the counter is less than zero, append the extension\
    \ to the list\n    if(counter < 0) {\n      strongest_extension <- c(strongest_extension,\
    \ extensions[[i]])\n    }\n  }\n  \n  # Return the strongest extension\n  return(paste(class_name,\
    \ strongest_extension[which.max(strongest_extension)], sep = '.'))\n}\n", "\n\
    \  \n  extension_list <- sort(extensions, decreasing = TRUE)\n  \n  strength <-\
    \ 0\n  \n  for(i in 1:length(extension_list)) {\n    \n    extension_name <- substr(extension_list[i],\
    \ 1, nchar(extension_list[i])-1)\n    \n    extension_name <- tolower(extension_name)\n\
    \    \n    extension_name <- gsub(\"[^A-Z]\", \"\", extension_name)\n    \n  \
    \  extension_name <- gsub(\"^\", \"\", extension_name)\n    \n    extension_name\
    \ <- gsub(\"$\", \"\", extension_name)\n    \n    extension_name <- gsub(\"_\"\
    , \"\", extension_name)\n    \n    extension_name <- gsub(\"\\\\\", \"\", extension_name)\n\
    \    \n    extension_name <- gsub(\"\\\\\", \"\", extension_name)\n    \n    extension_name\
    \ <- gsub(\"\\\\\", \"\", extension_name)\n    \n    extension_name <- gsub(\"\
    \\\\\", \"\", extension_name)\n    \n    extension_name <- gsub(\"\\\\\", \"\"\
    , extension_name)\n    \n    extension_name <- gsub(\"\\\\\", \"\", extension_name)\n\
    \    \n    extension_name <- gsub(\"\\\\\", \"\", extension_name)\n    \n    extension_name\
    \ <- gsub(\"\\\\\", \"\", extension_name)\n    \n    extension_name <- gsub(\"\
    \\\\\", \"\", extension_name)\n    \n    extension_name <- gsub(\"\\\\\", \"\"\
    , extension_name)\n    \n    extension_name <- gsub(\"\\\\\", \"\", extension_name)\n\
    \    \n    extension_name <- gsub(\"\\\\\", \"\", extension_name)\n    \n    extension_name\
    \ <- gsub(\"\\\\\", \"\", extension_name)\n    \n    extension_name <- gsub(\"\
    \\\\\", \"\", extension_name)\n    \n    extension_name <- gsub(\"\\\\\", \"\"\
    , extension_name)\n    \n    extension_name <- gsub(\"\\\\\", \"\", extension_name)\n\
    \    \n    extension_name <- gsub(\"\\\\\", \"\", extension_name)\n    \n    extension_name\
    \ <- gsub(\"\\\\\", \"\", extension_name)\n    \n    extension_name <- gsub(\"\
    \\\\\", \"\", extension_name)\n    \n    extension_name <- gsub(\"\\\\\", \"\"\
    , extension_name)\n    \n    extension_name <- gsub(\"\\\\\", \"\", extension_name)\n\
    \    \n    extension_name <- gsub(\"\\\\\", \"\", extension_name)\n    \n    extension_name\
    \ <- gsub(\"\\\\\", \"\", extension_name)\n    \n    extension_name <- gsub(\"",
  "\n  \n  # Write your code here\n  \n}\n</cell>\n<text>\nNow that you have written\
    \ the function, you can test it by running the following cell:\n\n\n</text>\n\
    <cell>"]
stop_tokens:
- "\n#"
- "\n```"

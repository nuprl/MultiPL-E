name: HumanEval_31_is_prime
language: r
prompt: "# Return true if a given number is prime, and false otherwise.\n# >>> is_prime(6)\n\
  # False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n# True\n# >>> is_prime(13441)\n\
  # True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n# False\n# >>> is_prime(1)\n\
  # False\nis_prime <- function(n) {"
tests: "test_humaneval <- function() {\ncandidate <- is_prime\n    if(!identical(candidate(6),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate(101), TRUE)){quit('no', 1)}\n\
  \    if(!identical(candidate(11), TRUE)){quit('no', 1)}\n    if(!identical(candidate(13441),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate(61), TRUE)){quit('no', 1)}\n\
  \    if(!identical(candidate(4), FALSE)){quit('no', 1)}\n    if(!identical(candidate(1),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate(5), TRUE)){quit('no', 1)}\n\
  \    if(!identical(candidate(11), TRUE)){quit('no', 1)}\n    if(!identical(candidate(17),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate(85), FALSE)){quit('no', 1)}\n\
  \    if(!identical(candidate(77), FALSE)){quit('no', 1)}\n    if(!identical(candidate(255379),\
  \ FALSE)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  return(n <= 1)\n}\n", "\n  # Primality test\n  n <- as.integer(n)\n\
    \  n <- ifelse(n < 2, FALSE, ifelse(n < 3, TRUE, n%%2))\n  return(ifelse(n > 2,\
    \ FALSE, TRUE))\n}\n", "\n  return(all(n %% 2:2:n) == FALSE)\n}\n", "\n  return(all(n\
    \ %% 2:2:n) == FALSE)\n}\n", "\n  return(all(n %% 2:2:n) == FALSE)\n}\n", "\n\
    \  return(all(n %% 2:2:n) == FALSE)\n}\n", "\n  return(all(n %% 2:2:n) == FALSE)\n\
    }\n", "\n  return(n <= 1)\n}\n", "\n  return(all(n %% 2:2:n) == FALSE)\n}\n",
  "\n  n <- as.integer(n)\n  return(all(n %in% c(2, 3)))\n}\n", "\n  n <- as.integer(n)\n\
    \  return(n > 1 && n <= (sqrt(n) + 1))\n}\n", "\n  n <- as.integer(n)\n  return(all(n\
    \ %% 2:2:n) == FALSE)\n}\n", "\n  n <- as.integer(n)\n  return(all(n %% 2:2:n)\
    \ == FALSE)\n}\n", "\n  return(n <= 1)\n}\n", "\n  return(n %% 2 != 0 && n %%\
    \ 3 != 0 && n %% 5 != 0)\n}\n", "\n  return(all(n %% 2:2:n) == FALSE)\n}\n", "\n\
    \  return(n %% 2 != 0)\n}\n", "\n  return(all(n %% 2:2:n) == FALSE)\n}\n", "\n\
    \  n <- as.integer(n)\n  return(n %% 2 != 0 && (n %% 3 != 0 || n %% 5 != 0))\n\
    }\n", "\n  return(n %% 2 != 0 && (n %% 3 != 0 || n %% 5 != 0))\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_36_fizz_buzz
language: r
prompt: "# Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
  # 2\n# >>> fizz_buzz(79)\n# 3\nfizz_buzz <- function(n) {"
tests: "test_humaneval <- function() {\ncandidate <- fizz_buzz\n    if(!identical(candidate(50),\
  \ 0)){quit('no', 1)}\n    if(!identical(candidate(78), 2)){quit('no', 1)}\n    if(!identical(candidate(79),\
  \ 3)){quit('no', 1)}\n    if(!identical(candidate(100), 3)){quit('no', 1)}\n   \
  \ if(!identical(candidate(200), 6)){quit('no', 1)}\n    if(!identical(candidate(4000),\
  \ 192)){quit('no', 1)}\n    if(!identical(candidate(10000), 639)){quit('no', 1)}\n\
  \    if(!identical(candidate(100000), 8026)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| c |>\nThanks, this was very helpful.\n<|/ c |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(n) {\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n\
    <code>\nfizzbuzz <- function(n) {\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n) {\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz\
    \ <- function(n) {\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n\
    <| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n) {\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(1)\n  if(n%%13", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a tags=recursion,r |>\n<| c |>\nWhile this code may answer\
    \ the question, providing additional context regarding why and/or how this code\
    \ answers the question improves its long-term value.\n<|/ c |>\n<| c |>\nWhile\
    \ this code may answer the question, providing additional context regarding why\
    \ and/or how this code answers the question improves its long-term value.\n<|/\
    \ c |>\n<| a |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n -\
    \ 1))\n}\n</code>\n<|/ a tags=recursion,r dscore=0 |>\n<| a tags=recursion,r |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=recursion,r |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=recursion,r |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how ", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(paste(\"Fizz\", if(n%%13==0) \"Buzz\" else\
    \ \"\", sep = \"\"))\n  if(n%%13==0) return(paste(\"FizzBuzz\", if(n%%11==0) \"\
    Buzz\" else \"\", sep = \"\"))\n}\n", "\n  n <- n\n  n <- ifelse(n %% 11 == 0\
    \ | n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <-\
    \ ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n %% 13,\
    \ n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %%\
    \ 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n\
    \  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n\
    \ %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n\
    \ %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n\
    \  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n\
    \ %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n\
    \  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n\
    \ %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n\
    \ %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n\
    \  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n\
    \ %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n\
    \  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n", "\n  n <- n\n  return(\n  \
    \  sum(\n      ifelse(\n        n %% 11 == 0 & n %% 13 == 0,\n        1,\n   \
    \     ifelse(\n          n %% 11 == 0 | n %% 13 == 0,\n          2,\n        \
    \  ifelse(\n            n %% 11 == 0 | n %% 13 == 1,\n            3,\n       \
    \     ifelse(\n              n %% 11 == 1 | n %% 13 == 1,\n              4,\n\
    \              ifelse(\n                n %% 11 == 1 | n %% 13 == 2,\n       \
    \         5,\n                ifelse(\n                  n %% 11 == 2 | n %% 13\
    \ == 2,\n                  6,\n                  ifelse(\n                   \
    \ n %% 11 == 2 | n %% 13 == 3,\n                    7,\n                    ifelse(\n\
    \                      n %% 11 == 3 | n %% 13 == 3,\n                      8,\n\
    \                      ifelse(\n                        n %% 11 == 3 | n %% 13\
    \ == 4,\n                        9,\n                        ifelse(\n       \
    \                   n %% 11 == 4 | n %% 13 == 4,\n                          10,\n\
    \                          ifelse(\n                            n %% 11 == 4 |\
    \ n %% 13 == 5,\n                            11,\n                           \
    \ ifelse(\n                              n %% 11 == 5 | n %% 13 == 5,\n      \
    \                        12,\n                              ifelse(\n        \
    \                        n %% 11 == 5 | n %% 13 == 6,\n                      \
    \          13,\n                                ifelse(\n                    \
    \              n %% 11 == 6 | n %% 13 == 6,\n                                \
    \  14,\n                                  ifelse(\n                          \
    \          n %% 11 == 6 | n %% 13 == 7,\n                                    15,\n\
    \                                    ifelse(\n                               \
    \       n %% 11 == 7 | n %% 13 == 7,\n                                      16,\n\
    \                                      ifelse(\n                             \
    \           n %% 11 == 7 | n %% 13 == 8,\n                                   \
    \     17,\n                                        ifelse(\n                 \
    \                         n %% 11 == 8 | n %% 13 == 8,\n                     \
    \                     18,\n                                          ifelse(\n\
    \                                            n %% 11 == 8 | n %% 13 == 9,\n  \
    \                                          19,\n                             \
    \               ifelse(\n                                              n %% 11\
    \ == 9 | n %% 13 == 9,\n                                              20,\n  \
    \                                            ifelse(\n                       \
    \                         n %% 11 == 9 | n %% 13 == 10,\n                    \
    \                            21,\n                                           \
    \     ifelse(\n                                                  n %% 11 == 10\
    \ | n %% 13 == 10,\n                                                  22,\n  \
    \                                                ifelse(\n                   \
    \                                 n %% 11 == 10 | n %% 13 == 11,\n           \
    \                                         23,\n                              \
    \                      ifelse(\n                                             \
    \         n %% 11 == 11 | n %% 13 == 11,\n                                   \
    \                   24,\n                                                    \
    \  ifelse(\n                                                        n %% 11 ==\
    \ 11 | n %% 13 == 12,\n", "\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n\
    \  if(n%%13==0) return(2)\n  return(fizz_buzz(n/11)+3)\n}\n</code>\n<|/ a |>\n\
    <| c |>\nThanks so much for the answer! I really appreciate it. I was wondering\
    \ if you could explain the code a little more? I'm new to R and I'm having trouble\
    \ understanding how the code works. I understand that `fizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n\
    \  return(fizz_buzz(n/11)+3)\n}` works, but I don't understand how it works. I\
    \ understand that `if(n%%11==0) return(0)` returns 0 if the number n is divisible\
    \ by 11, but I don't understand how `if(n%%13==0) return(2)` returns 2 if the\
    \ number n is divisible by 13. Also, I don't understand how `return(fizz_buzz(n/11)+3)`\
    \ works. Could you explain how that works? Thanks again!\n<|/ c |>\n<| c |>\n\
    The `return` statement returns from the function to the calling environment. `fizz_buzz(n/11)`\
    \ returns the number of times `7` appears in integers less than `n` which are\
    \ divisible by 11. `fizz_buzz(n/11)` returns `0` if the number `n` is divisible\
    \ by 11, `2` if the number `n` is divisible by 13, and `fizz_buzz(n/11)+3` returns\
    \ the number of times `7` appears in integers less than `n` which are divisible\
    \ by 11 and 13. `return(fizz_buzz(n/11)+3)` returns the number of times `7` appears\
    \ in integers less than `n` which are divisible by 11 and 13. `return(fizz_buzz(n/11)+3)`\
    \ returns `0` if the number `n` is divisible by 11, `2` if the number `n` is divisible\
    \ by 13, and `fizz_buzz(n/11)+3` returns the number of times `7` appears in integers\
    \ less than `n` which are divisible by 11 and 13. `return(fizz_buzz(n/11)+3)`\
    \ returns `0` if the number `n` is divisible by 11, `2` if the number `n` is divisible\
    \ by 13, and `fizz_buzz(n/11", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n\
    \ %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n   \
    \ return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n\
    \ %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n\
    \    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n\
    \ %% 11)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks for your answer!\
    \ I appreciate it a lot!\n<|/ c |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz\
    \ <- function(n) {\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n\
    \ %% 13)\n  }\n  return(n %% 11)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0 | n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %%\
    \ 13 != 0) {\n    return(n %% 13)\n  }\n  return(n %% 11)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11\
    \ == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(n\
    \ %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n %% 11)\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 !=\
    \ 0) {\n    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n\
    \  }\n  return(n %% 11)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n\
    fizzbuzz <- function(n) {\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n \
    \   return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n %%\
    \ 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 !=\
    \ 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0)\
    \ return(1)\n  if(n%%11!=0 & n%%13==0) return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a dscore=1 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0 & x%%13!=0)\
    \ return(1)\n  if(x%%11!=0 & x%%13==0) return(2)\n  if(x%%11!=0 & x%%13!=0) return(3)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a dscore=1 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0 & x%%13!=0)\
    \ return(1)\n  if(x%%11!=0 & x%%13==0) return(2)\n  if(x%%11!=0 & x%%13!=0) return(3)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a tags=r,fizzbuzz,for-loop |>\n\
    <code>\nfizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0\
    \ & x%%13!=0) return(1)\n  if(x%%11!=0 & x%%13==0) return(2)\n  if(x%%11!=0 &\
    \ x%%13!=0) return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0 &\
    \ x%%13!=0) return(1)\n  if(x%%11!=0 & x%%13==0) return(2)\n  if(x%%11!=0 & x%%13!=0)\
    \ return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 3 ==\
    \ 0) return(\"Fizz\")\n  if(x %% 5 == 0) return(\"Buzz\")\n  if(x %% 7 == 0) return(\"\
    FizzBuzz\")\n  return(paste0(as.character(x),\"!\"))\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 3 ==\
    \ 0) return(\"Fizz\")\n  if(x %% 5 == 0) return(\"Buzz\")\n  if(x %% 7 == 0) return(\"\
    FizzBuzz\")\n  return(paste0(as.character(x),\"!\"))\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 3 == 0) return(\"\
    Fizz\")\n  if(x %% 5 == 0) return(\"Buzz\")\n  if(x %% 7 == 0) return(\"FizzBuzz\"\
    )\n  return(paste0(as.character(x),\"!\"))\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 3 ==\
    \ 0) return(\"Fizz\")\n  if(x %% 5 == 0) return(\"Buzz\")\n  if(x %% 7 == 0) return(\"\
    FizzBuzz\")\n  return(paste0(as.character(x),\"!\"))\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 3 == 0) return(\"\
    Fizz\")\n  if(x %% 5 == 0) return(\"Buzz\")\n  if(x %% 7 == 0) return(\"FizzBuzz\"\
    )\n  return(paste0(as.character(x),\"!\"))\n}\n</code>\n<|/ a tags=", "\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n\
    \ %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n\
    \ %% 13)\n  }\n  return(n %% 11)\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks\
    \ so much! I really appreciate it!\n<|/ c |>\n<| c |>\nNo problem! Glad I could\
    \ help!\n<|/ c |>\n<| a tags=r,fizzbuzz,for-loop,if-statement |>\nI like to use\
    \ dplyr for these types of problems:\n<code>\nlibrary(dplyr)\nlibrary(stringr)\n\
    \ndf <- data.frame(number = 1:100)\n\ndf %>% \n  mutate(fizzbuzz = ifelse(str_detect(number,\
    \ \"^[13579]$\"), \"FizzBuzz\", \"Fizz\"),\n         fizz = ifelse(str_detect(number,\
    \ \"^[13579]$\"), \"Fizz\", \"Buzz\"),\n         fizzbuzz = ifelse(str_detect(number,\
    \ \"^[13579]$\"), \"FizzBuzz\", \"FizzBuzz\")) %>% \n  mutate(fizzbuzz = ifelse(str_detect(number,\
    \ \"^[13579]$\"), \"FizzBuzz\", \"FizzBuzz\")) %>% \n  mutate(fizz = ifelse(str_detect(number,\
    \ \"^[13579]$\"), \"Fizz\", \"Buzz\")) %>% \n  mutate(fizz = ifelse(str_detect(number,\
    \ \"^[13579]$\"), \"Fizz\", \"Buzz\")) %>% \n  mutate(fizz = ifelse(str_detect(number,\
    \ \"^[13579]$\"), \"Fizz\", \"Buzz\")) %>% \n  mutate(fizz = ifelse(str_detect(number,\
    \ \"^[13579]$\"), \"Fizz\", \"Buzz\")) %>% \n  mutate(fizz = ifelse(str_detect(number,\
    \ \"^[13579]$\"), \"Fizz\", \"Buzz\")) %>% \n  mutate(fizz = ifelse(str_detect(number,\
    \ \"^[13579]$\"), \"Fizz\", \"Buzz\")) %>% \n  mutate(fizz = ifelse(str_detect(number,\
    \ \"^[13579]$\"), \"Fizz\", \"Buzz\")) %>% \n  mut", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0\
    \ & n %% 13 != 0) {\n    return(1)\n  } else if(n %% 11 != 0 & n %% 13 == 0) {\n\
    \    return(2)\n  } else if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\
    \ else {\n    return(n)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0\
    \ & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n\
    \  n <- ifelse(n %% 11 == 0 & n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0,\
    \ n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n\
    \ <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %%\
    \ 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13\
    \ == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n\
    \ %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n\
    \ <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n\
    \ %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0,\
    \ n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n\
    \ <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %%\
    \ 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13\
    \ == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n\
    \ %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n\
    \ <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n\
    \ %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n ", "\n  return(sum(n\
    \ %% 11 == 0 & n %% 13 == 0))\n}\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 3 or 5.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n\
    \  n <- ifelse(n %% 11 == 0, n, n %% 13 + 1)\n  n <- ifelse(n %% 11 == 0, n %%\
    \ 13, n %% 11 + 1)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13 + 1)\n  n <-\
    \ ifelse(n %% 13 == 0, n %% 11, n %% 13 + 1)\n  n <- ifelse(n %% 11 == 0, n %%\
    \ 13, n %% 11 + 1)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11 + 1)\n  n <-\
    \ ifelse(n %% 13 == 0, n %% 11, n %% 13 + 1)\n  n <- ifelse(n %% 13 == 0, n %%\
    \ 11, n %% 13 + 1)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11 + 1)\n  n <-\
    \ ifelse(n %% 11 == 0, n %% 13, n %% 11 + 1)\n  n <- ifelse(n %% 13 == 0, n %%\
    \ 11, n %% 13 + 1)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13 + 1)\n  n <-\
    \ ifelse(n %% 11 == 0, n %% 13, n %% 11 + 1)\n  n <- ifelse(n %% 11 == 0, n %%\
    \ 13, n %% 11 + 1)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13 + 1)\n  n <-\
    \ ifelse(n %% 13 == 0, n %% 11, n %% 13 + 1)\n  n <- ifelse(n %% 11 == 0, n %%\
    \ 13, n %% 11 + 1)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11 + 1)\n  n <-\
    \ ifelse(n %% 13 == 0, n %% 11, n %% 13 + 1)\n  n <- ifelse(n %% 13 == 0, n %%\
    \ 11, n %% 13 + 1)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11 + 1)\n  n <-\
    \ ifelse(n %% 11 == 0, n %% 13, n %% 11 + 1)\n  n <- ifelse(n %% 13 == 0, n %%\
    \ 11, n %% 13 + 1)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13 + 1)\n  n <-\
    \ ifelse(n %% 11 == 0, n %% 13, n %% 11 + 1)\n  n <- ifelse(n %% 11 == 0, n %%\
    \ 13, n %% 11 + 1)\n  n <- ifelse(n %% 13 == 0, ", "\n  n <- as.integer(n)\n \
    \ if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11)\
    \ + fizz_buzz(n/13))\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\nHere's a solution using recursion:\n<code>\nfizz_buzz <- function(n) {\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11)\
    \ + fizz_buzz(n/13))\n}\n\nfizz_buzz(50)", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks, this was\
    \ very helpful!\n<|/ c |>\n<| c |>\nThis doesn't work if you pass in `NA`\n<|/\
    \ c |>\n<| c |>\nI added a fix for NA\n<|/ c |>\n<| c |>\nThanks, I appreciate\
    \ it!\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x) {\n  if(is.na(x))\
    \ return(NA)\n  if(x %% 11 == 0 & x %% 13 == 0) return(0)\n  if(x %% 11 == 0)\
    \ return(1)\n  if(x %% 13 == 0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n  if(is.na(x))\
    \ return(NA)\n  if(x %% 11 == 0 & x %% 13 == 0) return(0)\n  if(x %% 11 == 0)\
    \ return(1)\n  if(x %% 13 == 0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n  if(is.na(x)) return(NA)\n\
    \  if(x %% 11 == 0 & x %% 13 == 0) return(0)\n  if(x %% 11 == 0) return(1)\n \
    \ if(x %% 13 == 0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n\
    <| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n  if(is.na(x)) return(NA)\n\
    \  if(x %% 11 == 0 & x %% 13 == 0) return(0)\n  if(x %% 11 == 0) return(1)\n \
    \ if(x %% 13 == 0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n  if(", "\n  n <- n\n\
    \  return(sum(as.integer(n %% 11) == 0 & as.integer(n %% 13) == 0))\n}\n", "\n\
    \  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0 &\
    \ n%%13==0) return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 3 or 5.\n\
    \n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 ==\
    \ 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %%\
    \ 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=2\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 &\
    \ n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    fizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11", "\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n \
    \ if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz,for-loop |>\n<| a tags=r,fizzbuzz,for-loop |>\nHere's a\
    \ solution using dplyr and purrr:\n<code>\nlibrary(dplyr)\nlibrary(purrr)\n\n\
    fizzbuzz <- function(x) {\n  x <- as.integer(x)\n  x <- x %>% \n    filter(x %%\
    \ 11 == 0 | x %% 13 == 0) %>% \n    summarise(count = n())\n  \n  if(is.null(x$count))\
    \ return(0)\n  \n  if(x$count > 0) return(x$count)\n  \n  return(ifelse(x %% 11\
    \ == 0, 3, ifelse(x %% 13 == 0, 2, 1)))\n}\n\nfizzbuzz(50)", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"Fizz\",n%%11))\n\
    \  if(n%%13==0) return(paste0(\"Buzz\",n%%13))\n  return(paste0(n))\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"\
    Fizz\",n%%11))\n  if(n%%13==0) return(paste0(\"Buzz\",n%%13))\n  return(paste0(n))\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n\
    \  if(n%%11==0) return(paste0(\"Fizz\",n%%11))\n  if(n%%13==0) return(paste0(\"\
    Buzz\",n%%13))\n  return(paste0(n))\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ | n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"Fizz\",n%%11))\n  if(n%%13==0)\
    \ return(paste0(\"Buzz\",n%%13))\n  return(paste0(n))\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"Fizz\",n%%11))\n\
    \  if(n%%13==0) return(paste0(\"Buzz\",n%%13))\n  return(paste0(n))\n}\n</code>\n\
    <|/ a tags=r,fizz", "\n  n <- as.integer(n)\n  if(n%%11==0 || n%%13==0) return(0)\n\
    \  if(n%%11==1) return(1)\n  if(n%%13==1) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks for your answer! I appreciate it!\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 ==\
    \ 0) return(\"Fizz\")\n  if(x %% 13 == 0) return(\"Buzz\")\n  if(x %% 3 == 0)\
    \ return(\"Fizz\")\n  if(x %% 5 == 0) return(\"Buzz\")\n  return(paste0(as.character(x),\"\
    !\"))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks for your answer!\
    \ I appreciate it!\n<|/ c |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x%%11==0){\n    return(\"Fizz\")\n  }\n  if(x%%13==0){\n    return(\"Buzz\"\
    )\n  }\n  if(x%%3==0){\n    return(\"Fizz\")\n  }\n  if(x%%5==0){\n    return(\"\
    Buzz\")\n  }\n  return(paste0(as.character(x),\"!\"))\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0){\n  \
    \  return(\"Fizz\")\n  }\n  if(x%%13==0){\n    return(\"Buzz\")\n  }\n  if(x%%3==0){\n\
    \    return(\"Fizz\")\n  }\n  if(x%%5==0){\n    return(\"Buzz\")\n  }\n  return(paste0(as.character(x),\"\
    !\"))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x%%11==0){\n    return(\"Fizz\")\n  }\n  if(x%%13==0){\n\
    \    return(\"Buzz\")\n  }\n  if(x%%3==0){\n", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ || n%%13==0) {\n    return(0)\n  }\n  if(n%%11==1) {\n    return(1)\n  }\n \
    \ if(n%%13==1) {\n    return(2)\n  }\n  if(n%%11==2) {\n    return(3)\n  }\n \
    \ if(n%%13==2) {\n    return(4)\n  }\n  if(n%%11==3) {\n    return(5)\n  }\n \
    \ if(n%%13==3) {\n    return(6)\n  }\n  if(n%%11==4) {\n    return(7)\n  }\n \
    \ if(n%%13==4) {\n    return(8)\n  }\n  if(n%%11==5) {\n    return(9)\n  }\n \
    \ if(n%%13==5) {\n    return(10)\n  }\n  if(n%%11==6) {\n    return(11)\n  }\n\
    \  if(n%%13==6) {\n    return(12)\n  }\n  if(n%%11==7) {\n    return(13)\n  }\n\
    \  if(n%%13==7) {\n    return(14)\n  }\n  if(n%%11==8) {\n    return(15)\n  }\n\
    \  if(n%%13==8) {\n    return(16)\n  }\n  if(n%%11==9) {\n    return(17)\n  }\n\
    \  if(n%%13==9) {\n    return(18)\n  }\n  if(n%%11==10) {\n    return(19)\n  }\n\
    \  if(n%%13==10) {\n    return(20)\n  }\n  if(n%%11==11) {\n    return(21)\n \
    \ }\n  if(n%%13==11) {\n    return(22)\n  }\n  if(n%%11==12) {\n    return(23)\n\
    \  }\n  if(n%%13==12) {\n    return(24)\n  }\n  if(n%%11==13) {\n    return(25)\n\
    \  }\n  if(n%%13==13) {\n    return(26)\n  }\n  if(n%%11==14) {\n    return(27)\n\
    \  }\n  if(n%%13==14) {\n    return(28)\n  }\n  if(n%%11==15) {\n    return(29)\n\
    \  }\n  if(n%%13==15) {\n    return(30)\n  }\n  if(n%%11==16) {\n    return(31)\n\
    \  }\n  if(n%%13==16) {\n    return(32)\n  }\n  if(n%%11==17) {\n    return(33",
  "\n  n <- as.integer(n)\n  return(sum(n %% 11 == 0 & n %% 13 == 0))\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=r,fizzbuzz |>\nHere's a solution using dplyr and\
    \ purrr:\n<code>\nlibrary(dplyr)\nlibrary(purrr)\n\nfizz_buzz <- function(n) {\n\
    \  n <- as.integer(n)\n  return(\n    n %>% \n      as.character %>% \n      str_replace_all(\"\
    ^\\\\d+$\", \"\") %>% \n      as.integer %>% \n      map(~ifelse(x %% 11 == 0\
    \ & x %% 13 == 0, x, NA)) %>% \n      reduce(`+`) %>% \n      na.omit()\n  )\n\
    }\n\nfizz_buzz(50)", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0)\
    \ {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n\nfizz_buzz <- function(n) {\n \
    \ n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n\nfizz_buzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n\
    \ %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13\
    \ == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n\
    \  }\n}\n\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0\
    \ & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return", "\n  n <- as.integer(n)\n  if(n%%11==0 || n%%13==0) return(0)\n\
    \  return(as.integer(n%%11) + as.integer(n%%13))\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| c |>\nThanks for your answer! I really appreciate it! I ran the code and it\
    \ worked perfectly. I'm still trying to understand how it works. I understand\
    \ that it's using the modulus operator to find the remainder of the division of\
    \ n by 11 and 13, but I don't understand how it works. I understand that it's\
    \ taking the remainder of n by 11 and 13, but I don't understand how it does that.\
    \ Could you please explain how it does that?\n<|/ c |>\n<| c |>\nThe modulus operator\
    \ is basically the remainder after division. For example, `5 %% 3` returns `1`\
    \ because `5` is divided by `3` and the remainder is `1`. `5 %% 2` returns `0`\
    \ because `5` is divided by `2` and the remainder is `0`. `5 %% 4` returns `1`\
    \ because `5` is divided by `4` and the remainder is `1`. `5 %% 5` returns `0`\
    \ because `5` is divided by `5` and the remainder is `0`.\n<|/ c |>\n<| c |>\n\
    Oh okay, I understand now. Thank you so much!\n<|/ c |>\n<| a tags=r,fizzbuzz,for-loop,if-statement\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  for(i in 1:x){\n    if(i%%11==0 | i%%13==0){\n\
    \      print(i)\n    }\n  }\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nWhile this\
    \ code may answer the question, providing additional context regarding how and/or\
    \ why it solves the problem would improve the answer's long-term value.\n<|/ c\
    \ |>\n<| a tags=r,fizzbuzz,for-loop,if-statement |>\n<code>\nfizzbuzz <- function(x){\n\
    \  for(i in 1:x){\n    if(i%%11==0 | i%%13==0){\n      print(i)\n    }\n  }\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\nfizzbuzz <- function(x){\n\
    \  for(i in 1:x){", "\n  n <- as.integer(n)\n  return(sum(n %% 11 == 0 & n %%\
    \ 13 == 0))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\nI like using dplyr\
    \ for these kinds of problems. Here's a solution using dplyr and purrr.\n<code>\n\
    library(dplyr)\nlibrary(purrr)\n\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  n %>% \n    filter(\n      between(n, 3, 7),\n      between(n, 7, 9)\n    )\
    \ %>% \n    summarise(\n      count = n()\n    ) %>% \n    mutate(\n      fizz_buzz\
    \ = ifelse(\n        count > 0,\n        paste0(\n          ifelse(\n        \
    \    between(n, 3, 7),\n            \"Fizz\",\n            ifelse(\n         \
    \     between(n, 7, 9),\n              \"Buzz\",\n              ifelse(\n    \
    \            between(n, 11, 13),\n                \"FizzBuzz\",\n            \
    \    ifelse(\n                  between(n, 14, 17),\n                  \"Fizz\"\
    ,\n                  ifelse(\n                    between(n, 17, 19),\n      \
    \              \"Buzz\",\n                    ifelse(\n                      between(n,\
    \ 21, 23),\n                      \"FizzBuzz\",\n                      ifelse(\n\
    \                        between(n, 24, 27),\n                        \"Fizz\"\
    ,\n                        ifelse(\n                          between(n, 28, 31),\n\
    \                          \"Buzz\",\n                          ifelse(\n    \
    \                        between(n, 32, 35),\n                            \"FizzBuzz\"\
    ,\n                            ifelse(\n                              between(n,\
    \ 36, 39),\n                              \"Fizz\",\n                        \
    \      ifelse(\n                                between(n, 39, 41),\n        \
    \                        \"Buzz\",\n                                ifelse(\n\
    \                                  between(n, 42, 44),\n                     \
    \             \"FizzBuzz\",\n                                  ifelse(\n     \
    \                               between(n, 45, 47),\n                        \
    \            \"Fizz\",\n                                    ifelse(\n        \
    \                              between(n, 48, 51),\n                         \
    \             \"Buzz\",\n                                      ifelse(\n     \
    \                                   between(n, 52, 55),\n                    \
    \                    \"FizzBuzz\",\n                                        ifelse(\n\
    \                                          between(n, 56, 59),\n             \
    \                             \"Fizz\",\n                                    \
    \      ifelse(\n                                            between(n, 60, 62),\n\
    \                                            \"Buzz\",\n                     \
    \                       ifelse(\n                                            \
    \  between(n, 63, 65),\n                                              \"FizzBuzz\"\
    ,\n                                              ifelse(\n                   \
    \                             between(n, 66, 69),\n                          \
    \                      \"Fizz\",\n                                           \
    \     ifelse(\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n %%\
    \ 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 !=\
    \ 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n   \
    \ return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n\n\
    fizz_buzz(50)", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(NA)\n}\n", "\n \
    \ n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=2 |>\n<code>\n\
    fizzbuzz <- function(n){\n  if(n %% 11 == 0 & n %% 13 == 0){\n    return(0)\n\
    \  }\n  if(n %% 11 == 0){\n    return(1)\n  }\n  if(n %% 13 == 0){\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n %% 11 == 0 & n %% 13 == 0){\n \
    \   return(0)\n  }\n  if(n %% 11 == 0){\n    return(1)\n  }\n  if(n %% 13 == 0){\n\
    \    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n %% 11 == 0 & n %% 13 == 0){\n \
    \   return(0)\n  }\n  if(n %% 11 == 0){\n    return(1)\n  }\n  if(n %% 13 == 0){\n\
    \    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=2\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n %% 11 == 0 & n %% 13 == 0){\n \
    \   return(0)\n  }\n  if(n %% 11 == 0){\n    return(1)\n  }\n  if(n %% 13 == 0){\n\
    \    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n %% 11 == 0 & n %% 13 == 0){\n \
    \   return(0)\n  }\n  if(n %% 11 == 0){\n    return(1)\n  }\n  if(n %% 13 == 0){\n\
    \    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<|", "\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n\
    \ %% 13)\n  }\n  return(n %% 11)\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11\
    \ == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n\
    }\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| c |>\nThanks for your answer!\
    \ I didn't know that R had a built-in function for this. However, I still don't\
    \ understand why my code didn't work. Could you please explain why my code didn't\
    \ work?\n<|/ c |>\n<| c |>\nYour code didn't work because you were trying to recurse\
    \ until you hit a number divisible by 11 or 13, but you were not stopping when\
    \ you hit a number divisible by 11 or 13. Your code would have worked if you had\
    \ written `if(n %% 11 == 0) return(0)` instead of `if(n %% 11 == 0) return(0)`.\
    \ You were just returning the result of the recursive call instead of stopping\
    \ the recursion.\n<|/ c |>\n<| c |>\nAh, I see. Thanks for your help!\n<|/ c |>\n\
    <| a tags=r,recursion,fizzbuzz |>\nThis can be done with base R functions:\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x %% 11 == 0) return(0)\n  if(x %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(x / 11) + fizzbuzz(x / 13))\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=1 |>\nThis can be done with base R functions:\n<code>\nfizzbuzz <-\
    \ function(x) {\n  if(x %% 11 == 0) return(0)\n  if(x %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(x / 11) + fizzbuzz(x / 13))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0)\
    \ return(0)\n  if(x %% 13 == 0) return(2)\n  return(fizzbuzz(x / 11) + fizzbuzz(x\
    \ / 13))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0) ", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  } else if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  } else if(n %% 11\
    \ != 0 & n %% 13 == 0) {\n    return(2)\n  } else if(n %% 11 != 0 & n %% 13 !=\
    \ 0) {\n    return(3)\n  } else {\n    return(NA)\n  }\n}\n", "\n  n <- n\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/\
    \ a tags=r,fizzbuzz |>\n<| c |>\nThis doesn't work for me. `fizz_buzz(50)` returns\
    \ `0` instead of `1`\n<|/ c |>\n<| c |>\nI tested it and it works for me. Are\
    \ you sure you copied it correctly?\n<|/ c |>\n<| c |>\nI copied it exactly as\
    \ you wrote it. Maybe it's because I'm using a Mac?\n<|/ c |>\n<| c |>\nYes, it\
    \ could be a Mac issue. Try it again and see if it works.\n<|/ c |>\n<| c |>\n\
    Yes, it works now. Thanks for your help!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    fizz_buzz <- function(n) {\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nPlease add\
    \ some explanation to your answer.\n<|/ c |>\n<| a |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 ==\
    \ 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n\
    \    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz dscore=0 |>\n<| c |>\nPlease add some explanation\
    \ to your answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  if(n %% 11 == 0 ", "\n  n <- n\n  return(\n    sum(\n      ifelse(\n  \
    \      n %% 11 == 0 & n %% 13 == 0,\n        1,\n        ifelse(\n          n\
    \ %% 11 == 0 | n %% 13 == 0,\n          2,\n          ifelse(\n            n %%\
    \ 11 == 0 & n %% 13 == 1,\n            3,\n            ifelse(\n             \
    \ n %% 11 == 1 | n %% 13 == 0,\n              4,\n              ifelse(\n    \
    \            n %% 11 == 1 | n %% 13 == 1,\n                5,\n              \
    \  ifelse(\n                  n %% 11 == 2 | n %% 13 == 0,\n                 \
    \ 6,\n                  ifelse(\n                    n %% 11 == 2 | n %% 13 ==\
    \ 1,\n                    7,\n                    ifelse(\n                  \
    \    n %% 11 == 3 | n %% 13 == 0,\n                      8,\n                \
    \      ifelse(\n                        n %% 11 == 3 | n %% 13 == 1,\n       \
    \                 9,\n                        ifelse(\n                      \
    \    n %% 11 == 4 | n %% 13 == 0,\n                          10,\n           \
    \               ifelse(\n                            n %% 11 == 4 | n %% 13 ==\
    \ 1,\n                            11,\n                            ifelse(\n \
    \                             n %% 11 == 5 | n %% 13 == 0,\n                 \
    \             12,\n                              ifelse(\n                   \
    \             n %% 11 == 5 | n %% 13 == 1,\n                                13,\n\
    \                                ifelse(\n                                  n\
    \ %% 11 == 6 | n %% 13 == 0,\n                                  14,\n        \
    \                          ifelse(\n                                    n %% 11\
    \ == 6 | n %% 13 == 1,\n                                    15,\n            \
    \                        ifelse(\n                                      n %% 11\
    \ == 7 | n %% 13 == 0,\n                                      16,\n          \
    \                            ifelse(\n                                       \
    \ n %% 11 == 7 | n %% 13 == 1,\n                                        17,\n\
    \                                        ifelse(\n                           \
    \               n %% 11 == 8 | n %% 13 == 0,\n                               \
    \           18,\n                                          ifelse(\n         \
    \                                   n %% 11 == 8 | n %% 13 == 1,\n           \
    \                                 19,\n                                      \
    \      ifelse(\n                                              n %% 11 == 9 | n\
    \ %% 13 == 0,\n                                              20,\n           \
    \                                   ifelse(\n                                \
    \                n %% 11 == 9 | n %% 13 == 1,\n                              \
    \                  21,\n                                                ifelse(\n\
    \                                                  n %% 11 == 10 | n %% 13 ==\
    \ 0,\n                                                  22,\n                \
    \                                  ifelse(\n                                 \
    \                   n %% 11 == 10 | n %% 13 == 1,\n                          \
    \                          23,\n                                             \
    \       ifelse(\n                                                      n %% 11\
    \ == 11 | n %% 13 == 0,\n                                                    \
    \  24,\n                                                      ifelse(\n      \
    \                                                  n %% 11 == 11 | n %% 13 == ",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n\nfizz_buzz(50)", "\n  n <- as.integer(n)\n  if(n %% 11\
    \ == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0)\
    \ {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n\
    <cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n\
    </cell>\n<cell>\nfizz_buzz(101)\n</cell>\n<cell>\nfizz_buzz(102)\n</cell>\n<cell>\n\
    fizz_buzz(103)\n</cell>\n<cell>\nfizz_buzz(104)\n</cell>\n<cell>\nfizz_buzz(105)\n\
    </cell>\n<cell>\nfizz_buzz(106)\n</cell>\n<cell>\nfizz_buzz(107)\n</cell>\n<cell>\n\
    fizz_buzz(108)\n</cell>\n<cell>\nfizz_buzz(109)\n</cell>\n<cell>\nfizz_buzz(110)\n\
    </cell>\n<cell>\nfizz_buzz(111)\n</cell>\n<cell>\nfizz_buzz(112)\n</cell>\n<cell>\n\
    fizz_buzz(113)\n</cell>\n<cell>\nfizz_buzz(114)\n</cell>\n<cell>\nfizz_buzz(115)\n\
    </cell>\n<cell>\nfizz_buzz(116)\n</cell>\n<cell>\nfizz_buzz(117)\n</cell>\n<cell>\n\
    fizz_buzz(118)\n</cell>\n<cell>\nfizz_buzz(119)\n</cell>\n<cell>\nfizz_buzz(120)\n\
    </cell>\n<cell>\nfizz_buzz(121)\n</cell>\n<cell>\nfizz_buzz(122)\n</cell>\n<cell>\n\
    fizz_buzz(123)\n</cell>\n<cell", "\n  n <- n\n  n <- as.integer(n)\n  n <- ifelse(n\
    \ %% 11 == 0, n, 0)\n  n <- ifelse(n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 17\
    \ == 0, n, 0)\n  n <- ifelse(n %% 19 == 0, n, 0)\n  n <- ifelse(n %% 23 == 0,\
    \ n, 0)\n  n <- ifelse(n %% 29 == 0, n, 0)\n  n <- ifelse(n %% 31 == 0, n, 0)\n\
    \  n <- ifelse(n %% 37 == 0, n, 0)\n  n <- ifelse(n %% 41 == 0, n, 0)\n  n <-\
    \ ifelse(n %% 43 == 0, n, 0)\n  n <- ifelse(n %% 47 == 0, n, 0)\n  n <- ifelse(n\
    \ %% 53 == 0, n, 0)\n  n <- ifelse(n %% 59 == 0, n, 0)\n  n <- ifelse(n %% 61\
    \ == 0, n, 0)\n  n <- ifelse(n %% 67 == 0, n, 0)\n  n <- ifelse(n %% 71 == 0,\
    \ n, 0)\n  n <- ifelse(n %% 73 == 0, n, 0)\n  n <- ifelse(n %% 79 == 0, n, 0)\n\
    \  n <- ifelse(n %% 83 == 0, n, 0)\n  n <- ifelse(n %% 89 == 0, n, 0)\n  n <-\
    \ ifelse(n %% 97 == 0, n, 0)\n  n <- ifelse(n %% 101 == 0, n, 0)\n  n <- ifelse(n\
    \ %% 103 == 0, n, 0)\n  n <- ifelse(n %% 107 == 0, n, 0)\n  n <- ifelse(n %% 111\
    \ == 0, n, 0)\n  n <- ifelse(n %% 113 == 0, n, 0)\n  n <- ifelse(n %% 117 == 0,\
    \ n, 0)\n  n <- ifelse(n %% 121 == 0, n, 0)\n  n <- ifelse(n %% 123 == 0, n, 0)\n\
    \  n <- ifelse(n %% 127 == 0, n, 0)\n  n <- ifelse(n %% 131 == 0, n, 0)\n  n <-\
    \ ifelse(n %% 133 == 0, n, 0)\n  n <- ifelse(n %% 137 == 0, n, 0)\n  n <- ifelse(n\
    \ %% 141 == 0, n, 0)\n  n <- ifelse(n %% 143 == 0, n, 0)\n  n <- ifelse(n %% ",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(as.integer(n %% 11) + as.integer(n %% 13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n\
    </cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of integers and returns a vector\
    \ of the same length with each element equal to the sum of the integers up to\
    \ that point. For example, if the input vector is c(10, 20, 30, 40, 50), then\
    \ the output vector is c(10, 30, 60, 90, 120).\n\n\n</text>\n<cell>", "\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  return(length(which(n\
    \ %% 11 == 0 | n %% 13 == 0)))\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| c |>\nThanks for your answer. Your code works perfectly for numbers divisible\
    \ by 11 and 13, but for numbers divisible by both 11 and 13 it returns `NA`. Any\
    \ idea why this happens?\n<|/ c |>\n<| c |>\nI added a second solution that should\
    \ work for you.\n<|/ c |>\n<| c |>\nThanks for your answer. Your second solution\
    \ works perfectly for numbers divisible by both 11 and 13, but for numbers divisible\
    \ by 11 it returns `NA`. Any idea why this happens?\n<|/ c |>\n<| c |>\nI added\
    \ a third solution that should work for you.\n<|/ c |>\n<| c |>\nThanks for your\
    \ answer. Your third solution works perfectly for numbers divisible by both 11\
    \ and 13, but for numbers divisible by 11 it returns `NA`. Any idea why this happens?\n\
    <|/ c |>\n<| a tags=r,fizzbuzz |>\nHere's a solution that uses ifelse and %in%:\n\
    <code>\nfizzbuzz <- function(x) {\n  ifelse(x %% 11 == 0 & x %% 13 == 0, 0,\n\
    \         ifelse(x %% 11 == 0 & x %% 13 != 0, 1,\n                ifelse(x %%\
    \ 11 != 0 & x %% 13 == 0, 2,\n                       ifelse(x %% 11 != 0 & x %%\
    \ 13 != 0, 3, NA))))\n}\n\nfizzbuzz(50)", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0 &\
    \ n%%13==0) return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n}\n</cell>\n<cell>\n\
    fizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the number of times each of the integers appears in the vector.\
    \ For example, if the input vector is [4, 6, 4, 3, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6, 4, 6,\
    \ 4, 6, ", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n\
    \    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n\
    \nfizz_buzz(50)\nfizz_buzz(78)\nfizz_buzz(79)\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(x %% 11 == 0) {\n    return(1)\n  }\n  if(x\
    \ %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n\nfizzbuzz(50)\nfizzbuzz(78)\n\
    fizzbuzz(79)\n</code>\n<|/ a dscore=2 tags=r,fizzbuzz |>\n<| a dscore=2 |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(x %% 11 == 0) {\n    return(1)\n  }\n  if(x %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n\nfizzbuzz(50)\nfizzbuzz(78)\nfizzbuzz(79)\n</code>\n<|/\
    \ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 ==\
    \ 0) {\n    return(1)\n  }\n  if(x %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n\
    }\n\nfizzbuzz(50)\nfizzbuzz(78)\nfizzbuzz(79)\n</code>\n<|/ a dscore=2 |>\n<|\
    \ a dscore=1 |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(x %% 11 == 0) {\n    return(1)\n  }\n  if(x\
    \ %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n\nfizzbuzz(50)\nfizzbuzz(78)\n\
    fizzbuzz(79)\n</code>\n<|/ a tags=r,fizzbuzz |>", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <-\
    \ n\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, n + 1))\n  n <- ifelse(n\
    \ %% 11 == 0, n, ifelse(n %% 13 == 0, n, n + 1))\n  n <- ifelse(n %% 11 == 0,\
    \ n, ifelse(n %% 13 == 0, n, n + 1))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, n + 1))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0,\
    \ n, n + 1))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, n + 1))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, n + 1))\n  n <- ifelse(n\
    \ %% 11 == 0, n, ifelse(n %% 13 == 0, n, n + 1))\n  n <- ifelse(n %% 11 == 0,\
    \ n, ifelse(n %% 13 == 0, n, n + 1))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, n + 1))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0,\
    \ n, n + 1))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, n + 1))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, n + 1))\n  n <- ifelse(n\
    \ %% 11 == 0, n, ifelse(n %% 13 == 0, n, n + 1))\n  n <- ifelse(n %% 11 == 0,\
    \ n, ifelse(n %% 13 == 0, n, n + 1))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, n + 1))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0,\
    \ n, n + 1))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, n + 1))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, n + 1))\n  n <- ifelse(n\
    \ %% 11 == 0, n, ifelse(n %% 13 == 0, n, n + 1))\n  n <- ifelse(n %% 11 == 0,\
    \ n, ifelse(n %% 13 == 0, n, n + 1))\n  n ", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz\
    \ <- function(n){\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a |>\n<code>\nfizzbuzz <- function(n) {\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz dscore=3 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=3 |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n) {\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\n<code>\n\
    fizzbuzz <- function(n) {\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a tags=", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</cell>\n\
    <cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 3 or 5.\n\
    \n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 ==\
    \ 0) {\n    return(0)\n  }\n  return(length(which(n %% 11 == 0 | n %% 13 == 0)))\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThanks for the answer! I actually tried this before\
    \ but for some reason it didn't work. Now I realized that I had a typo in my code\
    \ (I used `%%` instead of `%`). Thanks again!\n<|/ c |>\n<| c |>\nNo problem!\
    \ Glad I could help.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  return(length(which(n %% 11 == 0 | n %% 13 == 0)))\n}\n</code>\n<|/ a\
    \ tags=r |>\n<| c |>\nWhile this code may answer the question, providing additional\
    \ context regarding how and/or why it solves the problem would improve the answer's\
    \ long-term value.\n<|/ c |>\n<| a tags=r |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  return(length(which(n %% 11 == 0 | n %% 13 == 0)))\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nWhile this code may answer the question, providing additional\
    \ context regarding how and/or why it solves the problem would improve the answer's\
    \ long-term value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  return(length(which(n %% 11 == 0 | n %% 13 == 0)))\n}\n</code>\n<|/ a\
    \ tags=r |>\n<| c |>\nWhile this code may answer the question, providing additional\
    \ context regarding how and/or why it solves the problem would improve the answer's\
    \ long-term value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n</code>\n<|/ a |>\n<| c |>\nThanks for the answer! I understand\
    \ your code, but I still don't understand why my code doesn't work. Could you\
    \ please explain why my code doesn't work?\n<|/ c |>\n<| c |>\nI added an explanation\
    \ to the answer.\n<|/ c |>\n<| c |>\nThanks for the explanation! I understand\
    \ now!\n<|/ c |>\n<| a tags=r,fizzbuzz,for-loop |>\nThe reason your code doesn't\
    \ work is that you're trying to use an if statement to determine whether a number\
    \ is divisible by 11 or 13, but you're using an if statement to determine whether\
    \ a number is divisible by 11 or 13 and a while statement to determine whether\
    \ a number is divisible by 11 or 13. \nThe if statement is meant to determine\
    \ whether a number is divisible by 11 or 13, but you're using it to determine\
    \ whether a number is divisible by 11 or 13 and a while statement to determine\
    \ whether a number is divisible by 11 or 13. \nThe if statement is meant to determine\
    \ whether a number is divisible by 11 or 13, but you're using it to determine\
    \ whether a number is divisible by 11 or 13 and a while statement to determine\
    \ whether a number is divisible by 11 or 13. \nThe if statement is meant to determine\
    \ whether a number is divisible by 11 or 13, but you're using it to determine\
    \ whether a number is divisible by 11 or 13 and a while statement to determine\
    \ whether a number is divisible by 11 or 13. \nThe if statement is meant to determine\
    \ whether a number is divisible by 11 or 13, but you're using it to determine\
    \ whether a number is divisible by 11 or 13 and a while statement to determine\
    \ whether a number is divisible by 11 or 13. \nThe if statement is meant to determine\
    \ whether a number is divisible by 11 or 13, but you're using it to determine\
    \ whether a number is divisible by 11 or 13 and a while statement to determine\
    \ whether a number is divisible by 11 or 13. \nThe if statement is meant to determine\
    \ whether a number is divisible by 11 or 13, but you're using it to determine\
    \ whether a number is divisible by 11 or 13 and a while statement to determine ",
  "\n  n <- as.integer(n)\n  return(sum(n %% 11 == 0 & n %% 13 == 0))\n}\n</cell>\n\
    <cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nExercise: Write a function that returns the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11 or 13 and\
    \ which are also divisible by 3 or 5.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks for your answer! I didn't\
    \ know that R had a modulo operator. I'm still learning R and I appreciate your\
    \ help.\n<|/ c |>\n<| c |>\nNo problem! I added a more concise version of your\
    \ function to the answer.\n<|/ c |>\n<| a tags=r,fizzbuzz |>\nHere's a solution\
    \ using dplyr and purrr:\n<code>\nlibrary(dplyr)\nlibrary(purrr)\n\nfizzbuzz <-\
    \ function(x) {\n  x <- as.integer(x)\n  x %>% \n    map_int(~ifelse(x %% 11 ==\
    \ 0 & x %% 13 == 0, 0, \n                    ifelse(x %% 11 == 0 & x %% 13 !=\
    \ 0, 1,\n                           ifelse(x %% 11 != 0 & x %% 13 == 0, 2,\n \
    \                                 ifelse(x %% 11 != 0 & x %% 13 != 0, 3, NA)))))\
    \ %>% \n    map_int() %>% \n    map_int() %>% \n    map_int() %>% \n    map_int()\n\
    }\n\nfizzbuzz(50)", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0)\
    \ {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(NA)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\nHere's a solution that uses purrr::map and dplyr::case_when:\n<code>\nlibrary(purrr)\n\
    library(dplyr)\n\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  case_when(\n\
    \    n %% 11 == 0 & n %% 13 == 0 ~ 0,\n    n %% 11 == 0 ~ 1,\n    n %% 13 == 0\
    \ ~ 2,\n    TRUE ~ NA\n  )\n}\n\nfizz_buzz(50)", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n\nfizz_buzz(50)\n\
    fizz_buzz(78)\nfizz_buzz(79)\nfizz_buzz(100)\nfizz_buzz(123)\nfizz_buzz(125)\n\
    fizz_buzz(126)\nfizz_buzz(127)\nfizz_buzz(129)\nfizz_buzz(130)\nfizz_buzz(131)\n\
    fizz_buzz(132)\nfizz_buzz(133)\nfizz_buzz(134)\nfizz_buzz(135)\nfizz_buzz(136)\n\
    fizz_buzz(137)\nfizz_buzz(138)\nfizz_buzz(139)\nfizz_buzz(140)\nfizz_buzz(141)\n\
    fizz_buzz(142)\nfizz_buzz(143)\nfizz_buzz(144)\nfizz_buzz(145)\nfizz_buzz(146)\n\
    fizz_buzz(147)\nfizz_buzz(148)\nfizz_buzz(149)\nfizz_buzz(150)\nfizz_buzz(151)\n\
    fizz_buzz(152)\nfizz_buzz(153)\nfizz_buzz(154)\nfizz_buzz(155)\nfizz_buzz(156)\n\
    fizz_buzz(157)\nfizz_buzz(158)\nfizz_buzz(159)\nfizz_buzz(160)\nfizz_buzz(161)\n\
    fizz_buzz(162)\nfizz_buzz(163)\nfizz_buzz(164)\nfizz_buzz(165)\nfizz_buzz(166)\n\
    fizz_buzz(167)\nfizz_buzz(", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %%\
    \ 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(fizz_buzz(n\
    \ %% 11))\n  }\n  if(n %% 13 != 0) {\n    return(fizz_buzz(n %% 13))\n  }\n  return(1)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThis doesn't work. Try `fizz_buzz(50)`.\n\
    <|/ c |>\n<| c |>\nYes, it does. I tested it before posting.\n<|/ c |>\n<| c |>\n\
    It doesn't work. Try `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\nIt works. I tested it\
    \ before posting. What do you mean by \"doesn't work\"?\n<|/ c |>\n<| c |>\nIt\
    \ doesn't work. Try `fizz_buzz(50)`.\n<|/ c |>\n<| a dscore=1 |>\nHere's a solution\
    \ using R's built-in capabilities:\n<code>\nfizz_buzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n\
    \ %% 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13 != 0) {\n \
    \   return(fizz_buzz(n %% 13))\n  }\n  return(1)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| c |>\nThis doesn't work. Try `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\nIt\
    \ works. I tested it before posting. What do you mean by \"doesn't work\"?\n<|/\
    \ c |>\n<| c |>\nIt doesn't work. Try `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\nIt\
    \ works. I tested it before posting. What do you mean by \"doesn't work\"?\n<|/\
    \ c |>\n<| c |>\nIt doesn't work. Try `fizz_buzz(50)`.\n<|/ c |>\n<| a dscore=1\
    \ |>\nHere's a solution using R's built-in capabilities:\n<code>\nfizz_buzz <-\
    \ function(n) {\n  n <- as.integ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0\
    \ & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x) {\n  if(x\
    \ %% 11 == 0 & x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 == 0 & x %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(x %% 11 != 0 & x %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(x %% 11 != 0 & x %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %%\
    \ 11 == 0 & x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 == 0 & x %% 13 !=\
    \ 0) {\n    return(1)\n  }\n  if(x %% 11 != 0 & x %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(x %% 11 != 0 & x %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/\
    \ a tags=r,fizzbuzz,for-loop |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz\
    \ <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(x %% 11 == 0 & x %% 13 != 0) {\n    return(1)\n  }\n  if(x %% 11 != 0 &\
    \ x %% 13 == 0) {\n    return(2)\n  }\n  if(x %% 11 != 0 & x %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(x %% 11 == 0 & x %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(x %% 11 != 0 & x %% 13 == 0) {\n    return(2)\n  }\n  if(x %% ", "\n  n\
    \ <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=1 |>\n<| c\
    \ |>\nThank you for the answer! I appreciate it. I was able to get it working\
    \ with your help. I appreciate your time and effort.\n<|/ c |>\n<| c |>\nNo problem!\
    \ Glad I could help.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n</code>\n<|/ a tags=r,if-statement |>\n<| c |>\nWhile\
    \ this code may answer the question, providing additional context regarding why\
    \ and/or how this code answers the question improves its long-term value.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</code>\n<|/ a tags=r,if-statement |>\n<| c |>\nWhile this code may answer\
    \ the question, providing additional context regarding why and/or how this code\
    \ answers the question improves its long-term value.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & ", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0)\
    \ {\n    return(1)\n  } else if(n %% 13 == 0) {\n    return(2)\n  } else {\n \
    \   return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz,function |>\n<| c |>\nThanks for your answer! I really appreciate\
    \ it. I tried your code, but I got this error message: Error in fizz_buzz(50)\
    \ : could not find function \"fizz_buzz\"\n<|/ c |>\n<| c |>\nI forgot to add\
    \ `fizz_buzz <- function(n)` at the top of my answer. I've edited my answer to\
    \ include it.\n<|/ c |>\n<| c |>\nThanks again! I added that line and I still\
    \ get the same error message. Do you know what else could be causing this?\n<|/\
    \ c |>\n<| c |>\nI edited my answer to include a complete working example. Does\
    \ that work for you?\n<|/ c |>\n<| c |>\nThanks so much for your help! I appreciate\
    \ it! I still get the same error message when I run your code. Do you know what\
    \ else could be causing this?\n<|/ c |>\n<| a tags=r,fizzbuzz,function |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks for your answer! I really appreciate it. I\
    \ tried your code, but I got this error message: Error in fizz_buzz(50) : could\
    \ not find function \"fizz_buzz\"\n<|/ c |>\n<| c |>\nI forgot to add `fizz_buzz\
    \ <- function(n)` at the top of my answer. I've edited my answer to include it.\n\
    <|/ c |>\n<| c |>\nThanks again! I added that line and I still get the same error\
    \ message. Do you know what else could be causing this?\n<|/ c |>\n<| c |>\nI\
    \ edited my answer to include a complete working example. Does that work for you?\n\
    <|/ c |>\n<| c |>\nThanks so much for your help! I ", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0\
    \ & n %% 13 != 0) {\n    return(1)\n  } else if(n %% 11 != 0 & n %% 13 == 0) {\n\
    \    return(2)\n  } else if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\
    \ else {\n    return(n)\n  }\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0 & n %% 13 != 0)\
    \ {\n    return(1)\n  } else if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  } else if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  } else {\n    return(n)\n\
    \  }\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code may answer the question,\
    \ providing additional context regarding why and/or how this code answers the\
    \ question improves its long-term value.\n<|/ c |>\n<| a tags=r,fizzbuzz |>\n\
    <code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n\
    \ %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0 & n %% 13 != 0) {\n \
    \   return(1)\n  } else if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\
    \ else if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  } else {\n    return(n)\n\
    \  }\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  } else if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  } else if(n %% 11\
    \ != 0 & n %% 13 == 0) {\n    return(2)\n  } else if(n %% 11 != 0 & n %% 13 !=\
    \ 0) {\n    return(3)\n  } else {\n    return(n)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a dscore=0 |>\n<code>\nfizzbuzz <- function(n) {\n  n ", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n  return(fizz_buzz(n/11)+3)\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\nThe other answers here are great,\
    \ but I wanted to share my solution as well. \n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n\
    \  return(fizz_buzz(n/11)+3)\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n\
    <| a dscore=1 |>\nHere's a recursive solution:\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n\
    \  return(fizz_buzz(n/11)+3)\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n\
    <| a tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n  return(fizz_buzz(n/11)+3)\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n\
    \  return(fizz_buzz(n/11)+3)\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n\
    <| a tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n  return(fizz_buzz(n/11)+3)\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a dscore=0 |>\n\
    <code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a\
    \ tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    fizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz,for-loop |>\n<| a dscore=0 |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  ", "\n  n <- as.integer(n)\n  return(sum(n %% 11 == 0 & n %% 13 == 0))\n\
    }\n\nfizz_buzz(50)", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n \
    \ if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + 1)\n}\n</cell>\n<cell>\n\
    fizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns a vector of the same length with each element being the number of\
    \ times each number in the vector appears in the vector.\n\n\n</text>\n<cell>",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\
    \ else if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  } else if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  } else if(n %% 11 != 0 & n %% 13 != 0)\
    \ {\n    return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks\
    \ for your answer! I appreciate it. I was wondering if there is a way to do this\
    \ without using if-else statements. I understand that if-else statements are inefficient\
    \ but I was wondering if there is a way to do this without them.\n<|/ c |>\n<|\
    \ c |>\nI added a solution without if-else statements.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer! I appreciate it. I was wondering if there is a way to do this\
    \ without using if-else statements. I understand that if-else statements are inefficient\
    \ but I was wondering if there is a way to do this without them.\n<|/ c |>\n<|\
    \ c |>\nI added a solution without if-else statements.\n<|/ c |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n \
    \   return(0)\n  }\n  if(x %% 11 == 0 & x %% 13 != 0){\n    return(1)\n  }\n \
    \ if(x %% 11 != 0 & x %% 13 == 0){\n    return(2)\n  }\n  if(x %% 11 != 0 & x\
    \ %% 13 != 0){\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n \
    \   return(0)\n  }\n  if(x %% 11 == 0 & x %% 13 != 0){\n    return(1)\n  }\n \
    \ if(x %% 11 != 0 & x %% 13 == 0){\n    return(2)\n  }\n  if(x %% 11 != 0 & x\
    \ %% 13 != 0){\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0 & x %% 13 == ", "\n\
    \  n <- as.integer(n)\n  return(sum(n %% 11 == 0 & n %% 13 == 0))\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks, I didn't realize that `%%` was a function\
    \ in R. I'm still new to R and I appreciate the help.\n<|/ c |>\n<| c |>\nNo problem.\
    \ `%%` is actually a binary operator in R. `%%` is the modulus operator. `%%`\
    \ returns the remainder of a division operation and `%%` returns the remainder\
    \ of a multiplication operation. `%%` is also the modulo operator in Python.\n\
    <|/ c |>\n<| c |>\nThanks for the explanation. I was confused because I thought\
    \ `%%` was a function.\n<|/ c |>\n<| c |>\n`%%` is actually a binary operator\
    \ in R. `%%` is the modulus operator. `%%` returns the remainder of a division\
    \ operation and `%%` returns the remainder of a multiplication operation. `%%`\
    \ is also the modulo operator in Python.\n<|/ c |>\n<| a |>\n<code>\nfizzbuzz\
    \ <- function(n){\n  if(n %% 11 == 0){\n    cat(\"Fizz\")\n  }\n  if(n %% 13 ==\
    \ 0){\n    cat(\"Buzz\")\n  }\n  if(n %% 15 == 0){\n    cat(\"FizzBuzz\")\n  }\n\
    \  if(n %% 17 == 0){\n    cat(\"Fizz\")\n  }\n  if(n %% 19 == 0){\n    cat(\"\
    Buzz\")\n  }\n  if(n %% 21 == 0){\n    cat(\"FizzBuzz\")\n  }\n  if(n %% 23 ==\
    \ 0){\n    cat(\"Fizz\")\n  }\n  if(n %% 25 == 0){\n    cat(\"Buzz\")\n  }\n \
    \ if(n %% 27 == 0){\n    cat(\"FizzBuzz\")\n  }\n  if(n %% 29 == 0){\n    cat(\"\
    Fizz\")\n  }\n  if(n %% 31 == 0){\n    cat(\"Buzz\")\n  }\n  if(n %% 33 == 0){\n\
    \    cat(\"FizzBuzz\")\n  }\n  if(n %% 35 == 0){\n    cat(\"Fizz\")\n  }\n  if(n\
    \ %% 37 == 0){\n    cat(\"Buzz\")\n  }\n  if(n %% 39 == 0)", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"Fizz\",n%%11))\n\
    \  if(n%%13==0) return(paste0(\"Buzz\",n%%13))\n  return(paste0(n))\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0) return(paste0(\"Fizz\"\
    ,x%%11))\n  if(x%%13==0) return(paste0(\"Buzz\",x%%13))\n  return(paste0(x))\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0) return(paste0(\"Fizz\"\
    ,x%%11))\n  if(x%%13==0) return(paste0(\"Buzz\",x%%13))\n  return(paste0(x))\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz\
    \ <- function(x) {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0) return(paste0(\"\
    Fizz\",x%%11))\n  if(x%%13==0) return(paste0(\"Buzz\",x%%13))\n  return(paste0(x))\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0) return(paste0(\"Fizz\"\
    ,x%%11))\n  if(x%%13==0) return(paste0(\"Buzz\",x%%13))\n  return(paste0(x))\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x%%11==0 & x%%13==", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer! I really appreciate\
    \ it! I really like the way you wrote the function and how you used the if-else\
    \ statements. I really appreciate it!\n<|/ c |>\n<| a tags=r,function |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=r,function |>\n<code>\nfizz_buzz <- function(n) {\n\
    \  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,function\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,function |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizz_buzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,function |>\n\
    <| a dscore=", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  } else if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\
    \ else if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  } else if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  } else {\n    return(n)\n  }\n}\n", "\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13 != 0)\
    \ {\n    return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n %% 11) + fizz_buzz(n\
    \ %% 13))\n}\n", "\n  n <- as.integer(n)\n  n <- ifelse(n %% 11 == 0 & n %% 13\
    \ == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n\
    \ %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n\
    \ <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n\
    \ %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0,\
    \ n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n\
    \ <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %%\
    \ 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13\
    \ == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n\
    \ %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n\
    \ <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n\
    \ %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0,\
    \ n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n\
    \ <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %%\
    \ 11, n)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13\
    \ == 0, n %% 11, n)\n  n <- ifelse(n ", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer.\
    \ I am not allowed to use any packages. I guess I should use ifelse() but I am\
    \ not sure how to do it.\n<|/ c |>\n<| c |>\nI added an example using ifelse.\n\
    <|/ c |>\n<| a dscore=0 |>\nHere's a solution using ifelse.\n<code>\nfizz_buzz\
    \ <- function(n) {\n  ifelse(n %% 11 == 0 & n %% 13 == 0, 0,\n         ifelse(n\
    \ %% 11 == 0, 1,\n                ifelse(n %% 13 == 0, 2, 3)))\n}\n</code>\n<|/\
    \ a tags=r,if-statement,for-loop |>\n<| a tags=r,if-statement,for-loop |>\n<code>\n\
    fizz_buzz <- function(n) {\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nPlease don't post only code as an answer, but also provide an explanation\
    \ of what your code does and how it solves the problem of the question. Answers\
    \ with an explanation are usually more helpful and of better quality, and are\
    \ more likely to attract upvotes.\n<|/ c |>\n<| c |>\nWhile this code may provide\
    \ a solution to the question, it's better to add context as to why/how it works.\
    \ This can help future users learn, and apply that knowledge to their own code.\
    \ You are also likely to have positive feedback from users in the form of upvotes,\
    \ when the code is explained.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <-\
    \ function(n) {\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,if-statement,for-loop\
    \ |>\n<| c |>\nPlease don't post only code as an answer, but also provide an explanation\
    \ of what your code does and how it solves the ", "\n  n <- as.integer(n)\n  return(sum(n\
    \ %% 11 == 0 & n %% 13 == 0))\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  return(length(which(n\
    \ %% 11 == 0 & n %% 13 == 0)))\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n\
    </code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| c |>\nThanks so much! This was\
    \ a great learning experience for me. I'm still trying to wrap my head around\
    \ recursion and this was a great way to learn about it.\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\nHere's a recursive solution:\n<code>\nfizzbuzz <- function(x) {\n  if (x\
    \ == 1) return(1)\n  if (x %% 11 == 0) return(11)\n  if (x %% 13 == 0) return(13)\n\
    \  return(fizzbuzz(x - 1))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n\
    <code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0) return(11)\n  if(x %% 13\
    \ == 0) return(13)\n  return(fizzbuzz(x - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n  if(x\
    \ %% 11 == 0) return(11)\n  if(x %% 13 == 0) return(13)\n  return(fizzbuzz(x -\
    \ 1))\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0) return(11)\n  if(x %% 13 == 0) return(13)\n  return(fizzbuzz(x\
    \ - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a dscore=1 |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x %% 11 == 0) return(11)\n  if(x %% 13 == 0) return(13)\n\
    \  return(fizzbuzz(x - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<|\
    \ a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0) return(11)\n\
    \  if(x %% 13 == 0) return(13)\n  return(fizz", "\n  n <- as.integer(n)\n  n <-\
    \ ifelse(n %% 11 == 0, n, n %% 13 + 1)\n  n <- ifelse(n %% 11 == 0, n, n %% 13\
    \ + 1)\n  n <- ifelse(n %% 13 == 0, n, n %% 11 + 1)\n  n <- ifelse(n %% 13 ==\
    \ 0, n, n %% 11 + 1)\n  n <- ifelse(n %% 11 == 0, n, n %% 13 + 1)\n  n <- ifelse(n\
    \ %% 11 == 0, n, n %% 13 + 1)\n  n <- ifelse(n %% 13 == 0, n, n %% 11 + 1)\n \
    \ n <- ifelse(n %% 13 == 0, n, n %% 11 + 1)\n  n <- ifelse(n %% 11 == 0, n, n\
    \ %% 13 + 1)\n  n <- ifelse(n %% 11 == 0, n, n %% 13 + 1)\n  n <- ifelse(n %%\
    \ 13 == 0, n, n %% 11 + 1)\n  n <- ifelse(n %% 13 == 0, n, n %% 11 + 1)\n  n <-\
    \ ifelse(n %% 11 == 0, n, n %% 13 + 1)\n  n <- ifelse(n %% 11 == 0, n, n %% 13\
    \ + 1)\n  n <- ifelse(n %% 13 == 0, n, n %% 11 + 1)\n  n <- ifelse(n %% 13 ==\
    \ 0, n, n %% 11 + 1)\n  n <- ifelse(n %% 11 == 0, n, n %% 13 + 1)\n  n <- ifelse(n\
    \ %% 11 == 0, n, n %% 13 + 1)\n  n <- ifelse(n %% 13 == 0, n, n %% 11 + 1)\n \
    \ n <- ifelse(n %% 13 == 0, n, n %% 11 + 1)\n  n <- ifelse(n %% 11 == 0, n, n\
    \ %% 13 + 1)\n  n <- ifelse(n %% 11 == 0, n, n %% 13 + 1)\n  n <- ifelse(n %%\
    \ 13 == 0, n, n %% 11 + 1)\n  n <- ifelse(n %% 13 == 0, n, n %% 11 + 1)\n  n <-\
    \ ifelse(n %% 11 == 0, n, n %% 13 + 1)\n  n <- ifelse(n %% 11 == 0, n, n %% 13\
    \ + 1)\n  n <- ifelse(n %% 13 == 0, n, n %% 11 + 1)\n  n <- ifelse(n %% 13 ==\
    \ 0, n, n %% 11 + 1)\n  n <- ifelse(n %% 11 == 0, n, n %% 13 + 1)\n  n <- ifelse(n\
    \ %% 11 == ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n \
    \   return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n\
    <| c |>\nThis doesn't work. Try `fizz_buzz(78)` which returns `2` instead of `3`.\n\
    <|/ c |>\n<| c |>\nThanks for pointing that out. I fixed it.\n<|/ c |>\n<| a tags=r,fizzbuzz\
    \ |>\nHere's a solution using dplyr and purrr:\n<code>\nlibrary(dplyr)\nlibrary(purrr)\n\
    \nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n\ndf <- data.frame(n = 1:100)\n\n\
    df %>% \n  mutate(fizz_buzz = map(n, fizz_buzz))\n\n   n  fizz_buzz\n1  1    \
    \      0\n2  2          0\n3  3          0\n4  4          0\n5  5          0\n\
    6  6          0\n7  7          0\n8  8          0\n9  9          0\n10 10    \
    \      0\n11 11          0\n12 12          0\n13 13          0\n14 14        \
    \  0\n15 15          0\n16 16          0\n17 17          0\n18 18          0\n\
    19 19          0\n20 20          0\n21 21          0\n22 22          0\n23 23\
    \          0\n24 24          0\n25 25          0\n26 26          0\n27 27    \
    \      0\n28 28          0\n29 29          0\n30 30          0\n31 31        \
    \  0\n32 32          0\n33 33          0\n34 34          0\n35 35          0\n\
    36 36          0\n37 37", "\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n\
    \  if(n%%13==0) return(2)\n  return(length(which(as.integer(n)%%11==0)))\n}\n",
  "\n  n <- as.integer(n)\n  return(sum(n %% 11 == 0 & n %% 13 == 0))\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz,for-loop |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n    return(\"\
    FizzBuzz\")\n  }\n  if(x %% 11 == 0) {\n    return(\"Fizz\")\n  }\n  if(x %% 13\
    \ == 0) {\n    return(\"Buzz\")\n  }\n  return(x)\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x) {\n  if(x\
    \ %% 11 == 0 & x %% 13 == 0) {\n    return(\"FizzBuzz\")\n  }\n  if(x %% 11 ==\
    \ 0) {\n    return(\"Fizz\")\n  }\n  if(x %% 13 == 0) {\n    return(\"Buzz\")\n\
    \  }\n  return(x)\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n\
    \    return(\"FizzBuzz\")\n  }\n  if(x %% 11 == 0) {\n    return(\"Fizz\")\n \
    \ }\n  if(x %% 13 == 0) {\n    return(\"Buzz\")\n  }\n  return(x)\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n    return(\"FizzBuzz\")\n  }\n  if(x\
    \ %% 11 == 0) {\n    return(\"Fizz\")\n  }\n  if(x %% 13 == 0) {\n    return(\"\
    Buzz\")\n  }\n  return(x)\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n\
    \    return(\"FizzBuzz\")\n  }\n  if(x %% 11 == 0) {\n    return(\"Fizz\")\n \
    \ }\n  if(x %% 13 == 0) {\n    return(\"Buzz\")\n  }\n  return(x)\n}\n</code>\n\
    <|/ a dscore=1 |>", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=r,fizzbuzz,for-loop,if-statement |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=r,fizzbuzz,for-loop,if-statement |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=0 tags=r,fizzbuzz,for-loop,if-statement\
    \ |>\n<| a tags=r,fizzbuzz,for-loop,if-statement |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=r,fizzbuzz,for-loop,if-statement |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<|", "\n  n <- n\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n \
    \ }\n  if(n %% 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13 !=\
    \ 0) {\n    return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n %% 11) + fizz_buzz(n\
    \ %% 13))\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't seem to work. `fizz_buzz(78)`\
    \ returns `2` instead of `3`.\n<|/ c |>\n<| c |>\nThanks for catching that. I've\
    \ fixed it now.\n<|/ c |>\n<| c |>\nThanks for your answer. Could you please explain\
    \ why you used `%%` instead of `%`?\n<|/ c |>\n<| c |>\n`%%` is the modulo operator.\
    \ `%` is the remainder operator. `%%` is used to get the remainder when dividing\
    \ two numbers. `%` is used to get the remainder when dividing two integers. `%%`\
    \ is more efficient than `%` because it doesn't have to convert numbers to `double`.\n\
    <|/ c |>\n<| c |>\nThanks for your explanation. Could you please explain why you\
    \ used `%%` instead of `%`?\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\n\
    fizz_buzz <- function(n) {\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13\
    \ != 0) {\n    return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n %% 11) +\
    \ fizz_buzz(n %% 13))\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't seem\
    \ to work. `fizz_buzz(78)` returns `2` instead of `3`.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. Could you please explain why you used `%%` instead of `%`?\n\
    <|/ c |>\n<| c |>\n`%%` is the modulo operator. `%` is the remainder operator.\
    \ `%%` is used to get the remainder when dividing two ", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0\
    \ & n%%13==0) return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n}\n</cell>\n<cell>\n\
    fizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nExercise: Write a function that returns the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11 and 13. Test\
    \ it on some examples:\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n   \
    \ return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13 != 0) {\n    return(fizz_buzz(n\
    \ %% 13))\n  }\n  return(fizz_buzz(n %% 11) + fizz_buzz(n %% 13))\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz,recursion |>\n<| a tags=r,fizzbuzz,recursion |>\nHere's\
    \ a solution that uses recursion and a for loop:\n<code>\nfizzbuzz <- function(n)\
    \ {\n  for(i in 1:n) {\n    if(i %% 11 == 0 | i %% 13 == 0) {\n      print(i)\n\
    \    }\n    if(i %% 11 != 0) {\n      fizzbuzz(i %% 11)\n    }\n    if(i %% 13\
    \ != 0) {\n      fizzbuzz(i %% 13)\n    }\n  }\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=2 |>\nHere's a recursive solution that uses no loops or if-else statements:\n\
    <code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    print(n)\n\
    \  } else {\n    fizzbuzz(n %% 11)\n    fizzbuzz(n %% 13)\n  }\n}\n</code>\n<|/\
    \ a tags=r,fizzbuzz,recursion |>\n<| a dscore=2 |>\nHere's a recursive solution\
    \ that uses no loops or if-else statements:\n<code>\nfizzbuzz <- function(n) {\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    print(n)\n  } else {\n    fizzbuzz(n\
    \ %% 11)\n    fizzbuzz(n %% 13)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz,recursion\
    \ |>\n<| a dscore=2 |>\nHere's a recursive solution that uses no loops or if-else\
    \ statements:\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0 | n %% 13\
    \ == 0) {\n    print(n)\n  } else {\n    fizzbuzz(n %% 11)\n    fizzbuzz(n %%\
    \ 13)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz,recursion |>\n<| a tags=r,fizzbuzz,recursion\
    \ |>", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n \
    \   return(n %% 13)\n  }\n  return(n %% 11)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11\
    \ == 0 | x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 != 0) {\n    return(x\
    \ %% 11)\n  }\n  if(x %% 13 != 0) {\n    return(x %% 13)\n  }\n  return(x %% 11)\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x %% 11 == 0 | x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 !=\
    \ 0) {\n    return(x %% 11)\n  }\n  if(x %% 13 != 0) {\n    return(x %% 13)\n\
    \  }\n  return(x %% 11)\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz |>\n\
    <code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 | x %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(x %% 11 != 0) {\n    return(x %% 11)\n  }\n  if(x %% 13 != 0) {\n \
    \   return(x %% 13)\n  }\n  return(x %% 11)\n}\n</code>\n<|/ a dscore=2 |>\n<|\
    \ a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 |\
    \ x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 != 0) {\n    return(x %% 11)\n\
    \  }\n  if(x %% 13 != 0) {\n    return(x %% 13)\n  }\n  return(x %% 11)\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x) {\n  if(x\
    \ %% 11 == 0 | x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 != 0) {\n   \
    \ return(x %% 11)\n  }\n  if(x %% 13 != 0) {\n    return", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n", "\n  return(length(which(n %% 11 == 0 & n %% 13 == 0)))\n}\n</cell>\n<text>\n\
    Now let's test our function by checking how many times 7 appears in integers less\
    \ than or equal to 50 and which are divisible by 11 or 13:\n\n\n</text>\n<cell>\n\
    fizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nNow let's write a function that will tell us how many times each\
    \ digit appears in integers less than or equal to $n$:\n\n\n</text>\n<cell>",
  "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ |>\n<| c |>\nThanks so much! I really appreciate it!\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0) return(0)\n\
    \  if(x%%11==0) return(1)\n  if(x%%13==0) return(2)\n  return(3)\n}\n\nfizzbuzz(50)\n\
    </code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a dscore=0 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n\
    \  if(x%%13==0) return(2)\n  return(3)\n}\n\nfizzbuzz(50)\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0\
    \ & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n  if(x%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation\
    \ to your answer such that others can learn from it\n<|/ c |>\n<| c |>\nWhile\
    \ this code may answer the question, providing additional context regarding why\
    \ and/or how this code answers the question improves its long-term value.\n<|/\
    \ c |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x){\n \
    \ if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n  if(x%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some\
    \ explanation to your answer such that others can learn from it\n<|/ c |>\n<|\
    \ a tags=r,fizzbuzz,for-", "\n  n <- n\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0)\
    \ return(0)\n  if(n%%13==0) return(2)\n  return(fizz_buzz(n/11)+3)\n}\n</cell>\n\
    <cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\nfizz_buzz(1000)\n</cell>\n<cell>\n\
    fizz_buzz(10000)\n</cell>\n<cell>\nfizz_buzz(100000)\n</cell>\n<cell>\nfizz_buzz(1000000)\n\
    </cell>\n<cell>\nfizz_buzz(10000000)\n</cell>\n<cell>\nfizz_buzz(100000000)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000)\n\
    </cell>\n<cell>\nfizz_buzz(100000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(10000000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(100000000000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(10000000000000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(100000000000000000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000000000000000)\n\
    </cell>\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n   \
    \ return(0)\n  }\n  return(length(which(n %% 11 == 0 & n %% 13 == 0)))\n}\n</cell>\n\
    <cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\
    \ Test your function with n = 50 and n = 78.\n\n\n</text>\n<cell>", "\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n\
    \ %% 11 == 1) {\n    return(1)\n  }\n  if(n %% 13 == 1) {\n    return(2)\n  }\n\
    \  return(3)\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n\
    fizzbuzz <- function(n) {\n  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(n) {\n  if(n%%11==0 | n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1 tags=r,fizzbuzz |>\n<| a\
    \ tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n) {\n  if(n%%11==0 | n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz", "\n  n <- n\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n -\
    \ 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0) return(0)\n  if(n%%13==0)\
    \ return(2)\n  return(fizzbuzz(n-1))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0) return(0)\n  if(n%%13==0)\
    \ return(2)\n  return(fizzbuzz(n-1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0) return(0)\n\
    \  if(n%%13==0) return(2)\n  return(fizzbuzz(n-1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0) return(0)\n  if(n%%13==0)\
    \ return(2)\n  return(fizzbuzz(n-1))\n}\n</code>\n<|/ a dscore=2 tags=r,recursion,fizzbuzz\
    \ |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0) return(0)\n\
    \  if(n%%13==0) return(2)\n  return(fizzbuzz(n-1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0) return(0)\n\
    \  if(n%%13==0) return(2)\n  return(fizzbuzz(n-1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0) return(0)\n\
    \  if(n%%13==0) return(2)\n  return(fizzbuzz(n", "\n  return(as.integer(n %% 11)\
    \ + as.integer(n %% 13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13 and which are also divisible by\
    \ 3 or 5.\n\n\n</text>\n<cell>", "\n  n <- n\n  return(\n    sum(\n      ifelse(\n\
    \        n %% 11 == 0 & n %% 13 == 0,\n        1,\n        ifelse(\n         \
    \ n %% 11 == 0 | n %% 13 == 0,\n          2,\n          ifelse(\n            n\
    \ %% 11 == 1 & n %% 13 == 0,\n            3,\n            ifelse(\n          \
    \    n %% 11 == 1 | n %% 13 == 0,\n              4,\n              ifelse(\n \
    \               n %% 11 == 2 & n %% 13 == 0,\n                5,\n           \
    \     ifelse(\n                  n %% 11 == 2 | n %% 13 == 0,\n              \
    \    6,\n                  ifelse(\n                    n %% 11 == 3 & n %% 13\
    \ == 0,\n                    7,\n                    ifelse(\n               \
    \       n %% 11 == 3 | n %% 13 == 0,\n                      8,\n             \
    \         ifelse(\n                        n %% 11 == 4 & n %% 13 == 0,\n    \
    \                    9,\n                        ifelse(\n                   \
    \       n %% 11 == 4 | n %% 13 == 0,\n                          10,\n        \
    \                  ifelse(\n                            n %% 11 == 5 & n %% 13\
    \ == 0,\n                            11,\n                            ifelse(\n\
    \                              n %% 11 == 5 | n %% 13 == 0,\n                \
    \              12,\n                              ifelse(\n                  \
    \              n %% 11 == 6 & n %% 13 == 0,\n                                13,\n\
    \                                ifelse(\n                                  n\
    \ %% 11 == 6 | n %% 13 == 0,\n                                  14,\n        \
    \                          ifelse(\n                                    n %% 11\
    \ == 7 & n %% 13 == 0,\n                                    15,\n            \
    \                        ifelse(\n                                      n %% 11\
    \ == 7 | n %% 13 == 0,\n                                      16,\n          \
    \                            ifelse(\n                                       \
    \ n %% 11 == 8 & n %% 13 == 0,\n                                        17,\n\
    \                                        ifelse(\n                           \
    \               n %% 11 == 8 | n %% 13 == 0,\n                               \
    \           18,\n                                          ifelse(\n         \
    \                                   n %% 11 == 9 & n %% 13 == 0,\n           \
    \                                 19,\n                                      \
    \      ifelse(\n                                              n %% 11 == 9 | n\
    \ %% 13 == 0,\n                                              20,\n           \
    \                                   ifelse(\n                                \
    \                n %% 11 == 10 & n %% 13 == 0,\n                             \
    \                   21,\n                                                ifelse(\n\
    \                                                  n %% 11 == 10 | n %% 13 ==\
    \ 0,\n                                                  22,\n                \
    \                                  ifelse(\n                                 \
    \                   n %% 11 == 11 & n %% 13 == 0,\n                          \
    \                          23,\n                                             \
    \       ifelse(\n                                                      n %% 11\
    \ == 11 | n %% 13 == 0,\n                                                    \
    \  24,\n                                                      ifelse(\n      \
    \                                                  n %% 11 == 12 & n %% 13", "\n\
    \  return(sum(as.integer(n %% 11 == 0) & as.integer(n %% 13 == 0)))\n}\n</cell>\n\
    <cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nThe function above is called a generator function. It returns\
    \ a generator object which can be iterated over to get the next value.\n\n\n</text>\n\
    <cell>\nfizz_buzz <- function(n) {\n  return(sum(as.integer(n %% 11 == 0) & as.integer(n\
    \ %% 13 == 0)))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nThe function above is called\
    \ a generator function. It returns a generator object which can be iterated over\
    \ to get the next value.\n\n\n</text>\n<cell>\nfizz_buzz <- function(n) {\n  return(sum(as.integer(n\
    \ %% 11 == 0) & as.integer(n %% 13 == 0)))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n\
    </cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\n\
    The function above is called a generator function. It returns a generator object\
    \ which can be iterated over to get the next value.\n\n\n</text>\n<cell>\nfizz_buzz\
    \ <- function(n) {\n  return(sum(as.integer(n %% 11 == 0) & as.integer(n %% 13\
    \ == 0)))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nThe function above is called\
    \ a generator function. It returns a generator object which can be iterated over\
    \ to get the next value.\n\n\n</text>\n<cell>\nfizz_buzz <- function(n) {\n  return(sum(as.integer(n\
    \ %% 11 == 0) & as.integer(n %% 13 == 0)))\n}\n</cell>\n<cell>\nfizz_buzz(50)",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of integers and returns the number of integers in the vector that are\
    \ divisible by 7 and are also divisible by 11.\n\n\n</text>\n<cell>", "\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0\
    \ & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n  if(x%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n\
    \  if(x%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ |>\n<| a |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0) return(0)\n\
    \  if(x%%11==0) return(1)\n  if(x%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz,for-loop dscore=2 |>\n<| a tags=r,fizzbuzz,for-loop |>\n\
    <code>\nfizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0)\
    \ return(1)\n  if(x%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0\
    \ & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n  if(x%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop |>\n\
    <code>\nfizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0)\
    \ return(1)\n  if(x", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 ==\
    \ 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  n\
    \ <- ifelse(n %% 11 == 0 & n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n,\
    \ ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 ==\
    \ 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <-\
    \ ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 ==\
    \ 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %%\
    \ 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n\
    \ %% 13 == 0, n, 0))\n  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n\
    \  n <- ifelse(n %% 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n  n <- ifelse(n %%\
    \ 11 == 0, n, ifelse(n %% 13 == 0, n, 0))\n", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ | n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"fizz\",n%%11))\n  if(n%%13==0)\
    \ return(paste0(\"buzz\",n%%13))\n  return(paste0(\"fizz\",n%%11,\"buzz\",n%%13))\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x %% 11 == 0) return(\"fizz\")\n  if(x %% 13 == 0) return(\"buzz\")\n\
    \  return(paste0(\"fizz\", x %% 11, \"buzz\", x %% 13))\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11\
    \ == 0) return(\"fizz\")\n  if(x %% 13 == 0) return(\"buzz\")\n  return(paste0(\"\
    fizz\", x %% 11, \"buzz\", x %% 13))\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0) return(\"fizz\")\n\
    \  if(x %% 13 == 0) return(\"buzz\")\n  return(paste0(\"fizz\", x %% 11, \"buzz\"\
    , x %% 13))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x %% 11 == 0) return(\"fizz\")\n  if(x %% 13 ==\
    \ 0) return(\"buzz\")\n  return(paste0(\"fizz\", x %% 11, \"buzz\", x %% 13))\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0) return(\"fizz\")\n  if(x %% 13 == 0) return(\"buzz\")\n  return(paste0(\"\
    fizz\", x %% 11, \"buzz\", x %% 13))\n}\n</code>\n<|/ a tags=r,fizzbu", "\n  n\
    \ <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n</code>\n<|/ a |>\n<| a dscore=1 |>\nHere's a solution\
    \ using dplyr and stringr:\n<code>\nlibrary(dplyr)\nlibrary(stringr)\n", "\n \
    \ n <- n\n  return(\n    sum(\n      ifelse(\n        n %% 11 == 0 & n %% 13 ==\
    \ 0,\n        1,\n        ifelse(\n          n %% 11 == 0 | n %% 13 == 0,\n  \
    \        2,\n          ifelse(\n            n %% 11 == 1 & n %% 13 == 1,\n   \
    \         3,\n            ifelse(\n              n %% 11 == 1 | n %% 13 == 1,\n\
    \              4,\n              ifelse(\n                n %% 11 == 2 & n %%\
    \ 13 == 2,\n                5,\n                ifelse(\n                  n %%\
    \ 11 == 2 | n %% 13 == 2,\n                  6,\n                  ifelse(\n \
    \                   n %% 11 == 3 & n %% 13 == 3,\n                    7,\n   \
    \                 ifelse(\n                      n %% 11 == 3 | n %% 13 == 3,\n\
    \                      8,\n                      ifelse(\n                   \
    \     n %% 11 == 4 & n %% 13 == 4,\n                        9,\n             \
    \           ifelse(\n                          n %% 11 == 4 | n %% 13 == 4,\n\
    \                          10,\n                          ifelse(\n          \
    \                  n %% 11 == 5 & n %% 13 == 5,\n                            11,\n\
    \                            ifelse(\n                              n %% 11 ==\
    \ 5 | n %% 13 == 5,\n                              12,\n                     \
    \         ifelse(\n                                n %% 11 == 6 & n %% 13 == 6,\n\
    \                                13,\n                                ifelse(\n\
    \                                  n %% 11 == 6 | n %% 13 == 6,\n            \
    \                      14,\n                                  ifelse(\n      \
    \                              n %% 11 == 7 & n %% 13 == 7,\n                \
    \                    15,\n                                    ifelse(\n      \
    \                                n %% 11 == 7 | n %% 13 == 7,\n              \
    \                        16,\n                                      ifelse(\n\
    \                                        n %% 11 == 8 & n %% 13 == 8,\n      \
    \                                  17,\n                                     \
    \   ifelse(\n                                          n %% 11 == 8 | n %% 13\
    \ == 8,\n                                          18,\n                     \
    \                     ifelse(\n                                            n %%\
    \ 11 == 9 & n %% 13 == 9,\n                                            19,\n \
    \                                           ifelse(\n                        \
    \                      n %% 11 == 9 | n %% 13 == 9,\n                        \
    \                      20,\n                                              ifelse(\n\
    \                                                n %% 11 == 10 & n %% 13 == 10,\n\
    \                                                21,\n                       \
    \                         ifelse(\n                                          \
    \        n %% 11 == 10 | n %% 13 == 10,\n                                    \
    \              22,\n                                                  ifelse(\n\
    \                                                    n %% 11 == 11 & n %% 13 ==\
    \ 11,\n                                                    23,\n             \
    \                                       ifelse(\n                            \
    \                          n %% 11 == 11 | n %% 13 == 11,\n                  \
    \                                    24,\n                                   \
    \                   ifelse(\n                                                \
    \        n %% 11 == 12 & n %% 13 == ", "\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n\
    \  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a\
    \ tags=r,fizzbuzz,for-loop,if-statement |>\n<| c |>\nThank you so much for your\
    \ help! I really appreciate it!\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 ==\
    \ 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop,if-statement\
    \ |>\n<| c |>\nThank you so much for your help! I really appreciate it!\n<|/ c\
    \ |>\n<| a tags=r,fizzbuzz,for-loop,if-statement |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so much for\
    \ your help! I really appreciate it!\n<|/ c |>\n<| a tags=r,fizzbuzz,for-loop,if-statement\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n\
    \  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThank you so much for your help! I really appreciate it!\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11", "\n \
    \ n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n  return(fizz_buzz(n/11)+3)\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks so much for your help. I really\
    \ appreciate it!\n<|/ c |>\n<| a dscore=1 |>\nHere's a solution using recursion:\n\
    <code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13\
    \ == 0) return(2)\n  return(fizz_buzz(n / 11) + 3)\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| c |>\nThanks so much for your help. I really appreciate it!\n<|/ c |>\n\
    <| a tags=r,recursion,fizzbuzz |>\nHere's a solution that uses recursion:\n<code>\n\
    fizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n / 11) + 3)\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks\
    \ so much for your help. I really appreciate it!\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\nHere's a solution that uses recursion:\n<code>\nfizz_buzz <- function(n)\
    \ {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ / 11) + 3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,recursion,fizzbuzz |>\n\
    Here's a solution using recursion:\n<code>\nfizz_buzz <- function(n) {\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n /\
    \ 11) + 3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,recursion,fizzbuzz |>\n\
    <code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13\
    \ == 0) return(2)\n  return(fizz_buzz(n / 11) + 3)\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n", "\n  n <- n\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n \
    \ if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n\
    \ %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n   \
    \ return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 ==\
    \ 0) {\n    return(0)\n  }\n  if(n %% 11 == 1) {\n    return(1)\n  }\n  if(n %%\
    \ 13 == 1) {\n    return(2)\n  }\n  if(n %% 11 == 2) {\n    return(3)\n  }\n \
    \ if(n %% 13 == 2) {\n    return(4)\n  }\n  if(n %% 11 == 3) {\n    return(5)\n\
    \  }\n  if(n %% 13 == 3) {\n    return(6)\n  }\n  if(n %% 11 == 4) {\n    return(7)\n\
    \  }\n  if(n %% 13 == 4) {\n    return(8)\n  }\n  if(n %% 11 == 5) {\n    return(9)\n\
    \  }\n  if(n %% 13 == 5) {\n    return(10)\n  }\n  if(n %% 11 == 6) {\n    return(11)\n\
    \  }\n  if(n %% 13 == 6) {\n    return(12)\n  }\n  if(n %% 11 == 7) {\n    return(13)\n\
    \  }\n  if(n %% 13 == 7) {\n    return(14)\n  }\n  if(n %% 11 == 8) {\n    return(15)\n\
    \  }\n  if(n %% 13 == 8) {\n    return(16)\n  }\n  if(n %% 11 == 9) {\n    return(17)\n\
    \  }\n  if(n %% 13 == 9) {\n    return(18)\n  }\n  if(n %% 11 == 10) {\n    return(19)\n\
    \  }\n  if(n %% 13 == 10) {\n    return(20)\n  }\n  if(n %% 11 == 11) {\n    return(21)\n\
    \  }\n  if(n %% 13 == 11) {\n    return(22)\n  }\n  if(n %% 11 == 12) {\n    return(23)\n\
    \  }\n  if(n %% 13 == 12) {\n    return(24)\n  }\n  if(n %% 11 == 13) {\n    return(25)\n\
    \  }\n  if(n %% 13 == 13) {\n    return(26)\n  }\n  if(n %% 11 == 14) {\n    return(27)\n\
    \  }\n  if(n %% 13 == 14) {\n    return(28)\n  }\n  if(n %% 11 == 15) {\n    return(29)\n\
    \  }\n  if(n %% 13 == 15) {\n    return(30)\n  }\n  if(n %% 11 == 16) {\n    return(31)\n\
    \  }\n  if(n %% 13 == 16) {\n    return(32)\n  }\n  if(n %% 11 == 17) {\n    return(33)\n\
    \  }\n  if(n %% 13 == 17) {\n    return(34", "\n  n <- as.integer(n)\n  if(n %%\
    \ 11 == 0 & n %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  } else if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  } else if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  } else {\n    return(NA)\n\
    \  }\n}\n</code>\n<|/ a |>\n<| c |>\nThanks so much for the help! I really appreciate\
    \ it!\n<|/ c |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x%%11==0 & x%%13==0){\n    return(0)\n  }\n  if(x%%11==0 & x%%13!=0){\n\
    \    return(1)\n  }\n  if(x%%11!=0 & x%%13==0){\n    return(2)\n  }\n  if(x%%11!=0\
    \ & x%%13!=0){\n    return(3)\n  }\n  return(NA)\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0){\n\
    \    return(0)\n  }\n  if(x%%11==0 & x%%13!=0){\n    return(1)\n  }\n  if(x%%11!=0\
    \ & x%%13==0){\n    return(2)\n  }\n  if(x%%11!=0 & x%%13!=0){\n    return(3)\n\
    \  }\n  return(NA)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0){\n    return(0)\n  }\n  if(x%%11==0\
    \ & x%%13!=0){\n    return(1)\n  }\n  if(x%%11!=0 & x%%13==0){\n    return(2)\n\
    \  }\n  if(x%%11!=0 & x%%13!=0){\n    return(3)\n  }\n  return(NA)\n}\n</code>\n\
    <|/ a dscore=1 tags=r,fizzbuzz,for-loop |>\n<| a dscore=1 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 ==\
    \ 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</cell>\n<cell>\nfizz_buzz(50)\n\
    </cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13 and which are also divisible\
    \ by 3 or 5.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz,if-statement |>\n<| a dscore=1 |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(x %% 11 == 0) {\n    return(1)\n  }\n  if(x %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,if-statement |>\n<| a dscore=1\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(x %% 11 == 0) {\n    return(1)\n  }\n  if(x %% 13 ==\
    \ 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,if-statement\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 &\
    \ x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 == 0) {\n    return(1)\n \
    \ }\n  if(x %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a\
    \ tags=r,fizzbuzz,if-statement |>\n<| a tags=r,fizzbuzz,if-statement |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(x %% 11 == 0) {\n    return(1)\n  }\n  if(x %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,if-statement\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(x %% 11 == 0) {\n    return(1)\n  }\n  if(x %% 13 ==\
    \ 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,if-statement\
    \ |>\n<code>\nfizzbuzz <- function(", "\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0\
    \ & n %% 13 != 0) {\n    return(1)\n  } else if(n %% 11 != 0 & n %% 13 == 0) {\n\
    \    return(2)\n  } else if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks for your answer! I added\
    \ a more efficient solution to my question above. I'm still trying to figure out\
    \ how to get my original code to work. I'm still learning R and am still trying\
    \ to figure out how to do things the \"R\" way. Thanks again!\n<|/ c |>\n<| a\
    \ dscore=2 |>\nHere's a solution that uses ifelse() instead of if(). ifelse()\
    \ is a vectorized version of if(). \n<code>\nfizz_buzz <- function(n) {\n  ifelse(n\
    \ %% 11 == 0 & n %% 13 == 0, \"FizzBuzz\", \n         ifelse(n %% 11 == 0 & n\
    \ %% 13 != 0, \"Fizz\", \n                ifelse(n %% 11 != 0 & n %% 13 == 0,\
    \ \"Buzz\", \"Fizz\")))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks\
    \ for your answer! I added a more efficient solution to my question above. I'm\
    \ still trying to figure out how to get my original code to work. I'm still learning\
    \ R and am still trying to figure out how to do things the \"R\" way. Thanks again!\n\
    <|/ c |>\n<| a dscore=2 |>\nHere's a solution using ifelse():\n<code>\nfizz_buzz\
    \ <- function(n) {\n  ifelse(n %% 11 == 0 & n %% 13 == 0, \"FizzBuzz\", \n   \
    \      ifelse(n %% 11 == 0 & n %% 13 != 0, \"Fizz\", \n                ifelse(n\
    \ %% 11 != 0 & n %% 13 == 0, \"Buzz\", \"Fizz\")))\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a dscore=2 |>\nHere's a solution that uses case_when() from dplyr and\
    \ purrr:\n<code>\nlibrary(dplyr)\nlibrary(purrr)\n\nfizz_buzz <- function(n) {\n\
    \  case_when(\n    n %% 11 == 0 & n %% 13 == 0 ~ \"FizzBu", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like your\
    \ solution, but I wonder if there is a way to avoid the if/else statements. I\
    \ wonder if there is a way to avoid the if/else statements by using some kind\
    \ of vectorized function?\n<|/ c |>\n<| c |>\nI added a solution using vectorized\
    \ functions. I hope it helps.\n<|/ c |>\n<| c |>\nThanks for your solution! I\
    \ wonder if there is a way to avoid the if/else statements by using some kind\
    \ of vectorized function?\n<|/ c |>\n<| c |>\nI added a vectorized solution. I\
    \ hope it helps.\n<|/ c |>\n<| a dscore=1 |>\nHere is a vectorized solution:\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n\
    }\n\nfizz_buzz(50)", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n \
    \ if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a tags=r,recursion,fizzbuzz |>\nHere's a recursive solution that doesn't\
    \ use any loops:\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\nHere's a recursive solution that doesn't use any loops:\n\
    <code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13\
    \ == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ dscore=2 |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n\
    \ - 1))\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <-\
    \ function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<|\
    \ a tags=r,recursion,fizzbuzz |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %%\
    \ 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n %% ", "\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz,for-loop |>\n<| c |>\nThanks for your answer! I understand\
    \ how it works now. I'm still new to R and I didn't know that you could use if/else\
    \ statements inside of a for loop. Thanks again!\n<|/ c |>\n<| c |>\nNo problem!\
    \ The `if/else` statement is just another way of writing `if/else` statements.\
    \ It's a very useful tool for conditional statements. I find it very useful to\
    \ write `if/else` statements inside of for loops because I can then use those\
    \ conditional statements inside of the `for` loop. For example, `for(i in 1:100)\
    \ if(i %% 3 == 0) print(paste0(\"Fizz\", i))`\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x %% 3 == 0) return(\"Fizz\")\n  if(x %% 5 ==\
    \ 0) return(\"Buzz\")\n  return(paste0(ifelse(x %% 7 == 0, \"FizzBuzz\", as.character(x)))\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a tags=r,fizzbuzz,for-loop |>\n\
    <code>\nfizzbuzz <- function(x) {\n  if(x %% 3 == 0) return(\"Fizz\")\n  if(x\
    \ %% 5 == 0) return(\"Buzz\")\n  return(paste0(ifelse(x %% 7 == 0, \"FizzBuzz\"\
    , as.character(x)))\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 3 == 0) return(\"Fizz\")\n\
    \  if(x %% 5 == 0) return(\"Buzz\")\n  return(paste0(ifelse(x %% 7 == 0, \"FizzBuzz\"\
    , as.character(x)))\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 3 == 0) return(\"Fizz\")",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n</cell>\n<text>\nNow let's test our function by passing\
    \ in the numbers we know should return fizz_buzz numbers:\n\n\n</text>\n<cell>\n\
    fizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nNow let's test our function by passing in the numbers we know\
    \ should return fizz_buzz numbers:\n\n\n</text>\n<cell>\nfizz_buzz(100)\n</cell>\n\
    <text>\nNow let's test our function by passing in the numbers we know should return\
    \ fizz_buzz numbers:\n\n\n</text>\n<cell>\nfizz_buzz(101)\n</cell>\n<text>\nNow\
    \ let's test our function by passing in the numbers we know should return fizz_buzz\
    \ numbers:\n\n\n</text>\n<cell>\nfizz_buzz(102)\n</cell>\n<text>\nNow let's test\
    \ our function by passing in the numbers we know should return fizz_buzz numbers:\n\
    \n\n</text>\n<cell>\nfizz_buzz(103)\n</cell>\n<text>\nNow let's test our function\
    \ by passing in the numbers we know should return fizz_buzz numbers:\n\n\n</text>\n\
    <cell>\nfizz_buzz(104)\n</cell>\n<text>\nNow let's test our function by passing\
    \ in the numbers we know should return fizz_buzz numbers:\n\n\n</text>\n<cell>\n\
    fizz_buzz(105)\n</cell>\n<text>\nNow let's test our function by passing in the\
    \ numbers we know should return fizz_buzz numbers:\n\n\n</text>\n<cell>\nfizz_buzz(106)\n\
    </cell>\n<text>\nNow let's test our function by passing in the numbers we know\
    \ should return fizz_buzz numbers:\n\n\n</text>\n<cell>\nfizz_buzz(107)\n</cell>\n\
    <text>\nNow let's ", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz,for-loop |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 ==\
    \ 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a dscore=2 |>\n<code>\nfizzbuzz\
    \ <- function(n) {\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a |>\n<code>\n\
    fizzbuzz <- function(n) {\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a dscore=2 tags=r,fizzbuzz,for-loop |>\n<|\
    \ a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %%\
    \ 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n\
    \  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a\
    \ dscore=2 |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 ==\
    \ 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz\
    \ <- function(n) {\n  if(n %% 11", "\n  n <- as.integer(n)\n  if(n %% 11 == 0)\
    \ return(0)\n  if(n %% 13 == 0) return(2)\n  return(as.integer(n %% 11) + as.integer(n\
    \ %% 13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13 and which are also divisible by 3 or 5.\n\n\n\
    </text>\n<cell>", "\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0)\
    \ return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThanks for your answer. I am not able to understand how this works.\
    \ Can you please explain how this works?\n<|/ c |>\n<| c |>\nThe function `fizz_buzz`\
    \ recursively calls itself until it reaches the base case. At that point it returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. Since `fizz_buzz` calls itself recursively until it reaches the\
    \ base case, it returns `fizz_buzz(n/11) + fizz_buzz(n/13)` which returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. Since `fizz_buzz` calls itself recursively until it reaches the\
    \ base case, it returns `fizz_buzz(n/11) + fizz_buzz(n/13)` which returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. Since `fizz_buzz` calls itself recursively until it reaches the\
    \ base case, it returns `fizz_buzz(n/11) + fizz_buzz(n/13)` which returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. Since `fizz_buzz` calls itself recursively until it reaches the\
    \ base case, it returns `fizz_buzz(n/11) + fizz_buzz(n/13)` which returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. Since `fizz_buzz` calls itself recursively until it reaches the\
    \ base case, it returns `fizz_buzz(n/11) + fizz_buzz(n/13)` which returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. Since `fizz_buzz` calls itself recursively until it reaches the\
    \ base case, it returns `fizz_buzz(n/11) + fizz_buzz(n/13)` which returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. Since `fizz_buzz` calls itself recursively until it reaches the\
    \ base case", "\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) {\n    n <- n+1\n\
    \  }\n  if(n%%11==0) {\n    n <- n+1\n  }\n  if(n%%13==0) {\n    n <- n+1\n  }\n\
    \  return(n)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThis doesn't seem\
    \ to work. `fizz_buzz(50)` returns `1` instead of `0`.\n<|/ c |>\n<| c |>\nThanks\
    \ for pointing that out. I fixed it.\n<|/ c |>\n<| a tags=r,fizzbuzz |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x%%11==0 | x%%13==0){\n    x <- x+1 \n  }\n  if(x%%11==0){\n\
    \    x <- x+1 \n  }\n  if(x%%13==0){\n    x <- x+1 \n  }\n  return(x)\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0\
    \ | x%%13==0){\n    x <- x+1 \n  }\n  if(x%%11==0){\n    x <- x+1 \n  }\n  if(x%%13==0){\n\
    \    x <- x+1 \n  }\n  return(x)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0 | x%%13==0){\n    x <- x+1\
    \ \n  }\n  if(x%%11==0){\n    x <- x+1 \n  }\n  if(x%%13==0){\n    x <- x+1 \n\
    \  }\n  return(x)\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x%%11==0 | x%%13==0){\n    x <- x+1 \n  }\n  if(x%%11==0){\n\
    \    x <- x+1 \n  }\n  if(x%%13==0){\n    x <- x+1 \n  }\n  return(x)\n}", "\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + 1)\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ seem to work. `fizz_buzz(78)` returns `3` instead of `2`.\n<|/ c |>\n<| c |>\n\
    Oops, I missed a return statement in the function.  Fixed now.\n<|/ c |>\n<| c\
    \ |>\nThanks, I fixed it now. :)\n<|/ c |>\n<| c |>\nI added a version that doesn't\
    \ use recursion.\n<|/ c |>\n<| c |>\nThanks, I added a version that doesn't use\
    \ recursion.\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizzbuzz <-\
    \ function(x){\n  if(x %% 11 == 0){\n    return(0)\n  }\n  if(x %% 13 == 0){\n\
    \    return(2)\n  }\n  return(fizzbuzz(x/11) + 1)\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0){\n\
    \    return(0)\n  }\n  if(x %% 13 == 0){\n    return(2)\n  }\n  return(fizzbuzz(x/11)\
    \ + 1)\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a dscore=2 |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x %% 11 == 0){\n    return(0)\n  }\n  if(x %% 13\
    \ == 0){\n    return(2)\n  }\n  return(fizzbuzz(x/11) + 1)\n}\n</code>\n<|/ a\
    \ tags=r,recursion,fizzbuzz |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0){\n    return(0)\n  }\n  if(x %% 13 == 0){\n    return(2)\n\
    \  }\n  return(fizzbuzz(x/11) + 1)\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a\
    \ tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 |\
    \ n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a\
    \ dscore=1 |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ | n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0 & n%%13==0) return(2)\n  if(n%%11!=0\
    \ & n%%13!=0) return(3)\n}\n</code>\n<|/ a |>\n<| c |>\nThanks so much for this!\
    \ I really appreciate it!\n<|/ c |>\n<| a tags=r,fizzbuzz,for-loop,if-statement\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0 &\
    \ n%%13==0) return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n}\n</code>\n<|/ a\
    \ dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0\
    \ & n%%13==0) return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n}\n</code>\n<|/\
    \ a tags=r,fizzbuzz,for-loop,if-statement |>\n<| a tags=r,fizzbuzz,for-loop,if-statement\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0 &\
    \ n%%13==0) return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n}\n</code>\n<|/ a\
    \ dscore=2 |>\n<| a tags=r,fizzbuzz,for-loop,if-statement |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0 & n%%13", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| c |>\nThank you for your answer! I understand your code, but I do not\
    \ understand why you use \"return\" in the first two lines of your function. Could\
    \ you please explain to me why you use \"return\"?\n<|/ c |>\n<| c |>\nThe `return`\
    \ statement is used in a recursive function to return to the calling function\
    \ and exit the function early. `return` returns from the function to the calling\
    \ function and stops further execution of the function. `return` also stops further\
    \ execution of the function and returns the value to the calling function.\n<|/\
    \ c |>\n<| c |>\nThank you for your explanation! I understand it now!\n<|/ c |>\n\
    <| a tags=r,recursion,fizzbuzz |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %%\
    \ 11 == 0) return(0)\n  if(x %% 13 == 0) return(2)\n  return(fizzbuzz(x - 1))\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0) return(0)\n  if(x %% 13 == 0) return(2)\n  return(fizzbuzz(x\
    \ - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0) return(0)\n  if(x %%\
    \ 13 == 0) return(2)\n  return(fizzbuzz(x - 1))\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0) return(0)\n\
    \  if(x %% 13 == 0) return(2)\n  return(fizzbuzz(x - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0) return(0)\n\
    \  if(x %% 13 == 0) return(2)\n  return", "\n  n <- as.integer(n)\n  if(n%%11==0)\
    \ return(0)\n  if(n%%13==0) return(2)\n  return(as.integer(n/11) + as.integer(n/13))\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks for your answer. Your code\
    \ works but it is very slow for large numbers. I wonder if there is a faster way\
    \ to solve this problem.\n<|/ c |>\n<| c |>\nI added a faster version\n<|/ c |>\n\
    <| c |>\nThanks for your answer. Your code works but it is very slow for large\
    \ numbers. I wonder if there is a faster way to solve this problem.\n<|/ c |>\n\
    <| c |>\nI added a faster version\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Your code works but it is very slow for large numbers. I wonder if there is\
    \ a faster way to solve this problem.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizzbuzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0)\
    \ return(2)\n  return(as.integer(n/11) + as.integer(n/13))\n}\n</code>\n<|/ a\
    \ tags=r,fizzbuzz |>\n<| c |>\nThanks for your answer. Your code works but it\
    \ is very slow for large numbers. I wonder if there is a faster way to solve this\
    \ problem.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizzbuzz <- function(n) {\n  n\
    \ <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n  return(as.integer(n/11)\
    \ + as.integer(n/13))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks for\
    \ your answer. Your code works but it is very slow for large numbers. I wonder\
    \ if there is a faster way to solve this problem.\n<|/ c |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0)\
    \ return(0)\n  if(n%%13==0) return(2)\n  return(as.integer(n/11) + as.integer(n/13))\n\
    }\n</code>\n<|/ a dscore=", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %%\
    \ 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(n %% 11)\n\
    \  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n %% 11)\n}\n</code>\n\
    <|/ a tags=r |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n\
    \ %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n\
    \ %% 13)\n  }\n  return(n %% 11)\n}\n</code>\n<|/ a tags=r |>\n<| c |>\nWhile\
    \ this code may answer the question, providing additional context regarding why\
    \ and/or how this code answers the question improves its long-term value.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n\
    \    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n\
    \ %% 11)\n}\n</code>\n<|/ a tags=r |>\n<| c |>\nWhile this code may answer the\
    \ question, providing additional context regarding why and/or how this code answers\
    \ the question improves its long-term value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(n %% 11)\n  }\n\
    \  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n %% 11)\n}\n</code>\n\
    <|/ a tags=r |>\n<| a tags=r |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n\
    \    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% ", "\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n\
    \ %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n\
    \ %% 13)\n  }\n  return(n %% 11)\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 | x %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(x %% 11 != 0) {\n    return(x %% 11)\n  }\n  if(x %%\
    \ 13 != 0) {\n    return(x %% 13)\n  }\n  return(x %% 11)\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 |\
    \ x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 != 0) {\n    return(x %% 11)\n\
    \  }\n  if(x %% 13 != 0) {\n    return(x %% 13)\n  }\n  return(x %% 11)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x) {\n\
    \  if(x %% 11 == 0 | x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 != 0) {\n\
    \    return(x %% 11)\n  }\n  if(x %% 13 != 0) {\n    return(x %% 13)\n  }\n  return(x\
    \ %% 11)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizzbuzz\
    \ <- function(x) {\n  if(x %% 11 == 0 | x %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(x %% 11 != 0) {\n    return(x %% 11)\n  }\n  if(x %% 13 != 0) {\n    return(x\
    \ %% 13)\n  }\n  return(x %% 11)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 | x %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(x %% 11 != 0) {\n    return(x %% 11)\n  }\n  if(x %%\
    \ 13 != 0) {\n    return(x %% 13)", "\n  n <- as.integer(n)\n  if(n %% 11 == 0\
    \ & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n\nfizz_buzz(50)\n\
    fizz_buzz(78)\nfizz_buzz(79)\nfizz_buzz(100)\nfizz_buzz(123)\nfizz_buzz(126)\n\
    fizz_buzz(129)\nfizz_buzz(130)\nfizz_buzz(131)\nfizz_buzz(132)\nfizz_buzz(133)\n\
    fizz_buzz(134)\nfizz_buzz(135)\nfizz_buzz(136)\nfizz_buzz(137)\nfizz_buzz(138)\n\
    fizz_buzz(139)\nfizz_buzz(140)\nfizz_buzz(141)\nfizz_buzz(142)\nfizz_buzz(143)\n\
    fizz_buzz(144)\nfizz_buzz(145)\nfizz_buzz(146)\nfizz_buzz(147)\nfizz_buzz(148)\n\
    fizz_buzz(149)\nfizz_buzz(150)\nfizz_buzz(151)\nfizz_buzz(152)\nfizz_buzz(153)\n\
    fizz_buzz(154)\nfizz_buzz(155)\nfizz_buzz(156)\nfizz_buzz(157)\nfizz_buzz(158)\n\
    fizz_buzz(159)\nfizz_buzz(160)\nfizz_buzz(161)\nfizz_buzz(162)\nfizz_buzz(163)\n\
    fizz_buzz(164)\nfizz_buzz(165)\nfizz_buzz(166)\nfizz_buzz(167)\nfizz_buzz(168)\n\
    fizz_buzz(169)\nfizz_buzz(", "\n  n <- n\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 ==\
    \ 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a |>\n<| c |>\nThanks\
    \ for your answer! I appreciate it!\n<|/ c |>\n<| a tags=r,fizzbuzz,for-loop,if-statement\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n \
    \   return(0)\n  }\n  if(x %% 11 == 0){\n    return(1)\n  }\n  if(x %% 13 == 0){\n\
    \    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n \
    \   return(0)\n  }\n  if(x %% 11 == 0){\n    return(1)\n  }\n  if(x %% 13 == 0){\n\
    \    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop,if-statement\
    \ |>\n<| a tags=r,fizzbuzz,for-loop,if-statement |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x %% 11 == 0){\n\
    \    return(1)\n  }\n  if(x %% 13 == 0){\n    return(2)\n  }\n  return(3)\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop,if-statement |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n\
    \  }\n  if(x %% 11 == 0){\n    return(1)\n  }\n  if(x %% 13 == 0){\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x\
    \ %% 11 == 0){\n    return(1)\n  }\n  ", "\n  n <- as.integer(n)\n  if(n %% 11\
    \ == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n\
    }\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\n\
    fizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\nfizz_buzz(1000)\n\
    </cell>\n<cell>\nfizz_buzz(10000)\n</cell>\n<cell>\nfizz_buzz(100000)\n</cell>\n\
    <cell>\nfizz_buzz(1000000)\n</cell>\n<cell>\nfizz_buzz(10000000)\n</cell>\n<cell>\n\
    fizz_buzz(100000000)\n</cell>\n<cell>\nfizz_buzz(1000000000)\n</cell>\n<cell>\n\
    fizz_buzz(10000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000)\n</cell>\n<cell>\n\
    fizz_buzz(1000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000)\n</cell>\n\
    <cell>\nfizz_buzz(100000000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(10000000000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(100000000000000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(10000000000000000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(100", "\n  n <- n\n  if(n %% 11 == 0) return(0)\n \
    \ if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| c |>\nThanks for your answer! I understand your code, but I still don't\
    \ understand how it works. I understand that `fizz_buzz` returns `0` when `n`\
    \ is divisible by 11 or 13, but I don't understand how it returns `2` when `n`\
    \ is divisible by 11 and 13. Could you please explain how it works?\n<|/ c |>\n\
    <| c |>\nThe function `fizz_buzz` returns `0` when `n` is divisible by 11 or 13.\
    \ `fizz_buzz(50)` returns `0` because `50` is divisible by 11 and `0` is divisible\
    \ by 13. `fizz_buzz(78)` returns `2` because `78` is divisible by 11 and `2` is\
    \ divisible by 13. `fizz_buzz(79)` returns `3` because `79` is divisible by 11\
    \ and `3` is divisible by 13. `fizz_buzz(79)` returns `3` because `79` is divisible\
    \ by 11 and `3` is divisible by 13. `fizz_buzz(79)` returns `3` because `79` is\
    \ divisible by 11 and `3` is divisible by 13. `fizz_buzz(79)` returns `3` because\
    \ `79` is divisible by 11 and `3` is divisible by 13. `fizz_buzz(79)` returns\
    \ `3` because `79` is divisible by 11 and `3` is divisible by 13. `fizz_buzz(79)`\
    \ returns `3` because `79` is divisible by 11 and `3` is divisible by 13. `fizz_buzz(79)`\
    \ returns `3` because `79` is divisible by 11 and `3` is divisible by 13. `fizz_buzz(79)`\
    \ returns `3` because `79` is divisible by 11 and `3` is divisible by 13. `fizz_buzz(79)`\
    \ returns `3` because `79` is divisible by 11 and `3` is divisible by 13. `fizz_buzz(79",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't work. Try it with `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\n\
    It does work. Try it with `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\nIt does work. Try\
    \ it with `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `fizz_buzz(50)`.\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with `fizz_buzz(50)`.\n<|/ c |>\n<| a\
    \ tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n  if(n %%\
    \ 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) +\
    \ fizz_buzz(n/13))\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code may\
    \ answer the question, providing additional context regarding why and/or how this\
    \ code answers the question improves its long-term value.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n\
    <|/ a tags=r,recursion,fizzbuzz |>\n<| c |>\nWhile this code may answer the question,\
    \ providing additional context regarding why and/or how this code answers the\
    \ question improves its long-term value.\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=", "\n  n <- as.integer(n)\n  n <- ifelse(n %%\
    \ 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0),\
    \ 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n\
    \ %% 11 == 0, ifelse(n %% 13 == 0, n, 0), 0)\n  n <- ifelse(n %% 11 == 0, ifelse(n\
    \ %% 13 == 0, n, ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0)\
    \ {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ | n%%13==0) return(0)\n  if(n %% 11==0) return(paste0(\"Fizz\", n%%11))\n  if(n\
    \ %% 13==0) return(paste0(\"Buzz\", n%%13))\n  return(n)\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 | n%%13==0) return(0)\n  if(n %% 11==0) return(paste0(\"Fizz\"\
    , n%%11))\n  if(n %% 13==0) return(paste0(\"Buzz\", n%%13))\n  return(n)\n}\n\
    </code>\n<|/ a tags=r,if-statement,for-loop |>\n<| a tags=r,if-statement,for-loop\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ | n%%13==0) return(0)\n  if(n %% 11==0) return(paste0(\"Fizz\", n%%11))\n  if(n\
    \ %% 13==0) return(paste0(\"Buzz\", n%%13))\n  return(n)\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=r,if-statement,for-loop |>\n<code>\nfizz_buzz <- function(n) {\n\
    \  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n  if(n %% 11==0) return(paste0(\"\
    Fizz\", n%%11))\n  if(n %% 13==0) return(paste0(\"Buzz\", n%%13))\n  return(n)\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,if-statement,for-loop |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n\
    \  if(n %% 11==0) return(paste0(\"Fizz\", n%%11))\n  if(n %% 13==0) return(paste0(\"\
    Buzz\", n%%13))\n  return(n)\n}\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n\
    fizz_buzz", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n   \
    \ return(0)\n  }\n  if(n %% 11 != 0) {\n    return(1)\n  }\n  if(n %% 13 != 0)\
    \ {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<|\
    \ c |>\nThanks for the answer! I appreciate it!\n<|/ c |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n %% 11 == 0 | n %% 13 == 0){\n \
    \   return(0)\n  }\n  if(n %% 11 != 0){\n    return(1)\n  }\n  if(n %% 13 != 0){\n\
    \    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n %% 11 == 0 | n %% 13 == 0){\n \
    \   return(0)\n  }\n  if(n %% 11 != 0){\n    return(1)\n  }\n  if(n %% 13 != 0){\n\
    \    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n %% 11 == 0 | n %% 13 == 0){\n \
    \   return(0)\n  }\n  if(n %% 11 != 0){\n    return(1)\n  }\n  if(n %% 13 != 0){\n\
    \    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n %% 11 == 0 | n %% 13 == 0){\n \
    \   return(0)\n  }\n  if(n %% 11 != 0){\n    return(1)\n  }\n  if(n %% 13 != 0){\n\
    \    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n %% 11 == 0 | n %% 13 == 0){\n \
    \   return(0)\n  }\n  if(n %% 11 != 0){\n    return(1)\n  }\n  if(n %% 13 != 0){\n",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 1) {\n    return(1)\n  }\n  if(n %% 13 == 1) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\n\
    fizz_buzz(123)\n</cell>\n<cell>\nfizz_buzz(124)\n</cell>\n<cell>\nfizz_buzz(125)\n\
    </cell>\n<cell>\nfizz_buzz(126)\n</cell>\n<cell>\nfizz_buzz(127)\n</cell>\n<cell>\n\
    fizz_buzz(128)\n</cell>\n<cell>\nfizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(130)\n\
    </cell>\n<cell>\nfizz_buzz(131)\n</cell>\n<cell>\nfizz_buzz(132)\n</cell>\n<cell>\n\
    fizz_buzz(133)\n</cell>\n<cell>\nfizz_buzz(134)\n</cell>\n<cell>\nfizz_buzz(135)\n\
    </cell>\n<cell>\nfizz_buzz(136)\n</cell>\n<cell>\nfizz_buzz(137)\n</cell>\n<cell>\n\
    fizz_buzz(138)\n</cell>\n<cell>\nfizz_buzz(139)\n</cell>\n<cell>\nfizz_buzz(140)\n\
    </cell>\n<cell>\nfizz_buzz(141)\n</cell>\n<cell>\nfizz_buzz(142)\n</cell>\n<cell>\n\
    fizz_buzz(143)\n</cell>\n<cell>\nfizz_buzz(144)\n</cell>\n<cell>\nfizz_buzz(",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise: Write a function that\
    \ returns the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13 and which are also divisible by 3 or 5.\n\n\n</text>\n\
    <cell>", "\n  n <- n\n  return(sum(grepl(\"7\", as.character(n)) & grepl(\"11\"\
    , as.character(n)) | grepl(\"13\", as.character(n))))\n}\n", "\n  n <- as.integer(n)\n\
    \  return(sum(n %% 11 == 0 & n %% 13 == 0))\n}\n", "\n  n <- as.integer(n)\n \
    \ if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n\
    \ %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n   \
    \ return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\nHere's a solution\
    \ using dplyr and purrr:\n<code>\nlibrary(dplyr)\nlibrary(purrr)\n\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  \n  if(n %% 11 == 0 & n %% 13 == 0)\
    \ {\n    return(0)\n  }\n  \n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  \n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  \n  if(n\
    \ %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n\ndf <- data.frame(\n \
    \ n = c(1:100)\n)\n\ndf %>%\n  mutate(\n    fizz = map(n, fizz_buzz),\n    buzz\
    \ = map(n, ~buzz(as.integer(.x))),\n    fizzbuzz = map(n, ~fizz_buzz(as.integer(.x)))\n\
    \  )\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\nHere is a solution using dplyr\
    \ and purrr:\n<code>\nlibrary(dplyr)\nlibrary(purrr)\n\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  \n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  \n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  \n  if(n\
    \ %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  \n  if(n %% 11 != 0 & n\
    \ %% 13 != 0) {\n    return(3)\n  }\n}\n\ndf <- data.frame(\n  n = c(1:100)\n\
    )\n\ndf %>%\n  mutate(\n    fizz = map(n, fizz_buzz),\n    buzz = map(n, ~buzz(as.integer(.x))),\n\
    \    fizzbuzz = map(n, ~fi", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %%\
    \ 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ | n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"Fizz\", if(n%%13==0) \"\
    Buzz\" else \"\"))\n  if(n%%13==0) return(paste0(\"FizzBuzz\", if(n%%11==0) \"\
    Buzz\" else \"\"))\n}\n</code>\n<|/ a tags=r |>\n<| c |>\nThanks for your answer.\
    \ I am not able to understand how this works. Can you please explain it a bit?\n\
    <|/ c |>\n<| c |>\nThe first line converts the input to a numeric value. The second\
    \ line checks if the number is divisible by 11 or 13. If it is, then the function\
    \ returns 0. If not, it checks if the number is divisible by 11. If it is, then\
    \ it returns \"FizzBuzz\". If not, it checks if the number is divisible by 13.\
    \ If it is, then it returns \"FizzBuzz\". If not, it returns \"Fizz\".\n<|/ c\
    \ |>\n<| c |>\nThanks for your explanation. Can you please explain how this works?\n\
    <|/ c |>\n<| c |>\nThe first line converts the input to a numeric value. The second\
    \ line checks if the number is divisible by 11 or 13. If it is, then the function\
    \ returns 0. If not, it checks if the number is divisible by 11. If it is, then\
    \ it returns \"FizzBuzz\". If not, it checks if the number is divisible by 13.\
    \ If it is, then it returns \"FizzBuzz\". If not, it returns \"Fizz\".\n<|/ c\
    \ |>\n<| c |>\nThanks for your explanation. Can you please explain how this works?\n\
    <|/ c |>\n<| a tags=r |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"Fizz\", if(n%%13==0)\
    \ \"Buzz\" else \"\"))\n  if(n%%13==0) return(paste0(\"FizzBuzz\", if(n%%11==0)\
    \ \"Buzz\" else \"\"))\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your\
    \ answer. I am not able to understand how this works. Can you please explain it\
    \ a bit?\n<|/ c |>\n<| c |>\n", "\n  return(sum(as.integer(n %% 11) == 7 & as.integer(n\
    \ %% 13) == 7))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise: Write a function that\
    \ returns the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13 and which are also divisible by 3 or 5.\n\n\n</text>\n\
    <cell>", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n", "\n  n <- as.integer(n)\n\
    \  return(sum(as.integer(n %% 11) == 7 & as.integer(n %% 13) == 7))\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks so much! This was really helpful!\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  return(sum(as.integer(n %% 11) == 7 & as.integer(n %% 13) == 7))\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  return(sum(as.integer(n %% 11) == 7 & as.integer(n\
    \ %% 13) == 7))\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  return(sum(as.integer(n %% 11) ==\
    \ 7 & as.integer(n %% 13) == 7))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  return(sum(as.integer(n\
    \ %% 11) == 7 & as.integer(n %% 13) == 7))\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  return(sum(as.integer(n\
    \ %% 11) == 7 & as.integer(n %% 13) == 7))\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| c |>\nPlease add some explanation to your answer such that others can\
    \ learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  return(sum(as.integer(n %% 11) == 7 & as.integer(n\
    \ %% 13) == 7))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)", "\n  n <- as.integer(n)\n  if(n %%\
    \ 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 !=\
    \ 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/\
    \ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x %% 11 == 0 & x\
    \ %% 13 != 0){\n    return(1)\n  }\n  if(x %% 11 != 0 & x %% 13 == 0){\n    return(2)\n\
    \  }\n  if(x %% 11 != 0 & x %% 13 != 0){\n    return(3)\n  }\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n \
    \ if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x %% 11 == 0 & x\
    \ %% 13 != 0){\n    return(1)\n  }\n  if(x %% 11 != 0 & x %% 13 == 0){\n    return(2)\n\
    \  }\n  if(x %% 11 != 0 & x %% 13 != 0){\n    return(3)\n  }\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n  if(x %%\
    \ 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x %% 11 == 0 & x %% 13 !=\
    \ 0){\n    return(1)\n  }\n  if(x %% 11 != 0 & x %% 13 == 0){\n    return(2)\n\
    \  }\n  if(x %% 11 != 0 & x %% 13 != 0){\n    return(3)\n  }\n}\n</code>\n<|/\
    \ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x %% 11 == 0 & x\
    \ %% 13 != 0){\n    return(1)\n  }\n  ", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a |>\nHere is a solution that\
    \ uses purrr::map and dplyr::mutate to create a new column with the desired output.\
    \ \n<code>\nlibrary(dplyr)\nlibrary(purrr)\n\ndf <- data.frame(\n  n = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227",
  "\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n  return(ifelse(n%%11==0,\
    \ n%%11, n%%13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\n\
    fizz_buzz(101)\n</cell>\n<cell>\nfizz_buzz(102)\n</cell>\n<cell>\nfizz_buzz(103)\n\
    </cell>\n<cell>\nfizz_buzz(104)\n</cell>\n<cell>\nfizz_buzz(105)\n</cell>\n<cell>\n\
    fizz_buzz(106)\n</cell>\n<cell>\nfizz_buzz(107)\n</cell>\n<cell>\nfizz_buzz(108)\n\
    </cell>\n<cell>\nfizz_buzz(109)\n</cell>\n<cell>\nfizz_buzz(110)\n</cell>\n<cell>\n\
    fizz_buzz(111)\n</cell>\n<cell>\nfizz_buzz(112)\n</cell>\n<cell>\nfizz_buzz(113)\n\
    </cell>\n<cell>\nfizz_buzz(114)\n</cell>\n<cell>\nfizz_buzz(115)\n</cell>\n<cell>\n\
    fizz_buzz(116)\n</cell>\n<cell>\nfizz_buzz(117)\n</cell>\n<cell>\nfizz_buzz(118)\n\
    </cell>\n<cell>\nfizz_buzz(119)\n</cell>\n<cell>\nfizz_buzz(120)\n</cell>\n<cell>\n\
    fizz_buzz(121)\n</cell>\n<cell>\nfizz_buzz(122)\n</cell>\n<cell>\nfizz_buzz(123)\n\
    </cell>\n<cell>\nfizz_bu", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(n %% 11)\n  }\n\
    \  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n %% 11)\n}\n", "\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(x %% 11 == 0) {\n    return(1)\n  }\n  if(x %% 13 ==\
    \ 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a dscore=4 |>\n<| a dscore=4\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(x %% 11 == 0) {\n    return(1)\n  }\n  if(x %% 13 ==\
    \ 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n\
    <| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0\
    \ & x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 == 0) {\n    return(1)\n\
    \  }\n  if(x %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a\
    \ dscore=3 |>\n<| a dscore=3 |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %%\
    \ 11 == 0 & x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 == 0) {\n    return(1)\n\
    \  }\n  if(x %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a\
    \ tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n    return(0)\n  }\n  if(x %% 11 ==\
    \ 0) {\n    return(1)\n  }\n  if(x %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n\
    }\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n    return(0)\n  }", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n\
    \    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n\
    \ %% 11)\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %%\
    \ 13 != 0) {\n    return(n %% 13)\n  }\n  return(n %% 11)\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11)\
    \ + 1)\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n \
    \   return(0)\n  }\n  return(length(which(n %% 11 == 0 | n %% 13 == 0)))\n}\n\
    </code>\n<|/ a tags=r |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n\
    \  return(length(which(n %% 11 == 0 | n %% 13 == 0)))\n}\n</code>\n<|/ a tags=r\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how this code answers the question improves its long-term\
    \ value.\n<|/ c |>\n<| a tags=r |>\n<code>\nfizz_buzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  return(length(which(n\
    \ %% 11 == 0 | n %% 13 == 0)))\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile\
    \ this code may answer the question, providing additional context regarding why\
    \ and/or how this code answers the question improves its long-term value.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  return(length(which(n\
    \ %% 11 == 0 | n %% 13 == 0)))\n}\n</code>\n<|/ a tags=r |>\n<| a dscore=0 |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 |\
    \ n %% 13 == 0) {\n    return(0)\n  }\n  return(length(which(n %% 11 == 0 | n\
    \ %% 13 == 0)))\n}\n</code>\n<|/ a tags=r |>\n<| c |>\nWhile this code may answer\
    \ the question, providing additional context regarding why and/or how this code\
    \ answers the question improves its long-term value.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 | n %% 13 == 0) {\n    return(0)\n  }", "\n  n <- as.integer(n)\n  if(n %%\
    \ 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(fizz_buzz(n\
    \ %% 11))\n  }\n  if(n %% 13 != 0) {\n    return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n\
    \ %% 11) + fizz_buzz(n %% 13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13 and which are also divisible by\
    \ 3 or 5.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(NA)\n\
    }\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n \
    \ n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(NA)\n}\n</code>\n<|/ a tags=r |>\n<| c |>\n\
    While this code may answer the question, providing additional context regarding\
    \ how and/or why it solves the problem would improve the answer's long-term value.\n\
    <|/ c |>\n<| c |>\nThis answer was flagged as low-quality because of its length\
    \ and content. Could you please add some explanation to your answer?\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n \
    \ if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(NA)\n}\n</code>\n<|/ a tags=r |>\n<| c |>\nWhile this code\
    \ may answer the question, providing additional context regarding how and/or why\
    \ it solves the problem would improve the answer's long-term value.\n<|/ c |>\n\
    <| a tags=r |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(NA)\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code may answer\
    \ the question, providing additional context regarding how and/or why it solves\
    \ the problem would improve the answer's long-term value.\n<|/ c |>\n<| a |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) ", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x\
    \ %% 11 == 0 & x %% 13 != 0){\n    return(1)\n  }\n  if(x %% 11 != 0 & x %% 13\
    \ == 0){\n    return(2)\n  }\n  if(x %% 11 != 0 & x %% 13 != 0){\n    return(3)\n\
    \  }\n}\n</code>\n<|/ a dscore=3 |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x\
    \ %% 11 == 0 & x %% 13 != 0){\n    return(1)\n  }\n  if(x %% 11 != 0 & x %% 13\
    \ == 0){\n    return(2)\n  }\n  if(x %% 11 != 0 & x %% 13 != 0){\n    return(3)\n\
    \  }\n}\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x %% 11 == 0 & x\
    \ %% 13 != 0){\n    return(1)\n  }\n  if(x %% 11 != 0 & x %% 13 == 0){\n    return(2)\n\
    \  }\n  if(x %% 11 != 0 & x %% 13 != 0){\n    return(3)\n  }\n}\n</code>\n<|/\
    \ a tags=r,fizzbuzz |>\n<| a dscore=3 |>\n<code>\nfizzbuzz <- function(x){\n \
    \ if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x %% 11 == 0 & x\
    \ %% 13 != 0){\n    return(1)\n  }\n  if(x %% 11", "\n  n <- as.integer(n)\n \
    \ if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0)\
    \ {\n    return(1)\n  } else if(n %% 13 == 0) {\n    return(2)\n  } else {\n \
    \   return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=0 |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n\
    \  }\n  if(x %% 11 == 0){\n    return(1)\n  }\n  if(x %% 13 == 0){\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nPlease add some\
    \ explanation to your answer\n<|/ c |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x\
    \ %% 11 == 0){\n    return(1)\n  }\n  if(x %% 13 == 0){\n    return(2)\n  }\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x\
    \ %% 11 == 0){\n    return(1)\n  }\n  if(x %% 13 == 0){\n    return(2)\n  }\n\
    \  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=0 |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n\
    \  }\n  if(x %% 11 == 0){\n    return(1)\n  }\n  if(x %% 13 == 0){\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=0 |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n\
    \  }\n  if(x %% 11 == 0){\n    return(1)\n  }\n  if(x %% 13 == 0){\n    return(2)\n\
    \  }\n  return(3)\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 ==\
    \ 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(n %% 11)\n  }\n \
    \ if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n %% 11)\n}\n", "\n \
    \ n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\
    \ else if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  } else if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  } else if(n %% 11 != 0 & n %% 13 != 0)\
    \ {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n\
    \ %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n   \
    \ return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n\
    \ %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\n\
    fizz_buzz(79)\n</cell>\n<text>\nThe function below takes an integer and returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. For example, fizz_buzz(50) returns 0 because 50 is divisible by\
    \ 11 and 13 but not by 7.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n -\
    \ 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| c |>\nThanks for your\
    \ answer! I appreciate it. I was trying to solve this problem using recursion\
    \ and I couldn't get it to work. Your solution works perfectly though.\n<|/ c\
    \ |>\n<| c |>\nI added a recursive solution to my answer.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding how and/or why it solves the problem would improve the answer's long-term\
    \ value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizzbuzz <- function(n) {\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n\
    }\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| c |>\nWhile this code may answer\
    \ the question, providing additional context regarding how and/or why it solves\
    \ the problem would improve the answer's long-term value.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding how and/or why it solves the problem would improve the answer's long-term\
    \ value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizzbuzz <- function(n) {\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n\
    }\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| c ", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer! I tried\
    \ to run your code, but I got this error:\n`Error in fizz_buzz(50) : recursive\
    \ function value fizz_buzz not defined`\n<|/ c |>\n<| c |>\nSorry, I forgot to\
    \ include `fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0)\
    \ return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}`\n<|/\
    \ c |>\n<| c |>\nThanks for your answer! I tried to run your code, but I got this\
    \ error:\n`Error in fizz_buzz(50) : recursive function value fizz_buzz not defined`\n\
    <|/ c |>\n<| c |>\nThanks for your answer! I tried to run your code, but I got\
    \ this error:\n`Error in fizz_buzz(50) : recursive function value fizz_buzz not\
    \ defined`\n<|/ c |>\n<| c |>\nThanks for your answer! I tried to run your code,\
    \ but I got this error:\n`Error in fizz_buzz(50) : recursive function value fizz_buzz\
    \ not defined`\n<|/ c |>\n<| a dscore=1 |>\nThe code below is based on a recursive\
    \ function and will return the number of times each number appears in an integer\
    \ less than n (i.e. the number that appears most frequently in an integer less\
    \ than n).\n<code>", "\n  n <- as.integer(n)\n  if(n%%11==0 || n%%13==0) return(0)\n\
    \  if(n%%11==0) return(fizz_buzz(n/11))\n  if(n%%13==0) return(fizz_buzz(n/13))\n\
    \  return(fizz_buzz(n/11)+fizz_buzz(n/13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n\
    </cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<cell>\n\
    fizz_buzz(100)\n</cell>\n<text>\nThe fizzbuzz puzzle is a classic puzzle in computer\
    \ science. It consists of writing a program that prints numbers from 1 to n (inclusive)\
    \ that are divisible by 3 or 5, but not by 7. The numbers 1 to 10 are divisible\
    \ by 3, but the numbers 1 to 100 are divisible by 7. Write a program that prints\
    \ the numbers from 1 to 100 (inclusive) that are divisible by 3 or 5, but not\
    \ by 7.\n\n\n</text>\n<cell>", "\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThanks for your answer. Your solution is very elegant and I like\
    \ it very much. Unfortunately I cannot accept it as the correct answer because\
    \ I cannot use recursion in R. Thanks anyway!\n<|/ c |>\n<| c |>\nI added a recursive\
    \ solution which should work in R.\n<|/ c |>\n<| a dscore=1 |>\nI believe this\
    \ should work:\n<code>\nfizz_buzz <- function(n) {\n  n <- n\n  if(n %% 11 ==\
    \ 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n\
    </code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| c |>\nThanks for your answer.\
    \ Your solution is very elegant and I like it very much. Unfortunately I cannot\
    \ accept it as the correct answer because I cannot use recursion in R. Thanks\
    \ anyway!\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. Your\
    \ solution is very elegant and I like it very much. Unfortunately I cannot accept\
    \ it as the correct answer because I cannot use recursion in R. Thanks anyway!\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- n\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n -\
    \ 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| c |>\nThanks for your\
    \ answer. Your solution is very elegant and I like it very much. Unfortunately\
    \ I cannot accept it as the correct answer because I cannot use recursion in R.\
    \ Thanks anyway!\n<|/ c ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13\
    \ == 0) {\n    return(0)\n  } else if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  } else if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  } else if(n %% 11\
    \ != 0 & n %% 13 != 0) {\n    return(3)\n  } else {\n    return(n)\n  }\n}\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of times the digit\
    \ 7 appears in integers less than n which are divisible by 7 or 11.\n\n\n</text>\n\
    <cell>", "\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0){\n\
    \    x <- paste0(\"Fizz\", x)\n  }\n  if(x %% 13 == 0){\n    x <- paste0(\"Buzz\"\
    , x)\n  }\n  return(x)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0){\n    x <- paste0(\"\
    Fizz\", x)\n  }\n  if(x %% 13 == 0){\n    x <- paste0(\"Buzz\", x)\n  }\n  return(x)\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0){\n    x <- paste0(\"Fizz\", x)\n  }\n  if(x %% 13 == 0){\n\
    \    x <- paste0(\"Buzz\", x)\n  }\n  return(x)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0){\n\
    \    x <- paste0(\"Fizz\", x)\n  }\n  if(x %% 13 == 0){\n    x <- paste0(\"Buzz\"\
    , x)\n  }\n  return(x)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n\
    <code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0){\n    x <- paste0(\"Fizz\"\
    , x)\n  }\n  if(x %% 13 == 0){\n    x <- paste0(\"Buzz\", x)\n  }\n  return(x)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x ", "\n  n <- as.integer(n)\n  if(n%%11==0 || n%%13==0)\
    \ return(0)\n  return(as.integer(n%%11) + as.integer(n%%13))\n}\n", "\n  n <-\
    \ n\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 ==\
    \ 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n\
    \    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n", "\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) {\n    return(0)\n  }\n\
    \  if(n%%11==0) {\n    return(1)\n  }\n  if(n%%13==0) {\n    return(2)\n  }\n\
    \  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks for the answer!\
    \ I realized that my code was missing a return statement for the case where n\
    \ is divisible by both 11 and 13. I've edited my question to include this case.\n\
    <|/ c |>\n<| c |>\nI edited my answer to include your new case. Hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for the edit! I realized that my code was missing a\
    \ return statement for the case where n is divisible by both 11 and 13. I've edited\
    \ my question to include this case.\n<|/ c |>\n<| a tags=r,fizzbuzz |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x %% 11 == 0){\n    return(1)\n  }\n  if(x %% 13\
    \ == 0){\n    return(2)\n  }\n  if(x %% 3 == 0){\n    return(3)\n  }\n  if(x %%\
    \ 5 == 0){\n    return(4)\n  }\n  if(x %% 7 == 0){\n    return(5)\n  }\n  if(x\
    \ %% 9 == 0){\n    return(6)\n  }\n  if(x %% 11 == 0 && x %% 13 == 0){\n    return(7)\n\
    \  }\n  if(x %% 11 == 0 && x %% 3 == 0){\n    return(8)\n  }\n  if(x %% 11 ==\
    \ 0 && x %% 5 == 0){\n    return(9)\n  }\n  if(x %% 11 == 0 && x %% 7 == 0){\n\
    \    return(10)\n  }\n  if(x %% 11 == 0 && x %% 9 == 0){\n    return(11)\n  }\n\
    \  if(x %% 13 == 0 && x %% 3 == 0){\n    return(12)\n  }\n  if(x %% 13 == 0 &&\
    \ x %% 5 == 0){\n    return(13)\n  }\n  if(x %% 13 == 0 && x %% 7 == 0){\n   \
    \ return(14)\n  }\n  if(x %% 13 == 0 && x %% 9 == 0){\n    return(15)\n  }\n \
    \ if(x %% 3 == 0 && x %% 5 == 0){\n    return(16)\n  }\n  if(x %% 3 == 0 && x\
    \ %% 7 == 0)", "\n  n <- as.integer(n)\n  return(sum(n %% 11 == 0 & n %% 13 ==\
    \ 0))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=0 |>\n<code>\nfizzbuzz\
    \ <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n    return(\"FizzBuzz\"\
    )\n  }\n  if(x %% 11 == 0) {\n    return(\"Fizz\")\n  }\n  if(x %% 13 == 0) {\n\
    \    return(\"Buzz\")\n  }\n  return(x)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n\
    <| a dscore=0 |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %%\
    \ 13 == 0) {\n    return(\"FizzBuzz\")\n  }\n  if(x %% 11 == 0) {\n    return(\"\
    Fizz\")\n  }\n  if(x %% 13 == 0) {\n    return(\"Buzz\")\n  }\n  return(x)\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nPlease add some explanation to your\
    \ answer\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizzbuzz <- function(x) {\n  if(x\
    \ %% 11 == 0 & x %% 13 == 0) {\n    return(\"FizzBuzz\")\n  }\n  if(x %% 11 ==\
    \ 0) {\n    return(\"Fizz\")\n  }\n  if(x %% 13 == 0) {\n    return(\"Buzz\")\n\
    \  }\n  return(x)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=0 |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n    return(\"\
    FizzBuzz\")\n  }\n  if(x %% 11 == 0) {\n    return(\"Fizz\")\n  }\n  if(x %% 13\
    \ == 0) {\n    return(\"Buzz\")\n  }\n  return(x)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| c |>\nPlease add some explanation to your answer\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0 & x %% 13 == 0) {\n\
    \    return(\"FizzBuzz\")\n  }\n  if(x %% 11 == 0) {\n    return(\"Fizz\")\n \
    \ }\n  if(x %% 13 == 0) {\n    return(\"Bu", "\n  n <- as.integer(n)\n  if(n %%\
    \ 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(as.integer(n %% 11)\
    \ + 1)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nI like your solution, but\
    \ I believe that `ifelse` is more appropriate than `if` here.\n<|/ c |>\n<| c\
    \ |>\nI agree, `ifelse` would be more appropriate. I'll edit my answer.\n<|/ c\
    \ |>\n<| a dscore=2 |>\nHere's a solution using dplyr and purrr packages:\n<code>\n\
    library(dplyr)\nlibrary(purrr)\n\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  df <- data.frame(n = 1:n)\n  df %>% \n    mutate(fizz = ifelse(n %% 11 == 0,\
    \ \"Fizz\", \"Buzz\"),\n           fizz = ifelse(fizz == \"Fizz\", \"Fizz\", \"\
    Buzz\"),\n           fizz = ifelse(fizz == \"Buzz\", \"Fizz\", \"Buzz\"),\n  \
    \         fizz = ifelse(fizz == \"Fizz\", \"Fizz\", \"Buzz\"),\n           fizz\
    \ = ifelse(fizz == \"Buzz\", \"Fizz\", \"Buzz\"),\n           fizz = ifelse(fizz\
    \ == \"Fizz\", \"Fizz\", \"Buzz\"),\n           fizz = ifelse(fizz == \"Buzz\"\
    , \"Fizz\", \"Buzz\"),\n           fizz = ifelse(fizz == \"Fizz\", \"Fizz\", \"\
    Buzz\"),\n           fizz = ifelse(fizz == \"Buzz\", \"Fizz\", \"Buzz\"),\n  \
    \         fizz = ifelse(fizz == \"Fizz\", \"Fizz\", \"Buzz\"),\n           fizz\
    \ = ifelse(fizz == \"Buzz\", \"Fizz\", \"Buzz\"),\n           fizz = ifelse(fizz\
    \ == \"Fizz\", \"Fizz\", \"Buzz\"),\n           fizz = ifelse(fizz == \"Buzz\"\
    , \"Fizz\", \"Buzz\"),\n           fizz = ifelse(fizz == \"Fizz\", \"Fizz\", \"\
    Buzz\"),\n           fizz = ifelse(fizz == \"Buzz\", \"Fizz\", \"Buzz\"),\n  \
    \         fizz = ifelse(fizz == \"Fizz\", \"Fizz\", \"Buzz\"),\n           fizz\
    \ = ifelse(fizz == \"Bu", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13\
    \ == 0) {\n    return(0)\n  } else if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  } else if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  } else if(n %% 11\
    \ != 0 & n %% 13 != 0) {\n    return(3)\n  } else {\n    return(NA)\n  }\n}\n\
    </cell>\n<text>\nThe function above is called fizz_buzz and takes one argument,\
    \ the integer n. It returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13. For example, fizz_buzz(50) returns\
    \ 0, fizz_buzz(78) returns 2, and fizz_buzz(79) returns 3.\n\nThe function below\
    \ is called fizz_buzz_2 and takes the integer n. It returns the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\
    \ For example, fizz_buzz_2(50) returns 0, fizz_buzz_2(78) returns 2, and fizz_buzz_2(79)\
    \ returns 3.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n\
    \  if(n%%13==0) return(2)\n  return(fizz_buzz(n/11)+3)\n}\n</cell>\n<text>\nNow\
    \ let's test our function\n\n\n</text>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nNow let's try\
    \ a more efficient implementation\n\n\n</text>\n<cell>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n\
    \  return(fizz_buzz(n/11)+3)\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nNow let's try\
    \ a more efficient implementation\n\n\n</text>\n<cell>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n\
    \  return(fizz_buzz(n/11)+3)\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nNow let's try\
    \ a more efficient implementation\n\n\n</text>\n<cell>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n\
    \  return(fizz_buzz(n/11)+3)\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nNow let's try\
    \ a more efficient implementation\n\n\n</text>\n<cell>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integ", "\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13\
    \ == 0) return(2)\n  return(fizz_buzz(n/11) + 1)\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a tags=recursion,r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %%\
    \ 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n/11) +\
    \ 1)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n/11)\
    \ + 1)\n}\n</code>\n<|/ a tags=recursion,r,fizzbuzz |>\n<| a dscore=2 |>\n<code>\n\
    fizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(n/11) + 1)\n}\n</code>\n<|/ a tags=recursion,r,fizzbuzz |>\n\
    <| a dscore=1 |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n/11) + 1)\n}\n</code>\n<|/ a\
    \ tags=recursion,r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n/11)\
    \ + 1)\n}\n</code>\n<|/ a tags=recursion,r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\n\
    fizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(n/11) + 1)\n}\n</code>\n<|/ a tags=recursion,r,fizzbuzz |>\n\
    <| a dscore=1 |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0\
    \ & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</cell>\n<cell>\n\
    fizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the sum of the squares of the integers in the vector.\n\n>>> square_sums(c(1,2,3))\n\
    [1] 9 18\n>>> square_sums(c(1,2,3,4,5))\n[1] 25 50 125\n>>> square_sums(c(1,2,3,4,5,6,7,8,9,10))\n\
    [1] 1225 1550 1875\n>>> square_sums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50)\n\
    [1] 12250 15500 18750\n>>> square_sums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100)\n\
    [1] 122500 155000 18750\n>>> square_sums(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13\
    \ == 0) {\n    return(0)\n  }\n  return(length(which(n %% 11 == 0 & n %% 13 ==\
    \ 0)))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n\
    <cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 7 or 11.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n\
    </cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\n\
    fizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\nfizz_buzz(123)\n\
    </cell>\n<cell>\nfizz_buzz(125)\n</cell>\n<cell>\nfizz_buzz(126)\n</cell>\n<cell>\n\
    fizz_buzz(127)\n</cell>\n<cell>\nfizz_buzz(128)\n</cell>\n<cell>\nfizz_buzz(129)\n\
    </cell>\n<cell>\nfizz_buzz(130)\n</cell>\n<cell>\nfizz_buzz(131)\n</cell>\n<cell>\n\
    fizz_buzz(132)\n</cell>\n<cell>\nfizz_buzz(133)\n</cell>\n<cell>\nfizz_buzz(134)\n\
    </cell>\n<cell>\nfizz_buzz(135)\n</cell>\n<cell>\nfizz_buzz(136)\n</cell>\n<cell>\n\
    fizz_buzz(137)\n</cell>\n<cell>\nfizz_buzz(138)\n</cell>\n<cell>\nfizz_buzz(139)\n\
    </cell>\n<cell>\nfizz_buzz(140)\n</cell>\n<cell>\nfizz_buzz(141)\n</cell>\n<cell>\n\
    fizz_buzz(142)\n</cell>\n<cell>\nfizz_buzz(143)\n</cell>\n<cell>\nfizz_buzz(144)\n\
    </cell>\n<cell>\nfizz_buzz(145)\n</cell>\n<cell>\nfizz_buzz(146)\n</cell>\n<cell>\n\
    fizz_buzz", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13\
    \ == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| c |>\nThis doesn't seem to work. `fizz_buzz(78)` returns `2` instead of `3`.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the function to the answer.\n\
    <|/ c |>\n<| c |>\nI added a version that works with negative numbers as well.\n\
    <|/ c |>\n<| c |>\nThanks, I appreciate it.\n<|/ c |>\n<| a dscore=1 |>\nHere's\
    \ a recursive solution that works for negative numbers as well:\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  if(n %% 17 == 0) return(3)\n  if(n %% 19 == 0) return(4)\n\
    \  if(n %% 23 == 0) return(5)\n  if(n %% 29 == 0) return(6)\n  if(n %% 31 == 0)\
    \ return(7)\n  if(n %% 37 == 0) return(8)\n  if(n %% 43 == 0) return(9)\n  if(n\
    \ %% 47 == 0) return(10)\n  if(n %% 53 == 0) return(11)\n  if(n %% 59 == 0) return(12)\n\
    \  if(n %% 67 == 0) return(13)\n  if(n %% 73 == 0) return(14)\n  if(n %% 79 ==\
    \ 0) return(15)\n  if(n %% 83 == 0) return(16)\n  if(n %% 89 == 0) return(17)\n\
    \  if(n %% 97 == 0) return(18)\n  if(n %% 103 == 0) return(19)\n  if(n %% 109\
    \ == 0) return(20)\n  if(n %% 113 == 0) return(21)\n  if(n %% 127 == 0) return(22)\n\
    \  if(n %% 131 == 0) return(23)\n  if(n %% 137 == 0) return(24)\n  if(n %% 141\
    \ == 0) return(25)\n  if(n %% 147 == 0) return(26)\n  if(n %% 151 == 0) return(27)\n\
    \  if(n %% 157 == 0) return(28)\n  if(n %% 161 == 0) return(29)\n  if(n "]
stop_tokens:
- "\n#"
- "\n```"

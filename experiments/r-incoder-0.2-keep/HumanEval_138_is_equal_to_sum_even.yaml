name: HumanEval_138_is_equal_to_sum_even
language: r
prompt: "# Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n# Example\n# is_equal_to_sum_even(4) == False\n# is_equal_to_sum_even(6)\
  \ == False\n# is_equal_to_sum_even(8) == True\nis_equal_to_sum_even <- function(n)\
  \ {"
tests: "test_humaneval <- function() {\ncandidate <- is_equal_to_sum_even\n    if(!identical(candidate(4),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate(6), FALSE)){quit('no', 1)}\n\
  \    if(!identical(candidate(8), TRUE)){quit('no', 1)}\n    if(!identical(candidate(10),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate(11), FALSE)){quit('no', 1)}\n\
  \    if(!identical(candidate(12), TRUE)){quit('no', 1)}\n    if(!identical(candidate(13),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate(16), TRUE)){quit('no', 1)}\n\
  }\ntest_humaneval()"
completions: ["\n  n %% 2 == 0 & n %% 4 == 0 & n %% 6 == 0 & n %% 8 == 0\n}\n", "\n\
    \  n %% 2 == 0 & n %% 4 == 0 & n %% 6 == 0 & n %% 8 == 0\n}\n", "\n  n %% 2 ==\
    \ 0 &&\n  n %% 4 == 0 &&\n  n %% 6 == 0 &&\n  n %% 8 == 0\n}\n", "\n  n %% 2 ==\
    \ 0 & n %% 4 == 0 & n %% 8 == 0 & n %% 16 == 0\n}\n", "\n  return(n %% 4 == 0)\n\
    }\n", "\n  n %% 2 == 0 &\n  n %% 4 == 0 &\n  n %% 6 == 0 &\n  n %% 8 == 0\n}\n",
  "\n  n <- as.integer(n)\n  return(n %% 2 == 0 & n %% 4 == 0)\n}\n", "\n  return(\n\
    \    n %in% c(4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36,\
    \ 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74,\
    \ 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110,\
    \ 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142,\
    \ 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174,\
    \ 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206,\
    \ 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238,\
    \ 240, 242, 244, 246, 248, 250, 252, 254, 256))\n}\n", "\n  return(\n    n %%\
    \ 2 == 0 &\n    n %% 4 == 0 &\n    n %% 6 == 0 &\n    n %% 8 == 0\n  )\n}\n",
  "\n  n %% 2 == 0 & n %% 4 == 0 & n %% 8 == 0 & n %% 16 == 0\n}\n", "\n  n %% 2 !=\
    \ 0 & n %% 4 != 0 & n %% 6 != 0 & n %% 8 != 0\n}\n", "\n  n %% 2 == 0 & n %% 4\
    \ == 0 & n %% 6 == 0 & n %% 8 == 0\n}\n", "\n  n %% 2 == 0 & n %% 4 == 0 & n %%\
    \ 8 == 0 & n %% 16 == 0\n}\n", "\n  n <- as.integer(n)\n  return(n %% 2 == 0 &\
    \ n %% 4 == 0)\n}\n", "\n  return(\n    sum(\n      c(\n        0L, n\n      )\n\
    \    ) == 4L\n  )\n}\n", "\n  n <- as.integer(n)\n  return(n %% 2 == 0 & n %%\
    \ 4 == 0)\n}\n", "\n  n %% 2 != 0 & n %% 4 != 0 & n %% 6 != 0 & n %% 8 == 0\n\
    }\n", "\n  n %% 2 == 0 & n %% 4 == 0 & n %% 8 == 0 & n %% 16 == 0\n}\n", "\n \
    \ n %% 2 == 0 &&\n  n %% 4 == 0 &&\n  n %% 6 == 0 &&\n  n %% 8 == 0\n}\n", "\n\
    \  n %% 2 == 0 & n %% 4 == 0 & n %% 8 == 0 & n %% 16 == 0\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

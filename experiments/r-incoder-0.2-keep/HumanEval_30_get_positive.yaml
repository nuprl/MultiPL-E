name: HumanEval_30_get_positive
language: r
prompt: "# Return only positive numbers in the list.\n# >>> get_positive([-1, 2, -4,\
  \ 5, 6])\n# [2, 5, 6]\n# >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
  # [5, 3, 2, 3, 9, 123, 1]\nget_positive <- function(l) {"
tests: "test_humaneval <- function() {\ncandidate <- get_positive\n    if(!identical(candidate(c(-1,\
  \ -2, 4, 5, 6)), c(4, 5, 6))){quit('no', 1)}\n    if(!identical(candidate(c(5, 3,\
  \ -5, 2, 3, 3, 9, 0, 123, 1, -10)), c(5, 3, 2, 3, 3, 9, 123, 1))){quit('no', 1)}\n\
  \    if(!identical(candidate(c(-1, -2)), c())){quit('no', 1)}\n    if(!identical(candidate(c()),\
  \ c())){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n}\n", "\n  l <-\
    \ sort(l)\n  l[l > 0]\n}\n", "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n\
    }\n", "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n}\n", "\n  l <- Filter(function(x)\
    \ x > 0, l)\n  return(l)\n}\n", "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n\
    }\n", "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n}\n", "\n  l <- Filter(function(x)\
    \ x > 0, l)\n  return(l)\n}\n", "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n\
    }\n", "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n}\n", "\n  l <- Filter(function(x)\
    \ x > 0, l)\n  return(l)\n}\n", "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n\
    }\n</cell>\n<cell>", "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n}\n",
  "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n}\n", "\n  l <- Filter(function(x)\
    \ x > 0, l)\n  return(l)\n}\n", "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n\
    }\n", "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n}\n", "\n  l <- Filter(function(x)\
    \ x > 0, l)\n  return(l)\n}\n", "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n\
    }\n", "\n  l <- Filter(function(x) x > 0, l)\n  return(l)\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

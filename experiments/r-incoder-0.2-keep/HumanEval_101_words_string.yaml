name: HumanEval_101_words_string
language: r
prompt: "# You will be given a string of words separated by commas or spaces. Your\
  \ task is\n# to split the string into words and return an array of the words.\n\
  # For example:\n# words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
  , \"is\", \"John\"]\n# words_string(\"One, two, three, four, five, six\") == [\"\
  One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nwords_string <- function(s)\
  \ {"
tests: "test_humaneval <- function() {\ncandidate <- words_string\n    if(!identical(candidate('Hi,\
  \ my name is John'), c('Hi', 'my', 'name', 'is', 'John'))){quit('no', 1)}\n    if(!identical(candidate('One,\
  \ two, three, four, five, six'), c('One', 'two', 'three', 'four', 'five', 'six'))){quit('no',\
  \ 1)}\n    if(!identical(candidate('Hi, my name'), c('Hi', 'my', 'name'))){quit('no',\
  \ 1)}\n    if(!identical(candidate('One,, two, three, four, five, six,'), c('One',\
  \ 'two', 'three', 'four', 'five', 'six'))){quit('no', 1)}\n    if(!identical(candidate(''),\
  \ c())){quit('no', 1)}\n    if(!identical(candidate('ahmed     , gamal'), c('ahmed',\
  \ 'gamal'))){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  strsplit(s, \",\\\\s*\")[[1]]\n}\n", "\n  strsplit(s, \", | \"\
    )\n}\n", "\n  strsplit(s, \", | \")\n}\n</cell>\n<cell>", "\n  strsplit(s, \"\
    , | \")\n}\n", "\n  strsplit(s, \",\\\\s*\")[[1]]\n}\n", "\n  strsplit(s, \",\
    \ | \")\n}\n", "\n  strsplit(s, \", | \")\n}\n", "\n  strsplit(s, \",|\\\\s\"\
    )\n}\n", "\n  strsplit(s, \",|\\\\s\")\n}\n</cell>\n<cell>", "\n  strsplit(s,\
    \ \", | \")\n}\n", "\n  strsplit(s, \",|\\\\s\")\n}\n", "\n  strsplit(s, \", |\
    \ \")\n}\n", "\n  strsplit(s, \",|\\\\s\")\n}\n", "\n  strsplit(s, \", | \")\n\
    }\n</cell>\n<cell>\nwords_string(\"Hi, my name is John\")\n</cell>\n<cell>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nWrite a function that takes\
    \ a string as input and returns a list of words that start with a specific letter.\
    \ Your function should return a list containing all the words that start with\
    \ the letter \"A\".\n\n</text>\n<cell>", "\n  strsplit(s, \", | \")\n}\n", "\n\
    \  strsplit(s, \", | \")\n}\n", "\n  strsplit(s, \", | \")\n}\n", "\n  strsplit(s,\
    \ \", | \")\n}\n", "\n  strsplit(s, \", | \")\n}\n", "\n  strsplit(s, \", | \"\
    )\n}\n</cell>\n<cell>"]
stop_tokens:
- "\n#"
- "\n```"

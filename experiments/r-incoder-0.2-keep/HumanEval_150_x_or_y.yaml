name: HumanEval_150_x_or_y
language: r
prompt: "# A simple program which should return the value of x if n is \n# a prime\
  \ number and should return the value of y otherwise.\n# Examples:\n# for x_or_y(7,\
  \ 34, 12) == 34\n# for x_or_y(15, 8, 5) == 5\nx_or_y <- function(n, x, y) {"
tests: "test_humaneval <- function() {\ncandidate <- x_or_y\n    if(!identical(candidate(7,\
  \ 34, 12), 34)){quit('no', 1)}\n    if(!identical(candidate(15, 8, 5), 5)){quit('no',\
  \ 1)}\n    if(!identical(candidate(3, 33, 5212), 33)){quit('no', 1)}\n    if(!identical(candidate(1259,\
  \ 3, 52), 3)){quit('no', 1)}\n    if(!identical(candidate(7919, -1, 12), -1)){quit('no',\
  \ 1)}\n    if(!identical(candidate(3609, 1245, 583), 583)){quit('no', 1)}\n    if(!identical(candidate(91,\
  \ 56, 129), 129)){quit('no', 1)}\n    if(!identical(candidate(6, 34, 1234), 1234)){quit('no',\
  \ 1)}\n    if(!identical(candidate(1, 2, 0), 0)){quit('no', 1)}\n    if(!identical(candidate(2,\
  \ 2, 0), 2)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  if(n %% 2 == 0) {\n    return(x)\n  } else {\n    return(y)\n \
    \ }\n}\n", "\n  if (n == 1) {\n    x\n  } else {\n    y\n  }\n}\n</cell>\n<cell>",
  "\n  if (n %% 2 == 0) {\n    return(x)\n  } else {\n    return(y)\n  }\n}\n", "\n\
    \  if (n %% 2 == 0) {\n    return(x)\n  } else {\n    return(y)\n  }\n}\n", "\n\
    \  if (n == 1) return(x)\n  if (n == 2) return(y)\n  if (n % 2 == 0) return(x_or_y(n/2,\
    \ x, y))\n  return(x_or_y(n/2, y, x))\n}\n", "\n  if (n %% 2 == 0) {\n    x\n\
    \  } else {\n    y\n  }\n}\n", "\n  if (n %% 2 == 0) {\n    return(x)\n  } else\
    \ {\n    return(y)\n  }\n}\n", "\n  if (n %% 2 == 0) {\n    x\n  } else {\n  \
    \  y\n  }\n}\n", "\n  if(n %% 2 == 0) {\n    return(x)\n  } else {\n    return(y)\n\
    \  }\n}\n", "\n  if (n %% 2 == 0) {\n    x\n  } else {\n    y\n  }\n}\n", "\n\
    \  if (n == 1) {\n    x\n  } else if (n == 2) {\n    y\n  } else if (n % 2 ==\
    \ 0) {\n    x_or_y(n/2, x, y)\n  } else {\n    x_or_y(n/2, y, x)\n  }\n}\n", "\n\
    \  if (n == 1) {\n    x\n  } else {\n    y\n  }\n}\n", "\n  if (n == 1) return(x)\n\
    \  if (n == 2) return(y)\n  if (n % 2 == 0) return(x_or_y(n/2, x, y))\n  return(x_or_y(n/2,\
    \ y, x))\n}\n", "\n  if (n %% 2 == 0) {\n    return(x)\n  } else {\n    return(y)\n\
    \  }\n}\n", "\n  if (n == 2) return(x)\n  else if (n == 1) return(y)\n  else return(x_or_y(n\
    \ - 1, x, y))\n}\n", "\n  if (n %% 2 == 0) {\n    return(x)\n  } else {\n    return(y)\n\
    \  }\n}\n", "\n  if (n %% 2 == 0) {\n    return(x)\n  } else {\n    return(y)\n\
    \  }\n}\n", "\n  if (n %% 2 == 0) {\n    x\n  } else {\n    y\n  }\n}\n", "\n\
    \  if (isPrime(n)) {\n    x\n  } else {\n    y\n  }\n}\n", "\n  if (n == 1) {\n\
    \    x\n  } else {\n    y\n  }\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_27_flip_case
language: r
prompt: "# For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\nflip_case <- function(string)\
  \ {"
tests: "test_humaneval <- function() {\ncandidate <- flip_case\n    if(!identical(candidate(''),\
  \ '')){quit('no', 1)}\n    if(!identical(candidate('Hello!'), 'hELLO!')){quit('no',\
  \ 1)}\n    if(!identical(candidate('These violent delights have violent ends'),\
  \ 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string %>% \n    str_to_lower() %>% \n    str_to_upper() %>% \n   \
    \ str_to_lower()\n}\n\nflip_case(\"Hello World\")\n</cell>\n<text>\nExercise:\
    \ Write a function that takes a string and returns a new string where all characters\
    \ are replaced by their uppercase counterparts. For example, 'hello' becomes 'HELLO'.\n\
    \n\n</text>\n<cell>", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n</cell>\n<cell>", "\n  string <- tolower(string)\n  string\
    \ <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n</cell>\n<cell>", "\n  string\
    \ <- tolower(string)\n  string <- toupper(string)\n  return(string)\n}\n", "\n\
    \  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string %>% \n    str_replace_all(\"[a-z]\", \"[A-Z]\") %>% \n    str_replace_all(\"\
    [A-Z]\", \"[a-z]\")\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n</cell>\n<cell>", "\n  string <- tolower(string)\n  string\
    \ <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n</cell>\n<cell>", "\n  string\
    \ <- tolower(string)\n  string <- toupper(string)\n  return(string)\n}\n", "\n\
    \  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string %>% \n    str_replace_all(\"([a-z])([A-Z])\", \"\\\\U\\\\1\\\
    \\2\") %>% \n    str_replace_all(\"([A-Z])([A-Z][a-z])\", \"\\\\U\\\\1\\\\2\"\
    ) %>% \n    str_replace_all(\"([a-z])([A-Z])\", \"\\\\U\\\\1\\\\2\") %>% \n  \
    \  str_replace_all(\"([A-Z])([A-Z][a-z])\", \"\\\\U\\\\1\\\\2\")\n}\n", "\n  string\
    \ <- tolower(string)\n  string <- toupper(string)\n  return(string)\n}\n", "\n\
    \  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string %>% \n    str_to_lower() %>% \n    str_to_upper() %>% \n   \
    \ str_to_lower()\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n</cell>\n<text>\nNow let's test our function by flipping\
    \ the string 'Hello' to 'hELLO':\n\n\n</text>\n<cell>\nflip_case('Hello')\n</cell>\n\
    <text>\nGreat! Now let's write a function that takes in a string and returns the\
    \ same string with all characters in lower case and upper case separated by a\
    \ space.\n\n\n</text>\n<cell>", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- gsub(\"([a-z])([A-Z])\", \"\\\\1\\\\2\"\
    , string)\n  string <- gsub(\"([A-Z])([A-Z][a-z])\", \"\\\\1\\\\2\", string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string %>% \n    str_to_lower() %>% \n    str_to_upper()\
    \ %>% \n    str_to_lower()\n}\n\nflip_case('Hello')\n</cell>\n<cell>", "\n  string\
    \ <- tolower(string)\n  string <- toupper(string)\n  return(string)\n}\n", "\n\
    \  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- gsub(\"([a-z])([A-Z])\", \"\\\\1\\\\2\", string)\n  string\
    \ <- gsub(\"([A-Z])([A-Z][a-z])\", \"\\\\1\\\\2\", string)\n  return(tolower(string))\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- gsub(\"([a-z])([A-Z])\", \"\\\\1\\\\2\", string)\n  string\
    \ <- gsub(\"([A-Z])([A-Z][a-z])\", \"\\\\1\\\\2\", string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n</cell>\n<cell>", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string %>%\n    str_to_lower %>%\n    str_to_upper\
    \ %>%\n    str_to_lower\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string %>% \n    str_to_lower() %>% \n    str_to_upper()\
    \ %>% \n    str_to_lower()\n}\n", "\n  string <- tolower(string)\n  string <-\
    \ toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n  string\
    \ <- toupper(string)\n  return(string)\n}\n", "\n  string %>% \n    str_to_lower()\
    \ %>% \n    str_to_upper() %>% \n    str_to_lower()\n}\n", "\n  gsub(\"([a-z])([A-Z])\"\
    , \"\\\\1\\\\2\", string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  gsub(\"([a-z])([A-Z])\", \"\\\\1\\\\2\", string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  gsub(\"(.)([A-Z])\", \"\\\\2\\\\1\", string)\n}\n", "\n  gsub(\"([a-z])([A-Z])\"\
    , \"\\\\1\\\\2\", string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- gsub(\"([a-z])([A-Z])\", \"\\\\1\\\\2\"\
    , string)\n  string <- gsub(\"([A-Z])([A-Z][a-z])\", \"\\\\1\\\\2\", string)\n\
    \  string <- gsub(\"([A-Z])([a-z])\", \"\\\\1\\\\2\", string)\n  string <- gsub(\"\
    ([a-z])([A-Z])\", \"\\\\1\\\\2\", string)\n  string <- gsub(\"([a-z])([A-Z][a-z])\"\
    , \"\\\\1\\\\2\", string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- gsub(\"([a-z])([A-Z])\"\
    , \"\\\\1\\\\2\", string)\n  string <- gsub(\"([A-Z])([A-Z][a-z])\", \"\\\\1\\\
    \\2\", string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n  string\
    \ <- toupper(string)\n  return(string)\n}\n", "\n  string <- gsub(\"([a-z])([A-Z])\"\
    , \"\\\\1\\\\2\", string)\n  string <- gsub(\"([A-Z])([A-Z][a-z])\", \"\\\\1\\\
    \\2\", string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n  string\
    \ <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- gsub(\"([a-z])([A-Z])\"\
    , \"\\\\1\\\\2\", string)\n  string <- gsub(\"([A-Z])([A-Z][a-z])\", \"\\\\1\\\
    \\2\", string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n  string\
    \ <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n</cell>\n<cell>", "\n  string\
    \ <- tolower(string)\n  string <- toupper(string)\n  return(string)\n}\n", "\n\
    \  gsub(\"([a-z])([A-Z])\", \"\\\\1\\\\2\", string)\n}\n", "\n  string <- gsub(\"\
    ([a-z])([A-Z])\", \"\\\\1\\\\2\", string)\n  string <- gsub(\"([A-Z])([A-Z][a-z])\"\
    , \"\\\\1\\\\2\", string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n</code>\n<|/ a tags=r,regex\
    \ |>\n<| c |>\nI like your solution, but I wanted to avoid using loops because\
    \ I thought they were inefficient in R. Thanks for the solution!\n<|/ c |>\n<|\
    \ c |>\nI agree that loops are inefficient in R, but I find them easier to read\
    \ and understand than `apply` functions. I find `apply` functions difficult to\
    \ read and understand when they get more complicated than `for` loops.\n<|/ c\
    \ |>\n<| c |>\nI agree that loops are easier to read, but I find them easier to\
    \ understand when they get more complicated than `apply` functions. I find `apply`\
    \ functions difficult to read and understand when they get more complicated than\
    \ `for` loops.\n<|/ c |>\n<| c |>\nI agree that loops are easier to read, but\
    \ I find them easier to understand when they get more complicated than `apply`\
    \ functions. I find `apply` functions difficult to read and understand when they\
    \ get more complicated than `for` loops.\n<|/ c |>\n<| c |>\nI agree that loops\
    \ are easier to read, but I find them easier to understand when they get more\
    \ complicated than `apply` functions. I find `apply` functions difficult to read\
    \ and understand when they get more complicated than `for` loops.\n<|/ c |>\n\
    <| a tags=r,regex |>\n<code>\nlibrary(stringr)\nlibrary(dplyr)\nlibrary(purrr)\n\
    \ndf <- data.frame(\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n\
    \  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactor", "\n  gsub(\"([a-z])([A-Z])\"\
    , \"\\\\1\\\\2\", string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  gsub(\"([a-z])([A-Z])\", \"\\\\1\\\\2\", string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n</cell>\n<cell>", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n</cell>\n<cell>", "\n  string <- tolower(string)\n  string\
    \ <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  gsub(\"([a-z])([A-Z])\"\
    , \"\\\\1\\\\2\", string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  gsub(\"([a-z])([A-Z])\", \"\\\\1\\\\2\", string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n</cell>\n<cell>\nflip_case('hello')\n</cell>\n<text>\nExercise: Write a function\
    \ that takes a string and returns a string where all characters are reversed\n\
    (ie. hello -> olleh)\n\n\n</text>\n<cell>", "\n  string <- tolower(string)\n \
    \ string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n</cell>\n<cell>", "\n  string\
    \ <- tolower(string)\n  string <- toupper(string)\n  return(string)\n}\n", "\n\
    \  string <- gsub(\"([a-z])([A-Z])\", \"\\\\1\\\\2\", string)\n  string <- gsub(\"\
    ([A-Z])([A-Z][a-z])\", \"\\\\1\\\\2\", string)\n  return(tolower(string))\n}\n",
  "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n</cell>\n<cell>", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n", "\n  string <- gsub(\"([a-z])([A-Z])\", \"\\\\1\\\\2\"\
    , string)\n  string <- gsub(\"([A-Z])([A-Z][a-z])\", \"\\\\1\\\\2\", string)\n\
    \  return(string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n</cell>\n<cell>\nflip_case('Hello')\n</cell>\n<text>\nExercise:\
    \ Write a function that takes a string and returns the string with all vowels\
    \ replaced by an underscore.\n\n\n</text>\n<cell>", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n</cell>\n<cell>", "\n  string\
    \ <- tolower(string)\n  string <- toupper(string)\n  return(string)\n}\n", "\n\
    \  string <- gsub(\"([a-z])([A-Z])\", \"\\\\1\\\\2\", string)\n  string <- gsub(\"\
    ([A-Z])([A-Z][a-z])\", \"\\\\1\\\\2\", string)\n  string <- gsub(\"([a-z])([A-Z])\"\
    , \"\\\\1\\\\2\", string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  gsub(\"([a-z])([A-Z])\"\
    , \"\\\\1\\\\2\", string)\n}\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n\
    \  return(string)\n}\n</cell>\n<cell>", "\n  string %>% \n    str_replace_all(\"\
    [a-z]\", \"[[:upper:]]\") %>% \n    str_replace_all(\"[[:upper:]]\", \"[[:lower:]]\"\
    ) %>% \n    str_replace_all(\"[[:lower:]]\", \"[[:upper:]]\")\n}\n", "\n  string\
    \ <- tolower(string)\n  string <- toupper(string)\n  return(string)\n}\n", "\n\
    \  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\nlibrary(stringr)\nlibrary(dplyr)\n\
    \ndf %>%\n  mutate(\n    across(everything(), ~ str_replace_all(.x, \"(?i)[[:upper:]]\"\
    , \"_\"))\n  )\n</code>\n<|/ a dscore=2 tags=r,regex |>\n<| a tags=r,regex |>\n\
    Using base R:\n<code>\nx <- \"Hello World\"\ngsub(\"(?i)[[:upper:]]\", \"_\",\
    \ x)\n</code>\nOutput:\n<code>\n[1] \"h_e_l_l_o_ _W_o_r_l_d\"\n</code>\n<|/ a\
    \ dscore=2 |>\n<| a tags=r,regex |>\nWe can use gsubfn to replace all uppercase\
    \ letters with _\n<code>\nlibrary(gsubfn)\ngsubfn(\"[A-Z]\", ~\"_\", x)", "\n\
    \  gsub(\"([a-z])([A-Z])\", \"\\\\1\\\\2\", string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  string <- tolower(string)\n\
    \  string <- toupper(string)\n  return(string)\n}\n", "\n  gsub(\"([a-z])([A-Z])\"\
    , \"\\\\1\\\\2\", string)\n}\n", "\n  string %>% \n    str_replace_all(\"([a-z])\"\
    , toupper) %>% \n    str_replace_all(\"([A-Z])\", tolower)\n}\n", "\n  string\
    \ <- tolower(string)\n  string <- toupper(string)\n  return(string)\n}\n", "\n\
    \  string %>% \n    str_to_lower() %>% \n    str_to_upper() %>% \n    str_to_lower()\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n", "\n  string <- tolower(string)\n  string <- toupper(string)\n  return(string)\n\
    }\n"]
stop_tokens:
- "\n#"
- "\n```"

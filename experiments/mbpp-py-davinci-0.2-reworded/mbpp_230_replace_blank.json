{
  "name": "mbpp_230_replace_blank",
  "language": "py",
  "prompt": "def replace_blank(str1: str, char: str) -> str:\n    \"\"\"\n\tWrite a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_230_replace_blank.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate('hello people', '@') == 'hello@people'\n    assert candidate('python program language', '$') == 'python$program$language'\n    assert candidate('blank space', '-') == 'blank-space'\n\ndef test_check():\n    check(replace_blank)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n",
    "    return str1.replace(\" \", char)\n\n"
  ]
}
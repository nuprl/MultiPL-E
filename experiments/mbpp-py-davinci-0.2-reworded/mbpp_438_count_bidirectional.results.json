{
  "name": "mbpp_438_count_bidirectional",
  "language": "py",
  "prompt": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_438_count_bidirectional.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "results": [
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk68md0bk.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpk68md0bk.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpk68md0bk.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count // 2\n\nprint(count_bidirectional([(1, 2), (2, 1), (3, 4), (4, 3), (5, 6), (6, 5)]))\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "3\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4o6nx50i.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp4o6nx50i.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4o6nx50i.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    return sum(1 for i, j in test_list if (j, i) in test_list)\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2wq6r30w.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmp2wq6r30w.py\", line 15, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp2wq6r30w.py\", line 10, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4ar2daz4.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp4ar2daz4.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4ar2daz4.py\", line 16, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj9kjmi9q.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpj9kjmi9q.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpj9kjmi9q.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp81t2hawi.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp81t2hawi.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp81t2hawi.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    pass\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpibpu1p2w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpibpu1p2w.py\", line 14, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpibpu1p2w.py\", line 9, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_e2uffel.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp_e2uffel.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_e2uffel.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp81t2hawi.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp81t2hawi.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp81t2hawi.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_e2uffel.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp_e2uffel.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_e2uffel.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0bzvkkx.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpo0bzvkkx.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpo0bzvkkx.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_e2uffel.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp_e2uffel.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_e2uffel.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplwipl27q.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmplwipl27q.py\", line 19, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmplwipl27q.py\", line 16, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp81t2hawi.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp81t2hawi.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp81t2hawi.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpw6puwzhu.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpw6puwzhu.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpw6puwzhu.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_e2uffel.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp_e2uffel.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_e2uffel.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpw6puwzhu.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpw6puwzhu.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpw6puwzhu.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9s6i6i2o.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp9s6i6i2o.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp9s6i6i2o.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnh91pje6.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpnh91pje6.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpnh91pje6.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp81t2hawi.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp81t2hawi.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp81t2hawi.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwh3pj5_f.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpwh3pj5_f.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpwh3pj5_f.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0] and test_list[j][1] == test_list[i][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxo9u061c.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpxo9u061c.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpxo9u061c.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0bzvkkx.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpo0bzvkkx.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpo0bzvkkx.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpw6puwzhu.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpw6puwzhu.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpw6puwzhu.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if (test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]):\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpolafbqjb.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpolafbqjb.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpolafbqjb.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9s6i6i2o.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp9s6i6i2o.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp9s6i6i2o.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    return sum(1 for i, j in test_list if (j, i) in test_list)\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2wq6r30w.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmp2wq6r30w.py\", line 15, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp2wq6r30w.py\", line 10, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if i != j:\n                if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                    count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprszwuyoe.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmprszwuyoe.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmprszwuyoe.py\", line 16, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_e2uffel.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp_e2uffel.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_e2uffel.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[j][1] == test_list[i][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphcct0_m8.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmphcct0_m8.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmphcct0_m8.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0] and test_list[j][1] == test_list[i][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxo9u061c.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpxo9u061c.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpxo9u061c.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwh3pj5_f.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpwh3pj5_f.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpwh3pj5_f.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if i == j:\n                continue\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpuefzskfy.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpuefzskfy.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpuefzskfy.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    pass\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpibpu1p2w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpibpu1p2w.py\", line 14, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpibpu1p2w.py\", line 9, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwscz3qws.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpwscz3qws.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpwscz3qws.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[j][1] == test_list[i][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphcct0_m8.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmphcct0_m8.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmphcct0_m8.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if i != j:\n                if test_list[i][1] == test_list[j][0]:\n                    count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_hk0mig2.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp_hk0mig2.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_hk0mig2.py\", line 16, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnh91pje6.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpnh91pje6.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpnh91pje6.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9s6i6i2o.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp9s6i6i2o.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp9s6i6i2o.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9s6i6i2o.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp9s6i6i2o.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp9s6i6i2o.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp81t2hawi.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp81t2hawi.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp81t2hawi.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if i == j:\n                continue\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3u66zwj5.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmp3u66zwj5.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp3u66zwj5.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    pass\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpibpu1p2w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpibpu1p2w.py\", line 14, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpibpu1p2w.py\", line 9, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9s6i6i2o.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp9s6i6i2o.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp9s6i6i2o.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwscz3qws.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpwscz3qws.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpwscz3qws.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpw6puwzhu.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpw6puwzhu.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpw6puwzhu.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if i != j:\n                if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                    count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprszwuyoe.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmprszwuyoe.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmprszwuyoe.py\", line 16, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp81t2hawi.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp81t2hawi.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp81t2hawi.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_e2uffel.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp_e2uffel.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_e2uffel.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0] and test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmz3rl829.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpmz3rl829.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpmz3rl829.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    return sum(1 for i in range(len(test_list)) if test_list[i][0] == test_list[i][1])\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppmy2rc5q.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmppmy2rc5q.py\", line 15, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmppmy2rc5q.py\", line 10, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_e2uffel.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp_e2uffel.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_e2uffel.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if (test_list[i][1], test_list[i][0]) == test_list[j]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9j6ikp5e.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp9j6ikp5e.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp9j6ikp5e.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9s6i6i2o.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp9s6i6i2o.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp9s6i6i2o.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count // 2\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5t61_7kw.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp5t61_7kw.py\", line 19, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp5t61_7kw.py\", line 16, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0] and test_list[j][1] == test_list[i][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxo9u061c.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpxo9u061c.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpxo9u061c.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][1] == test_list[j][0] and test_list[j][1] == test_list[i][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2gpfm7dk.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp2gpfm7dk.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp2gpfm7dk.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ntest_list = [(1, 2), (2, 1), (3, 4), (4, 3), (5, 6), (6, 5), (7, 8), (8, 7)]\nprint(count_bidirectional(test_list))\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "4\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpuyp6w8lr.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpuyp6w8lr.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpuyp6w8lr.py\", line 19, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if i != j and test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu06s0ayc.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpu06s0ayc.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu06s0ayc.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if (test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]):\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnb_fe5ar.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpnb_fe5ar.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpnb_fe5ar.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp81t2hawi.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp81t2hawi.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp81t2hawi.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsf3svgn0.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsf3svgn0.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpsf3svgn0.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if i != j and test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu06s0ayc.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpu06s0ayc.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu06s0ayc.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0] and test_list[j][1] == test_list[i][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxo9u061c.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpxo9u061c.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpxo9u061c.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplwipl27q.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmplwipl27q.py\", line 19, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmplwipl27q.py\", line 16, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpldb4dt7k.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpldb4dt7k.py\", line 19, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpldb4dt7k.py\", line 16, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_e2uffel.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp_e2uffel.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_e2uffel.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    pass\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpibpu1p2w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpibpu1p2w.py\", line 14, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpibpu1p2w.py\", line 9, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    return sum(1 for i in range(len(test_list)) for j in range(i + 1, len(test_list)) if test_list[i][1] == test_list[j][0])\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnh91pje6.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpnh91pje6.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpnh91pje6.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][1] == test_list[j][0] and test_list[j][1] == test_list[i][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2gpfm7dk.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp2gpfm7dk.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp2gpfm7dk.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk68md0bk.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpk68md0bk.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpk68md0bk.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1,len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplk__daev.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmplk__daev.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmplk__daev.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp81t2hawi.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp81t2hawi.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp81t2hawi.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_e2uffel.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp_e2uffel.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_e2uffel.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    return sum(1 for i, j in test_list if (j, i) in test_list)\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2wq6r30w.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmp2wq6r30w.py\", line 15, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp2wq6r30w.py\", line 10, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0] and test_list[j][1] == test_list[i][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxo9u061c.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpxo9u061c.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpxo9u061c.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    return sum(1 for i, j in test_list if (j, i) in test_list)\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2wq6r30w.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmp2wq6r30w.py\", line 15, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp2wq6r30w.py\", line 10, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpw6puwzhu.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpw6puwzhu.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpw6puwzhu.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_mfln5yw.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmp_mfln5yw.py\", line 15, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_mfln5yw.py\", line 10, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count // 2\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5t61_7kw.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp5t61_7kw.py\", line 19, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp5t61_7kw.py\", line 16, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp81t2hawi.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp81t2hawi.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp81t2hawi.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp81t2hawi.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp81t2hawi.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp81t2hawi.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_mfln5yw.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmp_mfln5yw.py\", line 15, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_mfln5yw.py\", line 10, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0] and test_list[j][1] == test_list[i][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxo9u061c.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpxo9u061c.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpxo9u061c.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count // 2\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5t61_7kw.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp5t61_7kw.py\", line 19, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp5t61_7kw.py\", line 16, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwh3pj5_f.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpwh3pj5_f.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpwh3pj5_f.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n            if test_list[i][0] == test_list[j][1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu6apks9v.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpu6apks9v.py\", line 22, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpu6apks9v.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_e2uffel.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp_e2uffel.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp_e2uffel.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    pass\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpibpu1p2w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpibpu1p2w.py\", line 14, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpibpu1p2w.py\", line 9, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count // 2\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5t61_7kw.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp5t61_7kw.py\", line 19, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp5t61_7kw.py\", line 16, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwh3pj5_f.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpwh3pj5_f.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpwh3pj5_f.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp81t2hawi.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp81t2hawi.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp81t2hawi.py\", line 18, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    pass\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpibpu1p2w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpibpu1p2w.py\", line 14, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpibpu1p2w.py\", line 9, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk1jf5b30.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpk1jf5b30.py\", line 21, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpk1jf5b30.py\", line 16, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count // 2\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpw6puwzhu.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpw6puwzhu.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpw6puwzhu.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp23ljvbnt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp23ljvbnt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp23ljvbnt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1t763zrv.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1t763zrv.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp1t763zrv.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    return sum(1 for i, j in test_list if (j, i) in test_list)\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvqrpkmyk.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpvqrpkmyk.py\", line 14, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpvqrpkmyk.py\", line 9, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i + 1, len(test_list)):\n            if test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(len(test_list)):\n            if test_list[i] == test_list[j][::-1]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwh3pj5_f.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpwh3pj5_f.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpwh3pj5_f.py\", line 15, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    counter = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                counter += 1\n    return counter\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1666124034,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn8bd64qt.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpn8bd64qt.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmpn8bd64qt.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List, Tuple\n\ndef count_bidirectional(test_list: List[Tuple[int]]) -> int:\n    \"\"\"\n\tWrite a function to count bidirectional tuple pairs.\n\t\"\"\"\n    count = 0\n    for i in range(len(test_list)):\n        for j in range(i+1, len(test_list)):\n            if test_list[i][0] == test_list[j][1] and test_list[i][1] == test_list[j][0]:\n                count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)]) == 3\n    assert candidate([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)]) == 2\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\n\ndef test_check():\n    check(count_bidirectional)\n\ntest_check()\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4dmzoiyr.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp4dmzoiyr.py\", line 20, in test_check\n    check(count_bidirectional)\n  File \"/tmp/tmp4dmzoiyr.py\", line 17, in check\n    assert candidate([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)]) == 4\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
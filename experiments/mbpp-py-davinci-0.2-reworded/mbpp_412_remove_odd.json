{
  "name": "mbpp_412_remove_odd",
  "language": "py",
  "prompt": "from typing import List\n\ndef remove_odd(l: List[int]) -> List[int]:\n    \"\"\"\n\tWrite a python function to remove odd numbers from a given list.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_412_remove_odd.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([1, 2, 3]) == [2]\n    assert candidate([2, 4, 6]) == [2, 4, 6]\n    assert candidate([10, 20, 3]) == [10, 20]\n\ndef test_check():\n    check(remove_odd)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]))",
    "    return [i for i in l if i % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]",
    "    even_list = []\n    for i in l:\n        if i % 2 == 0:\n            even_list.append(i)\n    return even_list\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))",
    "    return [x for x in l if x % 2 == 0]\n\n",
    "    return [i for i in l if i % 2 == 0]\n\nprint(remove_odd([1,2,3,4,5,6,7,8,9,10]))",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [x for x in l if x % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n",
    "    return [i for i in l if i % 2 == 0]\n\nprint(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    return [x for x in l if x % 2 == 0]\n"
  ]
}
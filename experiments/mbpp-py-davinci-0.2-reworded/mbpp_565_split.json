{
  "name": "mbpp_565_split",
  "language": "py",
  "prompt": "from typing import List\n\ndef split(word: str) -> List[str]:\n    \"\"\"\n\tWrite a python function to split a string into characters.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_565_split.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate('python') == ['p', 'y', 't', 'h', 'o', 'n']\n    assert candidate('Name') == ['N', 'a', 'm', 'e']\n    assert candidate('program') == ['p', 'r', 'o', 'g', 'r', 'a', 'm']\n\ndef test_check():\n    check(split)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split('hello'))",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split('abc'))",
    "    return [char for char in word]\n\nprint(split('hello'))",
    "    return list(word)\n\nprint(split('abc'))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n\n",
    "    return list(word)\n\nprint(split('hello'))",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split('hello'))",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return [char for char in word]\n\nprint(split(\"Hello\"))",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"hello\"))",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split('abc'))",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return [char for char in word]\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return [char for char in word]\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return [char for char in word]\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split('hello'))",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n\nprint(split(\"abc\"))",
    "    return list(word)\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return [char for char in word]\n\nprint(split(\"Hello\"))",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n",
    "    return list(word)\n"
  ]
}
{
  "name": "mbpp_299_max_aggregate",
  "language": "py",
  "prompt": "from typing import List, Tuple, Union\n\ndef max_aggregate(stdata: List[Tuple[Union[str, int]]]) -> Tuple[Union[str, int]]:\n    \"\"\"\n\tWrite a function to calculate the maximum aggregate from the list of tuples.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_299_max_aggregate.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([('Juan Whelan', 90), ('Sabah Colley', 88), ('Peter Nichols', 7), ('Juan Whelan', 122), ('Sabah Colley', 84)]) == ('Juan Whelan', 212)\n    assert candidate([('Juan Whelan', 50), ('Sabah Colley', 48), ('Peter Nichols', 37), ('Juan Whelan', 22), ('Sabah Colley', 14)]) == ('Juan Whelan', 72)\n    assert candidate([('Juan Whelan', 10), ('Sabah Colley', 20), ('Peter Nichols', 30), ('Juan Whelan', 40), ('Sabah Colley', 50)]) == ('Sabah Colley', 70)\n\ndef test_check():\n    check(max_aggregate)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    max_aggregate = 0\n    for i in stdata:\n        if i[1] > max_aggregate:\n            max_aggregate = i[1]\n    return max_aggregate\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    max_aggregate = 0\n    for i in stdata:\n        if i[1] > max_aggregate:\n            max_aggregate = i[1]\n    return max_aggregate\n",
    "    pass",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    max_aggregate = 0\n    for i in range(len(stdata)):\n        aggregate = stdata[i][1] + stdata[i][2] + stdata[i][3]\n        if aggregate > max_aggregate:\n            max_aggregate = aggregate\n            max_aggregate_student = stdata[i][0]\n    return (max_aggregate_student, max_aggregate)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata)\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata)\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    max_agg = 0\n    for i in range(len(stdata)):\n        agg = 0\n        for j in range(len(stdata[i])):\n            agg += stdata[i][j]\n        if agg > max_agg:\n            max_agg = agg\n    return max_agg\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    max_aggregate = 0\n    for i in stdata:\n        if i[1] > max_aggregate:\n            max_aggregate = i[1]\n    return max_aggregate\n",
    "    return max(stdata)\n",
    "    return max(stdata)\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    max_aggregate = 0\n    for i in stdata:\n        if i[1] > max_aggregate:\n            max_aggregate = i[1]\n    return max_aggregate\n",
    "    return max(stdata)\n",
    "    return max(stdata)\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    pass\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata)\n",
    "    pass\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    pass\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    return max(stdata)\n",
    "    return max(stdata, key=lambda x: x[1])\n",
    "    max_aggregate = 0\n    for i in stdata:\n        max_aggregate = max(max_aggregate, sum(i[1:]))\n    return max_aggregate\n"
  ]
}
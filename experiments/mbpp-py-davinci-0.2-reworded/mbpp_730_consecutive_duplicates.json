{
  "name": "mbpp_730_consecutive_duplicates",
  "language": "py",
  "prompt": "from typing import Any\n\ndef consecutive_duplicates(nums: Any) -> Any:\n    \"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_730_consecutive_duplicates.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n    assert candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n    assert candidate(['a', 'a', 'b', 'c', 'd', 'd']) == ['a', 'b', 'c', 'd']\n    assert candidate(['a', 'a', 'b', 'c', 'd', 'd', 'a', 'a']) == ['a', 'b', 'c', 'd', 'a']\n\ndef test_check():\n    check(consecutive_duplicates)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return [num for i, num in enumerate(nums) if i == 0 or num != nums[i - 1]]\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 7]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n",
    "    return [nums[i] for i in range(len(nums)) if nums[i] != nums[i-1]]\n\nprint(consecutive_duplicates([1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9]))\nprint(consecutive_duplicates([1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1,2,2,3,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,6]))",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1,1,2,2,3,3,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 7, 8, 8, 8, 9, 10, 10, 10]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 7, 8, 9, 9]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0 or nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 9, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7, 8, 8, 9, 9, 9]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4]))\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 4, 4]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 8, 8, 9]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) <= 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    if len(nums) == 0:\n        return nums\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 7, 7, 7, 7, 8, 9, 10]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n",
    "    return [num for i, num in enumerate(nums) if num != nums[i - 1]]\n\n",
    "    result = []\n    for i in range(len(nums)):\n        if i == 0 or nums[i] != nums[i-1]:\n            result.append(nums[i])\n    return result\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 1, 2, 3, 4, 5]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9, 10, 10]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6]))",
    "    new_list = []\n    for i in nums:\n        if len(new_list) == 0 or i != new_list[-1]:\n            new_list.append(i)\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5]))\nprint(consecutive_duplicates([1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9]))",
    "    return [num for i, num in enumerate(nums) if i == 0 or num != nums[i - 1]]\n",
    "    if not nums:\n        return []\n    new_list = [nums[0]]\n    for i in range(1, len(nums)):\n        if nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9, 9, 10]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    return [i for i, j in zip(nums, nums[1:] + [None]) if i != j]\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    return [nums[i] for i in range(len(nums)-1) if nums[i] != nums[i+1]]\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1,1,2,2,3,3,4,4,5,5]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n",
    "    # your code here\n    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,1,2,2,3,3,3,3,4,5,5,5,5,6,6,6,7,7,7,7,8,8,9,10,10]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i - 1]])\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i - 1]])\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return nums\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 7, 7, 8, 8, 9, 10, 10]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([x for x in nums if x != nums[0]])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))",
    "    if len(nums) <= 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7, 8, 8, 8, 8, 9, 9, 9, 10, 10]))",
    "    return [nums[i] for i in range(len(nums) - 1) if nums[i] != nums[i + 1]]\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 9, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 8]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9, 9, 9]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return [nums[0]]\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))\nprint(consecutive_duplicates([]))\nprint(consecutive_duplicates([1]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,1,2,2,2,2,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,",
    "    # Your code here\n    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    if not nums:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,1,2,2,3,3,3,3,4,5,5,5,5,5,6,6,6,7,7,7,8,8,9,10,10]))",
    "    return [num for i, num in enumerate(nums) if num != nums[i - 1]]\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))",
    "    if not nums:\n        return []\n    result = [nums[0]]\n    for i in range(1, len(nums)):\n        if nums[i] != nums[i-1]:\n            result.append(nums[i])\n    return result\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i - 1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "    if nums == []:\n        return []\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,1,2,2,2,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4",
    "    if not nums:\n        return []\n    result = [nums[0]]\n    for i in range(1, len(nums)):\n        if nums[i] != nums[i-1]:\n            result.append(nums[i])\n    return result",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,",
    "    if not nums:\n        return []\n    if len(nums) == 1:\n        return nums\n    result = []\n    for i in range(len(nums) - 1):\n        if nums[i] != nums[i + 1]:\n            result.append(nums[i])\n    result.append(nums[-1])\n    return result\n\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i-1]:\n            new_list.append(nums[i])\n    return new_list\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 7, 8, 8, 8, 9, 10, 11, 11, 12]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]))",
    "    if not nums:\n        return nums\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 10, 10, 10]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 5, 5, 5, 6, 6, 7, 8, 8, 8, 9, 10, 10]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1,1,1,2,2,2,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4",
    "    if len(nums) <= 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\n",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,2,2,2,3,3,3,4,4,4,5,5,5]))",
    "    new_list = []\n    for i in nums:\n        if i not in new_list:\n            new_list.append(i)\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]))\nprint(consecutive_duplicates([1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 5, 5, 5]))",
    "    # Your code here\n    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\nprint(consecutive_duplicates([1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 4, 4, 5, 5, 5, 6, 7, 7, 8, 9, 9]))\nprint(consecutive_duplicates([]))\nprint(consecutive_duplicates([1]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1,1,2,2,3,3,3,3,4,5,5,5,6,6,6,7,7,7,7,7,8,8,8,9,9,9,10,10,10]))",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if len(nums) == 2:\n        if nums[0] == nums[1]:\n            return [nums[0]]\n        else:\n            return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8]))",
    "    return [num for i, num in enumerate(nums) if i == 0 or num != nums[i - 1]]\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14,",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10]))",
    "    return [x for i, x in enumerate(nums) if i == 0 or x != nums[i - 1]]\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9, 10, 10, 10, 10, 10, 10]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11",
    "    i = 0\n    while i < len(nums) - 1:\n        if nums[i] == nums[i + 1]:\n            nums.pop(i)\n        else:\n            i += 1\n    return nums\n\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,1,2,2,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return nums\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10]))\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4,",
    "    # TODO: Implement this function\n    pass\n\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 10, 10, 10, 10]))",
    "    if len(nums) <= 1:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 4, 4, 5, 5, 5, 6, 7, 7, 8, 9, 9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i - 1]]\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if not nums:\n        return []\n    result = [nums[0]]\n    for i in range(1, len(nums)):\n        if nums[i] != nums[i-1]:\n            result.append(nums[i])\n    return result\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 4, 5, 5, 6, 6, 6, 7, 8, 8, 9, 9, 10]))",
    "    prev = None\n    result = []\n    for n in nums:\n        if n != prev:\n            result.append(n)\n            prev = n\n    return result\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))\nprint(consecutive_duplicates([\"a\", \"a\", \"a\", \"b\", \"b\", \"c\", \"c\", \"c\"]))",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return nums\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return [nums[0]]\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,2,2,2,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n",
    "    if len(nums) == 0:\n        return []\n    elif len(nums) == 1:\n        return [nums[0]]\n    else:\n        if nums[0] == nums[1]:\n            return consecutive_duplicates(nums[1:])\n        else:\n            return [nums[0]] + consecutive_duplicates(nums[1:])\n",
    "    return [nums[i] for i in range(len(nums)) if i == 0 or nums[i] != nums[i-1]]\n",
    "    if len(nums) == 0:\n        return []\n    if len(nums) == 1:\n        return nums\n    if nums[0] == nums[1]:\n        return consecutive_duplicates(nums[1:])\n    return [nums[0]] + consecutive_duplicates(nums[1:])",
    "    new_list = []\n    for i in range(len(nums)):\n        if i == 0:\n            new_list.append(nums[i])\n        elif nums[i] != nums[i - 1]:\n            new_list.append(nums[i])\n    return new_list\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))\nprint(consecutive_duplicates([\"a\", \"a\", \"b\", \"b\", \"c\", \"c\", \"c\"]))\nprint(consecutive_duplicates([\"a\", \"a\", \"b\", \"b\", \"c\", \"c\", \"c\", \"d\", \"d\", \"d\", \"d\", \"e\", \"e\", \"e\", \"e\", \"e\"]))\nprint(consecutive_duplicates([\"a\", \"a\", \"b\", \"b\", \"c\", \"c\", \"c\", \"d\", \"d\", \"d\", \"d\", \"e\", \"e\", \"e\", \"e\", \"e\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\"]))\nprint(consecutive_duplicates([\"a\", \"a\", \"b\", \"b\", \"c\", \"c\", \"c\", \"d\", \"d\", \"d\", \"d\", \"e\", \"e\", \"e\", \"e\", \"e\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"g\", \"g\", \"g\", \"g\", \"g\", \"g\", \"g\"]))\nprint(consecutive_duplicates([\"a\", \"a\", \"b\", \"b\", \"c\", \"c\", \"c\", \"d\", \"d\", \"d\", \"d\", \"e\", \"e\", \"e\", \"e\", \"e\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"g\", \"g\", \"g\", \"g\", \"g\", \"g\", \"g\", \"h\", \"h\", \"h\", \"h\", \"h\", \"h\", \"h\", \"h\"]))\nprint(consecutive_du",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates([nums[i] for i in range(1, len(nums)) if nums[i] != nums[i-1]])\n\nprint(consecutive_duplicates([1, 1, 2, 3, 3, 3, 3, 4, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 9, 9]))\nprint(consecutive_duplicates([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))\nprint(consecutive_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]))\nprint(consecutive_duplicates([]))",
    "    if len(nums) == 0:\n        return []\n    else:\n        return [nums[0]] + consecutive_duplicates(nums[1:]) if nums[0] != nums[1] else consecutive_duplicates(nums[1:])\n\nprint(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))",
    "    res = []\n    for i in nums:\n        if len(res) == 0 or i != res[-1]:\n            res.append(i)\n    return res\n\nprint(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]))"
  ]
}
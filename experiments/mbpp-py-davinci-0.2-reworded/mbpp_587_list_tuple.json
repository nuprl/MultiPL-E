{
  "name": "mbpp_587_list_tuple",
  "language": "py",
  "prompt": "from typing import List, Tuple\n\ndef list_tuple(listx: List[int]) -> Tuple[int]:\n    \"\"\"\n\tWrite a function to convert a list to a tuple.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_587_list_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([5, 10, 7, 4, 15, 3]) == (5, 10, 7, 4, 15, 3)\n    assert candidate([2, 4, 5, 6, 2, 3, 4, 4, 7]) == (2, 4, 5, 6, 2, 3, 4, 4, 7)\n    assert candidate([58, 44, 56]) == (58, 44, 56)\n\ndef test_check():\n    check(list_tuple)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return tuple(listx)\n\nprint(list_tuple([1, 2, 3, 4]))",
    "    return tuple(listx)\n\nprint(list_tuple([1,2,3,4,5]))",
    "    return tuple(listx)\n",
    "    return tuple(listx)\n\nprint(list_tuple([1, 2, 3]))",
    "    return tuple(listx)\n\nprint(list_tuple([1, 2, 3]))",
    "    return tuple(listx)\n\n",
    "    return tuple(listx)\n\nprint(list_tuple([1, 2, 3, 4]))",
    "    return tuple(listx)\n",
    "    return tuple(listx)\n\nprint(list_tuple([1,2,3,4,5]))",
    "    return tuple(listx)\n\nprint(list_tuple([1, 2, 3, 4]))",
    "    return tuple(listx)\n",
    "    return tuple(listx)\n\nprint(list_tuple([1, 2, 3]))",
    "    return tuple(listx)\n\nprint(list_tuple([1,2,3]))",
    "    return tuple(listx)\n\nprint(list_tuple([1, 2, 3]))",
    "    return tuple(listx)\n\nprint(list_tuple([1,2,3,4,5]))",
    "    return tuple(listx)\n\nprint(list_tuple([1,2,3]))",
    "    return tuple(listx)\n\nprint(list_tuple([1,2,3,4]))",
    "    return tuple(listx)\n\nprint(list_tuple([1, 2, 3]))",
    "    return tuple(listx)\n\nprint(list_tuple([1,2,3,4]))",
    "    return tuple(listx)\n\nprint(list_tuple([1, 2, 3]))"
  ]
}
{
  "name": "mbpp_478_remove_lowercase",
  "language": "py",
  "prompt": "def remove_lowercase(str1: str) -> str:\n    \"\"\"\n\tWrite a function to remove lowercase substrings from a given string.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_478_remove_lowercase.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate('PYTHon') == 'PYTH'\n    assert candidate('FInD') == 'FID'\n    assert candidate('STRinG') == 'STRG'\n\ndef test_check():\n    check(remove_lowercase)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return \"\".join([i for i in str1 if i.isupper()])\n\n",
    "    return ''.join([i for i in str1 if i.isupper()])\n\n",
    "    return str1.translate(str.maketrans('', '', string.ascii_lowercase))\n\n",
    "    return \"\".join(c for c in str1 if not c.islower())\n\n",
    "    return re.sub(r'[a-z]', '', str1)\n\n",
    "    return \"\".join([x for x in str1 if x.isupper()])\n\n",
    "    return re.sub(r'[a-z]', '', str1)\n\n",
    "    return \"\".join(i for i in str1 if i.isupper())\n\n",
    "    return ''.join([x for x in str1 if x.isupper()])\n\n",
    "    return \"\".join([i for i in str1 if not i.islower()])\n\n",
    "    return \"\".join([i for i in str1 if i.isupper()])\n\n",
    "    return \"\".join(i for i in str1 if i.isupper())\n\n",
    "    return \"\".join(c for c in str1 if c.isupper())\n\n",
    "    return \"\".join(c for c in str1 if not c.islower())\n\n",
    "    return str1.replace(str1.lower(), \"\")\n\n",
    "    return \"\".join(c for c in str1 if c.isupper())\n\n",
    "    return ''.join([char for char in str1 if char.isupper()])\n\n",
    "    return re.sub(r\"[a-z]\", \"\", str1)\n\n",
    "    return re.sub(r'[a-z]+', '', str1)\n\n",
    "    return ''.join([i for i in str1 if i.isupper()])\n\n"
  ]
}
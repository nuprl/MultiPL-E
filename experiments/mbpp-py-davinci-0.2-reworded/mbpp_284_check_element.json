{
  "name": "mbpp_284_check_element",
  "language": "py",
  "prompt": "from typing import Any\n\ndef check_element(list: Any, element: Any) -> bool:\n    \"\"\"\n\tWrite a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_284_check_element.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(['green', 'orange', 'black', 'white'], 'blue') == False\n    assert candidate([1, 2, 3, 4], 7) == False\n    assert candidate(['green', 'green', 'green', 'green'], 'green') == True\n\ndef test_check():\n    check(check_element)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return all(list[i] == element for i in range(len(list)))",
    "    return all(i == element for i in list)\n",
    "    return list.count(element) == len(list)\n",
    "    return all(i == element for i in list)\n",
    "    return all(x == element for x in list)\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 2, 3, 4, 5], 6))\nprint(check_element([1, 1, 1, 1, 1], 1))",
    "    return all(item == element for item in list)",
    "    for i in list:\n        if i != element:\n            return False\n    return True\n\nprint(check_element([1,2,3,4,5], 1))\nprint(check_element([1,1,1,1,1], 1))\nprint(check_element([1,1,1,1,1], 2))",
    "    return all(i == element for i in list)\n",
    "    return all(list[i] == element for i in range(len(list)))\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 5))\nprint(check_element([1, 2, 3, 4, 5], 0))",
    "    return all(list[i] == element for i in range(len(list)))\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 1, 1, 1, 1], 0))\nprint(check_element([1, 1, 1, 1, 1], -1))",
    "    return all(list[i] == element for i in range(len(list)))\n",
    "    return all(item == element for item in list)\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([1, 2, 3, 4, 5], 6))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 1, 1, 1, 1], 5))\nprint(check_element([1, 2, 3, 4, 5], 0))\nprint(check_element([1, 2, 3, 4, 5], -1))\nprint(check_element([1, 2, 3, 4, 5], None))\nprint(check_element([1, 2, 3, 4, 5], \"1\"))",
    "    return all(item == element for item in list)\n\nprint(check_element([1, 2, 3, 4], 1))\nprint(check_element([1, 2, 3, 4], 2))\nprint(check_element([1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1], 2))\nprint(check_element([1, 1, 1, 1], 0))",
    "    return list.count(element) == len(list)\n\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 1, 1, 1, 1], 0))",
    "    return all(list[i] == element for i in range(len(list)))\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([1, 2, 3, 4, 5], 6))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 1, 1, 1, 1], 0))",
    "    return all(item == element for item in list)\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 2, 3, 4, 5], 5))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 5))\nprint(check_element([1, 2, 3, 4, 5], 6))\nprint(check_element([1, 2, 3, 4, 5], 0))\nprint(check_element([1, 2, 3, 4, 5], -1))\nprint(check_element([1, 2, 3, 4, 5], -5))\nprint(check_element([1, 2, 3, 4, 5], -6))\nprint(check_element([1, 2, 3, 4, 5], -7))\nprint(check_element([1, 2, 3, 4, 5], -8))\nprint(check_element([1, 2, 3, 4, 5], -9))\nprint(check_element([1, 2, 3, 4, 5], -10))\nprint(check_element([1, 2, 3, 4, 5], -11))\nprint(check_element([1, 2, 3, 4, 5], -12))\nprint(check_element([1, 2, 3, 4, 5], -13))\nprint(check_element([1, 2, 3, 4, 5], -14))\nprint(check_element([1, 2, 3, 4, 5], -15))\nprint(check_element([1, 2, 3, 4, 5], -16))\nprint(check_element([1, 2, 3, 4, 5], -17))\nprint(check_element([1, 2, 3, 4, 5], -18))\nprint(check_element([1, 2, 3, 4, 5], -19))\nprint(check_element([1, 2, 3, 4, 5], -20))\nprint(check_element([1, 2, 3, 4, 5], -21))\nprint(check_element([1, 2, 3, 4, 5], -22))\nprint(check",
    "    return list.count(element) == len(list)\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 2], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))\nprint(check_element([1, 2, 3, 4, 5], 6))",
    "    return all(list[i] == element for i in range(len(list)))\n\nprint(check_element([1, 2, 3, 4, 5], 1))\nprint(check_element([1, 1, 1, 1, 1], 1))\nprint(check_element([1, 1, 1, 1, 1], 2))",
    "    return all(x == element for x in list)\n",
    "    return list.count(element) == len(list)\n"
  ]
}
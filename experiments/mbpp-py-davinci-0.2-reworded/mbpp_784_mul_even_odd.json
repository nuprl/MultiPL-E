{
  "name": "mbpp_784_mul_even_odd",
  "language": "py",
  "prompt": "from typing import List\n\ndef mul_even_odd(list1: List[int]) -> int:\n    \"\"\"\n\tWrite a function to find the product of first even and odd number of a given list.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([1, 3, 5, 7, 4, 1, 6, 8]) == 4\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 2\n    assert candidate([1, 5, 7, 9, 10]) == 10\n\ndef test_check():\n    check(mul_even_odd)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    even = 0\n    odd = 0\n    for i in list1:\n        if i % 2 == 0:\n            even = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd = i\n            break\n    return even * odd\n\nprint(mul_even_odd([1,2,3,4,5,6,7,8,9,10]))",
    "    even_num = 0\n    odd_num = 0\n    for i in list1:\n        if i % 2 == 0:\n            even_num = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd_num = i\n            break\n    return even_num * odd_num\n\nprint(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    even = 0\n    odd = 0\n    for i in range(len(list1)):\n        if list1[i] % 2 == 0:\n            even = list1[i]\n            break\n    for i in range(len(list1)):\n        if list1[i] % 2 != 0:\n            odd = list1[i]\n            break\n    return even * odd\n\n",
    "    even = 0\n    odd = 0\n    for i in list1:\n        if i % 2 == 0:\n            even = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd = i\n            break\n    return even * odd\n\nprint(mul_even_odd([1,2,3,4,5,6,7,8,9]))",
    "    even_num = 0\n    odd_num = 0\n    for i in list1:\n        if i % 2 == 0 and even_num == 0:\n            even_num = i\n        elif i % 2 != 0 and odd_num == 0:\n            odd_num = i\n    return even_num * odd_num\n\n\nprint(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    even = 0\n    odd = 0\n    for i in list1:\n        if i % 2 == 0:\n            even = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd = i\n            break\n    return even * odd\n\nprint(mul_even_odd([1, 2, 3, 4, 5, 6]))",
    "    even = 0\n    odd = 0\n    for i in list1:\n        if i % 2 == 0:\n            even = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd = i\n            break\n    return even * odd\n\n",
    "    even = 0\n    odd = 0\n    for i in list1:\n        if i % 2 == 0:\n            even = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd = i\n            break\n    return even * odd\n\nprint(mul_even_odd([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]))",
    "    even_num = 0\n    odd_num = 0\n    for i in list1:\n        if i % 2 == 0:\n            even_num = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd_num = i\n            break\n    return even_num * odd_num\n\nprint(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    even = 0\n    odd = 0\n    for i in list1:\n        if i % 2 == 0:\n            even = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd = i\n            break\n    return even * odd\n\n\nprint(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    even = 0\n    odd = 0\n    for i in list1:\n        if i % 2 == 0:\n            even = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd = i\n            break\n    return even * odd\n\nprint(mul_even_odd([1,2,3,4,5,6,7,8,9,10]))",
    "    even = 0\n    odd = 0\n    for i in list1:\n        if i % 2 == 0:\n            even = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd = i\n            break\n    return even * odd\n\n",
    "    even = [i for i in list1 if i % 2 == 0]\n    odd = [i for i in list1 if i % 2 != 0]\n    return even[0] * odd[0]\n\nprint(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    even = 0\n    odd = 0\n    for i in range(len(list1)):\n        if list1[i] % 2 == 0:\n            even = list1[i]\n            break\n    for i in range(len(list1)):\n        if list1[i] % 2 != 0:\n            odd = list1[i]\n            break\n    return even * odd\n\nprint(mul_even_odd([2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    even_num = 0\n    odd_num = 0\n    for i in list1:\n        if i % 2 == 0:\n            even_num = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd_num = i\n            break\n    return even_num * odd_num\n\nprint(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]))",
    "    even_list = []\n    odd_list = []\n    for i in list1:\n        if i % 2 == 0:\n            even_list.append(i)\n        else:\n            odd_list.append(i)\n    return even_list[0] * odd_list[0]\n\n\nprint(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]))",
    "    even = 0\n    odd = 0\n    for i in list1:\n        if i % 2 == 0:\n            even = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd = i\n            break\n    return even * odd\n\nprint(mul_even_odd([1,2,3,4,5,6,7,8,9,10]))",
    "    even_num = 0\n    odd_num = 0\n    for i in list1:\n        if i % 2 == 0:\n            even_num = i\n            break\n    for i in list1:\n        if i % 2 != 0:\n            odd_num = i\n            break\n    return even_num * odd_num\n\n",
    "    even = 0\n    odd = 0\n    for i in range(len(list1)):\n        if list1[i] % 2 == 0:\n            even = list1[i]\n            break\n    for i in range(len(list1)):\n        if list1[i] % 2 != 0:\n            odd = list1[i]\n            break\n    return even * odd\n\nprint(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "    even_num = [num for num in list1 if num % 2 == 0]\n    odd_num = [num for num in list1 if num % 2 != 0]\n    return even_num[0] * odd_num[0]\n\nprint(mul_even_odd([1, 2, 3, 4, 5, 6]))"
  ]
}
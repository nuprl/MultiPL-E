{
  "name": "mbpp_432_median_trapezium",
  "language": "py",
  "prompt": "def median_trapezium(base1: int, base2: int, height: int) -> float:\n    \"\"\"\n\tWrite a function to find the median length of a trapezium.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_432_median_trapezium.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(15, 25, 35) == 20\n    assert candidate(10, 20, 30) == 15\n    assert candidate(6, 9, 4) == 7.5\n\ndef test_check():\n    check(median_trapezium)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) * height / 2\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) * height / 2\n\n",
    "    return (base1 + base2) / 2\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) / 2 * height\n\n",
    "    return (base1 + base2) * height / 2\n\n"
  ]
}
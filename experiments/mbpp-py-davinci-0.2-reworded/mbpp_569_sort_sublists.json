{
  "name": "mbpp_569_sort_sublists",
  "language": "py",
  "prompt": "from typing import List\n\ndef sort_sublists(list1: List[List[str]]) -> List[List[str]]:\n    \"\"\"\n\tWrite a function to sort each sublist of strings in a given list of lists.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_569_sort_sublists.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']]) == [['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]\n    assert candidate([['green', 'orange'], ['black'], ['green', 'orange'], ['white']]) == [['green', 'orange'], ['black'], ['green', 'orange'], ['white']]\n    assert candidate([['a', 'b'], ['d', 'c'], ['g', 'h'], ['f', 'e']]) == [['a', 'b'], ['c', 'd'], ['g', 'h'], ['e', 'f']]\n\ndef test_check():\n    check(sort_sublists)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return [sorted(sublist) for sublist in list1]\n\nprint(sort_sublists([['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]))",
    "    for sublist in list1:\n        sublist.sort()\n    return list1\n\nprint(sort_sublists([['a', 'b', 'c'], ['d', 'e'], ['f', 'g', 'h'], ['d', 'e'], ['i', 'j', 'k', 'l'], ['m', 'n'], ['o']]))",
    "    for sublist in list1:\n        sublist.sort()\n    return list1\n",
    "    for sublist in list1:\n        sublist.sort()\n    return list1\n",
    "    for i in range(len(list1)):\n        list1[i].sort()\n    return list1\n",
    "    for i in range(len(list1)):\n        list1[i].sort()\n    return list1\n",
    "    return [sorted(sublist) for sublist in list1]\n",
    "    return [sorted(sublist) for sublist in list1]\n",
    "    for sublist in list1:\n        sublist.sort()\n    return list1\n",
    "    for sublist in list1:\n        sublist.sort()\n    return list1\n\nprint(sort_sublists([['a', 'b', 'c'], ['d', 'e'], ['f', 'g', 'h'], ['d', 'e'], ['i', 'j', 'k', 'l'], ['m', 'n'], ['o']]))",
    "    for i in range(len(list1)):\n        list1[i].sort()\n    return list1\n",
    "    return [sorted(sublist) for sublist in list1]",
    "    for sublist in list1:\n        sublist.sort()\n    return list1\n",
    "    for i in range(len(list1)):\n        list1[i].sort()\n    return list1\n\nprint(sort_sublists([['a', 'b', 'c'], ['d', 'e'], ['f', 'g', 'h'], ['d', 'e'], ['i', 'j', 'k', 'l'], ['m', 'n'], ['o']]))",
    "    for sublist in list1:\n        sublist.sort()\n    return list1\n\nprint(sort_sublists([['apple', 'orange', 'banana'], ['carrot', 'pea', 'lettuce'], ['blueberry', 'raspberry', 'blackberry']]))",
    "    for sublist in list1:\n        sublist.sort()\n    return list1",
    "    for sublist in list1:\n        sublist.sort()\n    return list1\n",
    "    for sublist in list1:\n        sublist.sort()\n    return list1\n\nprint(sort_sublists([['a', 'b', 'c'], ['d', 'e'], ['f', 'g', 'h'], ['d', 'e'], ['i', 'j', 'k', 'l'], ['m', 'n'], ['o']]))",
    "    return [sorted(sublist) for sublist in list1]\n",
    "    return [sorted(sublist) for sublist in list1]\n"
  ]
}
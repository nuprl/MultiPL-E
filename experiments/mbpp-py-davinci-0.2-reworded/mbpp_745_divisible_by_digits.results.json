{
  "name": "mbpp_745_divisible_by_digits",
  "language": "py",
  "prompt": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "results": [
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd1odws3w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpd1odws3w.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpd1odws3w.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8oph_c8v.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmp8oph_c8v.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp8oph_c8v.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp8oph_c8v.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp8oph_c8v.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp8oph_c8v.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpagvqdn_5.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpagvqdn_5.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpagvqdn_5.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpx8k74wyc.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpx8k74wyc.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpx8k74wyc.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpx8k74wyc.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpx8k74wyc.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpx8k74wyc.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp40zhxsgm.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmptg5xq8w9.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmptg5xq8w9.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmptg5xq8w9.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmptg5xq8w9.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmptg5xq8w9.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmptg5xq8w9.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp87o_5mr8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpszxioime.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpszxioime.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1,100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4e4y1b7i.py\", line 9, in <module>\n    print(divisible_by_digits(1,100))\n  File \"/tmp/tmp4e4y1b7i.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp4e4y1b7i.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp4e4y1b7i.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqs7pbgrw.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpqs7pbgrw.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpqs7pbgrw.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8oph_c8v.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmp8oph_c8v.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp8oph_c8v.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp8oph_c8v.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp8oph_c8v.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp8oph_c8v.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpszxioime.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpszxioime.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_elsa3la.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp_elsa3la.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp_elsa3la.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp_elsa3la.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp_elsa3la.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp_elsa3la.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp87o_5mr8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpagvqdn_5.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpagvqdn_5.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpagvqdn_5.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpszxioime.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpszxioime.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp87o_5mr8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt4t6fdb0.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpt4t6fdb0.py\", line 16, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpt4t6fdb0.py\", line 11, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpt4t6fdb0.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpt4t6fdb0.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpt4t6fdb0.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqs7pbgrw.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpqs7pbgrw.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpqs7pbgrw.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(int(j) != 0 and i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22, 24, 33, 36, 44, 48, 55, 66, 77, 88, 99]\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprw_ka48u.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmprw_ka48u.py\", line 16, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmprw_ka48u.py\", line 11, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprxedpcan.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmprxedpcan.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmprxedpcan.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmprxedpcan.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all([num % int(digit) == 0 for digit in str(num)])]\n\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5dq1z7ji.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp5dq1z7ji.py\", line 16, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp5dq1z7ji.py\", line 11, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp5dq1z7ji.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp5dq1z7ji.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp5dq1z7ji.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if not any(i % int(digit) for digit in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnxewaxfn.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpnxewaxfn.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if not any(i % int(digit) for digit in str(i))]\n  File \"/tmp/tmpnxewaxfn.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if not any(i % int(digit) for digit in str(i))]\n  File \"/tmp/tmpnxewaxfn.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if not any(i % int(digit) for digit in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum + 1) if all(x % int(y) == 0 for y in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyf4mo5i9.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpyf4mo5i9.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum + 1) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpyf4mo5i9.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum + 1) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpyf4mo5i9.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum + 1) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjl8rhume.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpjl8rhume.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpjl8rhume.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpjl8rhume.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7losvjsj.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp7losvjsj.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp7losvjsj.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpagvqdn_5.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpagvqdn_5.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpagvqdn_5.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcq9in6gk.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpcq9in6gk.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpcq9in6gk.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpcq9in6gk.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpcq9in6gk.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpcq9in6gk.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpoxzrxp7j.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpoxzrxp7j.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpoxzrxp7j.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpoxzrxp7j.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmpoxzrxp7j.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmpoxzrxp7j.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp87o_5mr8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp40zhxsgm.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqhl68rv2.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpqhl68rv2.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpqhl68rv2.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpqhl68rv2.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpqhl68rv2.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpqhl68rv2.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpszxioime.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpszxioime.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(digit) == 0 for digit in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpux18fm5a.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpux18fm5a.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(digit) == 0 for digit in str(x))]\n  File \"/tmp/tmpux18fm5a.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(digit) == 0 for digit in str(x))]\n  File \"/tmp/tmpux18fm5a.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(digit) == 0 for digit in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqs7pbgrw.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpqs7pbgrw.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpqs7pbgrw.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7losvjsj.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp7losvjsj.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp7losvjsj.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplifls6bg.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmplifls6bg.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmplifls6bg.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmplifls6bg.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmplifls6bg.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmplifls6bg.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpszxioime.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpszxioime.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp00oa2yd0.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp00oa2yd0.py\", line 16, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp00oa2yd0.py\", line 11, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp00oa2yd0.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmp00oa2yd0.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmp00oa2yd0.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpszxioime.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpszxioime.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(x) == 0 for x in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpx7fzs3n9.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpx7fzs3n9.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmpx7fzs3n9.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmpx7fzs3n9.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(x) == 0 for x in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd1odws3w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpd1odws3w.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpd1odws3w.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7losvjsj.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp7losvjsj.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp7losvjsj.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjl8rhume.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpjl8rhume.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpjl8rhume.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpjl8rhume.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp87o_5mr8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum+1) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk7zal81j.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpk7zal81j.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum+1) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmpk7zal81j.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum+1) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmpk7zal81j.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum+1) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0iagcy9m.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp0iagcy9m.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp0iagcy9m.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpy5nf_non.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpy5nf_non.py\", line 16, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpy5nf_non.py\", line 11, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpy5nf_non.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpy5nf_non.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpy5nf_non.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp87o_5mr8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0iagcy9m.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp0iagcy9m.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp0iagcy9m.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpagvqdn_5.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpagvqdn_5.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpagvqdn_5.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpszxioime.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpszxioime.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all([i % int(j) == 0 for j in str(i)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo7zd7tu4.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpo7zd7tu4.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmpo7zd7tu4.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmpo7zd7tu4.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\n\nprint(divisible_by_digits(1, 100))\nprint(divisible_by_digits(100, 200))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpw5cx_71s.py\", line 10, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpw5cx_71s.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpw5cx_71s.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpw5cx_71s.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0iagcy9m.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp0iagcy9m.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp0iagcy9m.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all([i % int(d) == 0 for d in str(i)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2uochfve.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp2uochfve.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all([i % int(d) == 0 for d in str(i)])]\n  File \"/tmp/tmp2uochfve.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all([i % int(d) == 0 for d in str(i)])]\n  File \"/tmp/tmp2uochfve.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all([i % int(d) == 0 for d in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpuf6hc4j0.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpuf6hc4j0.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\n  File \"/tmp/tmpuf6hc4j0.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\n  File \"/tmp/tmpuf6hc4j0.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7losvjsj.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp7losvjsj.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp7losvjsj.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all([i % int(j) == 0 for j in str(i)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo7zd7tu4.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpo7zd7tu4.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmpo7zd7tu4.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmpo7zd7tu4.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpagvqdn_5.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpagvqdn_5.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpagvqdn_5.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjeywy80u.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpjeywy80u.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpjeywy80u.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpjeywy80u.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpceqzazsc.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpceqzazsc.py\", line 16, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpceqzazsc.py\", line 11, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpceqzazsc.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpceqzazsc.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpceqzazsc.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp40zhxsgm.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp40zhxsgm.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp45r11shx.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp45r11shx.py\", line 16, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp45r11shx.py\", line 11, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp45r11shx.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp45r11shx.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp45r11shx.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgyiwluer.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpgyiwluer.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmpgyiwluer.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmpgyiwluer.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_elsa3la.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp_elsa3la.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp_elsa3la.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp_elsa3la.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp_elsa3la.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp_elsa3la.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmptg5xq8w9.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmptg5xq8w9.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmptg5xq8w9.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmptg5xq8w9.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmptg5xq8w9.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmptg5xq8w9.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpagvqdn_5.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpagvqdn_5.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpagvqdn_5.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpszxioime.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpszxioime.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp87o_5mr8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmps6yax3sr.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmps6yax3sr.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmps6yax3sr.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmps6yax3sr.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0iagcy9m.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp0iagcy9m.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp0iagcy9m.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd1odws3w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpd1odws3w.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpd1odws3w.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6cddafxq.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp6cddafxq.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp6cddafxq.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp6cddafxq.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmp6cddafxq.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmp6cddafxq.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd1odws3w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpd1odws3w.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpd1odws3w.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpszxioime.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpszxioime.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp40zhxsgm.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp87o_5mr8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppuf9sfff.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmppuf9sfff.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmppuf9sfff.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmppuf9sfff.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpceqzazsc.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpceqzazsc.py\", line 16, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpceqzazsc.py\", line 11, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpceqzazsc.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpceqzazsc.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpceqzazsc.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7losvjsj.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp7losvjsj.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp7losvjsj.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplifls6bg.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmplifls6bg.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmplifls6bg.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmplifls6bg.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmplifls6bg.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmplifls6bg.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum+1) if all([num % int(digit) == 0 for digit in str(num)])]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5mth5a1r.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp5mth5a1r.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp5mth5a1r.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp5mth5a1r.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum+1) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp5mth5a1r.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum+1) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp5mth5a1r.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum+1) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(d) == 0 for d in str(i))]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnqkzhhci.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpnqkzhhci.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpnqkzhhci.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpnqkzhhci.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(d) == 0 for d in str(i))]\n  File \"/tmp/tmpnqkzhhci.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(d) == 0 for d in str(i))]\n  File \"/tmp/tmpnqkzhhci.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(d) == 0 for d in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum+1) if all(i % int(d) == 0 for d in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpkeb1dw6_.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpkeb1dw6_.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum+1) if all(i % int(d) == 0 for d in str(i))]\n  File \"/tmp/tmpkeb1dw6_.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum+1) if all(i % int(d) == 0 for d in str(i))]\n  File \"/tmp/tmpkeb1dw6_.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum+1) if all(i % int(d) == 0 for d in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0iagcy9m.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp0iagcy9m.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp0iagcy9m.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjl8rhume.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpjl8rhume.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpjl8rhume.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpjl8rhume.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all([i % int(j) == 0 for j in str(i)])]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpkvvpn77z.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpkvvpn77z.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpkvvpn77z.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpkvvpn77z.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmpkvvpn77z.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmpkvvpn77z.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqs7pbgrw.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpqs7pbgrw.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpqs7pbgrw.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjeywy80u.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpjeywy80u.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpjeywy80u.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpjeywy80u.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqs7pbgrw.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpqs7pbgrw.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpqs7pbgrw.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpszxioime.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpszxioime.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmptg5xq8w9.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmptg5xq8w9.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmptg5xq8w9.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmptg5xq8w9.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmptg5xq8w9.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmptg5xq8w9.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjl8rhume.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpjl8rhume.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpjl8rhume.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpjl8rhume.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpji1x43so.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpji1x43so.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpji1x43so.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpji1x43so.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpji1x43so.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpji1x43so.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpuf6hc4j0.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpuf6hc4j0.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\n  File \"/tmp/tmpuf6hc4j0.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\n  File \"/tmp/tmpuf6hc4j0.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppuf9sfff.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmppuf9sfff.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmppuf9sfff.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmppuf9sfff.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpw7ra1ogv.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpw7ra1ogv.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpw7ra1ogv.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpw7ra1ogv.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpw7ra1ogv.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpw7ra1ogv.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd1odws3w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpd1odws3w.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpd1odws3w.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpszxioime.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpszxioime.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsb6af8ew.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpsb6af8ew.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpsb6af8ew.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpsb6af8ew.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmpsb6af8ew.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmpsb6af8ew.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd1odws3w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpd1odws3w.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpd1odws3w.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpagvqdn_5.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpagvqdn_5.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpagvqdn_5.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpp7s77usd.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpp7s77usd.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpp7s77usd.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpp7s77usd.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\n  File \"/tmp/tmpp7s77usd.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\n  File \"/tmp/tmpp7s77usd.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum+1) if all([i % int(j) == 0 for j in str(i)])]\n\nprint(divisible_by_digits(1,100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn6rywrhg.py\", line 9, in <module>\n    print(divisible_by_digits(1,100))\n  File \"/tmp/tmpn6rywrhg.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum+1) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmpn6rywrhg.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum+1) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmpn6rywrhg.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum+1) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp40zhxsgm.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7losvjsj.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp7losvjsj.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp7losvjsj.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpagvqdn_5.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpagvqdn_5.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpagvqdn_5.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd1odws3w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpd1odws3w.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpd1odws3w.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmps6yax3sr.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmps6yax3sr.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmps6yax3sr.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmps6yax3sr.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd1odws3w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpd1odws3w.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpd1odws3w.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpp7s77usd.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpp7s77usd.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpp7s77usd.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpp7s77usd.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\n  File \"/tmp/tmpp7s77usd.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\n  File \"/tmp/tmpp7s77usd.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all([x % int(y) == 0 for y in str(x)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmps6yax3sr.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmps6yax3sr.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmps6yax3sr.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmps6yax3sr.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum + 1) if all(x % int(d) == 0 for d in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0m2g7kol.py\", line 10, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp0m2g7kol.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp0m2g7kol.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp0m2g7kol.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpd1odws3w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpd1odws3w.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpd1odws3w.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpd1odws3w.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7losvjsj.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp7losvjsj.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp7losvjsj.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1,100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgsqxgbmy.py\", line 9, in <module>\n    print(divisible_by_digits(1,100))\n  File \"/tmp/tmpgsqxgbmy.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpgsqxgbmy.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpgsqxgbmy.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum+1) if all(i % int(d) == 0 for d in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpkeb1dw6_.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpkeb1dw6_.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum+1) if all(i % int(d) == 0 for d in str(i))]\n  File \"/tmp/tmpkeb1dw6_.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum+1) if all(i % int(d) == 0 for d in str(i))]\n  File \"/tmp/tmpkeb1dw6_.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum+1) if all(i % int(d) == 0 for d in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpszxioime.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpszxioime.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpszxioime.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjl8rhume.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpjl8rhume.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpjl8rhume.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpjl8rhume.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpji1x43so.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpji1x43so.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpji1x43so.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpji1x43so.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpji1x43so.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpji1x43so.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(d) == 0 for d in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4hcoj7ax.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp4hcoj7ax.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(d) == 0 for d in str(i))]\n  File \"/tmp/tmp4hcoj7ax.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(d) == 0 for d in str(i))]\n  File \"/tmp/tmp4hcoj7ax.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(d) == 0 for d in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpagvqdn_5.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpagvqdn_5.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpagvqdn_5.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpoxzrxp7j.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpoxzrxp7j.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpoxzrxp7j.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpoxzrxp7j.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmpoxzrxp7j.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmpoxzrxp7j.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum+1) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk7zal81j.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpk7zal81j.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum+1) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmpk7zal81j.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum+1) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmpk7zal81j.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum+1) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0iagcy9m.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp0iagcy9m.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp0iagcy9m.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpagvqdn_5.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpagvqdn_5.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpagvqdn_5.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpagvqdn_5.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6r8sb_t8.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmp6r8sb_t8.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp6r8sb_t8.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp6r8sb_t8.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmp6r8sb_t8.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmp6r8sb_t8.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqs7pbgrw.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpqs7pbgrw.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpqs7pbgrw.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpqs7pbgrw.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpx8k74wyc.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpx8k74wyc.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpx8k74wyc.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpx8k74wyc.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpx8k74wyc.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpx8k74wyc.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprxedpcan.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmprxedpcan.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmprxedpcan.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\n  File \"/tmp/tmprxedpcan.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(d) == 0 for d in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return list(filter(lambda x: all([x % int(i) == 0 for i in str(x)]), range(startnum, endnum)))\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp33d7hvgy.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp33d7hvgy.py\", line 7, in divisible_by_digits\n    return list(filter(lambda x: all([x % int(i) == 0 for i in str(x)]), range(startnum, endnum)))\n  File \"/tmp/tmp33d7hvgy.py\", line 7, in <lambda>\n    return list(filter(lambda x: all([x % int(i) == 0 for i in str(x)]), range(startnum, endnum)))\n  File \"/tmp/tmp33d7hvgy.py\", line 7, in <listcomp>\n    return list(filter(lambda x: all([x % int(i) == 0 for i in str(x)]), range(startnum, endnum)))\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7dyz2uk8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmp7dyz2uk8.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppuf9sfff.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmppuf9sfff.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmppuf9sfff.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmppuf9sfff.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjl8rhume.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpjl8rhume.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpjl8rhume.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpjl8rhume.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpx8k74wyc.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpx8k74wyc.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpx8k74wyc.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpx8k74wyc.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpx8k74wyc.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\n  File \"/tmp/tmpx8k74wyc.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum+1) if all(i % int(j) == 0 for j in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0iagcy9m.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp0iagcy9m.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp0iagcy9m.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp0iagcy9m.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc_m86q46.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpc_m86q46.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpc_m86q46.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpcq9in6gk.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpcq9in6gk.py\", line 15, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpcq9in6gk.py\", line 10, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpcq9in6gk.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpcq9in6gk.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmpcq9in6gk.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum + 1) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [x for x in range(startnum, endnum + 1) if all(x % int(y) == 0 for y in str(x))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyf4mo5i9.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmpyf4mo5i9.py\", line 7, in divisible_by_digits\n    return [x for x in range(startnum, endnum + 1) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpyf4mo5i9.py\", line 7, in <listcomp>\n    return [x for x in range(startnum, endnum + 1) if all(x % int(y) == 0 for y in str(x))]\n  File \"/tmp/tmpyf4mo5i9.py\", line 7, in <genexpr>\n    return [x for x in range(startnum, endnum + 1) if all(x % int(y) == 0 for y in str(x))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all(i % int(x) == 0 for x in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpb3gvste4.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmpb3gvste4.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmpb3gvste4.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmpb3gvste4.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmpb3gvste4.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmpb3gvste4.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum) if all(i % int(x) == 0 for x in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1_er8r3w.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp1_er8r3w.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp1_er8r3w.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp1_er8r3w.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmp1_er8r3w.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmp1_er8r3w.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7losvjsj.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp7losvjsj.py\", line 14, in test_check\n    check(divisible_by_digits)\n  File \"/tmp/tmp7losvjsj.py\", line 9, in check\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp7losvjsj.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppuf9sfff.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmppuf9sfff.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmppuf9sfff.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\n  File \"/tmp/tmppuf9sfff.py\", line 7, in <genexpr>\n    return [i for i in range(startnum, endnum + 1) if all(i % int(x) == 0 for x in str(i))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3pi92p66.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp3pi92p66.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\n  File \"/tmp/tmp3pi92p66.py\", line 7, in <genexpr>\n    return [num for num in range(startnum, endnum) if all(num % int(digit) == 0 for digit in str(num))]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp40zhxsgm.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in divisible_by_digits\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\n  File \"/tmp/tmp40zhxsgm.py\", line 7, in <listcomp>\n    return [i for i in range(startnum, endnum) if all([i % int(j) == 0 for j in str(i)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef divisible_by_digits(startnum: int, endnum: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n\nprint(divisible_by_digits(1, 100))\ndef check(candidate):\n    assert candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n    assert candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n    assert candidate(20, 25) == [22, 24]\n\ndef test_check():\n    check(divisible_by_digits)\n\ntest_check()\n",
      "timestamp": 1665509882,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp87o_5mr8.py\", line 9, in <module>\n    print(divisible_by_digits(1, 100))\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in divisible_by_digits\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\n  File \"/tmp/tmp87o_5mr8.py\", line 7, in <listcomp>\n    return [num for num in range(startnum, endnum) if all([num % int(digit) == 0 for digit in str(num)])]\nZeroDivisionError: integer division or modulo by zero\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
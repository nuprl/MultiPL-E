{
  "name": "mbpp_459_remove_uppercase",
  "language": "py",
  "prompt": "def remove_uppercase(str1: str) -> str:\n    \"\"\"\n\tWrite a function to remove uppercase substrings from a given string.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_459_remove_uppercase.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate('cAstyoUrFavoRitETVshoWs') == 'cstyoravoitshos'\n    assert candidate('wAtchTheinTernEtrAdIo') == 'wtchheinerntrdo'\n    assert candidate('VoicESeaRchAndreComMendaTionS') == 'oiceachndreomendaion'\n\ndef test_check():\n    check(remove_uppercase)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n\nprint(remove_uppercase(\"Hello World\"))\n\n",
    "    return str1.replace(\" \", \"\").lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.replace(\"A\", \"\").replace(\"B\", \"\").replace(\"C\", \"\").replace(\"D\", \"\").replace(\"E\", \"\").replace(\"F\", \"\").replace(\"G\", \"\").replace(\"H\", \"\").replace(\"I\", \"\").replace(\"J\", \"\").replace(\"K\", \"\").replace(\"L\", \"\").replace(\"M\", \"\").replace(\"N\", \"\").replace(\"O\", \"\").replace(\"P\", \"\").replace(\"Q\", \"\").replace(\"R\", \"\").replace(\"S\", \"\").replace(\"T\", \"\").replace(\"U\", \"\").replace(\"V\", \"\").replace(\"W\", \"\").replace(\"X\", \"\").replace(\"Y\", \"\").replace(\"Z\", \"\")\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.replace(str1, str1.lower())\n\n",
    "    return \"\".join(c for c in str1 if c.islower())\n\n",
    "    return \"\".join(list(filter(lambda x: x.islower(), str1)))\n\n",
    "    return re.sub(r\"[A-Z]+\", \"\", str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join(c for c in str1 if c.islower())\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join([i for i in str1 if i.islower()])\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return ''.join(c for c in str1 if c.islower())\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join([i for i in str1 if i.islower()])\n\n",
    "    return \"\".join(c for c in str1 if not c.isupper())\n\n",
    "    return re.sub(r'[A-Z]+', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join(c for c in str1 if not c.isupper())\n\n",
    "    return str1.replace(\"A\", \"\").replace(\"B\", \"\").replace(\"C\", \"\").replace(\"D\", \"\").replace(\"E\", \"\").replace(\"F\", \"\").replace(\"G\", \"\").replace(\"H\", \"\").replace(\"I\", \"\").replace(\"J\", \"\").replace(\"K\", \"\").replace(\"L\", \"\").replace(\"M\", \"\").replace(\"N\", \"\").replace(\"O\", \"\").replace(\"P\", \"\").replace(\"Q\", \"\").replace(\"R\", \"\").replace(\"S\", \"\").replace(\"T\", \"\").replace(\"U\", \"\").replace(\"V\", \"\").replace(\"W\", \"\").replace(\"X\", \"\").replace(\"Y\", \"\").replace(\"Z\", \"\")\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]+', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.replace(\"A\", \"\").replace(\"B\", \"\").replace(\"C\", \"\").replace(\"D\", \"\").replace(\"E\", \"\").replace(\"F\", \"\").replace(\"G\", \"\").replace(\"H\", \"\").replace(\"I\", \"\").replace(\"J\", \"\").replace(\"K\", \"\").replace(\"L\", \"\").replace(\"M\", \"\").replace(\"N\", \"\").replace(\"O\", \"\").replace(\"P\", \"\").replace(\"Q\", \"\").replace(\"R\", \"\").replace(\"S\", \"\").replace(\"T\", \"\").replace(\"U\", \"\").replace(\"V\", \"\").replace(\"W\", \"\").replace(\"X\", \"\").replace(\"Y\", \"\").replace(\"Z\", \"\")\n",
    "    return re.sub(r'[A-Z]+', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join([i for i in str1 if not i.isupper()])\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join([x for x in str1 if x.islower()])\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]+', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]+', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join(c for c in str1 if c.islower())\n\n",
    "    return re.sub(r\"[A-Z]+\", \"\", str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join(filter(lambda x: x.islower(), str1))\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join(c for c in str1 if c.islower())\n\n",
    "    return str1.replace(str1[0], \"\")\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.replace(str1[:str1.find(str1.upper())], '')\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]+', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.replace(\"A\", \"\").replace(\"B\", \"\").replace(\"C\", \"\").replace(\"D\", \"\").replace(\"E\", \"\").replace(\"F\", \"\").replace(\"G\", \"\").replace(\"H\", \"\").replace(\"I\", \"\").replace(\"J\", \"\").replace(\"K\", \"\").replace(\"L\", \"\").replace(\"M\", \"\").replace(\"N\", \"\").replace(\"O\", \"\").replace(\"P\", \"\").replace(\"Q\", \"\").replace(\"R\", \"\").replace(\"S\", \"\").replace(\"T\", \"\").replace(\"U\", \"\").replace(\"V\", \"\").replace(\"W\", \"\").replace(\"X\", \"\").replace(\"Y\", \"\").replace(\"Z\", \"\")\n\n",
    "    return str1.lower()\n\n",
    "    return ''.join([char for char in str1 if char.islower()])\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.replace(str1[str1.isupper()], \"\")\n\n",
    "    return \"\".join(i for i in str1 if i.islower())\n\n",
    "    return \"\".join(c for c in str1 if c.islower())\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.replace(\"A\", \"\").replace(\"B\", \"\").replace(\"C\", \"\").replace(\"D\", \"\").replace(\"E\", \"\").replace(\"F\",\n                                                                                                           \"\").replace(\n        \"G\", \"\").replace(\"H\", \"\").replace(\"I\", \"\").replace(\"J\", \"\").replace(\"K\", \"\").replace(\"L\", \"\").replace(\"M\",\n                                                                                                           \"\").replace(\n        \"N\", \"\").replace(\"O\", \"\").replace(\"P\", \"\").replace(\"Q\", \"\").replace(\"R\", \"\").replace(\"S\", \"\").replace(\"T\",\n                                                                                                           \"\").replace(\n        \"U\", \"\").replace(\"V\", \"\").replace(\"W\", \"\").replace(\"X\", \"\").replace(\"Y\", \"\").replace(\"Z\", \"\")\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join(i for i in str1 if i.islower())\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.replace(str1[:1], \"\")\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]+', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.replace(\"A\", \"\").replace(\"B\", \"\").replace(\"C\", \"\").replace(\"D\", \"\").replace(\"E\", \"\").replace(\"F\", \"\").replace(\"G\", \"\").replace(\"H\", \"\").replace(\"I\", \"\").replace(\"J\", \"\").replace(\"K\", \"\").replace(\"L\", \"\").replace(\"M\", \"\").replace(\"N\", \"\").replace(\"O\", \"\").replace(\"P\", \"\").replace(\"Q\", \"\").replace(\"R\", \"\").replace(\"S\", \"\").replace(\"T\", \"\").replace(\"U\", \"\").replace(\"V\", \"\").replace(\"W\", \"\").replace(\"X\", \"\").replace(\"Y\", \"\").replace(\"Z\", \"\")\n\n",
    "    return str1.replace(str1, str1.lower())\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.replace(\"A\", \"\").replace(\"B\", \"\").replace(\"C\", \"\").replace(\"D\", \"\").replace(\"E\", \"\").replace(\"F\", \"\").replace(\"G\", \"\").replace(\"H\", \"\").replace(\"I\", \"\").replace(\"J\", \"\").replace(\"K\", \"\").replace(\"L\", \"\").replace(\"M\", \"\").replace(\"N\", \"\").replace(\"O\", \"\").replace(\"P\", \"\").replace(\"Q\", \"\").replace(\"R\", \"\").replace(\"S\", \"\").replace(\"T\", \"\").replace(\"U\", \"\").replace(\"V\", \"\").replace(\"W\", \"\").replace(\"X\", \"\").replace(\"Y\", \"\").replace(\"Z\", \"\")\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]+', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]+', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]', \"\", str1)\n\n",
    "    return ''.join(c for c in str1 if c.islower())\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r\"[A-Z]+\", \"\", str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join(i for i in str1 if i.islower())\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]+', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return re.sub(r'[A-Z]+', '', str1)\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return str1.lower()\n\n",
    "    return \"\".join(c for c in str1 if c.islower())\n\n",
    "    return str1.lower()\n\n"
  ]
}
{
  "name": "mbpp_750_add_tuple",
  "language": "py",
  "prompt": "from typing import List, Tuple\n\ndef add_tuple(test_list: List[int], test_tup: Tuple[int]) -> List[int]:\n    \"\"\"\n\tWrite a function to add the given tuple to the given list.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_750_add_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([5, 6, 7], (9, 10)) == [5, 6, 7, 9, 10]\n    assert candidate([6, 7, 8], (10, 11)) == [6, 7, 8, 10, 11]\n    assert candidate([7, 8, 9], (11, 12)) == [7, 8, 9, 11, 12]\n\ndef test_check():\n    check(add_tuple)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n\n",
    "    test_list.append(test_tup)\n    return test_list\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n",
    "    return test_list + list(test_tup)\n"
  ]
}
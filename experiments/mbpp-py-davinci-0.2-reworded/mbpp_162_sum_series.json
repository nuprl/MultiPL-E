{
  "name": "mbpp_162_sum_series",
  "language": "py",
  "prompt": "def sum_series(n: int) -> int:\n    \"\"\"\n\tWrite a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(6) == 12\n    assert candidate(10) == 30\n    assert candidate(9) == 25\n\ndef test_check():\n    check(sum_series)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return n + sum_series(n - 2) if n > 0 else 0\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return n * (n + 1) // 2 - n // 2 * (n // 2 + 1)\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    if n == 0:\n        return 0\n    else:\n        return n + sum_series(n - 2)\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return n + sum_series(n - 2) if n > 0 else 0\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return n + sum_series(n - 2)\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return n * (n + 1) // 2 - n * (n // 2)\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return n + sum_series(n - 2) if n > 0 else 0\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    if n % 2 == 0:\n        return n + sum_series(n - 2)\n    else:\n        return n\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    if n < 0:\n        raise ValueError(\"n must be a positive integer\")\n    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    if n <= 0:\n        return 0\n    return n + sum_series(n - 2)\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    if n < 0:\n        return 0\n    return n + sum_series(n - 2)\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(range(n, 0, -2))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - i * 2 for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    if n <= 0:\n        return 0\n    return n + sum_series(n - 2)\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(range(n, 0, -2))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    if n % 2 == 0:\n        return n + sum_series(n - 2)\n    else:\n        return n\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    if n == 0:\n        return 0\n    return n + sum_series(n - 2)\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    if n % 2 == 0:\n        return n + sum_series(n - 2)\n    else:\n        return n\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(range(n, 0, -2))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    if n % 2 == 0:\n        return sum_series(n - 1) + n - 1\n    return n\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum([n - 2 * i for i in range(n // 2 + 1)])\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    if n <= 0:\n        return 0\n    else:\n        return n + sum_series(n - 2)\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n",
    "    return sum(n - 2 * i for i in range(n // 2 + 1))\n\n"
  ]
}
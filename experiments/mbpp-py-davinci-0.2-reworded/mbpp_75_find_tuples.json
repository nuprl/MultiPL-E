{
  "name": "mbpp_75_find_tuples",
  "language": "py",
  "prompt": "from typing import List, Tuple\n\ndef find_tuples(test_list: List[Tuple[int]], K: int) -> List[Tuple[int]]:\n    \"\"\"\n\tWrite a function to find tuples which have all elements divisible by k from the given list of tuples.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_75_find_tuples.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == [(6, 24, 12)]\n    assert candidate([(5, 25, 30), (4, 2, 3), (7, 8, 9)], 5) == [(5, 25, 30)]\n    assert candidate([(7, 9, 16), (8, 16, 4), (19, 17, 18)], 4) == [(8, 16, 4)]\n\ndef test_check():\n    check(find_tuples)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tuple for tuple in test_list if all(value % K == 0 for value in tuple)]\n",
    "    return [t for t in test_list if all(x % K == 0 for x in t)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tuple for tuple in test_list if all(elem % K == 0 for elem in tuple)]\n",
    "    return [tuple for tuple in test_list if all(elem % K == 0 for elem in tuple)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tuple(i for i in tup if i % K == 0) for tup in test_list]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]",
    "    return [tuple for tuple in test_list if all(elem % K == 0 for elem in tuple)]\n",
    "    return [tuple for tuple in test_list if all(item % K == 0 for item in tuple)]\n",
    "    return [tuple(x for x in t if x % K == 0) for t in test_list]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tup for tup in test_list if all(num % K == 0 for num in tup)]",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple_ for tuple_ in test_list if all(num % K == 0 for num in tuple_)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tuple(x for x in t if x % K == 0) for t in test_list]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tuple for tuple in test_list if all(element % K == 0 for element in tuple)]\n",
    "    return [tuple for tuple in test_list if all(map(lambda x: x % K == 0, tuple))]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n\ntest_list = [(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)]\nK = 2\nprint(find_tuples(test_list, K))",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tup for tup in test_list if all(i % K == 0 for i in tup)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tup for tup in test_list if all(i % K == 0 for i in tup)]",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [t for t in test_list if all(i % K == 0 for i in t)]",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n\n",
    "    return [t for t in test_list if all(x % K == 0 for x in t)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tuple for tuple in test_list if all(elem % K == 0 for elem in tuple)]",
    "    return [tup for tup in test_list if all(i % K == 0 for i in tup)]\n",
    "    return [t for t in test_list if all(x % K == 0 for x in t)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [t for t in test_list if all([x % K == 0 for x in t])]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n\n",
    "    return [tuple for tuple in test_list if all(map(lambda x: x % K == 0, tuple))]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(map(lambda x: x % K == 0, tuple))]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [t for t in test_list if all(map(lambda x: x % K == 0, t))]\n",
    "    return [tuple for tuple in test_list if all(item % K == 0 for item in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(element % K == 0 for element in tuple)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tup for tup in test_list if all(num % K == 0 for num in tup)]\n\nprint(find_tuples([(1, 2, 3), (4, 5, 6), (7, 8, 9)], 3))\nprint(find_tuples([(1, 2, 3), (4, 5, 6), (7, 8, 9)], 2))\nprint(find_tuples([(1, 2, 3), (4, 5, 6), (7, 8, 9)], 4))",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [t for t in test_list if all(x % K == 0 for x in t)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [tup for tup in test_list if all(elem % K == 0 for elem in tup)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(num % K == 0 for num in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple(x for x in t if x % K == 0) for t in test_list]",
    "    return [tuple for tuple in test_list if all(item % K == 0 for item in tuple)]\n",
    "    return [tuple(i for i in t if i % K == 0) for t in test_list]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tup for tup in test_list if all(i % K == 0 for i in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(num % K == 0 for num in tup)]\n",
    "    return [tup for tup in test_list if all(i % K == 0 for i in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(num % K == 0 for num in tup)]\n\n",
    "    return [tuple(x for x in tup if x % K == 0) for tup in test_list]\n",
    "    return [tup for tup in test_list if all(item % K == 0 for item in tup)]\n",
    "    return [tup for tup in test_list if sum(tup) % K == 0]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tuple for tuple in test_list if all([x % K == 0 for x in tuple])]\n",
    "    return [tuple for tuple in test_list if all(element % K == 0 for element in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(item % K == 0 for item in tuple)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tuple for tuple in test_list if all(item % K == 0 for item in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n\n",
    "    return [tuple for tuple in test_list if all(item % K == 0 for item in tuple)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n\n",
    "    return [tup for tup in test_list if all(i % K == 0 for i in tup)]\n",
    "    return [tup for tup in test_list if all(elem % K == 0 for elem in tup)]\n",
    "    return [tuple_ for tuple_ in test_list if all(element % K == 0 for element in tuple_)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n\n",
    "    return [tuple for tuple in test_list if all(map(lambda x: x % K == 0, tuple))]",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [tup for tup in test_list if all(num % K == 0 for num in tup)]\n",
    "    return [t for t in test_list if all(x % K == 0 for x in t)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [t for t in test_list if all(x % K == 0 for x in t)]\n",
    "    return [tuple for tuple in test_list if all(element % K == 0 for element in tuple)]\n\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(i % K == 0 for i in tup)]\n",
    "    return [tuple for tuple in test_list if all(elem % K == 0 for elem in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(i % K == 0 for i in tup)]\n\n",
    "    return [t for t in test_list if all(x % K == 0 for x in t)]\n",
    "    return [tup for tup in test_list if all(i % K == 0 for i in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple(i for i in t if i % K == 0) for t in test_list]\n",
    "    return [tuple for tuple in test_list if all([x % K == 0 for x in tuple])]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n\n",
    "    return [tuple for tuple in test_list if all(map(lambda x: x % K == 0, tuple))]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [tup for tup in test_list if all(map(lambda x: x % K == 0, tup))]\n",
    "    return [tuple(x for x in t if x % K == 0) for t in test_list]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(i % K == 0 for i in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return list(filter(lambda x: all(map(lambda y: y % K == 0, x)), test_list))\n\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n",
    "    return [tuple for tuple in test_list if all(i % K == 0 for i in tuple)]\n\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(x % K == 0 for x in tuple)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n\n",
    "    return [tuple for tuple in test_list if all(elem % K == 0 for elem in tuple)]\n",
    "    return [t for t in test_list if all(x % K == 0 for x in t)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n",
    "    return [t for t in test_list if all(x % K == 0 for x in t)]\n",
    "    return [tuple for tuple in test_list if all(map(lambda x: x % K == 0, tuple))]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]\n",
    "    return [tuple for tuple in test_list if all(element % K == 0 for element in tuple)]\n",
    "    return [tup for tup in test_list if all(num % K == 0 for num in tup)]\n",
    "    return [tup for tup in test_list if all(x % K == 0 for x in tup)]",
    "    return [tuple for tuple in test_list if all(num % K == 0 for num in tuple)]\n"
  ]
}
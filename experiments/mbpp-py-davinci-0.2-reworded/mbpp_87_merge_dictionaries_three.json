{
  "name": "mbpp_87_merge_dictionaries_three",
  "language": "py",
  "prompt": "from typing import Dict\n\ndef merge_dictionaries_three(dict1: Dict[str, str], dict2: Dict[str, str], dict3: Dict[str, str]) -> Dict[str, str]:\n    \"\"\"\n\tWrite a function to merge three dictionaries into a single dictionary.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_87_merge_dictionaries_three.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate({ 'R': 'Red', 'B': 'Black', 'P': 'Pink' }, { 'G': 'Green', 'W': 'White' }, { 'O': 'Orange', 'W': 'White', 'B': 'Black' }) == { 'B': 'Black', 'R': 'Red', 'P': 'Pink', 'G': 'Green', 'W': 'White', 'O': 'Orange' }\n    assert candidate({ 'R': 'Red', 'B': 'Black', 'P': 'Pink' }, { 'G': 'Green', 'W': 'White' }, { 'L': 'lavender', 'B': 'Blue' }) == { 'W': 'White', 'P': 'Pink', 'B': 'Black', 'R': 'Red', 'G': 'Green', 'L': 'lavender' }\n    assert candidate({ 'R': 'Red', 'B': 'Black', 'P': 'Pink' }, { 'L': 'lavender', 'B': 'Blue' }, { 'G': 'Green', 'W': 'White' }) == { 'B': 'Black', 'P': 'Pink', 'R': 'Red', 'G': 'Green', 'L': 'lavender', 'W': 'White' }\n\ndef test_check():\n    check(merge_dictionaries_three)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}\n\nprint(merge_dictionaries_three({'a': 1, 'b': 2}, {'c': 3}, {'d': 4, 'e': 5}))",
    "    return {**dict1, **dict2, **dict3}",
    "    return {**dict1, **dict2, **dict3}\n\nprint(merge_dictionaries_three({'a': 1, 'b': 2}, {'c': 3, 'd': 4}, {'e': 5, 'f': 6}))",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}\n",
    "    return {**dict1, **dict2, **dict3}\n\nprint(merge_dictionaries_three({'a': 1, 'b': 2}, {'c': 3}, {'d': 4, 'e': 5}))"
  ]
}
{
  "name": "mbpp_450_extract_string",
  "language": "py",
  "prompt": "from typing import List\n\ndef extract_string(str: List[str], l: int) -> List[str]:\n    \"\"\"\n\tWrite a function to extract specified size of strings from a given list of string values.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_450_extract_string.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(['Python', 'list', 'exercises', 'practice', 'solution'], 8) == ['practice', 'solution']\n    assert candidate(['Python', 'list', 'exercises', 'practice', 'solution'], 6) == ['Python']\n    assert candidate(['Python', 'list', 'exercises', 'practice', 'solution'], 9) == ['exercises']\n\ndef test_check():\n    check(extract_string)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return [s for s in str if len(s) == l]\n",
    "    return [i for i in str if len(i) == l]\n\nprint(extract_string([\"this\", \"is\", \"a\", \"list\", \"of\", \"strings\"], 2))",
    "    return [s for s in str if len(s) == l]\n",
    "    return [i for i in str if len(i) == l]\n",
    "    return [s for s in str if len(s) == l]\n",
    "    return [s for s in str if len(s) == l]\n",
    "    return [s for s in str if len(s) == l]\n",
    "    return [i for i in str if len(i) == l]\n",
    "    return [s for s in str if len(s) == l]",
    "    return [i[:l] for i in str]\n\nprint(extract_string([\"abc\", \"def\", \"ghi\", \"jkl\"], 2))",
    "    return [s for s in str if len(s) == l]\n",
    "    return [i for i in str if len(i) == l]\n\nprint(extract_string(['abc', 'def', 'ghi', 'jkl', 'mno'], 3))",
    "    return [s for s in str if len(s) == l]\n\nprint(extract_string(['abc', 'def', 'ghi', 'jkl', 'mno'], 3))",
    "    return [s for s in str if len(s) == l]\n",
    "    return [s for s in str if len(s) == l]\n",
    "    return [s for s in str if len(s) == l]\n",
    "    return [i for i in str if len(i) == l]\n",
    "    return [s for s in str if len(s) == l]\n\nprint(extract_string([\"this\", \"is\", \"a\", \"collection\", \"of\", \"words\"], 3))",
    "    return [s for s in str if len(s) == l]\n",
    "    return [i for i in str if len(i) == l]\n\nprint(extract_string(['abc', 'def', 'ghi', 'jkl', 'mno'], 3))"
  ]
}
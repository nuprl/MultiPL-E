{
  "name": "mbpp_398_sum_of_digits",
  "language": "py",
  "prompt": "from typing import Any\n\ndef sum_of_digits(nums: Any) -> int:\n    \"\"\"\n\tWrite a function to compute the sum of digits of each number of a given list.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_398_sum_of_digits.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([10, 2, 56]) == 14\n    assert candidate([[10, 20, 4, 5, 'b', 70, 'a']]) == 19\n    assert candidate([10, 20, -4, 5, -70]) == 19\n\ndef test_check():\n    check(sum_of_digits)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if not isinstance(nums, list):\n        return None\n    return sum([sum([int(i) for i in str(j)]) for j in nums])",
    "    return sum(int(i) for i in str(nums))\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum(int(digit) for num in nums for digit in str(num))\n",
    "    if type(nums) == int:\n        return sum(map(int, str(nums)))\n    elif type(nums) == list:\n        return sum(map(sum_of_digits, nums))\n    else:\n        return 0\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(12345))\nprint(sum_of_digits(123456789))",
    "    if type(nums) == int:\n        return sum(map(int, str(nums)))\n    elif type(nums) == list:\n        return sum(map(sum_of_digits, nums))\n    else:\n        raise TypeError(\"Input must be a list or an integer\")",
    "    return sum(map(int, str(nums)))\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(i) for i in str(nums)])\n    else:\n        return 0\n",
    "    if not isinstance(nums, list):\n        raise TypeError(\"nums must be a list\")\n\n    if not all(isinstance(num, int) for num in nums):\n        raise TypeError(\"nums must be a list of integers\")\n\n    return sum(sum(map(int, str(num))) for num in nums)",
    "    return sum([int(i) for i in str(nums)])",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))",
    "    return sum(map(int, str(nums)))\n",
    "    return sum(map(int, str(nums)))\n",
    "    if type(nums) is list:\n        return sum([sum_of_digits(x) for x in nums])\n    elif type(nums) is int:\n        return sum([int(x) for x in str(nums)])\n    else:\n        return 0\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        raise TypeError(\"Input must be a list of integers\")\n",
    "    if type(nums) == list:\n        return sum([sum_of_digits(num) for num in nums])\n    elif type(nums) == int:\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        raise TypeError(\"Input must be a list or an integer.\")\n",
    "    return sum([int(x) for x in str(nums)])\n",
    "    if not isinstance(nums, list):\n        return \"Invalid input\"\n    return sum([sum([int(i) for i in str(num)]) for num in nums])\n\nprint(sum_of_digits([10, 20, 30]))\nprint(sum_of_digits([1, 2, 3]))\nprint(sum_of_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(sum_of_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]))\nprint(sum_of_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]))\nprint(sum_of_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]))\nprint(sum_of_digits([]))\nprint(sum_of_digits(1))\nprint(sum_",
    "    return sum(map(int, str(nums)))\n\n",
    "    if not isinstance(nums, list):\n        return 0\n    return sum(sum(int(digit) for digit in str(num)) for num in nums)\n\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))",
    "    if not isinstance(nums, list):\n        return None\n    return sum([sum([int(i) for i in str(num)]) for num in nums])\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n",
    "    return sum([int(i) for i in str(nums)])",
    "    if isinstance(nums, int):\n        return sum(int(i) for i in str(nums))\n    elif isinstance(nums, list):\n        return [sum(int(i) for i in str(num)) for num in nums]\n    else:\n        raise TypeError(\"Input must be an integer or a list of integers.\")\n\n",
    "    return sum(map(int, str(nums)))\n",
    "    if type(nums) == int:\n        return sum([int(i) for i in str(nums)])\n    elif type(nums) == list:\n        return [sum([int(i) for i in str(num)]) for num in nums]\n    else:\n        raise TypeError('Input must be a list or an integer')",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        raise TypeError(\"nums must be a list or an integer\")\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    if isinstance(nums, list):\n        return sum(sum_of_digits(num) for num in nums)\n    elif isinstance(nums, int):\n        return sum(int(digit) for digit in str(nums))\n    else:\n        return 0",
    "    if type(nums) == int:\n        return sum(map(int, str(nums)))\n    elif type(nums) == list:\n        return sum(map(sum_of_digits, nums))\n    else:\n        return 0",
    "    if type(nums) == int:\n        return sum([int(i) for i in str(nums)])\n    elif type(nums) == list:\n        return [sum_of_digits(i) for i in nums]\n    else:\n        return None",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n\n",
    "    return sum(map(int, str(nums)))\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum([int(x) for x in str(nums)])\n\n",
    "    return sum(map(int, str(nums)))\n",
    "    return sum(int(i) for i in str(nums))\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234567890123456789))\n",
    "    if isinstance(nums, list):\n        return sum(sum_of_digits(num) for num in nums)\n    elif isinstance(nums, int):\n        return sum(int(digit) for digit in str(nums))\n    else:\n        return 0",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n\n",
    "    if isinstance(nums, int):\n        return sum(map(int, str(nums)))\n    elif isinstance(nums, list):\n        return [sum(map(int, str(num))) for num in nums]\n    else:\n        return None",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum(int(i) for i in str(nums))\n",
    "    return sum([int(i) for i in str(nums)])\n\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum(map(int, str(nums)))\n",
    "    if isinstance(nums, list):\n        return sum(sum_of_digits(num) for num in nums)\n    elif isinstance(nums, int):\n        return sum(map(int, str(nums)))\n    else:\n        raise TypeError(\"Input must be a list or integer\")",
    "    return sum(map(int, str(nums)))\n\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(1234))\nprint(sum_of_digits(12345))\nprint(sum_of_digits(123456))\nprint(sum_of_digits(1234567))\nprint(sum_of_digits(12345678))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234567890))\nprint(sum_of_digits(12345678901))\nprint(sum_of_digits(123456789012))\nprint(sum_of_digits(1234567890123))\nprint(sum_of_digits(12345678901234))\nprint(sum_of_digits(123456789012345))\nprint(sum_of_digits(1234567890123456))\nprint(sum_of_digits(12345678901234567))\nprint(sum_of_digits(123456789012345678))\nprint(sum_of_digits(1234567890123456789))\nprint(sum_of_digits(12345678901234567890))\nprint(sum_of_digits(123456789012345678901))\nprint(sum_of_digits(1234567890123456789012))\nprint(sum_of_digits(12345678901234567890123))\nprint(sum_of_digits(123456789012345678901234))\nprint(sum_of_digits(1234567890123456789012345))\nprint(sum_of_digits(12345678901234567890123456))\nprint(sum_of_digits(123456789012345678901234567))\nprint(sum_of_digits(1234567890123456789012345678))\nprint(sum_of_digits(12345678901234567890123456789",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum(sum(int(i) for i in str(num)) for num in nums)\n",
    "    if type(nums) == list:\n        return sum([sum_of_digits(num) for num in nums])\n    elif type(nums) == int:\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0",
    "    return sum([int(i) for i in str(nums)])",
    "    return sum([int(x) for x in str(nums)])\n",
    "    if type(nums) == list:\n        return sum([sum_of_digits(num) for num in nums])\n    elif type(nums) == int:\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n",
    "    return sum(int(num) for num in str(nums))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(12345))\nprint(sum_of_digits(123456789))",
    "    return sum(map(int, str(nums)))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(123456789012345678901234567890))",
    "    if isinstance(nums, int):\n        return sum(map(int, str(nums)))\n    elif isinstance(nums, list):\n        return sum(map(sum_of_digits, nums))\n    else:\n        return 0",
    "    return sum([int(i) for i in str(nums)])\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0",
    "    if type(nums) == int:\n        return sum(map(int, str(nums)))\n    elif type(nums) == list:\n        return sum(map(sum_of_digits, nums))\n    else:\n        return 0\n",
    "    return sum(map(int, str(nums)))\n",
    "    if type(nums) == int:\n        return sum(int(i) for i in str(nums))\n    elif type(nums) == list:\n        return [sum(int(i) for i in str(num)) for num in nums]\n    else:\n        return \"Please enter a list or a number\"",
    "    return sum(map(int, str(nums)))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(12345))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(1234567890123456789012345678901234567890))\nprint(sum_of_digits(12345678901234567890123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890123456789012345678901234567890))\nprint(sum_of_digits(1234567890123456789012345678901234567890123456789012345678901234567890))\nprint(sum_of_digits(12345678901234567890123456789012345678901234567890123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890))\nprint(sum_of_digits(1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890))\nprint(sum_of_digits(12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890))\nprint(sum_of_digits(12345678901234567890123456789012345678901234567890123456789",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234567890123456789))",
    "    return sum(int(i) for i in str(nums))",
    "    return sum(map(int, str(nums)))\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum([int(x) for x in str(nums)])\n",
    "    if type(nums) == int:\n        return sum(map(int, str(nums)))\n    elif type(nums) == list:\n        return sum(map(sum_of_digits, nums))\n    else:\n        return 0",
    "    return sum(int(i) for i in str(nums))",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(1234))\nprint(sum_of_digits(12345))\nprint(sum_of_digits(123456))\nprint(sum_of_digits(1234567))\nprint(sum_of_digits(12345678))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234567890))\nprint(sum_of_digits(12345678901))\nprint(sum_of_digits(123456789012))\nprint(sum_of_digits(1234567890123))\nprint(sum_of_digits(12345678901234))\nprint(sum_of_digits(123456789012345))\nprint(sum_of_digits(1234567890123456))\nprint(sum_of_digits(12345678901234567))\nprint(sum_of_digits(123456789012345678))\nprint(sum_of_digits(1234567890123456789))\nprint(sum_of_digits(12345678901234567890))\nprint(sum_of_digits(123456789012345678901))\nprint(sum_of_digits(1234567890123456789012))\nprint(sum_of_digits(12345678901234567890123))\nprint(sum_of_digits(123456789012345678901234))\nprint(sum_of_digits(1234567890123456789012345))\nprint(sum_of_digits(12345678901234567890123456))\nprint(sum_of_digits(123456789012345678901234567))\nprint(sum_of_digits(1234567890123456789012345678))\nprint(sum_of_digits(12345678901234567890123456789",
    "    return sum(map(int, str(nums)))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234567890123456789))\nprint(sum_of_digits(12345678901234567890123456789))",
    "    return sum([int(x) for x in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits
    "    if not isinstance(nums, list):\n        raise TypeError(\"nums must be a list\")\n    if not all(isinstance(num, int) for num in nums):\n        raise TypeError(\"nums must be a list of integers\")\n    return sum(sum(map(int, str(num))) for num in nums)",
    "    if isinstance(nums, int):\n        return sum([int(i) for i in str(nums)])\n    elif isinstance(nums, list):\n        return [sum([int(i) for i in str(num)]) for num in nums]\n    else:\n        return None\n\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0",
    "    return sum([int(i) for i in str(nums)])\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(x) for x in nums])\n    elif isinstance(nums, int):\n        return sum([int(x) for x in str(nums)])\n    else:\n        return 0\n",
    "    if not isinstance(nums, list):\n        raise TypeError(\"nums must be a list\")\n    return [sum(int(digit) for digit in str(num)) for num in nums]",
    "    return sum(map(int, str(nums)))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits
    "    return sum(map(int, str(nums)))\n\nprint(sum_of_digits([12, 34, 56]))",
    "    if not isinstance(nums, list):\n        return 0\n    return sum([sum_of_digits(x) for x in nums]) if isinstance(nums, list) else sum([int(x) for x in str(nums)])\n\n",
    "    if not isinstance(nums, list):\n        return 0\n    return sum([sum([int(i) for i in str(num)]) for num in nums])\n\nprint(sum_of_digits([10, 30, 45]))\nprint(sum_of_digits([1, 2, 3]))\nprint(sum_of_digits([]))\nprint(sum_of_digits(['a', 'b', 'c']))\nprint(sum_of_digits(['a', 'b', 'c', 'd', 'e', 'f']))\nprint(sum_of_digits(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']))\nprint(sum_of_digits(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']))\nprint(sum_of_digits(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', '",
    "    return sum([int(i) for i in str(nums)])",
    "    return sum(map(int, str(nums)))\n",
    "    return sum(int(i) for i in str(nums))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234567890123456789))",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum(int(digit) for num in nums for digit in str(num))\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(1234))\nprint(sum_of_digits(12345))\nprint(sum_of_digits(123456))\nprint(sum_of_digits(1234567))\nprint(sum_of_digits(12345678))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234567890))",
    "    return sum(int(x) for x in str(nums))\n\n",
    "    if not nums:\n        return 0\n    if isinstance(nums, int):\n        return sum(map(int, str(nums)))\n    if isinstance(nums, list):\n        return sum(map(sum_of_digits, nums))\n    return 0\n\n",
    "    return sum(map(int, str(nums)))\n",
    "    if type(nums) == list:\n        return sum([sum_of_digits(x) for x in nums])\n    elif type(nums) == int:\n        return sum([int(x) for x in str(nums)])\n    else:\n        return 0",
    "    return sum(int(digit) for num in nums for digit in str(num))\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))",
    "    return sum(int(x) for x in str(nums))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits
    "    if not isinstance(nums, list):\n        return None\n    return sum([sum([int(x) for x in str(num)]) for num in nums])\n",
    "    if not isinstance(nums, list):\n        return 0\n    return sum([sum([int(x) for x in str(num)]) for num in nums])\n",
    "    sum_of_digits = 0\n    for num in nums:\n        sum_of_digits += sum(int(digit) for digit in str(num))\n    return sum_of_digits\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234567890123456789))",
    "    return sum(int(i) for i in str(nums))\n",
    "    return sum(map(int, str(nums)))\n\n",
    "    return sum([int(i) for i in str(nums)])\n\n",
    "    if isinstance(nums, int):\n        return sum(map(int, str(nums)))\n    elif isinstance(nums, list):\n        return sum(map(sum_of_digits, nums))\n    else:\n        return 0\n",
    "    if type(nums) == list:\n        return sum([sum_of_digits(n) for n in nums])\n    elif type(nums) == int:\n        return sum([int(d) for d in str(nums)])\n    else:\n        return 0",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(n) for n in nums])\n    elif isinstance(nums, int):\n        return sum([int(d) for d in str(nums)])\n    else:\n        return 0\n",
    "    return sum(map(int, str(nums)))\n",
    "    if not isinstance(nums, list):\n        return 0\n    return sum([sum([int(x) for x in str(num)]) for num in nums])\n",
    "    if not isinstance(nums, list):\n        return \"Invalid input\"\n    if not nums:\n        return 0\n    return sum([int(i) for i in str(nums[0])]) + sum_of_digits(nums[1:])",
    "    return sum(int(i) for i in str(nums))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(1234))\nprint(sum_of_digits(12345))\nprint(sum_of_digits(123456))\nprint(sum_of_digits(1234567))\nprint(sum_of_digits(12345678))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234567890))\nprint(sum_of_digits(12345678901))\nprint(sum_of_digits(123456789012))\nprint(sum_of_digits(1234567890123))\nprint(sum_of_digits(12345678901234))\nprint(sum_of_digits(123456789012345))\nprint(sum_of_digits(1234567890123456))\nprint(sum_of_digits(12345678901234567))\nprint(sum_of_digits(123456789012345678))\nprint(sum_of_digits(1234567890123456789))\nprint(sum_of_digits(12345678901234567890))\nprint(sum_of_digits(123456789012345678901))\nprint(sum_of_digits(1234567890123456789012))\nprint(sum_of_digits(12345678901234567890123))\nprint(sum_of_digits(123456789012345678901234))\nprint(sum_of_digits(1234567890123456789012345))\nprint(sum_of_digits(12345678901234567890123456))\nprint(sum_of_digits(123456789012345678901234567))\nprint(sum_of_digits(1234567890123456789012345678))\nprint(sum_of_digits(12345678901234567890123456789",
    "    pass",
    "    return sum(map(int, str(nums)))\n",
    "    if isinstance(nums, int):\n        return sum(map(int, str(nums)))\n    elif isinstance(nums, list):\n        return sum(map(sum_of_digits, nums))\n    else:\n        return 0\n\n",
    "    return sum(int(i) for i in str(nums))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(123456789012345678901234567890))",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        raise TypeError(\"Input must be a list of integers\")\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum(map(int, str(nums)))",
    "    return sum([int(i) for i in str(nums)])\n",
    "    if type(nums) == list:\n        return sum([sum_of_digits(num) for num in nums])\n    elif type(nums) == int:\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        raise TypeError(\"Input must be a list or an integer\")\n",
    "    return sum(map(int, str(nums)))\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum(map(int, str(nums)))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits([1, 2, 3]))\nprint(sum_of_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(123456789012345678901234567890))\nprint(sum_of_digits(1234567890123456789012345",
    "    return sum(map(int, str(nums)))\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n",
    "    return sum(map(int, str(nums)))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234567890123456789))",
    "    return sum(int(digit) for num in nums for digit in str(num))\n",
    "    if not isinstance(nums, list):\n        return \"Invalid input\"\n    return [sum(int(digit) for digit in str(num)) for num in nums]\n\nprint(sum_of_digits([10, 20, 30]))\nprint(sum_of_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(sum_of_digits([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]))\nprint(sum_of_digits([]))\nprint(sum_of_digits(1))",
    "    if type(nums) != list:\n        return \"Invalid input\"\n    else:\n        sum_of_digits = 0\n        for num in nums:\n            if type(num) == int:\n                sum_of_digits += sum([int(digit) for digit in str(num)])\n            else:\n                return \"Invalid input\"\n        return sum_of_digits\n\nprint(sum_of_digits([1, 2, 3, 4]))\nprint(sum_of_digits([1, 2, 3, 4, \"a\"]))\nprint(sum_of_digits(\"a\"))",
    "    return sum(map(int, str(nums)))\n",
    "    if isinstance(nums, int):\n        return sum(map(int, str(nums)))\n    elif isinstance(nums, list):\n        return sum(map(sum_of_digits, nums))\n    else:\n        return 0\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    else:\n        return sum([int(digit) for digit in str(nums)])\n",
    "    if not isinstance(nums, list):\n        return 0\n    return sum([sum([int(x) for x in str(num)]) for num in nums])\n\n",
    "    return sum([int(i) for i in str(nums)])",
    "    if not isinstance(nums, list):\n        raise TypeError(\"nums must be a list\")\n    return sum([sum([int(i) for i in str(num)]) for num in nums])\n",
    "    if isinstance(nums, list):\n        return sum(sum_of_digits(num) for num in nums)\n    elif isinstance(nums, int):\n        return sum(int(digit) for digit in str(nums))\n    else:\n        raise TypeError(\"Input must be a list or an integer.\")",
    "    return sum(int(i) for i in str(nums))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum(map(int, str(nums)))\n",
    "    if isinstance(nums, int):\n        return sum(map(int, str(nums)))\n    elif isinstance(nums, list):\n        return sum(map(sum_of_digits, nums))\n    else:\n        return 0",
    "    return sum(int(i) for i in str(nums))\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(n) for n in nums])\n    elif isinstance(nums, int):\n        return sum([int(d) for d in str(nums)])\n    else:\n        raise ValueError('nums must be a list or an int')\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234567890123456789))",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum([int(x) for x in str(nums)])\n",
    "    return sum(map(int, str(nums)))\n",
    "    return sum([int(i) for i in str(nums)])\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))",
    "    if not isinstance(nums, list):\n        return None\n    return sum([sum([int(i) for i in str(num)]) for num in nums])\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n",
    "    return sum([int(x) for x in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(123.45))\nprint(sum_of_digits(123.456789))\nprint(sum_of_digits(123.456789e10))\nprint(sum_of_digits(123.456789e-10))\nprint(sum_of_digits(123.456789e+10))",
    "    return sum(int(i) for i in str(nums))\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0",
    "    if type(nums) == list:\n        return sum([sum_of_digits(num) for num in nums])\n    elif type(nums) == int:\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n",
    "    return sum(map(int, str(nums)))\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(1234567890123456789))",
    "    if type(nums) == int:\n        return sum(map(int, str(nums)))\n    elif type(nums) == list:\n        return sum(map(sum_of_digits, nums))\n    else:\n        return 0",
    "    return sum(int(x) for x in str(nums))\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(123456789))\nprint(sum_of_digits(123456789012345678901234567890))\n",
    "    if type(nums) == int:\n        return sum(map(int, str(nums)))\n    elif type(nums) == list:\n        return sum(map(sum_of_digits, nums))\n    else:\n        return 0\n\n",
    "    return sum([int(x) for x in str(nums)])",
    "    if nums == []:\n        return 0\n    else:\n        return sum_of_digits(nums[1:]) + sum(map(int, str(nums[0])))",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n",
    "    if isinstance(nums, list):\n        return sum([sum_of_digits(num) for num in nums])\n    elif isinstance(nums, int):\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))",
    "    return sum(int(i) for i in str(nums))\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(12345))\nprint(sum_of_digits(123456789))",
    "    return sum([int(i) for i in str(nums)])\n\n",
    "    return sum(map(lambda x: sum(map(int, str(x))), nums))",
    "    return sum(int(x) for x in str(nums))\n",
    "    return sum(map(int, str(nums)))\n",
    "    if isinstance(nums, int):\n        return sum(map(int, str(nums)))\n    elif isinstance(nums, list):\n        return [sum(map(int, str(num))) for num in nums]\n    else:\n        raise TypeError(\"Input must be a list or an integer\")",
    "    return sum(map(int, str(nums)))\n",
    "    return sum(int(i) for i in str(nums))\n",
    "    return sum(int(digit) for num in nums for digit in str(num))\n\n",
    "    return sum(int(x) for x in str(nums))\n",
    "    return sum(map(int, str(nums)))\n",
    "    return sum(int(x) for x in str(nums))\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))",
    "    if type(nums) == list:\n        return sum([sum_of_digits(num) for num in nums])\n    elif type(nums) == int:\n        return sum([int(digit) for digit in str(nums)])\n    else:\n        return 0\n",
    "    return sum([int(i) for i in str(nums)])\n\nprint(sum_of_digits(123))\nprint(sum_of_digits(12345))\nprint(sum_of_digits(123456789))"
  ]
}
{
  "name": "mbpp_4_heap_queue_largest",
  "language": "py",
  "prompt": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_4_heap_queue_largest.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "results": [
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for num in nums[n:]:\n        if num > heap[0]:\n            heapq.heappop(heap)\n            heapq.heappush(heap, num)\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl39prvg1.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpl39prvg1.py\", line 21, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpl39prvg1.py\", line 16, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpl39prvg1.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt2m_r2n8.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpt2m_r2n8.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpt2m_r2n8.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpt2m_r2n8.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = []\n    for num in nums:\n        if len(heap) < n:\n            heapq.heappush(heap, num)\n        else:\n            heapq.heappushpop(heap, num)\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvywqw4an.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvywqw4an.py\", line 21, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpvywqw4an.py\", line 16, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpvywqw4an.py\", line 10, in heap_queue_largest\n    heapq.heappush(heap, num)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    # create a max heap\n    heap = []\n    for num in nums:\n        heapq.heappush(heap, -num)\n\n    # pop the largest n elements\n    largest = []\n    for _ in range(n):\n        largest.append(-heapq.heappop(heap))\n\n    return largest\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpb7r0_uur.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmpb7r0_uur.py\", line 25, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpb7r0_uur.py\", line 20, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpb7r0_uur.py\", line 10, in heap_queue_largest\n    heapq.heappush(heap, -num)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = []\n    for num in nums:\n        heapq.heappush(heap, -num)\n    return [-heapq.heappop(heap) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_54ujsgr.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmp_54ujsgr.py\", line 18, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp_54ujsgr.py\", line 13, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp_54ujsgr.py\", line 9, in heap_queue_largest\n    heapq.heappush(heap, -num)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpzli077cz.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpzli077cz.py\", line 15, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpzli077cz.py\", line 10, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpzli077cz.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = []\n    for num in nums:\n        heapq.heappush(heap, -num)\n    return [-heapq.heappop(heap) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_54ujsgr.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmp_54ujsgr.py\", line 18, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp_54ujsgr.py\", line 13, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp_54ujsgr.py\", line 9, in heap_queue_largest\n    heapq.heappush(heap, -num)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphd2dcu2_.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmphd2dcu2_.py\", line 17, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmphd2dcu2_.py\", line 12, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmphd2dcu2_.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for num in nums[n:]:\n        if num > heap[0]:\n            heapq.heapreplace(heap, num)\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprvesza63.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmprvesza63.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmprvesza63.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmprvesza63.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    if n > len(nums):\n        return nums\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn_d32cpc.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpn_d32cpc.py\", line 22, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpn_d32cpc.py\", line 17, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpn_d32cpc.py\", line 10, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for num in nums[n:]:\n        if num > heap[0]:\n            heapq.heappop(heap)\n            heapq.heappush(heap, num)\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl39prvg1.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpl39prvg1.py\", line 21, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpl39prvg1.py\", line 16, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpl39prvg1.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = []\n    for num in nums:\n        heapq.heappush(heap, num)\n        if len(heap) > n:\n            heapq.heappop(heap)\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpaqi80sry.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpaqi80sry.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpaqi80sry.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpaqi80sry.py\", line 9, in heap_queue_largest\n    heapq.heappush(heap, num)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for num in nums[n:]:\n        if num > heap[0]:\n            heapq.heapreplace(heap, num)\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprvesza63.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmprvesza63.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmprvesza63.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmprvesza63.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    if n == 0:\n        return []\n    if n > len(nums):\n        return sorted(nums, reverse=True)\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp71aixejw.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmp71aixejw.py\", line 24, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp71aixejw.py\", line 19, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp71aixejw.py\", line 12, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for num in nums[n:]:\n        if num > heap[0]:\n            heapq.heapreplace(heap, num)\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk5w3eery.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpk5w3eery.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpk5w3eery.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpk5w3eery.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpb8klrl08.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpb8klrl08.py\", line 15, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpb8klrl08.py\", line 10, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpb8klrl08.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpb8klrl08.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpb8klrl08.py\", line 15, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpb8klrl08.py\", line 10, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpb8klrl08.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpzli077cz.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpzli077cz.py\", line 15, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpzli077cz.py\", line 10, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpzli077cz.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for num in nums[n:]:\n        if num > heap[0]:\n            heapq.heapreplace(heap, num)\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk5w3eery.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpk5w3eery.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpk5w3eery.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpk5w3eery.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    if n == 0:\n        return []\n    if n >= len(nums):\n        return sorted(nums, reverse=True)\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpz4mpktzh.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpz4mpktzh.py\", line 24, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpz4mpktzh.py\", line 19, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpz4mpktzh.py\", line 12, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt2m_r2n8.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpt2m_r2n8.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpt2m_r2n8.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpt2m_r2n8.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = []\n    for num in nums:\n        heapq.heappush(heap, num)\n        if len(heap) > n:\n            heapq.heappop(heap)\n    return heapq.nlargest(n, heap)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0y9ls6y7.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp0y9ls6y7.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp0y9ls6y7.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp0y9ls6y7.py\", line 9, in heap_queue_largest\n    heapq.heappush(heap, num)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = []\n    for num in nums:\n        heapq.heappush(heap, -num)\n        if len(heap) > n:\n            heapq.heappop(heap)\n    return [-heapq.heappop(heap) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp41z1ebxk.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp41z1ebxk.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp41z1ebxk.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp41z1ebxk.py\", line 9, in heap_queue_largest\n    heapq.heappush(heap, -num)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = []\n    for num in nums:\n        heapq.heappush(heap, -num)\n    return [-heapq.heappop(heap) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_54ujsgr.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmp_54ujsgr.py\", line 18, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp_54ujsgr.py\", line 13, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp_54ujsgr.py\", line 9, in heap_queue_largest\n    heapq.heappush(heap, -num)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphd2dcu2_.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmphd2dcu2_.py\", line 17, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmphd2dcu2_.py\", line 12, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmphd2dcu2_.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt2m_r2n8.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpt2m_r2n8.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpt2m_r2n8.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpt2m_r2n8.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for num in nums[n:]:\n        if num > heap[0]:\n            heapq.heapreplace(heap, num)\n    return sorted(heap, reverse=True)\n\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp74crsir6.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp74crsir6.py\", line 21, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp74crsir6.py\", line 16, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp74crsir6.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplevuegx3.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmplevuegx3.py\", line 17, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmplevuegx3.py\", line 12, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmplevuegx3.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = []\n    for num in nums:\n        heapq.heappush(heap, -num)\n    return [-heapq.heappop(heap) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_54ujsgr.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmp_54ujsgr.py\", line 18, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp_54ujsgr.py\", line 13, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp_54ujsgr.py\", line 9, in heap_queue_largest\n    heapq.heappush(heap, -num)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt2m_r2n8.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpt2m_r2n8.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpt2m_r2n8.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpt2m_r2n8.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt2m_r2n8.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpt2m_r2n8.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpt2m_r2n8.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpt2m_r2n8.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplevuegx3.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmplevuegx3.py\", line 17, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmplevuegx3.py\", line 12, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmplevuegx3.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpb8klrl08.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpb8klrl08.py\", line 15, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpb8klrl08.py\", line 10, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpb8klrl08.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [max(nums)]\n    if n == len(nums):\n        return sorted(nums, reverse=True)\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_1olqgix.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmp_1olqgix.py\", line 26, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp_1olqgix.py\", line 21, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp_1olqgix.py\", line 14, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        heapq.heappushpop(heap, nums[i])\n    return heapq.nlargest(n, heap)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf63w81rl.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpf63w81rl.py\", line 19, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf63w81rl.py\", line 14, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf63w81rl.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphd2dcu2_.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmphd2dcu2_.py\", line 17, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmphd2dcu2_.py\", line 12, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmphd2dcu2_.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt2m_r2n8.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpt2m_r2n8.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpt2m_r2n8.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpt2m_r2n8.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for num in nums[n:]:\n        if num > heap[0]:\n            heapq.heappop(heap)\n            heapq.heappush(heap, num)\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp70kgx36p.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp70kgx36p.py\", line 21, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp70kgx36p.py\", line 16, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp70kgx36p.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsbxbyzh2.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsbxbyzh2.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpsbxbyzh2.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpsbxbyzh2.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    # create a max heap\n    heap = []\n    for num in nums:\n        heapq.heappush(heap, -num)\n    # pop n elements\n    largest = []\n    for _ in range(n):\n        largest.append(-heapq.heappop(heap))\n    return largest\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4oti_aw3.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp4oti_aw3.py\", line 23, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp4oti_aw3.py\", line 18, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp4oti_aw3.py\", line 10, in heap_queue_largest\n    heapq.heappush(heap, -num)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = []\n    for num in nums:\n        heapq.heappush(heap, num)\n    return [heapq.heappop(heap) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5vt1k8l2.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmp5vt1k8l2.py\", line 18, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp5vt1k8l2.py\", line 13, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp5vt1k8l2.py\", line 9, in heap_queue_largest\n    heapq.heappush(heap, num)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt2m_r2n8.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpt2m_r2n8.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpt2m_r2n8.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpt2m_r2n8.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt2m_r2n8.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpt2m_r2n8.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpt2m_r2n8.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpt2m_r2n8.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = []\n    for num in nums:\n        if len(heap) < n:\n            heapq.heappush(heap, num)\n        else:\n            heapq.heappushpop(heap, num)\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvywqw4an.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvywqw4an.py\", line 21, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpvywqw4an.py\", line 16, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpvywqw4an.py\", line 10, in heap_queue_largest\n    heapq.heappush(heap, num)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplevuegx3.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmplevuegx3.py\", line 17, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmplevuegx3.py\", line 12, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmplevuegx3.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for num in nums[n:]:\n        if num > heap[0]:\n            heapq.heappop(heap)\n            heapq.heappush(heap, num)\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl39prvg1.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpl39prvg1.py\", line 21, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpl39prvg1.py\", line 16, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpl39prvg1.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplevuegx3.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmplevuegx3.py\", line 17, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmplevuegx3.py\", line 12, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmplevuegx3.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpb8klrl08.py\", line 17, in <module>\n    test_check()\n  File \"/tmp/tmpb8klrl08.py\", line 15, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpb8klrl08.py\", line 10, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpb8klrl08.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heappop(heap)\n            heapq.heappush(heap, nums[i])\n    return sorted(heap, reverse=True)\n\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpktmcj90l.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpktmcj90l.py\", line 22, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpktmcj90l.py\", line 17, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpktmcj90l.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = []\n    for num in nums:\n        if len(heap) < n:\n            heapq.heappush(heap, num)\n        else:\n            heapq.heappushpop(heap, num)\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvywqw4an.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpvywqw4an.py\", line 21, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpvywqw4an.py\", line 16, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpvywqw4an.py\", line 10, in heap_queue_largest\n    heapq.heappush(heap, num)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = []\n    for num in nums:\n        heapq.heappush(heap, -num)\n    return [-heapq.heappop(heap) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_54ujsgr.py\", line 20, in <module>\n    test_check()\n  File \"/tmp/tmp_54ujsgr.py\", line 18, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmp_54ujsgr.py\", line 13, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmp_54ujsgr.py\", line 9, in heap_queue_largest\n    heapq.heappush(heap, -num)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for num in nums[n:]:\n        if num > heap[0]:\n            heapq.heapreplace(heap, num)\n    return heap\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk5w3eery.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpk5w3eery.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpk5w3eery.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpk5w3eery.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt2m_r2n8.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpt2m_r2n8.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpt2m_r2n8.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpt2m_r2n8.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplevuegx3.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmplevuegx3.py\", line 17, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmplevuegx3.py\", line 12, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmplevuegx3.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return heapq.nlargest(n, nums)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr9k8awd5.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpr9k8awd5.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpr9k8awd5.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpr9k8awd5.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heapq.heapify(nums)\n    return [heapq.heappop(nums) for _ in range(n)]\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpf68jfa9l.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmpf68jfa9l.py\", line 16, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpf68jfa9l.py\", line 11, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpf68jfa9l.py\", line 7, in heap_queue_largest\n    heapq.heapify(nums)\nNameError: name 'heapq' is not defined. Did you mean: 'help'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt2m_r2n8.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpt2m_r2n8.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpt2m_r2n8.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpt2m_r2n8.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import List\n\ndef heap_queue_largest(nums: List[int], n: int) -> List[int]:\n    \"\"\"\n\tWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\t\"\"\"\n    heap = nums[:n]\n    heapq.heapify(heap)\n    for i in range(n, len(nums)):\n        if nums[i] > heap[0]:\n            heapq.heapreplace(heap, nums[i])\n    return sorted(heap, reverse=True)\n\ndef check(candidate):\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 2) == [85, 75]\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 5) == [85, 75, 65, 58, 35]\n\ndef test_check():\n    check(heap_queue_largest)\n\ntest_check()\n",
      "timestamp": 1665510490,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt2m_r2n8.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpt2m_r2n8.py\", line 20, in test_check\n    check(heap_queue_largest)\n  File \"/tmp/tmpt2m_r2n8.py\", line 15, in check\n    assert candidate([25, 35, 22, 85, 14, 65, 75, 22, 58], 3) == [85, 75, 65]\n  File \"/tmp/tmpt2m_r2n8.py\", line 8, in heap_queue_largest\n    heapq.heapify(heap)\nNameError: name 'heapq' is not defined. Did you mean: 'heap'?\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_57_find_Max_Num",
  "language": "py",
  "prompt": "from typing import List\n\ndef find_Max_Num(arr: List[int]) -> int:\n    \"\"\"\n\tWrite a python function to find the largest number that can be formed with the given list of digits.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_57_find_Max_Num.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([1, 2, 3]) == 321\n    assert candidate([4, 5, 6, 1]) == 6541\n    assert candidate([1, 2, 3, 9]) == 9321\n\ndef test_check():\n    check(find_Max_Num)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(str(i) for i in arr))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n\nprint(find_Max_Num([1, 2, 3, 4]))",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n\nprint(find_Max_Num([1, 2, 3, 4]))",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n\narr = [1, 34, 3, 98, 9, 76, 45, 4]\nprint(find_Max_Num(arr))",
    "    return int(''.join(sorted(arr, reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n\nprint(find_Max_Num([1, 2, 3, 4, 5]))",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort()\n    return int(\"\".join(map(str, arr[::-1])))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n\nprint(find_Max_Num([9, 9, 9, 9, 9]))",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n\n\nprint(find_Max_Num([1, 2, 3, 4, 5]))",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(str(x) for x in arr))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(\"\".join(sorted(arr, reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n\nprint(find_Max_Num([1,2,3,4,5]))\nprint(find_Max_Num([5,5,3,1,4]))\nprint(find_Max_Num([54, 546, 548, 60]))",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return arr[0]\n    else:\n        max_num = 0\n        for i in range(len(arr)):\n            for j in range(i+1, len(arr)):\n                if arr[i] > arr[j]:\n                    arr[i], arr[j] = arr[j], arr[i]\n        for i in range(len(arr)):\n            max_num = max_num*10 + arr[i]\n        return max_num\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(str(i) for i in arr))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n\nprint(find_Max_Num([1,2,3,4,5]))",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    max_num = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            if arr[i] < arr[j]:\n                arr[i], arr[j] = arr[j], arr[i]\n    for i in range(len(arr)):\n        max_num = max_num*10 + arr[i]\n    return max_num\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort()\n    return int(''.join(map(str, arr[::-1])))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort()\n    arr.reverse()\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n\nprint(find_Max_Num([1, 2, 3, 4, 5]))",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(str(x) for x in arr))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    num = \"\"\n    for i in arr:\n        num += str(i)\n    return int(num)\n",
    "    return int(\"\".join(sorted(map(str, arr), reverse=True)))\n\nprint(find_Max_Num([1, 2, 3, 4, 5]))",
    "    arr.sort(reverse=True)\n    return int(''.join(str(x) for x in arr))\n\nprint(find_Max_Num([1,2,3,4,5]))",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(\"\".join(sorted(arr, reverse=True)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n\nprint(find_Max_Num([1,2,3,4,5]))",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    arr.sort(reverse=True)\n    return int(\"\".join(map(str, arr)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n",
    "    return int(''.join(sorted(map(str, arr), reverse=True)))\n\n",
    "    arr.sort(reverse=True)\n    return int(''.join(map(str, arr)))\n",
    "    return int(''.join(sorted(arr, reverse=True)))\n"
  ]
}
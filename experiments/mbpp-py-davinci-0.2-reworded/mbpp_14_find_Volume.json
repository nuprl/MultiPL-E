{
  "name": "mbpp_14_find_Volume",
  "language": "py",
  "prompt": "def find_Volume(l: int, b: int, h: int) -> int:\n    \"\"\"\n\tWrite a python function to find the volume of a triangular prism.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_14_find_Volume.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(10, 8, 6) == 240\n    assert candidate(3, 2, 2) == 6\n    assert candidate(1, 2, 1) == 1\n\ndef test_check():\n    check(find_Volume)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return (l * b * h) / 2\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return (l * b * h) / 2\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return (l * b * h) / 2\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return (l * b * h) / 2\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return (l * b * h) / 2\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return (l * b * h) / 2\n\n",
    "    return l * b * h\n\n",
    "    return (l * b * h) / 2\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return (l * b * h) / 2\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return (l * b * h) / 2\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n",
    "    return l * b * h\n\n"
  ]
}
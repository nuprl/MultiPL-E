{
  "name": "mbpp_90_len_log",
  "language": "py",
  "prompt": "from typing import List\n\ndef len_log(list1: List[str]) -> int:\n    \"\"\"\n\tWrite a python function to find the length of the longest word.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_90_len_log.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(['python', 'PHP', 'bigdata']) == 7\n    assert candidate(['a', 'ab', 'abc']) == 3\n    assert candidate(['small', 'big', 'tall']) == 5\n\ndef test_check():\n    check(len_log)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return len(max(list1, key=len))\n\nprint(len_log(['a', 'ab', 'abc', 'abcd']))",
    "    return len(max(list1, key=len))\n",
    "    return len(max(list1, key=len))\n\nprint(len_log(['abc', 'abcd', 'abcde']))",
    "    return len(max(list1, key=len))\n",
    "    return len(max(list1, key=len))\n",
    "    return len(max(list1, key=len))\n\n",
    "    return len(max(list1, key=len))\n",
    "    return len(max(list1, key=len))\n",
    "    return len(max(list1, key=len))\n",
    "    return len(max(list1, key=len))\n\n",
    "    return len(max(list1, key=len))\n",
    "    return max(map(len, list1))\n",
    "    return len(max(list1, key=len))\n",
    "    return len(max(list1, key=len))\n",
    "    return len(max(list1, key=len))\n",
    "    return len(max(list1, key=len))\n\nprint(len_log([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]))",
    "    return len(max(list1, key=len))\n",
    "    return len(max(list1, key=len))\n",
    "    return len(max(list1, key=len))\n\n",
    "    return len(max(list1, key=len))\n"
  ]
}
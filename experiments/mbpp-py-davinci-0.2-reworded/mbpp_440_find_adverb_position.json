{
  "name": "mbpp_440_find_adverb_position",
  "language": "py",
  "prompt": "from typing import Tuple, Union\n\ndef find_adverb_position(text: str) -> Tuple[Union[str, int]]:\n    \"\"\"\n\tWrite a function to find the first adverb and their positions in a given sentence.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_440_find_adverb_position.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate('clearly!! we can see the sky') == (0, 7, 'clearly')\n    assert candidate('seriously!! there are many roses') == (0, 9, 'seriously')\n    assert candidate('unfortunately!! sita is going to home') == (0, 13, 'unfortunately')\n\ndef test_check():\n    check(find_adverb_position)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    pass",
    "    # your code here\n    return None",
    "    pass",
    "    pass",
    "    pass",
    "    adverbs = []\n    for word, pos in nltk.pos_tag(nltk.word_tokenize(text)):\n        if pos == 'RB':\n            adverbs.append((word, pos))\n    return adverbs[0] if adverbs else ('No adverbs found', -1)\n\nprint(find_adverb_position(\"He was carefully disguised but captured quickly by police.\"))\nprint(find_adverb_position(\"She ran hurriedly towards the stadium.\"))\nprint(find_adverb_position(\"I am happy to take your donation; any amount will be greatly appreciated.\"))",
    "    # your code here\n    return None\n\n"
  ]
}
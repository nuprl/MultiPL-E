{
  "name": "mbpp_126_sum",
  "language": "py",
  "prompt": "def sum(a: int, b: int) -> int:\n    \"\"\"\n\tWrite a python function to find the sum of common divisors of two given numbers.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_126_sum.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(10, 15) == 6\n    assert candidate(100, 150) == 93\n    assert candidate(4, 6) == 3\n\ndef test_check():\n    check(sum)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if a == 0 or b == 0:\n        return 0\n    if a == b:\n        return a\n    if a > b:\n        a, b = b, a\n    return a + sum(a, b - a)\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum_divisors(a) + sum_divisors(b)\n\n",
    "    return sum(common_divisors(a, b))\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_divisors(a) + sum_divisors(b)\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum(get_common_divisors(a, b))\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    if a == 0 or b == 0:\n        return 0\n    else:\n        return a + b\n\n",
    "    return sum(get_common_divisors(a, b))\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum_divisors(a) + sum_divisors(b)\n\n",
    "    return a + b\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    sum = 0\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            sum += i\n    return sum\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    divisors_a = [i for i in range(1, a + 1) if a % i == 0]\n    divisors_b = [i for i in range(1, b + 1) if b % i == 0]\n    common_divisors = [i for i in divisors_a if i in divisors_b]\n    return sum(common_divisors)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return a + b\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return a + b\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    sum = 0\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            sum += i\n    return sum\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    sum = 0\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            sum += i\n    return sum\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum_divisors(a) + sum_divisors(b)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return a + b\n\n",
    "    sum = 0\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            sum += i\n    return sum\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return sum(common_divisors(a, b))\n\n",
    "    sum = 0\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            sum += i\n    return sum\n\n",
    "    return a + b\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return sum(common_divisors(a, b))\n\n",
    "    return a + b\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    sum = 0\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            sum += i\n    return sum\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return sum(common_divisors(a, b))\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return a + b\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    common_divisors = []\n    for i in range(1, a + 1):\n        if a % i == 0 and b % i == 0:\n            common_divisors.append(i)\n    return sum(common_divisors)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum(list(set(divisors(a)).intersection(divisors(b))))\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum(common_divisors(a, b))\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum(list(set(common_divisors(a)) & set(common_divisors(b))))\n\n",
    "    return a + b\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    if a == 0 or b == 0:\n        return 0\n    else:\n        return a + b\n\n",
    "    sum = 0\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            sum += i\n    return sum\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    divisors_a = [i for i in range(1, a + 1) if a % i == 0]\n    divisors_b = [i for i in range(1, b + 1) if b % i == 0]\n    common_divisors = [i for i in divisors_a if i in divisors_b]\n    return sum(common_divisors)\n\n",
    "    return a + b\n\n",
    "    divisor_list = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisor_list.append(i)\n    return sum(divisor_list)\n\n",
    "    return a + b\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return a + b\n\n",
    "    return sum(common_divisors(a, b))\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_divisors(a) + sum_divisors(b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum(common_divisors(a, b))\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return a + b\n\n",
    "    return sum(common_divisors(a, b))\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum_of_divisors(a) + sum_of_divisors(b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n",
    "    return sum(common_divisors(a, b))\n\n"
  ]
}
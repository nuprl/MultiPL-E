{
  "name": "mbpp_126_sum",
  "language": "py",
  "prompt": "def sum(a: int, b: int) -> int:\n    \"\"\"\n\tWrite a python function to find the sum of common divisors of two given numbers.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_126_sum.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(10, 15) == 6\n    assert candidate(100, 150) == 93\n    assert candidate(4, 6) == 3\n\ndef test_check():\n    check(sum)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if a == 0 or b == 0:\n        return 0\n    if a == b:\n        return a\n    if a > b:\n        a, b = b, a\n    return a + sum(a, b - a)\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return a + b\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum_of_common_divisors(a, b)\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return sum(list(set(divisors(a)) & set(divisors(b))))\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n",
    "    return sum_divisors(a) + sum_divisors(b)\n\n",
    "    return sum(common_divisors(a, b))\n\n",
    "    return a + b\n\n",
    "    return a + b\n\n"
  ]
}
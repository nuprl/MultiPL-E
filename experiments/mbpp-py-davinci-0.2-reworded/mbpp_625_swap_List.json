{
  "name": "mbpp_625_swap_List",
  "language": "py",
  "prompt": "from typing import List\n\ndef swap_List(newList: List[int]) -> List[int]:\n    \"\"\"\n\tWrite a python function to interchange the first and last element in a given list.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_625_swap_List.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([1, 2, 3]) == [3, 2, 1]\n    assert candidate([1, 2, 3, 4, 4]) == [4, 2, 3, 4, 1]\n    assert candidate([4, 5, 6]) == [6, 5, 4]\n\ndef test_check():\n    check(swap_List)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    temp = newList[0]\n    newList[0] = newList[-1]\n    newList[-1] = temp\n    return newList\n",
    "    temp = newList[0]\n    newList[0] = newList[-1]\n    newList[-1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    temp = newList[0]\n    newList[0] = newList[-1]\n    newList[-1] = temp\n    return newList\n\nprint(swap_List([1,2,3,4,5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\nprint(swap_List([1, 2, 3, 4, 5]))",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n",
    "    size = len(newList)\n    temp = newList[0]\n    newList[0] = newList[size - 1]\n    newList[size - 1] = temp\n    return newList\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n",
    "    newList[0], newList[-1] = newList[-1], newList[0]\n    return newList\n\n"
  ]
}
{
  "name": "mbpp_624_is_upper",
  "language": "py",
  "prompt": "def is_upper(string: str) -> str:\n    \"\"\"\n\tWrite a python function to convert a given string to uppercase.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_624_is_upper.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate('person') == 'PERSON'\n    assert candidate('final') == 'FINAL'\n    assert candidate('Valid') == 'VALID'\n\ndef test_check():\n    check(is_upper)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n",
    "    return string.upper()\n\n"
  ]
}
{
  "name": "mbpp_558_digit_distance_nums",
  "language": "py",
  "prompt": "def digit_distance_nums(n1: int, n2: int) -> int:\n    \"\"\"\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(1, 2) == 1\n    assert candidate(23, 56) == 6\n    assert candidate(123, 256) == 7\n\ndef test_check():\n    check(digit_distance_nums)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return sum(abs(int(a) - int(b)) for a, b in zip(str(n1), str(n2)))\n\n",
    "    return sum(abs(int(x) - int(y)) for x, y in zip(str(n1), str(n2)))\n\n",
    "    n1, n2 = str(n1), str(n2)\n    if len(n1) > len(n2):\n        n2 = \"0\" * (len(n1) - len(n2)) + n2\n    elif len(n2) > len(n1):\n        n1 = \"0\" * (len(n2) - len(n1)) + n1\n    return sum(abs(int(n1[i]) - int(n2[i])) for i in range(len(n1)))\n\n",
    "    return sum(abs(int(x) - int(y)) for x, y in zip(str(n1), str(n2)))\n\n",
    "    return sum(abs(int(a) - int(b)) for a, b in zip(str(n1), str(n2)))\n\n",
    "    return sum(abs(int(x) - int(y)) for x, y in zip(str(n1), str(n2)))\n\n",
    "    return sum(abs(int(x) - int(y)) for x, y in zip(str(n1), str(n2)))\n\n",
    "    return sum(abs(int(x) - int(y)) for x, y in zip(str(n1), str(n2)))\n\n",
    "    return sum(abs(int(a) - int(b)) for a, b in zip(str(n1), str(n2)))\n\n",
    "    return sum(abs(int(x) - int(y)) for x, y in zip(str(n1), str(n2)))\n\n",
    "    n1, n2 = str(n1), str(n2)\n    if len(n1) > len(n2):\n        n2 = '0' * (len(n1) - len(n2)) + n2\n    elif len(n2) > len(n1):\n        n1 = '0' * (len(n2) - len(n1)) + n1\n    return sum(abs(int(n1[i]) - int(n2[i])) for i in range(len(n1)))\n\n",
    "    return sum(abs(int(d1) - int(d2)) for d1, d2 in zip(str(n1), str(n2)))\n\n",
    "    return sum(abs(int(d1) - int(d2)) for d1, d2 in zip(str(n1), str(n2)))\n\n",
    "    return sum(abs(int(a) - int(b)) for a, b in zip(str(n1), str(n2)))\n\n",
    "    return sum([abs(int(x) - int(y)) for x, y in zip(str(n1), str(n2))])\n\n",
    "    return sum(abs(int(x) - int(y)) for x, y in zip(str(n1), str(n2)))\n\n",
    "    return sum(abs(int(a) - int(b)) for a, b in zip(str(n1), str(n2)))\n\n",
    "    return sum(abs(int(x) - int(y)) for x, y in zip(str(n1), str(n2)))\n\n",
    "    return sum([abs(int(x) - int(y)) for x, y in zip(str(n1), str(n2))])\n\n",
    "    n1, n2 = str(n1), str(n2)\n    if len(n1) > len(n2):\n        n2 = \"0\" * (len(n1) - len(n2)) + n2\n    else:\n        n1 = \"0\" * (len(n2) - len(n1)) + n1\n    return sum(abs(int(n1[i]) - int(n2[i])) for i in range(len(n1)))\n\n"
  ]
}
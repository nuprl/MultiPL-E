{
  "name": "mbpp_764_number_ctr",
  "language": "py",
  "prompt": "def number_ctr(str: str) -> int:\n    \"\"\"\n\tWrite a python function to count number of digits in a given string.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_764_number_ctr.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate('program2bedone') == 1\n    assert candidate('3wonders') == 1\n    assert candidate('123') == 3\n    assert candidate('3wond-1ers2') == 3\n\ndef test_check():\n    check(number_ctr)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return len(str)\n\n",
    "    return len(list(filter(lambda x: x.isdigit(), str)))\n\n",
    "    return len(re.findall(r'\\d', str))\n\n",
    "    return len([i for i in str if i.isdigit()])\n\n",
    "    return len([x for x in str if x.isdigit()])\n\n",
    "    return len(str)\n\n",
    "    return len(str)\n\n",
    "    count = 0\n    for i in str:\n        if i.isdigit():\n            count += 1\n    return count\n\n",
    "    return len(str)\n\n",
    "    return len(re.findall(r'\\d', str))\n\n",
    "    return len(re.findall(\"\\d\", str))\n\n",
    "    return len([char for char in str if char.isdigit()])\n\n",
    "    return len(re.findall(r'\\d', str))\n\n",
    "    return len(str)\n\n",
    "    return len([i for i in str if i.isdigit()])\n\n",
    "    return len(list(filter(str.isdigit, str)))\n\n",
    "    return len(re.findall(r\"\\d\", str))\n\n",
    "    return len([i for i in str if i.isdigit()])\n\n",
    "    return len(str)\n\n",
    "    return len([char for char in str if char.isdigit()])\n\n"
  ]
}
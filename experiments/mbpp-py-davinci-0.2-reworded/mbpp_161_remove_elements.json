{
  "name": "mbpp_161_remove_elements",
  "language": "py",
  "prompt": "from typing import List\n\ndef remove_elements(list1: List[int], list2: List[int]) -> List[int]:\n    \"\"\"\n\tWrite a function to remove all elements from a given list present in another list.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_161_remove_elements.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 4, 6, 8]) == [1, 3, 5, 7, 9, 10]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 3, 5, 7]) == [2, 4, 6, 8, 9, 10]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [5, 7]) == [1, 2, 3, 4, 6, 8, 9, 10]\n\ndef test_check():\n    check(remove_elements)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return [x for x in list1 if x not in list2]\n",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1,2,3,4,5], [2,3,5]))",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1,2,3,4,5], [2,3]))",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1,2,3,4,5], [2,3,5]))",
    "    return [x for x in list1 if x not in list2]\n",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1,2,3,4,5], [2,3,5]))",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1,2,3,4,5], [2,3,4]))",
    "    return [x for x in list1 if x not in list2]\n",
    "    return [x for x in list1 if x not in list2]\n\n",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1,2,3,4,5], [2,3]))",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1, 2, 3, 4, 5], [2, 3, 5]))",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1, 2, 3, 4, 5], [2, 3, 5]))",
    "    return [x for x in list1 if x not in list2]\n",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1,2,3,4,5], [2,3,5]))",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1,2,3,4,5], [2,3,5]))",
    "    return [x for x in list1 if x not in list2]\n\n",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1,2,3,4,5], [2,3,4]))",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1,2,3,4,5], [2,3,4]))",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1,2,3,4,5], [2,3,4]))",
    "    return [x for x in list1 if x not in list2]\n\nprint(remove_elements([1,2,3,4,5], [2,3,5]))"
  ]
}